/* 3/8/2014 7:30:24 AM, 111*/
this.Cmn||(Cmn=new function(){if(("undefined"==typeof YAHOO||!YAHOO)&&"undefined"!=typeof McMasterCom&&McMasterCom&&McMasterCom.Nav)YAHOO=McMasterCom.Nav.GetTopFrame().YAHOO;var l=/([a-z])([A-Z])/g,n={},p={select:"input",change:"input",submit:"form",reset:"form",error:"img",load:"img",abort:"img"};this.APPL_ENVR_NMS={DEV:"DEV",QUAL:"QUAL",PROD:"PROD",PUBDEV:"PUBDEV",PUBQUAL:"PUBQUAL",PUB:"PUB"};this.Bt=function(a,b,c){return YAHOO.util.Dom.batch(a,b,c)};this.CrteElement=function(a,b){var c;if(b&&
b.name){c=b.name;var d=null;try{d=document.createElement("<"+a+' name="'+c+'">')}catch(e){}if(!d||d.nodeName!=a.toUpperCase())d=document.createElement(a),d.name=c;c=d;delete b.name}else c=document.createElement(a);for(var f in b)b.hasOwnProperty(f)&&(c[f]=b[f]);return c};this.InsrtAfter=function(a,b){return YAHOO.util.Dom.insertAfter(a,b)};this.InsrtBefore=function(a,b){return YAHOO.util.Dom.insertBefore(a,b)};this.RemElem=function(a){return a.parentNode.removeChild(a)};this.HideHTMLElem=function(a){a.style.display=
"none"};this.VldtHTMLElemHidden=function(a){return"none"==a.style.display};this.ShowHTMLElem=function(a){a.style.display=""};this.ShowByID=function(a){a=this.GetObj(a);this.ShowHTMLElem(a)};this.HideByID=function(a){a=this.GetObj(a);this.HideHTMLElem(a)};this.GetStyle=function(a,b){return YAHOO.util.Dom.getStyle(a,b)};this.SetStyle=function(a,b,c){if("string"===typeof b)return YAHOO.util.Dom.setStyle(a,b,c);if("object"===typeof b){var d;c={};var e="",f,g,h,k;a=q(a);d=a.style.cssText.split(";");g=
0;for(f=d.length;g<f;g++)h=d[g].split(":"),k=h[0].Trim(),h=h[1],""!==k&&(c[k]=h);for(k in b)b.hasOwnProperty(k)&&(d=c,f=k.Trim(),l.test(f)&&(n[f]?f=n[f]:(g=f.replace(l,"$1-$2").toLowerCase(),f=n[f]=g)),d[f]=b[k]);for(k in c)c.hasOwnProperty(k)&&(e+=k+":"+c[k]+";");"undefined"===typeof a.style.cssText?a.setAttribute("style",e):a.style.cssText=e}};this.AddCls=function(a,b){return YAHOO.util.Dom.addClass(a,b)};this.ReplaceCls=function(a,b,c){return YAHOO.util.Dom.replaceClass(a,b,c)};this.RemCls=function(a,
b){if(Cmn.HasCls(a,b))return YAHOO.util.Dom.removeClass(a,b)};this.HasCls=function(a,b){return YAHOO.util.Dom.hasClass(a,b)};this.ChgCls=function(a,b,c){a=q(a);var d=a.className.split(" "),e,f,g,h;switch(typeof b){case "string":b=[b];break;case "object":b=null===b?[]:b;break;default:b=[]}switch(typeof c){case "string":classesToRemArr=[c];break;case "object":classesToRemArr=null===c?[]:c;break;default:classesToRemArr=[]}for(c=0;c<d.length;c++)if(g=d[c].Trim(),""!==g){f=0;for(e=classesToRemArr.length;f<
e;f++)classesToRemArr[f].Trim()===g&&(d.splice(c,1),c--)}for(f=0;f<b.length;f++){g=!1;h=b[f].Trim();c=0;for(e=d.length;c<e;c++)if(h===d[c]){g=!0;break}!0!==g&&d.push(h)}a.className=d.join(" ").Trim()};this.AddDropShadow=function(a){if(!Cmn.GetFrstChldBy(a,function(a){if(Cmn.HasCls(a,"DropShadow"))return!0})){var b=document.createElement("div");this.AddCls(b,"DropShadow");this.AddCls(b,"AbsolutelyPositionedDropShadow");var c=this.GetStyle(a,"z-index")-1;this.SetStyle(b,"z-index",c);a.appendChild(b)}};
this.GetObj=function(a){return document.getElementById(a)};this.Get=function(a){return YAHOO.util.Dom.get(a)};this.GetTxtContent=function(a){return a.textContent||a.innerText};this.GetElementBy=function(a,b,c){var d=null;a=YAHOO.util.Dom.getElementsBy(a,b,c);0<a.length&&(d=a[0]);return d};this.GetElementsBy=function(a,b,c){return YAHOO.util.Dom.getElementsBy(a,b,c)};this.GetElementsByClsNm=function(a,b,c){c||(c=document);if(c.getElementsByClassName){a=c.getElementsByClassName(a);len=a.length;arr=
[];switch(!0){case !b:for(b=0;b<len;b++)arr[b]=a[b];break;case "string"===typeof b:c=b.toUpperCase();for(b=0;b<len;b++)a[b].tagName.toUpperCase()===c&&arr.push(a[b])}return arr}return YAHOO.util.Dom.getElementsByClassName(a,b,c)};this.GetElementsByAttrVal=function(a,b,c,d){return Cmn.GetElementsBy(function(c){return"string"===typeof c.getAttribute(a)&&c.getAttribute(a)===b?!0:!1},c,d)};this.GetElementsByAttrValInList=function(a,b,c,d,e){return Cmn.GetElementsBy(function(d){var e=!1,h,k;if("string"===
typeof d.getAttribute(a)){d=d.getAttribute(a).split(c);h=0;for(k=d.length;h<k;h++)if(d[h]===b){e=!0;break}}return e},d,e)};this.GetChldrnBy=function(a,b){return YAHOO.util.Dom.getChildrenBy(b,a)};this.GetFrstChld=function(a){return YAHOO.util.Dom.getFirstChild(a)};this.GetFrstChldBy=function(a,b){return YAHOO.util.Dom.getFirstChildBy(a,b)};this.GetFrstChldByClsNm=function(a,b){var c=a.childNodes,d=c.length,e,f=null;e=0;for(d=c.length;e<d;e++)if(Cmn.HasCls(c[e],b)){f=c[e];break}return f};this.GetChildrenByClsNm=
function(a,b){var c=a.childNodes,d=c.length,e,f=[];e=0;for(d=c.length;e<d;e++)Cmn.HasCls(c[e],b)&&f.push(c[e]);return f};this.GetLastChld=function(a){return YAHOO.util.Dom.getLastChild(a)};this.GetLastChldBy=function(a,b){return YAHOO.util.Dom.getLastChildBy(a,b)};this.GetNxtSibling=function(a){return YAHOO.util.Dom.getNextSibling(a)};this.GetNxtSiblingBy=function(a,b){return YAHOO.util.Dom.getNextSiblingBy(a,b)};this.GetPrevSibling=function(a){return YAHOO.util.Dom.getPreviousSibling(a)};this.GetPrevSiblingBy=
function(a,b){return YAHOO.util.Dom.getPreviousSiblingBy(a,b)};this.GetAncestorBy=function(a,b){return YAHOO.util.Dom.getAncestorBy(a,b)};this.GetAncestorByClsNm=function(a,b){return YAHOO.util.Dom.getAncestorByClassName(a,b)};this.GetAncestorByTagNm=function(a,b){return YAHOO.util.Dom.getAncestorByTagName(a,b)};this.IsAncestor=function(a,b){return YAHOO.util.Dom.isAncestor(a,b)};this.IsInDocument=function(a){return YAHOO.util.Dom.inDocument(a)};this.SelectorFilter=function(a,b){return YAHOO.util.Selector.filter(a,
b)};this.SelectorQuery=function(a,b,c){return YAHOO.util.Selector.query(a,b,c)};this.SelectorTest=function(a,b){return YAHOO.util.Selector.test(a,b)};this.GetX=function(a){return YAHOO.util.Dom.getX(a)};this.GetY=function(a){return YAHOO.util.Dom.getY(a)};this.GetXY=function(a){return YAHOO.util.Dom.getXY(a)};this.GetXOffset=function(a){return this.GetXYOffset(a)[0]};this.GetYOffset=function(a){return this.GetXYOffset(a)[1]};this.GetXYOffset=function(a){var b=curtop=0;if(a.offsetParent){do b+=a.offsetLeft,
curtop+=a.offsetTop;while(a=a.offsetParent);return[b,curtop]}};this.SetX=function(a,b){return isNaN(b)?!1:YAHOO.util.Dom.setX(a,b)};this.SetY=function(a,b){return isNaN(b)?!1:YAHOO.util.Dom.setY(a,b)};this.SetXY=function(a,b){return isNaN(b[0])||isNaN(b[0])?!1:YAHOO.util.Dom.setXY(a,b)};this.GetRegion=function(a){return YAHOO.util.Dom.getRegion(a)};this.GetHeight=function(a){return a&&"undefined"!==typeof a.offsetHeight?a.offsetHeight:0};this.GetWidth=function(a){return a&&"undefined"!==typeof a.offsetHeight?
a.offsetWidth:0};this.GetViewportHeight=function(){return YAHOO.util.Dom.getViewportHeight()};this.GetViewportWidth=function(){return YAHOO.util.Dom.getViewportWidth()};this.GetVerticalScrollPosn=function(a){return a.scrollTop};this.SetVerticalScrollPosn=function(a,b){a.scrollTop=b};this.ChkForScrollBar=function(a,b){var c=!1,d=Cmn.Get(a);if(d)switch(b.toLowerCase()){case "vertical":d.scrollHeight>d.clientHeight&&(c=!0);break;case "horizontal":if(d.scrollWidth>d.clientWidth)c=!0;else if(!0===Cmn.IsIE&&
(Cmn.IsIE8||Cmn.IsIE9||Cmn.IsIE10))0<d.scrollLeft?c=!0:(d.scrollLeft=5,0<d.scrollLeft&&(c=!0),d.scrollLeft=0)}return c};this.AddEvntListener=function(a,b,c,d,e){var f;if("FOCUS"==b.toUpperCase())f=YAHOO.util.Event.addFocusListener(a,c,d,e);else if("BLUR"==b.toUpperCase())f=YAHOO.util.Event.addBlurListener(a,c,d,e);else if(!Cmn.IsTouchAware()||!(b&&-1<b.toLowerCase().indexOf("mouse")))f=YAHOO.util.Event.addListener(a,b,c,d,e);return f};this.PreventDeflt=function(a){if(a)return YAHOO.util.Event.preventDefault(a)};
this.RemEvntListeners=function(a,b){return YAHOO.util.Event.purgeElement(a,!1,b)};this.RemEvntListener=function(a,b,c){return YAHOO.util.Event.removeListener(a,b,c)};this.StopEvnt=function(a){if(a)return YAHOO.util.Event.stopEvent(a)};this.StopPropagation=function(a){if(a)return YAHOO.util.Event.stopPropagation(a)};this.OnContentReady=function(a,b,c){return YAHOO.util.Event.onContentReady(a,b,c)};this.GetEvntTarget=function(a){return YAHOO.util.Event.getTarget(a)};this.GetEvntRelatedTarget=function(a){return YAHOO.util.Event.getRelatedTarget(a)};
this.GetEvntPageX=function(a){return YAHOO.util.Event.getPageX(a)};this.GetEvntPageY=function(a){return YAHOO.util.Event.getPageY(a)};this.GetQSVal=function(a,b){var c="",d="";if(b){var d=b,e=d.split("?",2);2==e.length&&(d=e[1])}else d=location.search;d=d.replace(/^\?/,"");d=d.split("&");for(e=0;e<d.length;e++){var f=d[e].split("=");f[0].toLowerCase()==a.toLowerCase()&&f[1]&&(c=unescape(f[1]))}return c};this.RemoveQSNmVal=function(a,b){var c="";if(-1<a.indexOf(b+"=")){for(var c=a.split("&"),d=[],
e=0;e<c.length;e++)c[e].split("=")[0].toLowerCase()!=b.toLowerCase()&&d.push(c[e]);c=d.join("&")}else c=a;return c};this.AddQSNmVal=function(a,b,c){c=b+"="+c;var d=a.split("?",2);1==d.length?b=a+"?"+c:(a=d[0],d=d[1],d=this.RemoveQSNmVal(d,b),d=0==d.length?c:d+"&"+c,b=a+"?"+d);return b};this.GetUrlHash=function(){var a,b;try{b=top.location.href}catch(c){return"unknown"}a=b.indexOf("#");return 0<=a?b.substr(a+1):null};this.SetUrlHash=function(a){window.location.hash=a};this.ChkLoadedSecure=function(){return 0==
location.protocol.indexOf("https:")};this.BldSecureURL=function(a,b,c){var d=this.GetApplEnvrPrfx(c)+"1";return m("https://",d,a,b,c)};this.BldNonSecureURL=function(a,b,c){var d=this.GetApplEnvrPrfx(c)+"";return m("http://",d,a,b,c)};this.GetApplEnvrSfx=function(a){var b="",b="";a||(a=location.hostname);b=a.split(".")[0].toLowerCase();return b=-1<b.search("dev$")?"dev":-1<b.search("qual$")?"qual":""};this.GetApplEnvrPrfx=function(a){var b="";a||(a=location.hostname);b=a.split(".")[0].toLowerCase();
return applEnvrSfxTxt=-1<b.search("^www")?"www":-1<b.search("^pub")?"pub":"www"};this.GetCookieVal=function(a){var b="",c=document.cookie,d=c.indexOf(a+"=");-1<d&&(a=d+a.length+1,b=c.indexOf(";",a),-1==b&&(b=c.length),b=unescape(c.substring(a,b)));return b};this.StringifyJSON=function(a){return window.JSON&&window.JSON.stringify?window.JSON.stringify(a):YAHOO.lang.JSON.stringify(a)};this.ParseJSON=function(a){return window.JSON&&window.JSON.parse?window.JSON.parse(a):YAHOO.lang.JSON.parse(a)};this.IsAjaxAvail=
function(){return!0};this.IsTouchAware=function(){var a=!1;if("TRUE"===Cmn.GetQSVal("touch").toUpperCase())a=!0;else if("FALSE"===Cmn.GetQSVal("touch").toUpperCase())a=!1;else{var a="touchstart",b=document.createElement(p[a]||"div"),a="on"+a,c=a in b;c||(b.setAttribute(a,"return;"),c="function"==typeof b[a]);a=c}return a};this.IsSpriteEnabled=function(){var a=!0;"TRUE"===Cmn.GetQSVal("sprite").toUpperCase()?a=!0:"FALSE"===Cmn.GetQSVal("sprite").toUpperCase()?a=!1:Cmn.IsIE6()&&(a=!1);return a};this.IsAppMode=
function(){var a=!1;"TRUE"===Cmn.GetQSVal("appmode").toUpperCase()&&(a=!0);return a};this.GetPixelDensity=function(){return window.devicePixelRatio};this.CallMethodOnSingletonObjByMethodNm=function(a,b,c){if(a&&a[b])a[b](c)};this.GetClonedObj=function(a){var b=null;if(null==a)b=a;else if("object"==typeof a)if("function"==typeof a.Clone)b=a.Clone();else{var b=a instanceof Array?[]:a instanceof Date?new Date:{},c;for(c in a)a.hasOwnProperty(c)&&(b[c]=Cmn.GetClonedObj(a[c]))}else b=a;return b};this.PerformOutOfFlowFunc=
function(a,b){var c=a.parentNode,d=a.nextSibling;c.removeChild(a);b();d?c.insertBefore(a,d):c.appendChild(a)};this.IsEmpty=function(a){var b=!0;if("object"===typeof a&&!(a instanceof Date))if(a instanceof Array)0<a.length&&(b=!1);else for(var c in a){if(a.hasOwnProperty(c)){b=!1;break}}else throw new TypeError;return b};this.VldtEmailAddr=function(a){return/^[^\s]+@[^\s]+[^\s\.]+$/.test(a)};this.Trim=function(a){return a.replace(/^\s+|\s+$/g,"")};this.SetWndwStat=function(a){window.status=a;return!0};
this.ForceWordWrapping=function(a){var b,c=Cmn.GetElementsByClsNm("ForceWordWrapCntnr",null,a);0===c.length&&c.push(Cmn.Get(a));for(a=0;a<c.length;a++){b=c[a];var d=Cmn.GetWidth(b);if(0<d)for(var e=Cmn.GetElementsByClsNm("ForceWordWrapWidthCntnr",null,b),f=0;f<e.length;f++){var g=e[f],h=Cmn.GetWidth(g);if(h>d){var k=Cmn.GetElementsByClsNm("ForceWordWrapTxtCntnr",null,g),l=new CmnColls.List;for(b=0;b<k.length;b++)for(var m=k[b].innerHTML.split(" "),n=0;n<m.length;n++){var p=m[n];-1===p.toLowerCase().indexOf("<wbr>")&&
!1==l.ContainsObj(p)&&l.Add(p)}for(l.Srt("length",CmnColls.SRT_TYP_ALPHANUMERIC_KY_TXT,CmnColls.SRT_DRCT_DESCENDING_KY_TXT);h>d&&0<l.Cnt();){h=l.Itms()[0];m=h.split("").join("<wbr>");for(b=0;b<k.length;b++)k[b].innerHTML=k[b].innerHTML.replace(h,m);l.Rem(0);h=Cmn.GetWidth(g)}}}}};this.collToArray=function(a){for(var b=[],c=0,d=a.length;c<d;c++)b.push(a[c]);return b};this.filter=function(a,b){if(Array.prototype.filter)return Array.prototype.filter.apply(a,[b]);var c=a.length;if("function"!=typeof b)throw new TypeError;
for(var d=[],e=0;e<c;e++)if(e in a){var f=a[e];b.call(b,f,e,a)&&d.push(f)}return d};this.forEach=function(a,b){if(Array.prototype.forEach)return Array.prototype.forEach.apply(a,[b]);var c=a.length;if("function"!=typeof b)throw new TypeError;for(var d=0;d<c;d++)d in a&&b.call(b,a[d],d,a)};this.every=function(a,b){if(Array.prototype.every)return Array.prototype.every.apply(a,[b]);var c=a.length;if("function"!=typeof b)throw new TypeError;for(var d=0;d<c;d++)if(d in a&&!b.call(b,a[d],d,a))return!1;return!0};
this.map=function(a,b){if(Array.prototype.map)return Array.prototype.map.apply(a,[b]);var c=a.length;if("function"!=typeof b)throw new TypeError;for(var d=Array(c),e=0;e<c;e++)e in a&&(d[e]=b.call(b,a[e],e,a));return d};this.some=function(a,b){if(Array.prototype.some)return Array.prototype.some.apply(a,[b]);var c=a.length;if("function"!=typeof b)throw new TypeError;for(var d=0;d<c;d++)if(d in a&&b.call(b,a[d],d,a))return!0;return!1};this.reduce=function(a,b){if(Array.prototype.reduce)return Array.prototype.reduce.apply(a,
[b]);var c=a.length>>>0;if("function"!=typeof b)throw new TypeError;if(0==c&&1==arguments.length)throw new TypeError;c-=1;if(3<=arguments.length)var d=arguments[2];else{do{if(c in a){d=a[c--];break}if(0>--c)throw new TypeError;}while(1)}for(;0<=c;c--)c in a&&(d=b.call(null,d,a[c],c,a));return d};this.reduceRight=function(a,b){if(Array.prototype.reduceRight)return Array.prototype.reduceRight.apply(a,[b]);var c=a.length;if("function"!=typeof b)throw new TypeError;if(0==c&&1==arguments.length)throw new TypeError;
c-=1;if(3<=arguments.length)var d=arguments[2];else{do{if(c in a){d=a[c--];break}if(0>--c)throw new TypeError;}while(1)}for(;0<=c;c--)c in a&&(d=b.call(null,d,a[c],c,a));return d};this.isArray=function(a){return"[object Array]"===Object.prototype.toString.apply(a)};this.create=function(a){var b=function(){};b.prototype=a;return new b};this.GetBaseConversionNbr=function(a,b,c){a=a.toString().toUpperCase();for(var d=0,e=0;e<=a.length;e++)d+="0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ".indexOf(a.charAt(e))*
Math.pow(b,a.length-e-1);a="";for(e=Math.floor(Math.log(d)/Math.log(c));0<=e;e--)b=Math.floor(d/Math.pow(c,e)),a+="0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ".charAt(b),d-=b*Math.pow(c,e);return a};this.AreEqual=function(a,b){var c=!1;switch(!0){case "undefined"==typeof a||"undefined"==typeof b:c=!1;break;case null==a&&null==b:c=!0;break;case "object"==typeof a&&"object"==typeof b:var d=0,e;for(e in a)a.hasOwnProperty(e)&&d++;var f=0;for(e in b)b.hasOwnProperty(e)&&f++;if(d==f)for(var g in a)if(a.hasOwnProperty(g)&&
(c=Cmn.AreEqual(a[g],b[g]),!1==c))break;break;case "object"!=typeof a&&"object"!=typeof b:c=a===b;break;default:c=!1}return c};this.TrkAct=function(a,b){if("true"!==this.GetQSVal("no204").toLowerCase()){var c="";if("object"==typeof a)for(var d in a)a.hasOwnProperty(d)&&(""!=c&&(c+="&"),c=c+d+"="+encodeURIComponent(a[d]));else c=a;d=new Date;d=d.getFullYear()+"-"+(d.getMonth()+1)+"-"+d.getDate()+"T"+d.getHours()+":"+d.getMinutes()+":"+d.getSeconds()+":"+d.getMilliseconds();c+="&page="+b;c+="&ClientBrowserTime="+
d;c+="&sesnextrep="+McMaster.SesnMgr.GetStVal(McMaster.SesnMgr.StValDefs.SesnExtRepKy.KyTxt());d=this.GetApplEnvrPrfx(document.location.hostname)+"2"+this.GetApplEnvrSfx(document.location.hostname);d=document.location.protocol+"//"+d+".mcmaster.com";c=d+"/mcm/204.asp?"+c;(new Image(1,1)).src=c}};this.GetTimeOfAction=function(){var a=new Date,b=a.getHours()+1,c=a.getMinutes(),a=a.getSeconds();return""+b+c+a};this.GetTSOfActInclMS=function(){for(var a=new Date,b=a.getHours(),c=a.getMinutes(),d=a.getSeconds(),
a=a.getMilliseconds();3>a.length;)a="0"+a;return b+":"+c+":"+d+"."+a};this.GetOperatingSys=function(){var a="Other OS",b=window.navigator.appVersion;-1<b.indexOf("Win")?a="Windows":-1<b.indexOf("Mac")?a="MacOS":-1<b.indexOf("X11")?a="UNIX":-1<b.indexOf("Linux")&&(a="Linux");return a};this.GetBrowserInfo=function(){var a="Unknown",b="0.0",c=0,d=0,e=window.navigator.userAgent.toUpperCase(),f=!1,g=!1;-1<e.indexOf("MSIE")?(a="Internet Explorer",c=e.indexOf("MSIE")+5,d=e.indexOf(";",c)):-1<e.indexOf("CHROME/")?
(a="Chrome",c=e.indexOf("CHROME/")+7,d=e.indexOf(" ",c)):-1<e.indexOf("OPERA")?(a="Opera",c=e.indexOf("VERSION/")+8,d=e.indexOf("/",c)):-1<e.indexOf("SAFARI")?(a="Safari",c=e.indexOf("VERSION/")+8,d=e.indexOf(" ",c)):-1<e.indexOf("MOZILLA/")&&(a=e.indexOf("GECKO/")+15,f=e.indexOf("/",a),a=e.slice(a,f),c=e.indexOf(a)+a.length+1,d=e.indexOf(" ",c),f=!0);0<c&&(b=e.slice(c,d));-1<e.indexOf("APPLEWEBKIT/")&&(g=!0);e={};e.browserNm=a;e.browserVer=b;e.geckoBrowserInd=f;e.webkitEnabledInd=g;return e};this.GetBrowserVer=
function(){return this.GetBrowserInfo().browserVer};this.IsIE=function(){return!!eval("/*@cc_on true; @*/")};this.IsIE6Below=function(){return!!eval("/*@cc_on if (@_jscript_version >= 9 || @_jscript_version == 5.8 || (@_jscript_version == 5.7 && window.XMLHttpRequest)) {} else {true;} @*/")};this.IsIE6=function(){return!!eval("/*@cc_on if (@_jscript_version == 5.6 || (@_jscript_version == 5.7 && !window.XMLHttpRequest)) {true;} @*/")};this.IsIE7=function(){return!!eval("/*@cc_on if (@_jscript_version == 5.7 && window.XMLHttpRequest) {true;} @*/")};
this.IsIE8=function(){return!!eval("/*@cc_on if (@_jscript_version == 5.8) {true;} @*/")};this.IsIE9=function(){return!!eval("/*@cc_on if (@_jscript_version == 9) {true;} @*/")};this.IsIE10=function(){return!!eval("/*@cc_on if (@_jscript_version == 10) {true;} @*/")};this.IsGecko=function(){return this.GetBrowserInfo().geckoBrowserInd};this.IsChrome=function(){return"CHROME"===this.GetBrowserInfo().browserNm.toUpperCase()?!0:!1};this.IsSafari=function(){return"SAFARI"===this.GetBrowserInfo().browserNm.toUpperCase()?
!0:!1};this.IsIPad=function(){var a=!1;navigator&&"iPad"===navigator.platform&&(a=!0);return a};this.IsIPhone=function(){var a=!1;navigator&&"iPhone"===navigator.platform&&(a=!0);return a};this.IsOpera=function(){return"OPERA"===this.GetBrowserInfo().browserNm.toUpperCase()?!0:!1};this.IsWebKitEnabled=function(){return this.GetBrowserInfo().webkitEnabledInd};this.GetEnvrNm=function(){var a="";switch(Cmn.GetApplEnvrPrfx()+Cmn.GetApplEnvrSfx()){case "www":a=this.APPL_ENVR_NMS.PROD;break;case "wwwqual":a=
this.APPL_ENVR_NMS.QUAL;break;case "wwwdev":a=this.APPL_ENVR_NMS.DEV;break;case "pub":a=this.APPL_ENVR_NMS.PUB;break;case "pubqual":a=this.APPL_ENVR_NMS.PUBQUAL;break;case "pubdev":a=this.APPL_ENVR_NMS.PUBDEV;break;default:a=this.APPL_ENVR_NMS.PROD}return a};this.GetSesnExtRep=function(){if("undefined"!=typeof McMaster)return McMaster.SesnMgr.GetStVal(McMaster.SesnMgr.StValDefs.SesnExtRepKy.KyTxt());var a=this.GetCookieVal("sesnextrep");a||(a=this.GetQSVal("sesnextrep"));return a};this.RefreshOrds=
function(a){this.RefreshIncmplOrds();this.RefreshRecentOrds(a)};this.RefreshIncmplOrds=function(){try{var a=new McMaster.MsgMgr.Hdr(McMaster.MsgMgr.CntxtNms.INCMPL_ORDS),b=new McMaster.MsgMgrMsgs.IncmplOrdsChged(a);McMaster.MsgMgr.PubMsg(b)}catch(c){}};this.RefreshRecentOrds=function(a){try{a||(a=0);var b=new McMaster.MsgMgr.Hdr(McMaster.MsgMgr.CntxtNms.RECENT_ORDS),c=new McMaster.MsgMgrMsgs.RecentOrdsChged(b);setTimeout(McMaster.MsgMgr.PubMsg(c),a)}catch(d){}};this.ChkLoginRefreshOrds=function(){try{var a=
!!this.GetQSVal("justloggedin"),b=!!this.GetQSVal("justSwitchedUsrInd");(a||b)&&this.RefreshOrds()}catch(c){}};this.ChkUpdtIncmplOrds=function(){try{var a=!!this.GetQSVal("refreshincmplords"),b=this.GetQSVal("ordnavload");(a||"refresh"==b)&&this.RefreshIncmplOrds()}catch(c){}};this.GetLowRsltnHeight=function(){return 600};this.GetForm=function(){return document.getElementById("aspnetForm")};this.ShowInlineHTMLElem=function(a){this.ShowHTMLElem(a)};this.WriteLnk=function(a,b,c,d){var e="";McMasterCom&&
(e=McMasterCom.Nav.GetTopNm(self.name));document.write('<a target="'+e+'" class="'+c+'" href="'+a+'"'+b+">"+d+"</a>")};this.DetectBrowser=function(){var a="Other";if(Cmn.IsIE6())a="IE 6.0";else{var b=navigator.userAgent;-1<b.indexOf("AppleWebKit")?a="Safari":-1<b.indexOf("Opera")?(b.substring(b.indexOf("Opera")),a="Opera"):-1<b.indexOf("Mozilla/4.7")?a="Netscape 4.7":-1<b.indexOf("Netscape")?(a=b.substring(b.indexOf("Netscape")),a=a.substring(a.indexOf("/")+1),a="Netscape "+a):-1<b.indexOf("Firefox")?
(b.substring(b.indexOf("Firefox")),a="Firefox"):-1<b.indexOf("Gecko")&&-1<b.indexOf("Mozilla/5.0")?(a=b.substring(b.indexOf("rv:")),a.substring(3,a.indexOf(")")),a="Mozilla"):-1<b.indexOf("MSIE")&&(a=b.substring(b.indexOf("MSIE")),a=a.substring(5,a.indexOf(";")),a="IE "+a)}return a};this.IsOpera8x=function(){var a=!1;this.IsOpera()&&9>this.GetBrowserInfo().browserVer&&(a=!0);return a};this.GatherContentSizeData=function(){var a={},b=Cmn.GetElementsByClsNm("SpecSrch_Pane","div",Cmn.GetObj("SpecSrch_Cntnr"))[0];
b?(a.hgt=Cmn.GetHeight(b),a.wdth=Cmn.GetWidth(b),a.nbrSpecAttrs=Cmn.GetElementsByClsNm("SpecSrch_AttrShow","div").length,a.hasSpecSearch=!0):a.specSrchPane=!1;return Cmn.StringifyJSON(a)};var m=function(a,b,c,d,e){var f;f="";a&&b&&(a=a.replace(/^\s*/,""),a=a.replace(/\s*$/,""),b=b.replace(/\s*$/,""),b=b.replace(/\s*$/,""),0<a.length&&0<b.length&&(f=f+a+b,f+=Cmn.GetApplEnvrSfx(e),f+=".mcmaster.com"),c&&(c=c.replace(/^\s*/,""),c=c.replace(/\s*$/,""),0<c.length&&(f=0==c.indexOf("/")?f+c:f+("/"+c))),
d&&(d=d.replace(/^\s*/,""),d=d.replace(/\s*$/,""),0<d.length&&(f=0==d.indexOf("?")?f+d:f+("?"+d))));return f},q=function(a){return a=a&&(a.tagName||a.item)?a:YAHOO.util.Dom.get(a)}});Array.max=function(l){return Math.max.apply(Math,l)};Array.min=function(l){return Math.min.apply(Math,l)};Array.dim=function(l,n){var p=[],m;for(m=0;m<l;m+=1)p[m]=n;return p};Function.prototype.curry=function(){var l=Array.prototype.slice,n=l.apply(arguments),p=this;return function(){return p.apply(null,n.concat(l.apply(arguments)))}};


if(Cmn.Dom){}else{Cmn.Dom=function(){var e=function(j,i){var h=Cmn.SelectorQuery(j,i);if(h.length===1){return h[0];}else{if(h.length>1){return h;}else{return null;}}};var d=function(h,i){return i.getAttribute(h);};var f=d.curry("id");var g=function(h,j,i){Cmn.SetStyle(i,h,j);return i;};var a=g.curry("display","none");var b=g.curry("display","");var c=function(i,h){h.appendChild(i);return i;};return{s:e,GetAttribute:d,ElemId:f,SetStyle:g,HideElem:a,ShowElem:b,AppendChild:c};}();}

if(Cmn.Utilities){}else{Cmn.Utilities=function(){var k=Cmn.map,K=Cmn.forEach;var y=function(N,O){if(N.hasOwnProperty){if(N.hasOwnProperty(O)){return true;}else{return false;}}else{return true;}};var I=function(O,P){var N=[];return k(O,function(Q){return Q[P]();});};var C=YAHOO.lang.isString;var g=function(O,N){if(O[N]){}else{O[N]={};}return O[N];};var r=function(R,P){var O=R.length,N,Q=[];for(N=0;N<O;N++){Q.push(R[N][P]);}return Q;};var n=function(P){var N=[],O;for(O in P){if(y(P,O)){N[N.length]=O;}}return N;};var s=function(R){var O,P,S,Q=n(R),N=[];for(O in Q){if(Q.hasOwnProperty(O)){P=Q[O];S=R[P];N[N.length]=S;}}return N;};var G=function(N,Q){var P,O=N.length;for(P=0;P<O;P++){if(Q===N[P]){return Q;}}return false;};var E=function(N,O){return !G(N,O);};var v=function(O){var N={},Q=O.length,P,R;for(P=0;P<Q;P++){R=O[P];if(N[R]){}else{N[R]=true;}}return n(N);};var D=function(N){if(!N){return true;}else{if(Cmn.isArray(N)){return N.length===0;}else{return n(N).length===0;}}};var b=function(N){return !D(N);};var l=function(N,P){for(var O=0;O<N.length;O++){if(N[O]===P){return O;}}return null;};var a=function(N,O){if(l(N,O)!==null){N.splice(l(N,O),1);}return N;};var F=function(P,O){var N=[];var Q=P.concat(O);var R=Q.shift();while(R){if(G(Q,R)){if(E(N)){N.push(R);}}R=Q.shift();}return N;};var u=function(O){var N=[];for(var P in O){if(O.hasOwnProperty(P)){if(y(O,P)){N.push(P+"="+O[P]);}}}return N.join("&");};var H=function(N){if(window.console){window.console.log(N);}};var L=function(O,N){return function(){return O.apply(N,arguments);};};var p=function(){var N=[];for(var O=0;O<arguments.length;O++){N=N.concat(arguments[O]);}return N;};var J={data:[],Push:function(N){this.data.push(N);return this;},Pull:function(){return this.data.shift();},Clear:function(){this.data=[];},Peek:function(){return this.data[0];},Last:function(){return this.data[this.data.length-1];},Length:function(){return this.data.length;},ClearToBack:function(N){this.data=this.data.slice(0,l(this.data,N));},ClearToFront:function(N){this.data=this.data.slice(l(this.data,N));},Contains:function(N){return G(this.data,N);},Empty:function(){return D(this.data);}};var q=function(O){var N={};K(n(O),function(P){N[P]=O[P];});return N;};var d=function(N){var O=0;K(N,function(P){O=O+P;});return O;};var z=function(P,N){var Q=(N+1)-P,O=Math.floor(Math.random()*Q);return P+O;};var x=function(O){var R=O.slice(0);for(var Q=R.length-1;Q>0;Q--){var P=z(1,Q);var N=R[P];R[P]=R[Q];R[Q]=N;}return R;};var m=function(){var O=this,N;O.timings={};O.average=function(R){var Q=Cmn.filter(R,function(S){return S.stop;});var P=k(Q,function(S){return S.stop-S.start;});return d(P)/P.length;};O.timed=function(R,P,Q){Q=Q||window;return function(){O.start(P);var S=R.apply(Q,arguments);O.stop(P);return S;};};O.start=function(P){if(O.timings[P]){O.timings[P].push({start:new Date()});}else{O.timings[P]=[{start:new Date()}];}};O.getTiming=function(P){if(O.timings[P]){var Q=O.timings[P].pop();O.timings[P].push(Q);return Q;}else{return null;}},O.stop=function(P){var Q=O.getTiming(P);if(Q){Q.stop=new Date();}};O.to_html=function(){var Q="<ul>",P,R;K(n(O.timings),function(S){R=O.timings[S];P="<li>"+S+": "+average(R)+"</li>";Q=Q+P;});Q=Q+"</ul>";return Q;};O.show=function(){if(N){Cmn.Dom.ShowElem(N);}else{N=Cmn.CrteElement("div");N.style.cssText="position: absolute;top: 20px;left: 800px;z-index: 9999;background-color: white;border: 1px solid black;";Cmn.InsrtAfter(N,Cmn.GetObj("ShellLayout_Cntnr"));}N.innerHTML=O.to_html();};O.hide=function(){Cmn.Dom.HideElem(N);};O.clear=function(P){O.timings[P]=null;};return O;};var e={Average:function(N){return d(N)/N.length;}};var j=function(N){if(N.length>0){return N[0];}else{return null;}};var M=function(P,Q){var N;for(var O=0;O<P.length;O++){if(Q(P[O])){N=P[O];}}return N;};var B=function(O,N){var P=[],R=[],Q=function(){var T=arguments;K(P,function(U){U.apply(null,T);});var S=O.apply(N,T);K(R,function(U){U.apply(null,T);});return S;};Q.Before=function(S){P.push(S);};Q.After=function(S){R.push(S);};return Q;};var w=function(){var N={type:"BaseError",message:"",toString:function(){return this.type+": "+this.message;}};return function(O,Q){var P=Cmn.create(N);N.type=O;N.message=Q;return P;};}();var h=function(O,N){var Q=[];for(var P=0;P<O.length;P++){var S=O[P],R=N[P];Q.push([S,R]);}return Q;};var A=function(N){var O={};K(N,function(P){i(P.length===2,"You must pass an array of tuples.");O[P[0]]=P[1];});return O;};var t=function(O){var N=[];K(n(O),function(P){N.push([P,O[P]]);});return N;};var o=function(P,O){var N={};K(O,function(Q){N[Q]=P[Q];});return N;};var i=function(){var N=w.curry("AssertionError");return function(P,O){if(!!P){}else{throw N(O);}};}();var c={DownArrow:40,Backspace:8,Tab:9,Delete:46,Enter:13,Escape:27,RightArrow:39,LeftArrow:37,UpArrow:38,DownArrow:40,Shift:16,Control:17,Alt:18,Caps:20,PageUp:33,PageDown:34,End:35,Home:36,PrintScreen:44,Insert:45};var f=function(P){var O=s(P),N=n(P),Q=A(h(O,N));return Q;};String.prototype.startswith=function(N){return this.substring(0,N.length)===N;};return{Exception:w,Assert:i,ForEach:K,Map:Cmn.map,KeyCodes:c,Emitter:B,Call:I,Namespace:g,Pluck:r,InArray:G,NotIn:E,NOTHING:function(){},Empty:D,First:M,Head:j,NotEmpty:b,IndexOf:l,Remove:a,ReverseObj:f,Intersection:F,FormEncoded:u,Log:H,Bind:L,Keys:n,Values:s,Unique:v,Queue:J,Mush:p,ShallowCopy:q,Sift:o,Sum:d,RandInt:z,Shuffle:x,Timer:m,Math:e,FromTuples:A,ToTuples:t,Zip:h,IsString:C};}();}

if(Cmn.Utilities.Widget){}else{Cmn.Utilities.Widget=(function(){var h=Cmn.Utilities,e=h.Zip,p=h.Log,d=h.FromTuples,o=h.Assert,j=Cmn.forEach,k=h.InArray,i=h.ReverseObj,a=h.Values,s=h.Keys,t=h.KeyCodes,l={KeyUp:"keyup",KeyDown:"keydown",Focus:"focus",Blur:"blur",MouseOver:"mouseover",MouseOut:"mouseout",MouseDown:"mousedown",MouseUp:"mouseup",Click:"click",Scroll:"scroll",Resize:"resize",Input:"input",KeyPress:"keypress"},q=s(l),m=k.curry(["KeyUp","KeyDown","KeyPress"]),r=function(w){var v=this,u=arguments;j(this.funcs,function(x){var y=x.Scope;if(x.Allowed(u)){x.Func.apply(y,u);}});},g=function(v){var u=Cmn.create(v);u.funcs=[];return u;},b=(function(){var u={Func:null,Scope:null,Allowed:function(){return true;},OnlyIf:function(){return this.Allowed.apply(this,arguments);},Unless:function(w){var v=this;v.Allowed=function(x){return !w.apply(v.Scope,x);};}};return function(x,w){o(x,"You have to provide a function to wrap.");var v=Cmn.create(u);v.Func=x;v.Scope=w;return v;};})(),c=(function(){var u={funcs:[],Exec:function(){return r.apply(this,arguments);},Do:function(x,w){var v=b(x,w);this.funcs.push(v);return v;}};return function(){return g(u);};})(),f=(function(){var u=i(t),v=c(),w=s(t);v.Exec=function(z){var y=this,x=u[z.keyCode];if(x){y[x].Exec.apply(y[x],arguments);}return r.apply(y,arguments);};return function(){var x=g(v);j(w,function(y){x[y]=c();});return x;};})(),n=(function(){var v={elem:null},w=function(x){j(q,function(y){if(m(y)){x[y]=f();}else{x[y]=c();}});},u=function(x){o(x.elem,"Widgets must have an elem property.");j(q,function(y){var z=l[y];if(z==="input"){if("oninput" in document.body){}else{if("propertychange" in document.body){z="propertychange";}else{z="keyup";}}}Cmn.AddEvntListener(x.elem,z,function(){x[y].Exec.apply(x[y],arguments);},{},x[y]);});};return function(y){o(y,"You must provide an element in order to create a widget.");var x=Cmn.create(v);x.elem=y;w(x);u(x);return x;};})();return{CreateWidget:n};})();}

if(this.Cmn.Html5){}else{Cmn.Html5=new function(){var c=this;this.HasLocalStorage=function(){try{if("localStorage" in window&&window.localStorage!==null){localStorage.COOKIE="monster";delete localStorage.COOKIE;return true;}else{return false;}}catch(d){return false;}};this.HasCssTransitions=function(){var f=function(){return true;};var h=function(){return false;};var d=document.body||document.documentElement;var g=d.style;var j="transition";if(typeof g[j]=="string"){return f;}v=["Moz","Webkit","Khtml","O","ms"],j=j.charAt(0).toUpperCase()+j.substr(1);for(var e=0;e<v.length;e++){if(typeof g[v[e]+j]=="string"){return f;}}return h;}();var a=function(){var f,e="-",k="PRIORITY_QUEUE_KEY",i=Cmn.forEach,g=Cmn.Utilities.Keys;if(c.HasLocalStorage()){f=localStorage;}else{f={};}var j={mKeyPrefix:"",Prefixed:function(l){if(this.mKeyPrefix){return this.mKeyPrefix+e+l;}else{return l;}},Set:function(m,o){var n=this;try{f[n.Prefixed(m)]=o;}catch(l){n.ShrinkCache(0.2,function(){n.Set(m,o);});}},Get:function(l){return f[this.Prefixed(l)];},HasKey:function(l){return !!f[this.Prefixed(l)];},ClearEverything:function(){if(f.clear){f.clear();}else{f={};}},ClearThis:function(l){var o=this,n=this.Keys();var m=Cmn.filter(n,function(p){return p.startswith(o.mKeyPrefix);});h(m,l);},Length:function(){if(f.length||f.length===0){return f.length;}else{return this.Keys().length;}},Keys:function(){if(f.key){var n=this.Length(),m=[];for(var l=0;l<n;l++){m.push(f.key(l));}return m;}else{return g(f);}},ShrinkCache:function(o,m){o=o||0.2;var l=Math.floor(this.Length()*o),n=Cmn.Utilities.Shuffle(this.Keys()).slice(0,l);if(f.removeItem){h(n,m);}},Super:function(l){var n=j[l],m=this;return function(){return n.apply(m,arguments);};}};var h=function(n,m){var l=n[0];d(l);if(n.length){setTimeout(h.curry(n.slice(1),m),0);}else{m();}},d=function(l){if(f.removeItem){f.removeItem(l);}else{delete f[l];}};return j;}();var b=function(){var d=Cmn.create(a);d.Set=function(f,g){var e=Cmn.StringifyJSON(g);d.Super("Set")(f,e);};d.Get=function(e){var f=d.Super("Get")(e);if(f){return Cmn.ParseJSON(f);}else{return null;}};return d;}();this.CreateLocalStorage=function(d,e){e=e||Cmn.create(a);if(d){e.mKeyPrefix=d;}return e;};this.CreateJSONLocalStorage=function(d){var e=Cmn.Html5.CreateLocalStorage(d,b);return e;};}();}

if(this.CmnStringManipulator){}else{CmnStringManipulator=new function(){var j="Wrd";var h="PreventWrdBreaking";var f=/^\s*(pages?|pgs?\.?)?\s*(\d+)\s*$/i;var g=/^\s*(pages?|pgs?\.?)\s+(\d+,\d+|\d+,\d+-\d+|\d+-\d+)(,\d+|,\d+-\d+)*\s*$/i;var c=/^\s*(pa?g?e?s?\.?)?\s*(\d*-?\d*)(,?\d*-?\d*)*\s*$/i;var b=/^\d{4,5}[a-z]\d{0,3}$/i;var a=/^\d{4,5}[a-z](\d{1,3})?(ac|[abcde])$/i;var d=/[\(\)]/;this.PreventWrdBreaking=function(k){if(e(k)){}else{var m=Cmn.GetTxtContent(k).Trim();var l=m.split(" ");i(k,l);}};this.PreventPhraseAndWrdBreaking=function(o,k){if(!k){throw new Error("CmnStringManipulator.PreventPhraseAndWrdBreaking: Maximum phrase length must be specified");}if(e(o)){}else{var v=Cmn.GetTxtContent(o).Trim();var t=v.split(" ");var u;var r=false;for(var q=0;q<t.length;q++){var l=t[q];if(d.test(l)){if(r){var n=t.slice(u,q+1);var s="";for(var p=0;p<n.length;p++){s+=n[p]+" ";}s=s.Trim();if(s.length<=k){var m=q-u+1;t.splice(u,m,s);}r=false;}else{r=true;u=q;}}}i(o,t);}};this.AllowBreaking=function(l){var m=Cmn.GetElementsByClsNm(h,"span",l);for(var k=0;k<m.length;k++){Cmn.RemCls(m[k],h);}};this.ParsePgNbr=function(m){var k=null;var l=f.exec(m);if(l){k=l[2]*1;}return k;};this.ParsePgRng=function(v){var q=null;var l=g.exec(v);if(l){var y="-";var t=",";q=[];var u=new Object();var w=function(z){z=z*1;if(u[z]){}else{q[q.length]=z;u[z]=true;}};v=v.replace(l[1],"");var m=v.split(t);for(var p=0;p<m.length;p++){try{var x=m[p];if(x){var r=x.split(y);if(r[0]&&r[1]){var n=Math.min(r[0],r[1]);var k=Math.max(r[0],r[1]);for(var o=n;o<=k;o++){w(o);}}else{if(r[0]){w(r[0]);}else{if(r[1]){w(r[1]);}}}}}catch(s){}}}return q;};this.ParsePartNbr=function(n){var l=null;var m=this.ReplaceCmnPartNbrErrs(n);var k=b.exec(m);if(k){l=k[0];}return l;};this.ParseAddnlContent=function(l){var m=null;var k=a.exec(l);if(k){m=k[0];}return m;};this.ReplaceCmnPartNbrErrs=function(t){var n="";var q=/\d/i;var o=/^\s*([o0]*)([0123456789oil]{4,5})([a-z]+)-*([0123456789oil]{0,3})([o0]*)\s*$/i;var p=/[o]/gi;var k=/[i]/gi;var m=/[l]/gi;var s=/([a-z])-+/i;var r=/([a-z])\1+/gi;var l=/^\s*[0]+([0123456789]{4,5})/i;var u=/^(\d{4,5}[a-z]\d{0,3})(0+)?$/i;if(t){var n=t;if(q.exec(n)&&o.exec(n)){n=n.replace(p,"0");n=n.replace(k,"1");n=n.replace(m,"1");n=n.replace(s,"$1");n=n.replace(r,"$1");n=n.replace(l,"$1");n=n.replace(u,"$1");}}return n;};this.VldtPgNbr=function(l){var k=false;if(this.ParsePgNbr(l.Trim())){k=true;}return k;};this.VldtPgRng=function(l){var k=false;if(this.ParsePgRng(l.Trim())){k=true;}return k;};this.VldtPartialPgRng=function(l){var k=false;if(c.exec(l.Trim())){k=true;}return k;};this.VldtPartNbr=function(l){var k=false;if(this.ParsePartNbr(l.Trim())){k=true;}return k;};this.VldtAddnlContent=function(l){var k=false;if(this.ParseAddnlContent(l.Trim())){k=true;}return k;};this.VldtSrch=function(l){var k=true;if(this.VldtPgNbr(l)||this.VldtPgRng(l)||this.VldtPartialPgRng(l)||this.VldtPartNbr(l)||this.VldtAddnlContent(l)){k=false;}return k;};var i=function(m,o){var n='<span class="'+j+'">';var q="</span>";var p="";for(var k=0;k<o.length;k++){p+=n+o[k]+q+" ";}p=p.Trim();var l=document.createElement("span");l.className=h;l.innerHTML=p;m.innerHTML="";m.appendChild(l);};var e=function(k){var m=k.innerHTML.Trim();var l=Cmn.GetTxtContent(k).Trim();if(l===m){return false;}else{return true;}};};}String.prototype.StrtsWth=function(c,a){var e="^"+c;var d="";if(a){}else{d+="i";}var b=new RegExp(e,d);return b.test(this);};String.prototype.EndsWth=function(c,a){var e=c+"$";var d="";if(a){}else{d+="i";}var b=new RegExp(e,d);return b.test(this);};String.prototype.Contains=function(a,b){var d="";if(b){}else{d+="i";}var c=new RegExp(a,d);return c.test(this);};String.prototype.RemNewLineChars=function(){return this.replace(/[\r\n]/ig,"");};String.prototype.EscapeQuotes=function(){return this.replace(/"/ig,'"');};String.prototype.EscapeAngleBracketsForHtml=function(){return this.replace(/</g,"&lt;").replace(/>/g,"&gt;");};String.prototype.Trim=function(){return this.replace(/(\s+)$/,"").replace(/^(\s+)/,"");};

if(this.Cmn.Animation){}else{Cmn.Animation=new function(){var c=1;var i="";var g=/^.*color$/i;var b=/^([\- ]?[\d\.]+)(px|em|pt)?$/;var a=/^(#|rgb|\[)/i;this.CrteTransitionStyle=function(p,o){var q=null;var n=null;var l=null;var m=new e(q,n,l);k(p,o,m);return m;};this.CrteAnimation=function(n,l,m){return new d(n,l,m);};this.PerformAnimation=function(o){var p=[],l=null,n;if(o instanceof Array){p=o;}else{p.push(o);}for(n=0;n<p.length;n++){var m=function(q){return function(r){return q;};}(n);if(n===p.length-1){}else{if(p[n].OnCmpl){l=p[n].OnCmpl;}if(l){p[n].OnCmpl=function(q,r){return function(){var s=function(t){t();};s(r);h(p[q]);};}(n+1,l);}else{p[n].OnCmpl=function(q){return function(){h(p[q]);};}(n+1);}}}h(p[0]);};var f=function(n){if(n==null){return n;}var l=new n.constructor();for(var m in n){if(n.hasOwnProperty(m)){l[m]=f(n[m]);}}return l;};var k=function(q,p,o){var m=false;if(Cmn.Animation.PropertyNms.ChkVldPropertyNm(q)){m=true;o.Prop=q;if(q.match(g)){o.HasClr=true;var l=p.match(a);if(!l){m=false;o.To=null;o.Unit=null;}else{o.To=p;o.Unit=null;}}else{var n=p.match(b);if(!n){m=false;o.To=null;o.Unit=null;}else{if(n.length==2){m=true;o.To=n[1];o.Unit=i;}else{if(n.length){m=true;o.To=n[1];if(n[2]){o.Unit=n[2];}else{}}}}}}return m;};var j=function(m){var o=new Object();o.HasClr=false;for(var n=0;n<m.length;n++){if(Cmn.Animation.PropertyNms.ChkVldPropertyNm(m[n].Prop)){var l=new Object();l.to=m[n].To;if(m[n].Unit){l.unit=m[n].Unit;}o[m[n].Prop]=l;if(!o.HasClr){o.HasClr=m[n].HasClr;}}else{o[m[n].Prop]=null;}}return o;};var h=function(q){var n=q.ElemArr();var l=q.TransitionStyleArr();var s=q.Duration();var r=j(l);for(var p=0;p<n.length;p++){if(r.HasClr){var m=new YAHOO.util.ColorAnim(n[p],r,s);}var o=new YAHOO.util.Anim(n[p],r,s);if(q.OnCmpl){o.onComplete.subscribe(function(){q.OnCmpl();});}if(Cmn.IsGecko()){YAHOO.util.AnimMgr.fps=30;}else{if(Cmn.IsIE7()){YAHOO.util.AnimMgr.fps=25;}else{if(Cmn.IsIE6()){YAHOO.util.AnimMgr.fps=10;}else{}}}o.animate();if(r.HasClr){m.animate();}}};var e=function(n,m,l){this.Prop=null;this.To=null;this.Unit=i;this.HasClr=false;};var d=function(q,l,o){var m=new Array();var n=new Array();var p=null;this.OnCmpl=null;if(q){if(q instanceof Array){m=q;}else{m.push(q);}}if(l){if(l instanceof Array){n=l;}else{n.push(l);}}if(o){p=o;}else{p=c;}this.ElemArr=function(){return m;};this.TransitionStyleArr=function(){return n;};this.Duration=function(){return p;};};};}

if(Cmn.Animation){if(Cmn.Animation.PropertyNms){}else{Cmn.Animation.PropertyNms=new function(){this.BACKGROUND_CLR_NM="backgroundColor";this.BACKGROUND_PSN_NM="backgroundPosition";this.BORDER_CLR_NM="borderColor";this.BORDER_SPACING_NM="borderSpacing";this.BORDER_WDTH_NM="borderWidth";this.BOTTOM_NM="bottom";this.CLR_NM="color";this.FONT_SZ_NM="fontSize";this.HGT_NM="height";this.LEFT_NM="left";this.LTR_SPACING_NM="letterSpacing";this.LN_HGT_NM="lineHeight";this.MARGIN_NM="margin";this.OPACITY_NM="opacity";this.OUTLINE_CLR_NM="outlineColor";this.OUTLINE_WDTH_NM="outlineWidth";this.PADDING_NM="padding";this.PADDING_BOTTOM_NM="paddingBottom";this.PADDING_LEFT_NM="paddingLeft";this.PADDING_RIGHT_NM="paddingRight";this.PADDING_TOP_NM="paddingTop";this.RIGHT_NM="right";this.TXT_INDENT_NM="textIndent";this.TOP_NM="top";this.WDTH_NM="width";this.WRD_SPACING_NM="wordSpacing";var b=new Array();for(var a in this){if(this.hasOwnProperty(a)){if(typeof a=="string"){b.push(this.memberPropertyNm);}}}this.ChkVldPropertyNm=function(c){var d=false;for(var e=0;e<b.length;e++){if(b[e]=c){d=true;break;}}return d;};};}}

if(this.CmnCrCrdVldtn){}else{CmnCrCrdVldtn=new function(){var b=this;var a=new RegExp(/\d{13,}/gi);b.VldtExprDtInFuture=function(c,g,f,e){var d=true;if(g<e){d=false;}else{if(g==e){if(c<f){d=false;}}else{}}return d;};b.VldtCrCrdNbr=function(c){var e=false;var g=c.length;if(g<=19){var h=0;for(digitIdx=g;digitIdx>=1;digitIdx--){var f=c.charAt(digitIdx-1);if((g-digitIdx)%2==0){h+=parseInt(f,10);}else{var d=parseInt(f,10)*2;if(d>=10){d=(d%10)+1;}h+=d;}}if((h%10)==0){e=true;}}return e;};b.VldtCrCrdProvider=function(c){var d=false;d=CmnCrCrdVldtn.ChkIsVisa(c);if(d==false){d=CmnCrCrdVldtn.ChkIsMasterCard(c);}if(d==false){d=CmnCrCrdVldtn.ChkIsAmericanExpress(c);}return d;};b.ChkIsVisa=function(c){var d=false;if(((c.length==16)||(c.length==13))&&(c.substring(0,1)==4)){d=true;}return d;};b.ChkIsMasterCard=function(d){var e=false;var c=d.substring(0,1);var f=d.substring(1,2);if((d.length==16)&&(c==5)&&((f>=1)&&(f<=5))){e=true;}return e;};b.ChkIsAmericanExpress=function(e){var c=false;var d=e.substring(0,1);var f=e.substring(1,2);if((e.length==15)&&(d==3)&&((f==4)||(f==7))){c=true;}return c;};b.FormatVisaCrCrdNbr=function(c){var d;if(c.length==16){d=c.substring(0,4);d+=" ";d+=c.substring(4,8);d+=" ";d+=c.substring(8,12);d+=" ";d+=c.substring(12,16);}else{d=c;}return d;};b.FormatMasterCardCrCrdNbr=function(c){var d;d=c.substring(0,4);d+=" ";d+=c.substring(4,8);d+=" ";d+=c.substring(8,12);d+=" ";d+=c.substring(12,16);return d;};b.FormatAmericanExpressCrCrdNbr=function(c){var d;d=c.substring(0,4);d+=" ";d+=c.substring(4,10);d+=" ";d+=c.substring(10,15);return d;};b.IsVldFreeFormTxt=function(g){var e=true;var i=g.replace(/ /g,"");i=i.replace(/-/g,"");var h=i.match(a);if(h){for(var d=0;d<h.length;d++){var c=h[d];for(var f=0;f<c.length-13;f++){if(f+13<=c.length){if(CmnCrCrdVldtn.VldtCrCrdNbr(c.substr(f,13))){e=false;break;}}if(f+15<=c.length){if(CmnCrCrdVldtn.VldtCrCrdNbr(c.substr(f,15))){e=false;break;}}if(f+16<=c.length){if(CmnCrCrdVldtn.VldtCrCrdNbr(c.substr(f,16))){e=false;break;}}}}}return e;};};}

if(this.Cmn.DropDown){}else{Cmn.DropDown=new function(){ANIMATION_ROLL_DOWN_SEC_NBR=0.3;this.DropDownObj=function(c,e,a,b){var h=this;h.ExpandType=null;var d=function(){if(c&&e){Cmn.AddCls(e,"dropDownCntnr");Cmn.AddEvntListener(c,"click",h.HndlElemClick);}};Cmn.OnContentReady(c.id,d);h.Unload=function(){Cmn.RemEvntListeners(c,"click");};h.HndlElemClick=function(){if(Cmn.GetStyle(e,"display")==="block"){h.hideDropDownObj();if(b){Cmn.RemEvntListener(window,"click",g);Cmn.RemEvntListener(document.body,"click",g);}}else{i();if(b){Cmn.AddEvntListener(window,"click",g);Cmn.AddEvntListener(document.body,"click",g);}}};h.hideDropDownObj=function(){Cmn.SetStyle(e,"overflow","hidden");var k=Cmn.Animation.CrteTransitionStyle(Cmn.Animation.PropertyNms.HGT_NM,"0px");var l=Cmn.Animation.CrteAnimation(e,k,ANIMATION_ROLL_DOWN_SEC_NBR);l.OnCmpl=function(){Cmn.SetStyle(e,"display","none");};Cmn.Animation.PerformAnimation(l);var j=Cmn.GetAncestorByClsNm(c,"CmnDropDownClickElemCntnr");Cmn.RemCls(j,"clickCntnrActv");};var i=function(){var j=Cmn.GetAncestorByClsNm(c,"CmnDropDownClickElemCntnr");Cmn.AddCls(j,"clickCntnrActv");Cmn.SetStyle(e,"display","block");Cmn.SetStyle(e,"height",0);Cmn.SetStyle(e,"overflow","hidden");if(a){Cmn.ForceWordWrapping(e);}var k=f(e);var l=Cmn.Animation.CrteTransitionStyle(Cmn.Animation.PropertyNms.HGT_NM,k+"px");var m=Cmn.Animation.CrteAnimation(e,l,ANIMATION_ROLL_DOWN_SEC_NBR);m.OnCmpl=function(){Cmn.SetStyle(e,"height","");Cmn.SetStyle(e,"overflow","");};Cmn.Animation.PerformAnimation(m);};var f=function(l){var k=l.cloneNode(true);k.style.position="absolute";k.style.left="-9999px";k.style.display="block";k.style.height="auto";Cmn.InsrtAfter(k,l);var j=Cmn.GetHeight(k);Cmn.RemElem(k);k=null;return j;};var g=function(k){var j=Cmn.GetEvntTarget(k);if(j!=e){h.hideDropDownObj();}};};};}

if(this.CmnColls){}else{CmnColls=new function(){this.SRT_TYP_ALPHANUMERIC_KY_TXT="alphanumeric";this.SRT_TYP_DT_KY_TXT="dt";this.SRT_TYP_NONE_KY_TXT="none";this.SRT_DRCT_ASCENDING_KY_TXT="ascending";this.SRT_DRCT_DESCENDING_KY_TXT="descending";this.SRT_DRCT_NONE_KY_TXT="none";var b=function(k,i,h,l,j,g){var f;if(h>i){f=Math.floor(Math.random()*(h-i+1))+i;f=a(k,i,h,f,l,j,g);b(k,i,f-1,l,j,g);b(k,f+1,h,l,j,g);}};var a=function(l,j,f,m,h,i,o){var g=l[m][h],n=j,k;d(l,m,f);n=j;for(k=j;k<f;k++){if((o==CmnColls.SRT_DRCT_ASCENDING_KY_TXT)&&(c(l[k][h],g,i)<0)){d(l,n,k);n++;}else{if((o==CmnColls.SRT_DRCT_DESCENDING_KY_TXT)&&(c(l[k][h],g,i)>0)){d(l,n,k);n++;}}}d(l,f,n);return n;};var d=function(f,i,g){var h;h=f[i];f[i]=f[g];f[g]=h;};var c=function(j,i,h){var k=0;if(h==CmnColls.SRT_TYP_DT_KY_TXT){var g=new Date(j);var f=new Date(i);return g.getTime()-f.getTime();}else{if((j==parseInt(j))&&(i==parseInt(i))){k=j-i;}else{if((j==parseInt(j))||(i==parseInt(i))){if(j<i){k=-1;}else{if(j>i){k=1;}}}else{if(j.toUpperCase()<i.toUpperCase()){k=-1;}else{if(j.toUpperCase()>i.toUpperCase()){k=1;}}}}}return k;};this.List=function(){var i=new Array();var h=CmnColls.SRT_DRCT_NONE_KY_TXT;var f="";var g=CmnColls.SRT_TYP_NONE_KY_TXT;this.Itms=function(){return i;};this.Cnt=function(){return i.length;};this.CurrSrtDrct=function(){return h;};this.CurrSrtPropertyNm=function(){return f;};this.CurrSrtTyp=function(){return g;};this.Add=function(j){i[i.length]=j;};this.Insrt=function(l,j){if((j<0)||(j>i.length)){}else{var k;for(k=i.length;k>j;k--){i[k]=i[k-1];}i[j]=l;}};this.Rem=function(j){if((j<0)||(j>i.length-1)){}else{var k;for(k=j;k<i.length-1;k++){i[k]=i[k+1];}i.length=i.length-1;}};this.Contains=function(n,j){var m=false;var l;var k;for(l=0;l<i.length;l++){k=i[l];if(Cmn.AreEqual(k[n],j)){m=true;break;}}return m;};this.ContainsObj=function(m){var l=false;var k;var j;for(k=0;k<i.length;k++){j=i[k];if(Cmn.AreEqual(j,m)){l=true;break;}}return l;};this.Clear=function(){i.length=0;};this.Srt=function(l,k,j){if((k==CmnColls.SRT_TYP_ALPHANUMERIC_KY_TXT)||(k==CmnColls.SRT_TYP_DT_KY_TXT)){if((j==CmnColls.SRT_DRCT_ASCENDING_KY_TXT)||(j==CmnColls.SRT_DRCT_DESCENDING_KY_TXT)){h=j;f=l;g=k;b(i,0,i.length-1,l,k,j);}}};this.Clone=function(){var k=new CmnColls.List();var l;var j;for(var m=0;m<i.length;m++){l=i[m];j=Cmn.GetClonedObj(l);k.Add(j);}k.Srt(f,g,h);return k;};};this.HashTable=function(f){this.table=f||{};};this.HashTable.prototype.Keys=function(){return e(this.table);};this.HashTable.prototype.Vals=function(){var j=[];var h=this.Keys();for(var g=0;g<h.length;g++){var f=h[g];j.push(this.table[f]);}return j;};this.HashTable.prototype.Cnt=function(){return this.Keys().length;};this.HashTable.prototype.Add=function(f,g){if(this.table.hasOwnProperty(f)){}else{this.table[f]=g;}};this.HashTable.prototype.Itm=function(f){return this.table[f]||null;};this.HashTable.prototype.Clear=function(){this.table={};};this.HashTable.prototype.ContainsKy=function(f){return this.table[f]?true:false;};this.HashTable.prototype.ContainsVal=function(j){var h=this.Keys();for(var g=0;g<h.length;g++){var f=h[g];if(this.table[f]===j){return true;}}return false;};this.HashTable.prototype.Rem=function(f){delete (this.table[f]);};this.HashTable.prototype.Replace=function(f,g){if(this.table[f]){this.table[f]=g;}};this.HashTable.prototype.Clone=function(){var f=clonedItm=Cmn.GetClonedObj(this.table);var g=new CmnColls.HashTable(f);return g;};var e=function e(g){var f=[];for(var h in g){if(g.hasOwnProperty(h)){if(g.hasOwnProperty(h)){f.push(h);}}}return f;};this.DeprecatedHashTable=function(){var g=new CmnColls.List();this.Keys=function(){var h=new Array();for(var i=0;i<g.Cnt();i++){h[h.length]=g.Itms()[i].Ky;}return h;};this.Vals=function(){var h=new Array();for(var i=0;i<g.Cnt();i++){h[h.length]=g.Itms()[i].Val;}return h;};this.Cnt=function(){return g.Cnt();};this.Add=function(h,i){if(g.Contains(f.KY_PROPERTY_NM,h)){}else{g.Add(new f(h,i));}};this.Itm=function(h){var i=null;for(var j=0;j<g.Cnt();j++){if(g.Itms()[j].Ky==h){i=g.Itms()[j].Val;}}return i;};this.Clear=function(){g.Clear();};this.ContainsKy=function(h){return g.Contains(f.KY_PROPERTY_NM,h);};this.ContainsVal=function(h){return g.Contains(f.VAL_PROPERTY_NM,h);};this.Rem=function(i){var h=-1;for(var j=0;j<g.Cnt();j++){if(g.Itms()[j].Ky==i){h=j;}}if(h>=0){g.Rem(h);}};this.Replace=function(h,j){for(var i=0;i<g.Cnt();i++){if(g.Itms()[i].Ky==h){g.Itms()[i].Val=j;}}};this.Clone=function(){var h=new CmnColls.HashTable();var k=Cmn.GetClonedObj(g);var i;for(var j=0;j<k.Cnt();j++){i=k.Itms()[j];h.Add(i.Ky,i.Val);}return h;};var f=function(i,h){this.Ky=i;this.Val=h;};f.KY_PROPERTY_NM="Ky";f.VAL_PROPERTY_NM="Val";};};}

this.McMasterCom||(McMasterCom=GetMcMasterCom());
this.McMasterCom.Nav||(McMasterCom.Nav=new function(){this.GetTopNm=function(a){var b="_self";if("MainIFrame"==a||"ResultsIFrame"==a||"PromptIFrame"==a)b="_parent";return b};this.GetTopFrame=function(a){var b=self;if(a){var c=a.name;if("MainIFrame"==c||"ResultsIFrame"==c||"PromptIFrame"==c)b=a.parent}return b};var f=Cmn.BldSecureURL("/ident/sgnin/sgnin.aspx","",this.GetTopFrame().location.host),g=Cmn.BldSecureURL("/ident/changesignin.asp","",this.GetTopFrame().location.host);this.OrdNavMsgExtraTxt=
this.OrdNavMsgTyp="";this.LoadOrdHist=function(){McMasterCom.LoadMgr.LoadMainIFrame("/ordhist/ordhist.aspx?reloaddefltresults=true&sesnextrep="+Cmn.GetSesnExtRep());return!1};this.LoadHelp=function(a){var b=Cmn.GetSesnExtRep(),b=Cmn.BldNonSecureURL("/mcm/openhelp.asp","?browserOK=true&sesnextrep="+b+"&helpContext=",this.GetTopFrame().location.hostname);a||(a=McMaster.SesnMgr.GetStVal(McMaster.SesnMgr.StValDefs.HelpCntxtTxt.KyTxt()));"adobeInstall"==a?window.open("//www.adobe.com/products/acrobat/readstep2.html",
"adobeInstall","width=850, height=650"):"termsConditionsConfirm"==a?McMasterCom.LoadMgr.LoadMainIFrame("/help/termsconditionshelp.asp"):window.open(b+a,"helpWindow","width=990,height=635,toolbar,status,scrollbars,resizable")};this.LoadiPadHelp=function(){var a=Cmn.BldNonSecureURL("/help/iPadhelp.asp","",this.GetTopFrame().location.hostname);window.open(a,"iPadHelpWindow","width=990,height=760,toolbar,scrollbars,status,resizable")};this.LoadOrdHistHelpPage=function(){this.LoadHelp("ordhist")};this.CntctUsLnkOnClick=
function(a){McMaster.SesnMgr.SetStVal(McMaster.SesnMgr.StValDef.HelpCntxtTxt.KyTxt(),McMaster.SesnMgr.StValDefs.HelpCntxtTxt.vals.ABOUTUS);this.LoadCntctUs();return Cmn.SetWndwStat("")};this.LoadDefltResults=function(){McMasterCom.LoadMgr.LoadResultsIFrame("/order/ordnav.aspx?loademailform=true")};this.LoadErrPageInResultsIFrame=function(){McMasterCom.LoadMgr.LoadResultsIFrame("/mcm/error.aspx")};this.ExpandSideBar=function(){Shell.ExpandSecondaryContent();Cmn.TrkAct("act=show","mcmastercomNav.js")};
this.OrdLnk_Click=function(){McMasterCom.Nav.GetTopFrame(self).location.href="/#orders"};this.ResizeBldTab=function(a){};this.ResizeFindTab=function(){};this.ShowOrdNavProdMsg=function(){try{McMasterCom.Nav.OrdNavMsgTyp="ordhistprods",McMasterCom.Nav.OrdNavMsgExtraTxt="",McMasterCom.Nav.HideOrdNavMsgs(),ResultsIFrame.Cmn.GetObj("ProdMsgSpan").style.display="inline",ResultsIFrame.Cmn.GetObj("EmailFormSpan").style.display="inline",ResultsIFrame.Cmn.GetObj("cntxt").value="ordhistprods"}catch(a){}};this.ShowOrdNavOrdHistMsg=
function(){try{McMasterCom.Nav.OrdNavMsgTyp="ordhist",McMasterCom.Nav.OrdNavMsgExtraTxt="",McMasterCom.Nav.HideOrdNavMsgs(),ResultsIFrame.Cmn.GetObj("OrdHistMsgSpan").style.display="inline",ResultsIFrame.Cmn.GetObj("EmailFormSpan").style.display="inline",ResultsIFrame.Cmn.GetObj("cntxt").value="ordhist"}catch(a){}};this.ShowOrdNavOrdDtlMsg=function(a){try{McMasterCom.Nav.OrdNavMsgTyp="orddtls",McMasterCom.Nav.OrdNavMsgExtraTxt=a,McMasterCom.Nav.HideOrdNavMsgs(),ResultsIFrame.Cmn.GetObj("OrdDtlMsgPOSpan").innerHTML=
a,ResultsIFrame.Cmn.GetObj("OrdDtlMsgSpan").style.display="inline",ResultsIFrame.Cmn.GetObj("EmailFormSpan").style.display="inline",ResultsIFrame.Cmn.GetObj("cntxt").value="orddtls",ResultsIFrame.Cmn.GetObj("extratxt").value=a}catch(b){}};this.HideOrdNavMsgs=function(){try{ResultsIFrame.Cmn.GetObj("ThankYouRespSpan").style.display="none",ResultsIFrame.Cmn.GetObj("ThankYouNoRespSpan").style.display="none",ResultsIFrame.Cmn.GetObj("OrdHistMsgSpan").style.display="none",ResultsIFrame.Cmn.GetObj("OrdDtlMsgSpan").style.display=
"none",ResultsIFrame.Cmn.GetObj("ProdMsgSpan").style.display="none",ResultsIFrame.Cmn.GetObj("EmailFormSpan").style.display="none"}catch(a){}};this.ShowOrdNavMsg=function(){try{if(-1<MainIFrame.location.pathname.toLowerCase().indexOf("ordhist"))switch(McMasterCom.Nav.OrdNavMsgTyp.toLowerCase()){case "ordhistprods":McMasterCom.Nav.ShowOrdNavProdMsg();break;case "ordhist":McMasterCom.Nav.ShowOrdNavOrdHistMsg();break;case "orddtls":McMasterCom.Nav.ShowOrdNavOrdDtlMsg(McMasterCom.Nav.OrdNavMsgExtraTxt)}else McMasterCom.Nav.ShowOrdNavOrdHistMsg()}catch(a){}};
this.SwUsrs=function(a){a="/ident/vstrmisident.asp?sesnextrep="+Cmn.GetSesnExtRep()+"&context="+a+"&newfrmwk=true";McMasterCom.LoadMgr.LoadMainIFrame(a)};this.LoadEmail=function(){this.LoadCntctUs()};this.LoadCntctUs=function(){var a=new McMaster.MsgMgr.Hdr(McMaster.MsgMgr.CntxtNms.CNTCT_US),a=new McMaster.MsgMgrMsgs.CntctUsSlctd(a);McMaster.MsgMgr.PubMsg(a)};this.LoadAboutUs=function(a){a||(a="");switch(a.toLowerCase()){case "careers":McMasterCom.LoadMgr.LoadMainIFrame("/careers/careers.aspx");McMasterCom.LoadMgr.LoadResultsIFrame("/careers/CareersMenu.aspx");
break;case "catalog":McMasterCom.LoadMgr.LoadMainIFrame("/aboutus/catalogs.html");break;case "ordering":this.LoadHelp("ordering");break;default:this.LoadCntctUs()}};this.LoadResults=function(a,b){McMasterCom.LoadMgr.LoadResultsIFrame(a+"?"+b)};this.LoadSecrPrefPage=function(a){a=new McMaster.MsgMgr.Hdr(McMaster.MsgMgr.CntxtNms.SECR_PREF);a=new McMaster.MsgMgrMsgs.SecrSlctd(a);McMaster.MsgMgr.PubMsg(a)};this.LoadChgPswd=function(){var a=g+"?sesnextrep="+Cmn.GetSesnExtRep()+"&context=ships";McMasterCom.LoadMgr.LoadMainIFrame(a)};
this.LoadShipsSgnIn=function(a,b,c,e){var d="";if(a||b||c)d="&visitorinput="+encodeURIComponent(a)+"&retrieveoutcome="+encodeURIComponent(c)+"&inputtype="+encodeURIComponent(b);e&&(d="&idxdat="+e);a=f+"?sesnextrep="+Cmn.GetSesnExtRep()+d;McMasterCom.LoadMgr.LoadMainIFrame(a)};this.SgnOut=function(a){a="/ident/signout.asp?sesnextrep="+Cmn.GetSesnExtRep()+"&context="+a;McMasterCom.LoadMgr.LoadMainIFrame(a)};this.OrdHistSgnOut=function(a){a="/ident/signout.asp?sesnextrep="+Cmn.GetSesnExtRep()+"&context="+
a;McMasterCom.LoadMgr.LoadMainIFrame(a)};this.LoadBrowserNotSupported=function(a){McMasterCom.LoadMgr.LoadMainIFrame("/mcm/notsupported.aspx?isinfrmwk=true&cntxt="+a)}});


if (this.ClntCache) {
} else {
ClntCache = function(mCachedDatTxt,
mExprSecCnt,
mVstrExtRepTxt) {
var mCrteTs = new Date()
var mExprMillisecondCnt = mExprSecCnt * 1000
this.CrteTs = function() {
return mCrteTs
}
this.CachedDatTxt = function() {
return mCachedDatTxt
}
this.ExprSecCnt = function() {
return mExprSecCnt
}
this.VstrExtRepTxt = function() {
return mVstrExtRepTxt
}
this.Vldt = function(currVstrExtRepTxt) {
var rtnVldInd = false
var currTs = new Date()
if ((currVstrExtRepTxt == mVstrExtRepTxt) &&
((mCrteTs.getTime() + mExprMillisecondCnt) > currTs.getTime())) {
rtnVldInd = true
}
return rtnVldInd
}
}
}
if (this.ClntCacheColl) {
} else {
this.ClntCacheColl = function() {
var mCachedDat = new CmnColls.HashTable()
this.AddOrReplace = function(cacheKyTxt,
cachedDatTxt,
exprSecCnt,
vstrExtRepTxt) {
var clntCacheToAdd = new ClntCache(cachedDatTxt, exprSecCnt, vstrExtRepTxt)
if (mCachedDat.ContainsKy(cacheKyTxt)) {
mCachedDat.Replace(cacheKyTxt, clntCacheToAdd)
} else {
mCachedDat.Add(cacheKyTxt, clntCacheToAdd)
}
}
this.ContainsVld = function(cacheKyTxt,
currVstrExtRepTxt) {
var rtnExistsInd = true
var tempClntCache = this.GetVld(cacheKyTxt, currVstrExtRepTxt)
if (tempClntCache == null) {
rtnExistsInd = false
}
return rtnExistsInd
}
this.GetVld = function(cacheKyTxt,
currVstrExtRepTxt) {
var rtnClntCache
if (mCachedDat.ContainsKy(cacheKyTxt)) {
rtnClntCache = mCachedDat.Itm(cacheKyTxt)
if (rtnClntCache.Vldt(currVstrExtRepTxt)) {
} else {
rtnClntCache = null
}
}
return rtnClntCache
}
this.Remove = function(cacheKyTxt) {
mCachedDat.Rem(cacheKyTxt)
}
}
}


if(this.McMasterCom){}else{McMasterCom=GetMcMasterCom()}if(McMasterCom.DatCache){}else{McMasterCom.DatCache=new ClntCacheColl()}if(McMasterCom.LoadTs){}else{McMasterCom.LoadTs=new Date()};


function checkCookie(D){var C=document.cookie;var F=C.indexOf(D+"=");if(F!=-1){var E=F+D.length+1;var B=C.indexOf(";",E);if(B==-1){B=C.length}var A=C.substring(E,B);return unescape(A)}else{return""}}function setCookie(C,A){var B=C+"="+escape(A);B+=";path=/";B+=";domain=.mcmaster.com";document.cookie=B};


if (this.McMaster) {
	// The McMaster namespace is available.
} else {
    // Get a reference to the McMaster namespace.
	McMaster = GetMcMaster();
}

if (this.McMaster.MsgMgrMsgs) {
	// The Message Manager Messages have already been defined.
} else {
    //-------------------------------------------------------------------------
    // Class: MsgMgrMsgs
    // Namespace: McMaster
    // Summary: This shared class contains an assortment of non-shared classes
    //          that define the set of messages that can be published and
    //          subscribed-to for the website that includes this file.
    // Remarks: All messages used anywhere in the site should be defined within
    //          this class.
    //
    //          FORMAT OF THIS FILE:
    //          This file is broken into sections for ease of management.  Because of
    //          the nature of this file, it is sectioned a little differently than
    //          other files.
    //          
    //          1. Base classes
    //          2. Message definitions
    //              a. Loaded-type messages (e.g. ShellLoaded)
    //              b. User action messages (e.g. PartNbrSlctd)
    //          3. Message names (used by definitions)
    //              a. Loaded-type messages (e.g. ShellLoaded)
    //              b. User action messages (e.g. PartNbrSlctd)
    //          4. Create internal message array
    //          5. Public methods
    //
    //          PLEASE KEEP THIS FILE TIDY.    
    //-------------------------------------------------------------------------
	McMaster.MsgMgrMsgs = new function() {
		
	    // REGION: Constants
    	
	    var MSG_BASE_NM = "MsgBase";
		var UNION_SRCH_RSLT_ID = -1;
    	
        // END REGION: Constants
    	
	    // REGION: Message Definitions
    	
	    // ************
	    // BASE CLASSES
	    // ************	
    	
        //---------------------------------------------------------------------
        // Class: MsgBase
        // Namespace: McMaster.MsgMgrMsgs
        // Summary: This is the base class from which all messages should
        //          derive.  It contains .
        // Input:
        //  mHdr - The header to be stored within the message.
        //  mPayload - The payload to be stored within the message.
        //---------------------------------------------------------------------
        this.MsgBase = function(mHdr, mPayload) {
			
            // Public Properties
            
    		
            //-----------------------------------------------------------------
            // Summary: Read-only message header that contains information used
            //          to deliver the message to the correct subscribers.
            //-----------------------------------------------------------------
            this.MsgHdr = function() {
                return mHdr;
            };
            
            //-----------------------------------------------------------------
            // Summary: Read-only actual content of the message that contains
            //          specific data from the publisher.
            //-----------------------------------------------------------------
            this.MsgPayload = function() {
                return mPayload;
            };
            
	        // End Public Properties
			
        };
        
        // ********************
        // LOADED-TYPE MESSAGES
        // ********************
        // Keep these alphabetized.
        
        
        // Message Classes
    	
		//---------------------------------------------------------------------
		// Class: LegacyWebPartLoaded
		// Namespace: McMaster.MsgMgrMsgs
		// Summary: Defines a message to be published when any legacy web part 
		//	within the website shell loads. This message should never be
		//	used by new webparts!!
		// Input:
		//  mHdr - The header to be stored within the message.
		//  mCntnrNm - The container in which the web part loaded.  This could
		//             be an i-frame, a div, or another web part.
		//  mSiteTitlTxt - The text that the web part would like to use as the
		//                 title of the site (shown in the browser's title bar).
		//  mURLHashArgsTxt - The text that the web part would like to include
		//                    in the URL hash to the right of the site context.
		//                    This value may be empty.
		//---------------------------------------------------------------------
	    this.LegacyWebPartLoaded = function(mHdr, mCntnrNm, mSiteTitlTxt, mFriendlyUrlTxt) {
            
            this.NM = McMaster.MsgMgrMsgs.LegacyWebPartLoaded.NM;
            
            var mPayload = new McMaster.MsgMgr.Payload();
			if (mCntnrNm) {
				mPayload.CntnrNm = mCntnrNm;
			}
    		
			var mcmTop = McMasterCom.Nav.GetTopFrame(self);
			var iFrame = null;
			
			if (mcmTop[mCntnrNm]) {
				iFrame = mcmTop[mCntnrNm];				
			} else if (mcmTop["MainIFrame"][mCntnrNm]) {
				// Order pad is a child frame of the frameset in MainIFrame
				iFrame = mcmTop["MainIFrame"][mCntnrNm];
			}	
            
            // inherit from MsgBase
            this.myBase = McMaster.MsgMgrMsgs.MsgBase;
            this.myBase(mHdr, mPayload);		
			
	    }; 
    	
		//---------------------------------------------------------------------
        // Class: 	  NewHomePageInlineJSInit
        // Namespace: McMaster.MsgMgrMsgs
        // Summary:   Defines a message to be published when the home page (new shell)
		//			  begins to load. This message reports homepage start load time 
		//            recorded before script-combined Java Scripts and CSS files 
		//		      are loaded. Distinguished from OldHomePageInit Message 
		//		      which is thrown after script-combined Java Scripts and CSSs
		//		      are complete in loading. 
        // Input:
        //  mHdr - The header to be stored within the message.
		//	mStrtTime - Time at which homepage load transaction started
        //---------------------------------------------------------------------
	    this.NewHomePageInlineJSInit = function(mHdr, mStrtTime) {
            
            this.NM = McMaster.MsgMgrMsgs.NewHomePageInlineJSInit.NM;
			
            var mPayload = new McMaster.MsgMgr.Payload();
            
            if(mStrtTime) {
				mPayload.StrtTime = new Date(mStrtTime);
			}
            
            // inherit from MsgBase
            this.myBase = McMaster.MsgMgrMsgs.MsgBase;
            this.myBase(mHdr, mPayload);		
            
	    };  
		
		//---------------------------------------------------------------------
        // Class:       CtlgPageLoaded
        // Namespace:   McMaster.MsgMgrMsgs
        // Summary:     Defines a message to be published when a catalog page 
		//              finishes loading. Currently used for performance tracking 
		//              only. 
        // Input:       - mHdr: The header to be stored within the message.
		//              - mStrtTime: Time at which homepage load transaction started
        //---------------------------------------------------------------------
	    this.CtlgPageLoaded = function(mHdr) {
            
            this.NM = McMaster.MsgMgrMsgs.CtlgPageLoaded.NM;
			
            var mPayload = new McMaster.MsgMgr.Payload();
            
            // inherit from MsgBase
            this.myBase = McMaster.MsgMgrMsgs.MsgBase;
            this.myBase(mHdr, mPayload);		
            
	    };  
		
		//---------------------------------------------------------------------
        // Class:       FetchAheadDatRcvd
        // Namespace:   McMaster.MsgMgrMsgs
        // Summary:     Defines a message to be published when Fetch ahead information
		//				is received.
        // Input:       - mHdr: The header to be stored within the message.
		//				- spechSrchInp
		//				- fetchAheadGrpId: unique identifier for grouping together
		//					Fetch Ahead requests
		//				- currWebPartIdTxt: identifier of the current web part
		//					from which we are performing Fetch Ahead
        //---------------------------------------------------------------------		
		this.FetchAheadDatRcvd = function(hdr, spechSrchInp, prsnttnUsrInp, imgUsrInp, srchTermTxt, srchRsltId, fetchAheadDatTyp
								, fetchAheadGrpId, currWebPartIdTxt, prsnttnRankSeq, vstrKnownInd) {
		
            this.NM = McMaster.MsgMgrMsgs.FetchAheadDatRcvd.NM;
			
            var payload = new McMaster.MsgMgr.Payload();
            payload.PrsnttnUsrInp = prsnttnUsrInp;
			payload.SpecSrchInp = spechSrchInp;
			payload.ImgUsrInp = imgUsrInp;
			payload.SrchTxt = srchTermTxt;
			payload.FetchAheadSrchRsltID = srchRsltId;
			payload.FetchAheadDatTyp = fetchAheadDatTyp;
			payload.FetchAheadGrpId = fetchAheadGrpId;
			payload.CurrWebPartIdTxt = currWebPartIdTxt;
			payload.PrsnttnRankSeq = prsnttnRankSeq;
            payload.VstrKnownInd = vstrKnownInd;

            // inherit from MsgBase
            this.myBase = McMaster.MsgMgrMsgs.MsgBase;
            this.myBase(hdr, payload);		
            		
		};
				
	    //---------------------------------------------------------------------
        // Class: ShellLoaded
        // Namespace: McMaster.MsgMgrMsgs
        // Summary: Defines a message to be published when the website shell
        //          loads.
        // Input:
        //  mHdr - The header to be stored within the message.
        //  mURLHashArgsTxt - The text in the URL hash.  This should only be
        //                    populated when a user comes to the site via a
        //                    friendly URL.
		// mEcmrcMode - Boolean indicating whether the shell has loaded in e-commerce
		//					(ARIBA) mode.
        //---------------------------------------------------------------------
	    this.ShellLoaded = function(mHdr, mURLHashTxt, mEcmrcMode) {
    		
            this.NM = McMaster.MsgMgrMsgs.ShellLoaded.NM;
            
            var mPayload = new McMaster.MsgMgr.Payload();
            if (mURLHashTxt) {
			    mPayload.URLHashTxt = mURLHashTxt;
			}
			mPayload.EcmrcMode = mEcmrcMode;
            
            // inherit from MsgBase
            this.myBase = McMaster.MsgMgrMsgs.MsgBase;
            this.myBase(mHdr, mPayload);						
            
	    };
    	
		
	    //---------------------------------------------------------------------
        // Class: ShellInitContentLoaded
        // Namespace: McMaster.MsgMgrMsgs
        // Summary: Defines a message to be published when the initial content
		//			to be loaded in the Shell has finished loading after a user first loads
		//			the website in his browser.
        // Input:
        //  mHdr - The header to be stored within the message.
        //---------------------------------------------------------------------
	    this.ShellInitContentLoaded = function(mHdr) {
            
            this.NM = McMaster.MsgMgrMsgs.ShellInitContentLoaded.NM;
			
			// empty payload
            var mPayload = new McMaster.MsgMgr.Payload();
            
            // inherit from MsgBase
            this.myBase = McMaster.MsgMgrMsgs.MsgBase;
            this.myBase(mHdr, mPayload);						
            
	    };
		
		//---------------------------------------------------------------------
        // Class: ShellIFrameCreated
        // Namespace: McMaster.MsgMgrMsgs
        // Summary: Defines a message to be published when an iframe is created
		//		and added to the Shell.
        //  mHdr - The header to be stored within the message.
        //---------------------------------------------------------------------
	    this.ShellIFrameCreated = function(mHdr) {            
            this.NM = McMaster.MsgMgrMsgs.ShellIFrameCreated.NM;
            
            // create the payload
            var mPayload = new McMaster.MsgMgr.Payload();
			
            // inherit from MsgBase
            this.myBase = McMaster.MsgMgrMsgs.MsgBase;
            this.myBase(mHdr, mPayload);            
	    };					
    	
	    //---------------------------------------------------------------------
        // Class: WebPartFatalErrOccurred
        // Namespace: McMaster.MsgMgrMsgs
        // Summary: Defines a message to be published when a fatal error occurs in a
		//		Web Part.
        // Input:
        //  mHdr - The header to be stored within the message.
        //---------------------------------------------------------------------
	    this.WebPartFatalErrOccurred = function(mHdr) {
            
            this.NM = McMaster.MsgMgrMsgs.WebPartFatalErrOccurred.NM;
            var mPayload = new McMaster.MsgMgr.Payload();
            
            // inherit from MsgBase
            this.myBase = McMaster.MsgMgrMsgs.MsgBase;
            this.myBase(mHdr, mPayload);		
            
	    };    			
		
		//---------------------------------------------------------------------
	    // Class: WebPartLoaded
	    // Namespace: McMaster.MsgMgrMsgs
	    // Summary: Defines a message to be published when any web part within
	    //          the website shell loads.
	    // Input:
	    //  mHdr - The header to be stored within the message.
	    //  mCntnrNm - The container in which the web part loaded.  This could
	    //             be an i-frame, a div, or another web part.
	    //  mSiteTitlTxt - The text that the web part would like to use as the
	    //                 title of the site (shown in the browser's title bar).
	    //  mURLHashArgsTxt - The text that the web part would like to include
	    //                    in the URL hash to the right of the site context.
	    //                    This value may be empty.
	    //---------------------------------------------------------------------
		this.WebPartLoaded = function(mHdr, mCntnrNm, mSiteTitlTxt, mURLHashArgsTxt) {
			
	        this.NM = McMaster.MsgMgrMsgs.WebPartLoaded.NM;
	        
	        var mPayload = new McMaster.MsgMgr.Payload();
			
			if (mCntnrNm) {
				mPayload.CntnrNm = mCntnrNm;
			}
			if (mSiteTitlTxt) {
				mPayload.SiteTitlTxt = mSiteTitlTxt;
			}
			if (mURLHashArgsTxt) {
				mPayload.URLHashArgsTxt = mURLHashArgsTxt;
			}
	        
	        
	        // inherit from MsgBase
	        this.myBase = McMaster.MsgMgrMsgs.MsgBase;
	        this.myBase(mHdr, mPayload);
	        
		};
		
	    //---------------------------------------------------------------------
        // Class: WebPartUnloaded
        // Namespace: McMaster.MsgMgrMsgs
        // Summary: Defines a message to be published when any web part within
        //          the website shell unloads.
        // Input:
        //  mHdr - The header to be stored within the message.
        //  mCntnrNm - The container in which the web part loaded.  This could
        //             be an i-frame, a div, or another web part.
        //---------------------------------------------------------------------
	    this.WebPartUnloaded = function(mHdr, mCntnrNm) {
			
            this.NM = McMaster.MsgMgrMsgs.WebPartUnloaded.NM;
            
            var mPayload = new McMaster.MsgMgr.Payload();
			if (mCntnrNm) {
				mPayload.CntnrNm = mCntnrNm;
			}
            
            // inherit from MsgBase
            this.myBase = McMaster.MsgMgrMsgs.MsgBase;
            this.myBase(mHdr, mPayload);
            
	    };
		
		//---------------------------------------------------------------------
        // Class: WebPartPreUnloaded
        // Namespace: McMaster.MsgMgrMsgs
        // Summary: Defines a message to be published when any web part within
        //          the website shell pre-unloads.
        // Input:
        //  mHdr - The header to be stored within the message.
        //  mCntnrNm - The container in which the web part loaded.  This could
        //             be an i-frame, a div, or another web part.
        //---------------------------------------------------------------------
	    this.WebPartPreUnloaded = function(mHdr, mCntnrNm) {
			
            this.NM = McMaster.MsgMgrMsgs.WebPartPreUnloaded.NM;
            
            var mPayload = new McMaster.MsgMgr.Payload();
			if (mCntnrNm) {
				mPayload.CntnrNm = mCntnrNm;
			}
            
            // inherit from MsgBase
            this.myBase = McMaster.MsgMgrMsgs.MsgBase;
            this.myBase(mHdr, mPayload);
            
	    };
    	
	    // *************************
	    // USER ACTION-TYPE MESSAGES
	    // *************************	
		
		//---------------------------------------------------------------------
        // Class: AddnlContentSlctd
        // Namespace: McMaster.MsgMgrMsgs
        // Summary: Defines a message to be published when additional content is selected.
		// (ex. through the search input box.)
        // Input: 
        //  mHdr - The header to be stored within the message.
        //---------------------------------------------------------------------
		this.AddnlContentSlctd = function (mHdr) {
			this.NM = McMaster.MsgMgrMsgs.AddnlContentSlctd.NM;
			
			//inherit from message base
            this.myBase = McMaster.MsgMgrMsgs.MsgBase;
            this.myBase(mHdr);					
		};
		
		//---------------------------------------------------------------------
        // Class: AuthErrOccurred
        // Namespace: McMaster.MsgMgrMsgs
        // Summary: Represents when an HTTP authentication error has occurred.
        // Input: 
        //  hdr - The header to be stored within the message.
        //---------------------------------------------------------------------		
		this.AuthErrOccurred = function(hdr) {
			this.NM = McMaster.MsgMgrMsgs.AuthErrOccurred.NM;
			
			//inherit from message base
            this.myBase = McMaster.MsgMgrMsgs.MsgBase;
            this.myBase(hdr);			
		}
		
        //---------------------------------------------------------------------
        // Class: BldOrdSlctd
        // Namespace: McMaster.MsgMgrMsgs
        // Summary: Defines a message to be published when the Build Order tab is selected.
        // Input:
        //  mHdr - The header to be stored within the message.
        //---------------------------------------------------------------------
	    this.BldOrdSlctd = function(mHdr) {         
            this.NM = McMaster.MsgMgrMsgs.BldOrdSlctd.NM;
            
            var mPayload = new McMaster.MsgMgr.Payload();
            
            // inherit from MsgBase
            this.myBase = McMaster.MsgMgrMsgs.MsgBase;
            this.myBase(mHdr, mPayload);
	    };	    			
		
        //---------------------------------------------------------------------
        // Class: BMsSlctd
        // Namespace: McMaster.MsgMgrMsgs
        // Summary: Defines a message to be published when bookmarks is selected
        // Input:
        //  mHdr - The header to be stored within the message.
        //---------------------------------------------------------------------
	    this.BMsSlctd = function(mHdr) {
            this.NM = McMaster.MsgMgrMsgs.BMsSlctd.NM;
            
            // create the payload
            var mPayload = new McMaster.MsgMgr.Payload();
			
            // inherit from MsgBase
            this.myBase = McMaster.MsgMgrMsgs.MsgBase;
            this.myBase(mHdr, mPayload);
	    };
		
		//---------------------------------------------------------------------
        // Class: BMsSlctd
        // Namespace: McMaster.MsgMgrMsgs
        // Summary: Defines a message to be published when bookmarks is selected
        // Input:
        //  mHdr - The header to be stored within the message.
        //---------------------------------------------------------------------
	    this.BMLoginLoaded = function(mHdr) {
            this.NM = McMaster.MsgMgrMsgs.BMLoginLoaded.NM;
            
            // create the payload
            var mPayload = new McMaster.MsgMgr.Payload();
			
            // inherit from MsgBase
            this.myBase = McMaster.MsgMgrMsgs.MsgBase;
            this.myBase(mHdr, mPayload);
	    };
		
		//---------------------------------------------------------------------
        // Class: BrowserNavSlctd
        // Namespace: McMaster.MsgMgrMsgs
        // Summary: Published when the browser navigation is used,
		//		e.g. back button, forward button, or explicit
		//		selection of a previous or subsequent state from
		//		a built-in browser history menu.
        // Input:
        //  mHdr - The header to be stored within the message.
        //---------------------------------------------------------------------
	    this.BrowserNavSlctd = function(mHdr) {
            this.NM = McMaster.MsgMgrMsgs.BrowserNavSlctd.NM;
            
            // create the payload
            var mPayload = new McMaster.MsgMgr.Payload();
			
            // inherit from MsgBase
            this.myBase = McMaster.MsgMgrMsgs.MsgBase;
            this.myBase(mHdr, mPayload);
	    };			
		
        //---------------------------------------------------------------------
	    // Class: Cad2dSlctd
	    // Namespace: McMaster.MsgMgrMsgs
	    // Summary: Defines a message to be published when a 2-dimensional CAD
	    //      drawing is requested.
	    // Input:
	    //  mHdr - The header to be stored within the message.
	    //  mPartNbr - The part number requested
	    // Remarks: 
	    //  This class name must begin with a letter.  "2dCadReq" is illegal in JS.
	    //---------------------------------------------------------------------
	    this.Cad2dSlctd = function(mHdr, mPartNbr) {
			
		    this.NM = McMaster.MsgMgrMsgs.Cad2dSlctd.NM;
			
		    var mPayload = new McMaster.MsgMgr.Payload();
		    if (mPartNbr) {
		        mPayload.PartNbr = mPartNbr;									
		    }
        	
	        // inherit from MsgBase
		    this.myBase = McMaster.MsgMgrMsgs.MsgBase;
		    this.myBase(mHdr, mPayload);						
	    };		        
	    
	    
        //---------------------------------------------------------------------
	    // Class: Cad3dSlctd
	    // Namespace: McMaster.MsgMgrMsgs
	    // Summary: Defines a message to be published when a 3-dimensional CAD
	    //      drawing is requested.
	    // Input:
	    //  mHdr - The header to be stored within the message.
	    //  mPartNbr - The part number requested
	    // Remarks: 
	    //  This class name must begin with a letter.  "3dCadReq" is illegal in JS.	        
	    //---------------------------------------------------------------------
	    this.Cad3dSlctd = function(mHdr, mPartNbr) {
			
		    this.NM = McMaster.MsgMgrMsgs.Cad3dSlctd.NM;
			
		    var mPayload = new McMaster.MsgMgr.Payload();
		    if (mPartNbr) {
		        mPayload.PartNbr = mPartNbr;				
		    }
        	
	        // inherit from MsgBase
		    this.myBase = McMaster.MsgMgrMsgs.MsgBase;
		    this.myBase(mHdr, mPayload);						
	    };        	    	  			
    	
		//---------------------------------------------------------------------
		// Class: CadLnkSlctd
		// Namespace: McMaster.MsgMgrMsgs
		// Summary: Defines a message to be published when the CAD link is clicked.
		// Input:
		//  mHdr - The header to be stored within the message.
		//  mPartNbr - The part number requested
		//	mView - The type of CAD information requested (3d or 2d). 	        
		//---------------------------------------------------------------------
		this.CadLnkSlctd = function(mHdr, mPartNbrTxt, mIntrnPartNbrTxt) {
			this.NM = McMaster.MsgMgrMsgs.CadLnkSlctd.NM;
			
			var mPayload = new McMaster.MsgMgr.Payload();
			
			if(mPartNbrTxt) {
				mPayload.PartNbr = mPartNbrTxt;
			}
			
			if(mIntrnPartNbrTxt) {
				mPayload.IntrnPartNbr = mIntrnPartNbrTxt;
			}				
			
			// Inherit from MsgBase
			this.myBase = McMaster.MsgMgrMsgs.MsgBase;
			this.myBase(mHdr, mPayload);
		}
		
	    //---------------------------------------------------------------------
        // Class: CareersSlctd
        // Namespace: McMaster.MsgMgrMsgs
        // Summary: Defines a message to be published when a careers link is selected
        // Input:
        //  mHdr - The header to be stored within the message.
        //---------------------------------------------------------------------
	    this.CareersSlctd = function(mHdr,CareerCntxt) {          
            this.NM = McMaster.MsgMgrMsgs.CareersSlctd.NM;
            
            // create the payload
            var mPayload = new McMaster.MsgMgr.Payload();
			if (CareerCntxt) {
				mPayload.CareerCntxt = CareerCntxt;
		    } 	
			
            // inherit from MsgBase
            this.myBase = McMaster.MsgMgrMsgs.MsgBase;
            this.myBase(mHdr, mPayload);            
	    };
	    
	    //---------------------------------------------------------------------
        // Class: ChooseSpecsClearAllClick
        // Namespace: McMaster.MsgMgrMsgs
        // Summary: Defines a message to be published when the choose specs
        //          Clear All link has been clicked
        //  mHdr - The header to be stored within the message.
        //---------------------------------------------------------------------
	    this.ChooseSpecsClearAllClick = function(mHdr) {          
            this.NM = McMaster.MsgMgrMsgs.ChooseSpecsClearAllClick.NM;
            
            // create the payload
            var mPayload = new McMaster.MsgMgr.Payload();
			
            // inherit from MsgBase
            this.myBase = McMaster.MsgMgrMsgs.MsgBase;
            this.myBase(mHdr, mPayload);            
	    };
	    
	    //---------------------------------------------------------------------
        // Class: ChooseSpecsFiltersChg
        // Namespace: McMaster.MsgMgrMsgs
        // Summary: Defines a message to be published when the filters for
        //          choose specs have been updated
        //  mHdr - The header to be stored within the message.
        //---------------------------------------------------------------------
	    this.ChooseSpecsFiltersChg = function(mHdr) {          
            this.NM = McMaster.MsgMgrMsgs.ChooseSpecsFiltersChg.NM;
            
            // create the payload
            var mPayload = new McMaster.MsgMgr.Payload();
			
            // inherit from MsgBase
            this.myBase = McMaster.MsgMgrMsgs.MsgBase;
            this.myBase(mHdr, mPayload);            
	    };
	    
		//---------------------------------------------------------------------
		// Class: ChooseSpecsSlctd
        // Namespace: McMaster.MsgMgrMsgs
        // Summary: Defines a message to be published when Choose Specs
		//		is selected.
        //  mHdr - Message header
		//---------------------------------------------------------------------
    	this.ChooseSpecsSlctd = function(mHdr) {
			this.NM = McMaster.MsgMgrMsgs.ChooseSpecsSlctd.NM;
			
            // create the payload
            var mPayload = new McMaster.MsgMgr.Payload();
			
            // inherit from MsgBase
            this.myBase = McMaster.MsgMgrMsgs.MsgBase;
            this.myBase(mHdr, mPayload); 
		};			
		
	    //---------------------------------------------------------------------
        // Class: ChooseSpecsStatChg
        // Namespace: McMaster.MsgMgrMsgs
        // Summary: Defines a message to be published when the state of choose 
        //          has changed (expanded, collapsed, hidden) either manually
        //          or automatically
        //  mHdr - The header to be stored within the message.
        //  mAutoStatChgInd - Choose Specs 
        //---------------------------------------------------------------------
	    this.ChooseSpecsStatChg = function(mHdr, mViewSt, mAutoStatChgInd) {          
            this.NM = McMaster.MsgMgrMsgs.ChooseSpecsStatChg.NM;
            
            // create the payload
            var mPayload = new McMaster.MsgMgr.Payload();
			if (mViewSt) {
				mPayload.ChooseSpecsSt = mViewSt;
			}
            if (mAutoStatChgInd) {
		        mPayload.ChooseSpecsAutoStatChgInd = mAutoStatChgInd;				
		    }
			
            // inherit from MsgBase
            this.myBase = McMaster.MsgMgrMsgs.MsgBase;
            this.myBase(mHdr, mPayload);            
	    };
		
		//---------------------------------------------------------------------
        // Class: CollapseSecondaryContent
        // Namespace: McMaster.MsgMgrMsgs
        // Summary: Defines a message to be published when the secondary content 
        //          container has been collapsed.
        //  mHdr - The header to be stored within the message.
        //---------------------------------------------------------------------
	    this.CollapseSecondaryContent = function(mHdr) {
			
			this.NM = McMaster.MsgMgrMsgs.CollapseSecondaryContent.NM;
			
			var mPayload = new McMaster.MsgMgr.Payload();
			
			// inherit from MsgBase
            this.myBase = McMaster.MsgMgrMsgs.MsgBase;
            this.myBase(mHdr, mPayload);
			
		};
		
	    
	    //---------------------------------------------------------------------
        // Class: CntctUsSlctd
        // Namespace: McMaster.MsgMgrMsgs
        // Summary: Defines a message to be published when contact us is selected
        // Input:
        //  mHdr - The header to be stored within the message.
        //---------------------------------------------------------------------
	    this.CntctUsSlctd = function(mHdr) {            
            this.NM = McMaster.MsgMgrMsgs.CntctUsSlctd.NM;
            
            // create the payload
            var mPayload = new McMaster.MsgMgr.Payload();
			
            // inherit from MsgBase
            this.myBase = McMaster.MsgMgrMsgs.MsgBase;
            this.myBase(mHdr, mPayload);            
	    };	  


        //---------------------------------------------------------------------
        // Class: AppHelpSlctd
        // Namespace: McMaster.MsgMgrMsgs
        // Summary: Defines a message to be published when app help is selected
        // Input:
        //  mHdr - The header to be stored within the message.
        //---------------------------------------------------------------------
        this.AppHelpSlctd = function(mHdr) {            
            this.NM = McMaster.MsgMgrMsgs.AppHelpSlctd.NM;
            
            // create the payload
            var mPayload = new McMaster.MsgMgr.Payload();
            
            // inherit from MsgBase
            this.myBase = McMaster.MsgMgrMsgs.MsgBase;
            this.myBase(mHdr, mPayload);            
        };   
    	
    	
		//---------------------------------------------------------------------
        // Class: CtlgPageSlctd
        // Namespace: McMaster.MsgMgrMsgs
        // Summary: Defines a message to be published when a catalog page
		// (or range of pages) is selected.
        // Input:
        //  hdr - The header to be stored within the message.
	    //  ctlgPage - the selected page
		//  relatedCtlgPages (optional) - an array of related pages
		//  edtNbr (optional) - the edition of the catalog
        //---------------------------------------------------------------------
		this.CtlgPageSlctd = function (hdr, ctlgPageNbr, relatedCtlgPagesArr, ctlgEdtnNbr, partNbrTxt, srchTyp, refPartNbr) {
			
            this.NM = McMaster.MsgMgrMsgs.CtlgPageSlctd.NM;			
            
            var mPayload = new McMaster.MsgMgr.Payload();
			
			// Set properties of the payload
			mPayload.CtlgPageNbr = ctlgPageNbr;
			mPayload.RelatedCtlgPagesArr = relatedCtlgPagesArr;
			mPayload.CtlgEdtnNbr = ctlgEdtnNbr;							
			mPayload.PartNbr = partNbrTxt;
			mPayload.SrchTyp = srchTyp;
			
			if (refPartNbr) {
				mPayload.RefPartNbr = refPartNbr;
			}

			
            // inherit from MsgBase
            this.myBase = McMaster.MsgMgrMsgs.MsgBase;
            this.myBase(hdr, mPayload);
            
	    };
		
	    
	    //---------------------------------------------------------------------
        // Class: CurrOrdSlctd
        // Namespace: McMaster.MsgMgrMsgs
        // Summary: Defines a message to be published when Current Order 
        //			is selected
        // Input:
        //  mHdr - The header to be stored within the message.
        //---------------------------------------------------------------------
	    this.CurrOrdSlctd = function(mHdr) {
            
            this.NM = McMaster.MsgMgrMsgs.CurrOrdSlctd.NM;
            
            // create the payload
            var mPayload = new McMaster.MsgMgr.Payload();		
			
            // inherit from MsgBase
            this.myBase = McMaster.MsgMgrMsgs.MsgBase;
            this.myBase(mHdr, mPayload);
			
	    };	
		
			    	
		//---------------------------------------------------------------------
        // Class: CntnctInfoUpdted
        // Namespace: McMaster.MsgMgrMsgs
        // Summary: Defines a message to be published when the new contact 
		//          info is added from order pad
        // Input:
        //  mHdr - The header to be stored within the message.
        //---------------------------------------------------------------------
	    this.CntnctInfoUpdted = function(mHdr) {
            
            this.NM = McMaster.MsgMgrMsgs.CntnctInfoUpdted.NM;
            
            var mPayload = new McMaster.MsgMgr.Payload();
			
            // inherit from MsgBase
            this.myBase = McMaster.MsgMgrMsgs.MsgBase;
            this.myBase(mHdr, mPayload);
            
	    };
		
		
    	//---------------------------------------------------------------------
		// Class: DynamicContentSlctd
        // Namespace: McMaster.MsgMgrMsgs
        // Summary: Defines a message to be published when dynamic content
		//		(choose spec, dynamic pages)
		//		is selected.
        //  mHdr - The header to be stored within the message.
		// Remarks:
		//	The data relevant to this message is stored in Session.
		//---------------------------------------------------------------------
    	this.DynamicContentSlctd = function(mHdr) {				
			this.NM = McMaster.MsgMgrMsgs.DynamicContentSlctd.NM;
			
            // create the payload
            var mPayload = new McMaster.MsgMgr.Payload();
			
            // inherit from MsgBase
            this.myBase = McMaster.MsgMgrMsgs.MsgBase;
            this.myBase(mHdr, mPayload);    
		};
		
		//----------------------------------------------------------------------
		// Summary: This message announces that fetch ahead content was received
		//			to be used in the loading of dynamic content.
		//----------------------------------------------------------------------
		this.DynamicContentFetchAheadDatRcvd = function(hdr, srchRsltID, rsltNm, specSrchInp){
			this.NM = McMaster.MsgMgrMsgs.DynamicContentFetchAheadDatRcvd.NM;
			
			var payload = new McMaster.MsgMgr.Payload();

			if (srchRsltID){
				payload.FetchAheadSrchRsltID = srchRsltID;
			}
			
			if (rsltNm){
				payload.FetchAheadRsltNm = rsltNm;
			}
			
			if (specSrchInp){
				payload.SpecSrchInp = specSrchInp;
			}
			
			
			this.myBase = McMaster.MsgMgrMsgs.MsgBase;
			this.myBase(hdr, payload);
		}
		
    	//---------------------------------------------------------------------
		// Class: DynamicPageSlctd
        // Namespace: McMaster.MsgMgrMsgs
        // Summary: Defines a message to be published when a Dynamic Page
		//			is selected.
        //  mHdr - Message header
		//---------------------------------------------------------------------
    	this.DynamicPageSlctd = function(mHdr) {
			this.NM = McMaster.MsgMgrMsgs.DynamicPageSlctd.NM;
			
            // create the payload
            var mPayload = new McMaster.MsgMgr.Payload();
			
            // inherit from MsgBase
            this.myBase = McMaster.MsgMgrMsgs.MsgBase;
            this.myBase(mHdr, mPayload);   
		};			
		
    	//---------------------------------------------------------------------
		// Class: DynamicPageUnloaded
        // Namespace: McMaster.MsgMgrMsgs
        // Summary: Defines a message to be published when the Dynamic Page
		//			is being navigated away from
        //  mHdr - The header to be stored within the message.
		//---------------------------------------------------------------------
    	this.DynamicPageUnloaded = function(mHdr) {
			this.NM = McMaster.MsgMgrMsgs.DynamicPageUnloaded.NM;
			
            // create the payload
            var mPayload = new McMaster.MsgMgr.Payload();
			
            // inherit from MsgBase
            this.myBase = McMaster.MsgMgrMsgs.MsgBase;
            this.myBase(mHdr, mPayload);
        };
		
				
		//---------------------------------------------------------------------
		// Class: LandingPageSlctd
        // Namespace: McMaster.MsgMgrMsgs
        // Summary: Defines a message to be published when a Landing Page
		//			is selected
        //  mHdr - The header to be stored within the message.
		//---------------------------------------------------------------------
		this.LandingPageSlctd = function(mHdr) {
		    this.NM = McMaster.MsgMgrMsgs.LandingPageSlctd.NM;
		    
		    // create the payload
		    var mPayload = new McMaster.MsgMgr.Payload();
		    
		    // inherit from MsgBase
		    this.myBase = McMaster.MsgMgrMsgs.MsgBase;
		    this.myBase(mHdr, mPayload);
		};
    	
        //---------------------------------------------------------------------
        // Class: FindTabSlctd
        // Namespace: McMaster.MsgMgrMsgs
        // Summary: Defines a message to be published when 
	    //  	    FindTab.asp is selected
        // Input:
        //  mHdr - The header to be stored within the message.
		//
		// IMPORTANT NOTE:
		// This is NOT the way we want to name and create new messages.
		// Messages should be about what happened or what the user did--
		// not what the message should cause to happen.  This was done
		// for compatibility between old code and the new masthead.
		// Do NOT use this as an example.  Thank you!
		//
        //---------------------------------------------------------------------
	    this.FindTabSlctd = function(mHdr) {
            
            this.NM = McMaster.MsgMgrMsgs.FindTabSlctd.NM;
            
            var mPayload = new McMaster.MsgMgr.Payload();
            
            // inherit from MsgBase
            this.myBase = McMaster.MsgMgrMsgs.MsgBase;
            this.myBase(mHdr, mPayload);
            
	    };	       
    	
	    //---------------------------------------------------------------------
        // Class: HelpSlctd
        // Namespace: McMaster.MsgMgrMsgs
        // Summary: Defines a message to be published when a help link is selected
        // Input:
        //  mHdr - The header to be stored within the message.
	    //  mHelpTopic - the help topic that was selected
        //---------------------------------------------------------------------
	    this.HelpSlctd = function(mHdr, mHelpTopic) {
            
            this.NM = McMaster.MsgMgrMsgs.HelpSlctd.NM;
            
            var mPayload = new McMaster.MsgMgr.Payload();
			if (mHelpTopic) {
				mPayload.HelpTopic = mHelpTopic;
			}
            
            // inherit from MsgBase
            this.myBase = McMaster.MsgMgrMsgs.MsgBase;
            this.myBase(mHdr, mPayload);
	    };	    
		
	    //---------------------------------------------------------------------
        // Class: HomeSlctd
        // Namespace: McMaster.MsgMgrMsgs
        // Summary: Defines a message to be published when the McM Logo or Home 
		// link in the footer is selected.
        // Input:
        //  mHdr - The header to be stored within the message.
        //---------------------------------------------------------------------
	    this.HomeSlctd = function(mHdr, webPartObj) {
			
            this.NM = McMaster.MsgMgrMsgs.HomeSlctd.NM;
            
            // create the payload
            var mPayload = new McMaster.MsgMgr.Payload();
			if (webPartObj){
				mPayload.WebPartObj = webPartObj;
			}
			
            // inherit from MsgBase
            this.myBase = McMaster.MsgMgrMsgs.MsgBase;
            this.myBase(mHdr, mPayload);
            
	    };
	    
	    //---------------------------------------------------------------------
        // Class:     HomePageCatgMouseout
        // Namespace: McMaster.MsgMgrMsgs
        // Summary:   The message to be published when a home page category is moused out of
        // Input:     mHdr - The header to be stored within the message.
        //---------------------------------------------------------------------
	    this.HomePageCatgMouseout = function(mHdr) {
            this.NM = McMaster.MsgMgrMsgs.HomePageCatgMouseout.NM;
            
            // inherit from MsgBase
            this.myBase = McMaster.MsgMgrMsgs.MsgBase;
            this.myBase(mHdr);
	    };
	    
	    //---------------------------------------------------------------------
        // Class:     HomePageCatgMouseover
        // Namespace: McMaster.MsgMgrMsgs
        // Summary:   The message to be published when a home page category is moused over.
        // Input:     mHdr - The header to be stored within the message.
        //---------------------------------------------------------------------	    
	    this.HomePageCatgMouseover = function(mHdr) {
            this.NM = McMaster.MsgMgrMsgs.HomePageCatgMouseover.NM;
            
            // inherit from MsgBase
            this.myBase = McMaster.MsgMgrMsgs.MsgBase;
            this.myBase(mHdr);
	    };
	    
	    
	    //---------------------------------------------------------------------
        // Class:     HomePageCatgSlctd
        // Namespace: McMaster.MsgMgrMsgs
        // Summary:   The message to be published when a home page category is selected.
        // Input:     mHdr - The header to be stored within the message.
        //---------------------------------------------------------------------	    
	    this.HomePageCatgSlctd = function(mHdr, loadFrmSesnInd) {
            this.NM = McMaster.MsgMgrMsgs.HomePageCatgSlctd.NM;
            
			var mPayload = new McMaster.MsgMgr.Payload();
			mPayload.LoadFrmSesn = loadFrmSesnInd || false;
			
            // inherit from MsgBase
            this.myBase = McMaster.MsgMgrMsgs.MsgBase;
            this.myBase(mHdr, mPayload);
	    };
		
	    
	    //---------------------------------------------------------------------
        // Class:     HomePageNavCatgAlphaListSlctd
        // Namespace: McMaster.MsgMgrMsgs
        // Summary:   The message to be published when the home page navigation categories are to 
        // be in alphabetical order
        // Input:     mHdr - The header to be stored within the message.
        //---------------------------------------------------------------------	    
	    this.HomePageNavCatgAlphaListSlctd = function(mHdr) {
            this.NM = McMaster.MsgMgrMsgs.HomePageNavCatgAlphaListSlctd.NM;
            
            // inherit from MsgBase
            this.myBase = McMaster.MsgMgrMsgs.MsgBase;
            this.myBase(mHdr);
	    };
	    
	    
	    //---------------------------------------------------------------------
        // Class:     HomePageNavCatgNormalListSlctd
        // Namespace: McMaster.MsgMgrMsgs
        // Summary:   The message to be published when the home page navigation categories are to 
        // be in natural order
        // Input:     mHdr - The header to be stored within the message.
        //---------------------------------------------------------------------	    
	    this.HomePageNavCatgNormalListSlctd = function(mHdr) {
            this.NM = McMaster.MsgMgrMsgs.HomePageNavCatgNormalListSlctd.NM;
            
            // inherit from MsgBase
            this.myBase = McMaster.MsgMgrMsgs.MsgBase;
            this.myBase(mHdr);
	    };
		
		
		//---------------------------------------------------------------------
        // Class: ImgClicked
        // Namespace: McMaster.MsgMgrMsgs
        // Summary:   Defines a message to be published when an image has been  
		//            selected.
        // Input:     mHdr - The header to be stored within the message.
        //---------------------------------------------------------------------
		this.ImgClicked = function(mHdr) {
			
			this.NM = McMaster.MsgMgrMsgs.ImgClicked.NM;	
			
			// inherit from MsgBase
			this.myBase = McMaster.MsgMgrMsgs.MsgBase;
			this.myBase(mHdr);
	     };

		    
	    //---------------------------------------------------------------------
        // Class: ImplicitSpecSlctd
        // Namespace: McMaster.MsgMgrMsgs
        // Summary: Defines a message to be published when an implicit spec 
		// from choose specs is selected.
        // Input:
        // mHdr - The header to be stored within the message.
        //---------------------------------------------------------------------
	    this.ImplicitSpecSlctd = function(mHdr) {
			
            this.NM = McMaster.MsgMgrMsgs.ImplicitSpecSlctd.NM;	
			
			// Do not update <title>; this is done onLoad												
            var mPayload = new McMaster.MsgMgr.Payload();
			
            // inherit from MsgBase
            this.myBase = McMaster.MsgMgrMsgs.MsgBase;
            this.myBase(mHdr, mPayload);
        };
	    
		
   		//---------------------------------------------------------------------
        // Class: IncmplOrdsChged
        // Namespace: McMaster.MsgMgrMsgs
        // Summary: Defines a message to be published when the incomplete
        //			orders message may have changed.  (Either the current
		//			order has a different line count, a different order
		//			was selected, or the visitor changed.)
        // Input:
        //  mHdr - The header to be stored within the message.
		//
		// IMPORTANT NOTE:
		// This is NOT the way we want to name and create new messages
		// Messages should be about what happened or what the user did--
		// not what the message should cause to happen.  This was done
		// for compatibility between old code and the new masthead.
		// Do NOT use this as an example.  Thank you!
		//
        //---------------------------------------------------------------------
	    this.IncmplOrdsChged = function(mHdr) {
            
            this.NM = McMaster.MsgMgrMsgs.IncmplOrdsChged.NM;
            
            var mPayload = new McMaster.MsgMgr.Payload();
            
            // inherit from MsgBase
            this.myBase = McMaster.MsgMgrMsgs.MsgBase;
            this.myBase(mHdr, mPayload);
            
	    };		

	    //---------------------------------------------------------------------
        // Class: InlnOrdBxClosed
        // Namespace: McMaster.MsgMgrMsgs
        // Summary: Defines a message to be published when the inline ordering 
		// 			box is closed (close link or clicking the part number again)
        // Input:
        // mHdr - The header to be stored within the message.
        //---------------------------------------------------------------------
	    this.InlnOrdBxClosed = function(mHdr) {
			
            this.NM = McMaster.MsgMgrMsgs.InlnOrdBxClosed.NM;	
			
            var mPayload = new McMaster.MsgMgr.Payload();
			
            // inherit from MsgBase
            this.myBase = McMaster.MsgMgrMsgs.MsgBase;
            this.myBase(mHdr, mPayload); 			
        };			
		
		//---------------------------------------------------------------------
		// Class: InlnOrdBxReopened
		// Namespace: McMaster.MsgMgrMsgs
		// Summary: Defines a message to be published when the inline ordering 
		// 			box is reopened (from session or back button)
		// Input:
		// mHdr - The header to be stored within the message.
		//---------------------------------------------------------------------
		this.InlnOrdBxReopened = function (mHdr) {
			
			this.NM = McMaster.MsgMgrMsgs.InlnOrdBxReopened.NM;
			var mPayload = new McMaster.MsgMgr.Payload();
			// inherit from MsgBase
			this.myBase = McMaster.MsgMgrMsgs.MsgBase;
			this.myBase(mHdr, mPayload);
		};

		//---------------------------------------------------------------------
		// Class: IntermediatePageLoaded
		// Namespace: McMaster.MsgMgrMsgs
		// Summary: Defines a message to be published when a landing page loads
		// Input: 
		// mHdr - The header to be stored within the message.
		//---------------------------------------------------------------------
		this.IntermediatePageLoaded = function (mHdr) {
			this.NM = McMaster.MsgMgrMsgs.IntermediatePageLoaded.NM;
		
			//declare the payload
			var mPayload = new McMaster.MsgMgr.Payload();
											
			//inherit from message base
			this.myBase = McMaster.MsgMgrMsgs.MsgBase;
			this.myBase(mHdr, mPayload);
		};	        		
	    
	    //---------------------------------------------------------------------
        // Class: IntermediatePageSlctd
        // Namespace: McMaster.MsgMgrMsgs
        // Summary: Defines a message to be published when a search result is 
        //          selected that leads to an intermediate page.
        // Input: 
        // mHdr - The header to be stored within the message.
        //---------------------------------------------------------------------
		this.IntermediatePageSlctd = function (mHdr, mSrchTxt) {
			this.NM = McMaster.MsgMgrMsgs.IntermediatePageSlctd.NM;
			
			//declare the payload
			var mPayload = new McMaster.MsgMgr.Payload();
			
            if (mSrchTxt) {
	            mPayload.SrchTxt = mSrchTxt;
	        }
			
			//inherit from message base
            this.myBase = McMaster.MsgMgrMsgs.MsgBase;
            this.myBase(mHdr, mPayload);
		};
    	
	    //---------------------------------------------------------------------
	    // Class: KyBoardNavKyPressed
	    // Namespace: McMaster.MsgMgrMsgs
	    // Summary: Defines a message to be published when a keyboard
	    //         navigation key is pressed
	    // Input:
	    //  mHdr - The header to be stored within the message.
	    //  mKyCd - The key code.
	    //  mSrchTxt - The search text.
	    // Remarks: Info object has type (catalog page, info), 
	    //          search result id and type specific info.
	    //---------------------------------------------------------------------
	    this.KyBoardNavKyPressed = function(mHdr, mKyCd) {
			
	        this.NM = McMaster.MsgMgrMsgs.KyBoardNavKyPressed.NM;
			
	        var mPayload = new McMaster.MsgMgr.Payload();
        	
            if (mKyCd) {
	            mPayload.KyCd = mKyCd;
	        }
			
	        // inherit from MsgBase
	        this.myBase = McMaster.MsgMgrMsgs.MsgBase;
	        this.myBase(mHdr, mPayload);						
			
	    };	    
		
		//---------------------------------------------------------------------
        // Class: MainContentCntnrResized
        // Namespace: McMaster.MsgMgrMsgs
        // Summary: Defines a message to be published when the main content 
        //          container has been resized.
        //  mHdr - The header to be stored within the message.
        //---------------------------------------------------------------------
	    this.MainContentCntnrResized = function(mHdr) {            
            this.NM = McMaster.MsgMgrMsgs.MainContentCntnrResized.NM;
            
            // create the payload
            var mPayload = new McMaster.MsgMgr.Payload();
			
            // inherit from MsgBase
            this.myBase = McMaster.MsgMgrMsgs.MsgBase;
            this.myBase(mHdr, mPayload);            
	    };
		
	    //---------------------------------------------------------------------
        // Class: NeedHelpSlctd
        // Namespace: McMaster.MsgMgrMsgs
        // Summary: Defines a message to be published when Need Help link 
		//	    is selected
        // Input:
        //  mHdr - The header to be stored within the message.
        //---------------------------------------------------------------------
	    this.NeedHelpSlctd = function(mHdr) {
			
            this.NM = McMaster.MsgMgrMsgs.NeedHelpSlctd.NM;
            
            var mPayload = new McMaster.MsgMgr.Payload();
			
            // inherit from MsgBase
            this.myBase = McMaster.MsgMgrMsgs.MsgBase;
            this.myBase(mHdr, mPayload);      
			
	    };   
		
		//---------------------------------------------------------------------
        // Class: OrdDeleted
        // Namespace: McMaster.MsgMgrMsgs
        // Summary: Defines a message to be published when a customer deletes
        //			their order.
        // Input:
        //  mHdr - The header to be stored within the message.
        //---------------------------------------------------------------------
		this.OrdDeleted = function(mHdr) {
    		this.NM = McMaster.MsgMgrMsgs.OrdDeleted.NM;
            
            // create the payload
            var mPayload = new McMaster.MsgMgr.Payload();		
			
            // inherit from MsgBase
            this.myBase = McMaster.MsgMgrMsgs.MsgBase;
            this.myBase(mHdr, mPayload);
    	};
		
		//---------------------------------------------------------------------
        // Class: OrdForwarded
        // Namespace: McMaster.MsgMgrMsgs
        // Summary: Defines a message to be published when a customer forwards
        //			their order.
        // Input:
        //  mHdr - The header to be stored within the message.
        //---------------------------------------------------------------------
		this.OrdForwarded = function(mHdr) {
    		this.NM = McMaster.MsgMgrMsgs.OrdForwarded.NM;
            
            // create the payload
            var mPayload = new McMaster.MsgMgr.Payload();		
			
            // inherit from MsgBase
            this.myBase = McMaster.MsgMgrMsgs.MsgBase;
            this.myBase(mHdr, mPayload);
    	};
		
		//---------------------------------------------------------------------
        // Class: OrdHistSlctd
        // Namespace: McMaster.MsgMgrMsgs
        // Summary: Defines a message to be published when Order History is selected
        // Input:
        //  mHdr - The header to be stored within the message.
        //---------------------------------------------------------------------
	    this.OrdHistLoginLoaded = function(mHdr) {
            
            this.NM = McMaster.MsgMgrMsgs.OrdHistLoginLoaded.NM;
            
            // create the payload
            var mPayload = new McMaster.MsgMgr.Payload();
			
            // inherit from MsgBase
            this.myBase = McMaster.MsgMgrMsgs.MsgBase;
            this.myBase(mHdr, mPayload);
            
	    };
		
		//---------------------------------------------------------------------
        // Class: OrdHistSlctd
        // Namespace: McMaster.MsgMgrMsgs
        // Summary: Defines a message to be published when Order History is selected
        // Input:
        //  mHdr - The header to be stored within the message.
        //---------------------------------------------------------------------
	    this.OrdHistSlctd = function(mHdr) {
            
            this.NM = McMaster.MsgMgrMsgs.OrdHistSlctd.NM;
            
            // create the payload
            var mPayload = new McMaster.MsgMgr.Payload();
			
            // inherit from MsgBase
            this.myBase = McMaster.MsgMgrMsgs.MsgBase;
            this.myBase(mHdr, mPayload);
            
	    };
    	
    	//---------------------------------------------------------------------
        // Class: OrdLnsUpdated
        // Namespace: McMaster.MsgMgrMsgs
        // Summary: Defines a message to be published when a customer updates
        //			the lines on their order.
        // Input:
        //  mHdr - The header to be stored within the message.
        //---------------------------------------------------------------------
    	this.OrdLnsUpdated = function(mHdr) {
    		this.NM = McMaster.MsgMgrMsgs.OrdLnsUpdated.NM;
            
            // create the payload
            var mPayload = new McMaster.MsgMgr.Payload();		
			
            // inherit from MsgBase
            this.myBase = McMaster.MsgMgrMsgs.MsgBase;
            this.myBase(mHdr, mPayload);
    	};
    	
    	//---------------------------------------------------------------------
        // Class: OrdPlcd
        // Namespace: McMaster.MsgMgrMsgs
        // Summary: Defines a message to be published when a customer places
        //			their order.
        // Input:
        //  mHdr - The header to be stored within the message.
        //---------------------------------------------------------------------
    	this.OrdPlcd = function(mHdr) {
    		this.NM = McMaster.MsgMgrMsgs.OrdPlcd.NM;
            
            // create the payload
            var mPayload = new McMaster.MsgMgr.Payload();		
			
            // inherit from MsgBase
            this.myBase = McMaster.MsgMgrMsgs.MsgBase;
            this.myBase(mHdr, mPayload);
    	};
    	
    	//---------------------------------------------------------------------
        // Class: OrdSaved
        // Namespace: McMaster.MsgMgrMsgs
        // Summary: Defines a message to be published when a customer saves
        //			their order.
        // Input:
        //  mHdr - The header to be stored within the message.
        //---------------------------------------------------------------------
    	this.OrdSaved = function(mHdr) {
    		this.NM = McMaster.MsgMgrMsgs.OrdSaved.NM;
            
            // create the payload
            var mPayload = new McMaster.MsgMgr.Payload();		
			
            // inherit from MsgBase
            this.myBase = McMaster.MsgMgrMsgs.MsgBase;
            this.myBase(mHdr, mPayload);
    	};
    	
		//---------------------------------------------------------------------
		// Class: PageResizeReq
		// Namespace: McMaster.MsgMgrMsgs
		// Summary: Defines a message to be published when for page to resize itself
		// Input:
		//  mHdr - The header to be stored within the message.
		//---------------------------------------------------------------------
		this.PageResizeReq = function(mHdr) {
			
			this.NM = McMaster.MsgMgrMsgs.PageResizeReq.NM;
			
			// create the payload
			var mPayload = new McMaster.MsgMgr.Payload();		
			
			// inherit from MsgBase
			this.myBase = McMaster.MsgMgrMsgs.MsgBase;
			this.myBase(mHdr, mPayload);
			
		};	
    	
	    //---------------------------------------------------------------------
        // Class: PartNbrSlctd
        // Namespace: McMaster.MsgMgrMsgs
        // Summary: Defines a message to be published when a part number is 
        //          selected from a presentation.
        // Input:
        //  mHdr - The header to be stored within the message.
	    //  mPartNbr - the part number that was selected
		//  mAutoSlctdInd - Indicates whether the part number is auto selected
        //---------------------------------------------------------------------
	    this.PartNbrSlctd = function(mHdr, mPartNbr, mAutoSlctdInd, mRefPartNbrTxt) {
            
            // Declarations
            
            //-----------------------------------------------------------------
            // Summary: The name of the message available within an instance
            //          of the class.
            //-----------------------------------------------------------------
            this.NM = McMaster.MsgMgrMsgs.PartNbrSlctd.NM;
            
            // End Declarations
			
            // create the payload
            var mPayload = new McMaster.MsgMgr.Payload();
			
			if (mPartNbr) {
				mPayload.PartNbr = mPartNbr;    
			}
			
			if (mAutoSlctdInd){
				mPayload.AutoSlctdInd = mAutoSlctdInd;
			}else{
				//default value is false
				mPayload.AutoSlctdInd = false;
			}
			
			if (mRefPartNbrTxt) {
				mPayload.RefPartNbr = mRefPartNbrTxt;
			}
			
            // inherit from MsgBase
            this.myBase = McMaster.MsgMgrMsgs.MsgBase;
            this.myBase(mHdr, mPayload);
	    };
        
        //---------------------------------------------------------------------
        // Class: PartNbrSrchd
        // Namespace: McMaster.MsgMgrMsgs
        // Summary: Defines a message to be published when a part number is seached
        // Input:
        //  mHdr - The header to be stored within the message.
	    //  mPartNbr - the part number that was searched
		//  mRefPartNbr - if the part number searched is a related item, this is 
		//  the main part number of the item presentation
        //---------------------------------------------------------------------
		this.PartNbrSrchd = function(mHdr, mPartNbrTxt, mRefPartNbrTxt){
			this.NM = McMaster.MsgMgrMsgs.PartNbrSrchd.NM;

			// create the payload
            var mPayload = new McMaster.MsgMgr.Payload();
			if (mPartNbrTxt) {
				mPayload.PartNbr = mPartNbrTxt;    
			}
			if (mRefPartNbrTxt) {
				mPayload.RefPartNbr = mRefPartNbrTxt;
			}
		
		// inherit from MsgBase
            this.myBase = McMaster.MsgMgrMsgs.MsgBase;
            this.myBase(mHdr, mPayload);
		};
		
		//---------------------------------------------------------------------
        // Class: ProdDtlLnkClicked
        // Namespace: McMaster.MsgMgrMsgs
        // Summary: Defines a message to be published when product detail link is clicked
        // Input:
        //  mHdr - The header to be stored within the message.
		//  mPartNbrTxt - part number
		//  mSpecUsrInp - user input for easy to order attribute
		//  mAttrCompItmIds - attribute component item ids
		//  mAttrNms - old style attribute names
		//  mAttrVals - old style attribute values
        //---------------------------------------------------------------------
		this.ProdDtlLnkClicked = function(mHdr, mPartNbrTxt, mSpecUsrInp, mAttrCompItmIds, mAttrNms, mAttrVals, mInpBxVal, mQtyInpBxVal){
			this.NM = McMaster.MsgMgrMsgs.ProdDtlLnkClicked.NM;

			// create the payload
            var mPayload = new McMaster.MsgMgr.Payload();
			
			mPayload.PartNbr = mPartNbrTxt;   
			mPayload.AttrCompIds = mAttrCompItmIds;
			mPayload.SpecSrchInp = mSpecUsrInp;
			mPayload.AttrNmsTxt = mAttrNms;
			mPayload.AttrValsTxt = mAttrVals;
			mPayload.InpBxVal = mInpBxVal;
			mPayload.QtyInpBxVal = mQtyInpBxVal;

			// inherit from MsgBase
            this.myBase = McMaster.MsgMgrMsgs.MsgBase;
            this.myBase(mHdr, mPayload);
		};
		
        //---------------------------------------------------------------------
        // Class:  ParentSlctd
        // Namespace: McMaster.MsgMgrMsgs
        // Summary: Defines a message to be published when a parent 
        //                    selected
        // Input:
        //  mHdr - The header to be stored within the message.
	    //  mPartNbr - the part number that was selected
        //---------------------------------------------------------------------
	    this.ParentSlctd = function(mHdr, mPartNbr) {
            
            // Declarations
            
            //-----------------------------------------------------------------
            // Summary: The name of the message available within an instance
            //          of the class.
            //-----------------------------------------------------------------
            this.NM = McMaster.MsgMgrMsgs.ParentSlctd.NM;
            
            // End Declarations
			
            // create the payload
            var mPayload = new McMaster.MsgMgr.Payload();
			
			if (mPartNbr) {
				mPayload.PartNbr = mPartNbr;    
			}
			
            // inherit from MsgBase
            this.myBase = McMaster.MsgMgrMsgs.MsgBase;
            this.myBase(mHdr, mPayload);
	    };
		
        //---------------------------------------------------------------------
        // Class: UnPubPartNbrSlctd
        // Namespace: McMaster.MsgMgrMsgs
        // Summary: Defines a message to be published when an unpublished part number is 
        //          selected
        // Input:
        //  mHdr - The header to be stored within the message.
	    //  mPartNbr - the part number that was selected
        //---------------------------------------------------------------------
        this.UnPubPartNbrSlctd = function(mHdr, mPartNbr) {
        
            this.NM = McMaster.MsgMgrMsgs.UnPubPartNbrSlctd.NM;
			
            // create the payload
            var mPayload = new McMaster.MsgMgr.Payload();
			
			if (mPartNbr) {
				mPayload.PartNbr = mPartNbr;    
			}
			
            // inherit from MsgBase
            this.myBase = McMaster.MsgMgrMsgs.MsgBase;
            this.myBase(mHdr, mPayload);
	    };

        //---------------------------------------------------------------------
        // Class: UnPubParentSlctd
        // Namespace: McMaster.MsgMgrMsgs
        // Summary: Defines a message to be published when an unpublished parent is 
        //                    selected
        // Input:
        //  mHdr - The header to be stored within the message.
	    //  mPartNbr - the part number that was selected
        //---------------------------------------------------------------------
        this.UnPubParentSlctd = function(mHdr, mPartNbr) {
        
            this.NM = McMaster.MsgMgrMsgs.UnPubParentSlctd.NM;
			
            // create the payload
            var mPayload = new McMaster.MsgMgr.Payload();
			
			if (mPartNbr) {
				mPayload.PartNbr = mPartNbr;    
			}
			
            // inherit from MsgBase
            this.myBase = McMaster.MsgMgrMsgs.MsgBase;
            this.myBase(mHdr, mPayload);
	    };
        
        //---------------------------------------------------------------------
        // Class: DelPartNbrSlctd
        // Namespace: McMaster.MsgMgrMsgs
        // Summary: Defines a message to be published when a deleted part number is 
        //          selected
        // Input:
        //  mHdr - The header to be stored within the message.
	    //  mPartNbr - the part number that was selected
        //---------------------------------------------------------------------
        this.DelPartNbrSlctd = function(mHdr, mPartNbr) {
        
            this.NM = McMaster.MsgMgrMsgs.DelPartNbrSlctd.NM;
			
            // create the payload
            var mPayload = new McMaster.MsgMgr.Payload();
			
			if (mPartNbr) {
				mPayload.PartNbr = mPartNbr;    
			}
			
            // inherit from MsgBase
            this.myBase = McMaster.MsgMgrMsgs.MsgBase;
            this.myBase(mHdr, mPayload);
	    };
        
        //---------------------------------------------------------------------
        // Class: DelParentSlctd
        // Namespace: McMaster.MsgMgrMsgs
        // Summary: Defines a message to be published when a deleted parent is 
        //          selected
        // Input:
        //  mHdr - The header to be stored within the message.
	    //  mPartNbr - the part number that was selected
        //---------------------------------------------------------------------
        this.DelParentSlctd = function(mHdr, mPartNbr) {
        
            this.NM = McMaster.MsgMgrMsgs.DelParentSlctd.NM;
			
            // create the payload
            var mPayload = new McMaster.MsgMgr.Payload();
			
			if (mPartNbr) {
				mPayload.PartNbr = mPartNbr;    
			}
			
            // inherit from MsgBase
            this.myBase = McMaster.MsgMgrMsgs.MsgBase;
            this.myBase(mHdr, mPayload);
	    };        
        
        //---------------------------------------------------------------------
        // Class: DiscntndPartNbrSlctd
        // Namespace: McMaster.MsgMgrMsgs
        // Summary: Defines a message to be published when a discontinued  
        //                    part number with a current parent  is selected
        // Input:
        //  mHdr - The header to be stored within the message.
	    //  mPartNbr - the part number that was selected
        //---------------------------------------------------------------------
        this.DiscntndPartNbrSlctd = function(mHdr, mPartNbr) {
        
            this.NM = McMaster.MsgMgrMsgs.DiscntndPartNbrSlctd.NM;
			
            // create the payload
            var mPayload = new McMaster.MsgMgr.Payload();
			
			if (mPartNbr) {
				mPayload.PartNbr = mPartNbr;    
			}
			
            // inherit from MsgBase
            this.myBase = McMaster.MsgMgrMsgs.MsgBase;
            this.myBase(mHdr, mPayload);
	    };        
        
        //---------------------------------------------------------------------
        // Class: DiscntndPartNbrWthDelParentSlctd
        // Namespace: McMaster.MsgMgrMsgs
        // Summary: Defines a message to be published when a discontinued  
        //                    part number with a deleted parent  is selected
        // Input:
        //  mHdr - The header to be stored within the message.
	    //  mPartNbr - the part number that was selected
        //---------------------------------------------------------------------
        this.DiscntndPartNbrWthDelParentSlctd = function(mHdr, mPartNbr) {
        
            this.NM = McMaster.MsgMgrMsgs.DiscntndPartNbrWthDelParentSlctd.NM;
			
            // create the payload
            var mPayload = new McMaster.MsgMgr.Payload();
			
			if (mPartNbr) {
				mPayload.PartNbr = mPartNbr;    
			}
			
            // inherit from MsgBase
            this.myBase = McMaster.MsgMgrMsgs.MsgBase;
            this.myBase(mHdr, mPayload);
	    };        
        
        //---------------------------------------------------------------------
        // Class: NonCtlgPartNbrSlctd
        // Namespace: McMaster.MsgMgrMsgs
        // Summary: Defines a message to be published when a non-catalog 
        //                    part number is selected
        // Input:
        //  mHdr - The header to be stored within the message.
	    //  mPartNbr - the part number that was selected
        //---------------------------------------------------------------------
        this.NonCtlgPartNbrSlctd = function(mHdr, mPartNbr) {
        
            this.NM = McMaster.MsgMgrMsgs.NonCtlgPartNbrSlctd.NM;
			
            // create the payload
            var mPayload = new McMaster.MsgMgr.Payload();
			
			if (mPartNbr) {
				mPayload.PartNbr = mPartNbr;    
			}
			
            // inherit from MsgBase
            this.myBase = McMaster.MsgMgrMsgs.MsgBase;
            this.myBase(mHdr, mPayload);
	    };        
        
        //---------------------------------------------------------------------
        // Class: UnknownPartNbrSlctd
        // Namespace: McMaster.MsgMgrMsgs
        // Summary: Defines a message to be published when an part number we
        //                    don't recognize is selected
        // Input:
        //  mHdr - The header to be stored within the message.
	    //  mPartNbr - the part number that was selected
        //---------------------------------------------------------------------
        this.UnknownPartNbrSlctd = function(mHdr, mPartNbr) {
        
            this.NM = McMaster.MsgMgrMsgs.UnknownPartNbrSlctd.NM;
			
            // create the payload
            var mPayload = new McMaster.MsgMgr.Payload();
			
			if (mPartNbr) {
				mPayload.PartNbr = mPartNbr;    
			}
			
            // inherit from MsgBase
            this.myBase = McMaster.MsgMgrMsgs.MsgBase;
            this.myBase(mHdr, mPayload);
	    };        
        
        //---------------------------------------------------------------------
        // Class: UnknownParentSlctd
        // Namespace: McMaster.MsgMgrMsgs
        // Summary: Defines a message to be published when an part number we
        //                    don't recognize is selected
        // Input:
        //  mHdr - The header to be stored within the message.
	    //  mPartNbr - the part number that was selected
        //---------------------------------------------------------------------
        this.UnknownParentSlctd = function(mHdr, mPartNbr) {
        
            this.NM = McMaster.MsgMgrMsgs.UnknownParentSlctd.NM;
			
            // create the payload
            var mPayload = new McMaster.MsgMgr.Payload();
			
			if (mPartNbr) {
				mPayload.PartNbr = mPartNbr;    
			}
			
            // inherit from MsgBase
            this.myBase = McMaster.MsgMgrMsgs.MsgBase;
            this.myBase(mHdr, mPayload);
	    };        
        
        //---------------------------------------------------------------------
        // Class:  PartNbrNotFoundOnPg
        // Namespace: McMaster.MsgMgrMsgs
        // Summary: Defines a message to be published when a part number is 
        //          selected from a presentation.
        // Input:
        //  mHdr - The header to be stored within the message.
	    //  mPartNbr - the part number that was selected
        //---------------------------------------------------------------------
        this.PartNbrNotFoundOnPg = function(mHdr, mPartNbr) {
        
            // Declarations
            
            //-----------------------------------------------------------------
            // Summary: The name of the message available within an instance
            //          of the class.
            //-----------------------------------------------------------------
            this.NM = McMaster.MsgMgrMsgs.PartNbrNotFoundOnPg.NM;
            
            // End Declarations
            
            //create the payload
            var mPayload = new McMaster.MsgMgr.Payload();
            
            if (mPartNbr) {
                mPayload.PartNbr = mPartNbr;
            }
            
            // inherit from MsgBase
            this.myBase = McMaster.MsgMgrMsgs.MsgBase;
            this.myBase(mHdr, mPayload);
        };
        
		//---------------------------------------------------------------------
        // Class: POTxtChged
        // Namespace: McMaster.MsgMgrMsgs
        // Summary: Defines a message to be published when a Purchase Order Text is 
        //          changed on the order pad.
        // Input:
        //  mHdr - The header to be stored within the message.
        //---------------------------------------------------------------------
		this.POTxtChged = function(mHdr){
			this.NM = McMaster.MsgMgrMsgs.POTxtChged.NM;
			
			// create the payload
            var mPayload = new McMaster.MsgMgr.Payload();		
			
            // inherit from MsgBase
            this.myBase = McMaster.MsgMgrMsgs.MsgBase;
            this.myBase(mHdr, mPayload);
		};
		
		
	    //---------------------------------------------------------------------
        // Class: PSrchSlctd
        // Namespace: McMaster.MsgMgrMsgs
        // Summary: Defines a message to be published when a p-search
		//		page is selected.
		//
        // Input:
        //  mHdr - The header to be stored within the message.
	    //  dscIds - Array of p-search description IDs
		//	srchTxt - the search text that originally prompted the loading
		//		of p-search
        //---------------------------------------------------------------------
	    this.PSrchSlctd = function(mHdr, dscIds, srchTxt) {
            
            this.NM = McMaster.MsgMgrMsgs.PSrchSlctd.NM;
            
            var mPayload = new McMaster.MsgMgr.Payload();
			mPayload.PSrchDscIdsArr = dscIds;     
			mPayload.SrchTxt = srchTxt;
            
            // inherit from MsgBase
            this.myBase = McMaster.MsgMgrMsgs.MsgBase;
            this.myBase(mHdr, mPayload);				
			
	    };
		
		
	    //---------------------------------------------------------------------
        // Class: PSrchFmlySlctd
        // Namespace: McMaster.MsgMgrMsgs
        // Summary: Defines a message to be published when a product
		//		family is selected from p-search.
		//
		//		Occurs when e.g. a search for "screws" is performed
		//		and "cap screws" is selected from the landing page.
        // Input:
        //  mHdr - The header to be stored within the message.
	    //  mFmlyTxt - the name of the product family (e.g. "cap screws")
        //---------------------------------------------------------------------
	    this.PSrchFmlySlctd = function(mHdr, mFmlyTxt) {
            
            this.NM = McMaster.MsgMgrMsgs.PSrchFmlySlctd.NM;
            
            var mPayload = new McMaster.MsgMgr.Payload();
			
			if (mFmlyTxt) {
				mPayload.FmlyTxt = mFmlyTxt;          										
            }
            
            // inherit from MsgBase
            this.myBase = McMaster.MsgMgrMsgs.MsgBase;
            this.myBase(mHdr, mPayload);				
			
	    };
		
		//--------------------------------------------------------------
		// Summary: This message announces the pre-fetch data relevant
		//			to product pages was received.
		//--------------------------------------------------------------
		this.ProdPageFetchAheadDatRcvd = function(hdr, srchRsltId, rsltNm, specSrchInp){
			this.NM = McMaster.MsgMgrMsgs.ProdPageFetchAheadDatRcvd.NM;
			
			var payload = new McMaster.MsgMgr.Payload();
			if (srchRsltId){
				payload.FetchAheadSrchRsltID = srchRsltId;
			}
			
			if (rsltNm){
				payload.FetchAheadRsltNm = rsltNm;
			}
			
			if(specSrchInp){
				payload.SpecSrchInp = specSrchInp;
			}
			
			this.myBase = McMaster.MsgMgrMsgs.MsgBase;
			this.myBase(hdr, payload);
		};

	    //---------------------------------------------------------------------
	    // Class: ProdPageSlctd
	    // Namespace: McMaster.MsgMgrMsgs
	    // Summary: Defines a message to be published when product page is requested.
	    //  mHdr - The header to be stored within the message.
	    //---------------------------------------------------------------------
	    this.ProdPageSlctd = function(mHdr, grpUsrInp) {
	        this.NM = McMaster.MsgMgrMsgs.ProdPageSlctd.NM;

	        // create the payload
	        var mPayload = new McMaster.MsgMgr.Payload();
			
			if (grpUsrInp) {
				mPayload.GrpUsrInp = grpUsrInp;
			}

	        // inherit from MsgBase
	        this.myBase = McMaster.MsgMgrMsgs.MsgBase;
	        this.myBase(mHdr, mPayload);
	    };

	    //---------------------------------------------------------------------
	    // Class: ProdPageUnloaded
	    // Namespace: McMaster.MsgMgrMsgs
	    // Summary: Defines a message to be published when the Product page 
	    //			is being navigated away from, such as when something else occupies Product Page container
	    //  mHdr - The header to be stored within the message.
	    //---------------------------------------------------------------------
	    this.ProdPageUnloaded = function(mHdr) {
	        this.NM = McMaster.MsgMgrMsgs.ProdPageUnloaded.NM;

	        // create the payload
	        var mPayload = new McMaster.MsgMgr.Payload();

	        // inherit from MsgBase
	        this.myBase = McMaster.MsgMgrMsgs.MsgBase;
	        this.myBase(mHdr, mPayload);
	    };
	    
		//---------------------------------------------------------------------
		// Class: ItmPrsnttnSpecSlctd
		// Namespace: McMaster.MsgMgrMsgs
		// Summary: Defines a message to be published when a spec from 
		//			item presentation is selected
		// Input:
		// mHdr - The header to be stored within the message.
		//---------------------------------------------------------------------
		this.ItmPrsnttnSpecSlctd = function (mHdr, mAttrNmsTxt, mAttrValsTxt, mInpBxVal, mQtyInpBxVal, mCadImgSlctdInd, mAttrCompItmIds) {
		
			this.NM = McMaster.MsgMgrMsgs.ItmPrsnttnSpecSlctd.NM;
			var mPayload = new McMaster.MsgMgr.Payload();
			
			if (mAttrNmsTxt) {
				mPayload.AttrNmsTxt = mAttrNmsTxt;
			} else {
				mPayload.AttrNmsTxt = "";
			}
			if (mAttrValsTxt) {
				mPayload.AttrValsTxt = mAttrValsTxt;
			} else {
				mPayload.AttrValsTxt = "";
			}
			if (mInpBxVal) {
				mPayload.InpBxVal = mInpBxVal;
			}
			if (mQtyInpBxVal) {
				mPayload.QtyInpBxVal = mQtyInpBxVal;
			}
			if (mCadImgSlctdInd){
				mPayload.CadImgSlctdInd = mCadImgSlctdInd;
			}
			if (mAttrCompItmIds) {
				mPayload.AttrCompIds = mAttrCompItmIds;
			}
			
			// inherit from MsgBase
			this.myBase = McMaster.MsgMgrMsgs.MsgBase;
			this.myBase(mHdr, mPayload);
			
		};
		
		//---------------------------------------------------------------------
		// Class: ItmPrsnttnFetchAhead
		// Namespace: McMaster.MsgMgrMsgs
		// Summary: Defines a message to be published when we should fetch ahead
		//          an item presentation
		// Input:
		// mHdr - The header to be stored within the message.
		//---------------------------------------------------------------------
		this.ItmPrsnttnFetchAhead = function (mHdr, mPartNbr, mAttrCompItmIds) {
		
			this.NM = McMaster.MsgMgrMsgs.ItmPrsnttnFetchAhead.NM;
			var mPayload = new McMaster.MsgMgr.Payload();
			
			if (mPartNbr) {
				mPayload.PartNbr = mPartNbr;
			}
			
			if (mAttrCompItmIds) {
				mPayload.AttrCompIds = mAttrCompItmIds;
			}
			
			// inherit from MsgBase
			this.myBase = McMaster.MsgMgrMsgs.MsgBase;
			this.myBase(mHdr, mPayload);
			
		};
		
		//---------------------------------------------------------------------
		// Class: InLnSpecSlctd
		// Namespace: McMaster.MsgMgrMsgs
		// Summary: Defines a message to be published when a spec from inlnordering
		// is selected.
		// Input:
		// mHdr - The header to be stored within the message.
		//---------------------------------------------------------------------
		this.InLnSpecSlctd = function (mHdr, mPartNbr, mPrsnttnId) {
			
			this.NM = McMaster.MsgMgrMsgs.InLnSpecSlctd.NM;
			
			var mPayload = new McMaster.MsgMgr.Payload();
			if (mPartNbr) {
				mPayload.PartNbr = mPartNbr;
			}
			if (mPrsnttnId) {
				mPayload.PrsnttnId = mPrsnttnId;
			}
			
			// inherit from MsgBase
			this.myBase = McMaster.MsgMgrMsgs.MsgBase;
			this.myBase(mHdr, mPayload);
		};
		
		//---------------------------------------------------------------------
		// Class: OrdPadLnSpecSlctd
		// Namespace: McMaster.MsgMgrMsgs
		// Summary: Defines a message to be published when a spec from order pad
		// is selected.
		// Input:
		// mHdr - The header to be stored within the message.
		//---------------------------------------------------------------------
		this.OrdPadLnSpecSlctd = function (mHdr, mLnSeqNbr, mPartNbr) {
			this.NM = McMaster.MsgMgrMsgs.OrdPadLnSpecSlctd.NM;
			var mPayload = new McMaster.MsgMgr.Payload();
			if (mLnSeqNbr) {
				mPayload.LnSeqNbr = mLnSeqNbr;
			}
			if (mPartNbr) {
				mPayload.PartNbr = mPartNbr;
			}
			// inherit from MsgBase
			this.myBase = McMaster.MsgMgrMsgs.MsgBase;
			this.myBase(mHdr, mPayload);
		};
		
		//---------------------------------------------------------------------
		// Class: ProdInfoSlctd
		// Namespace: McMaster.MsgMgrMsgs
		// Summary: Used for relevance tracking. Tracks information about
		//			user selections in various areas of the website.
		// Inputs:	mHdr - message header
		//			slctnCntxt - context/area in which selection was made
		//							(e.g. SpecSrch).
		//			slctnNmTxt - name of the selected value.
		//			slctnPosNbr - visual position of selected value on the page.
		//			slctnAbvFoldInd - whether the selected value was in the 
		//								visible area at the time of page load.
		//---------------------------------------------------------------------
		
		this.ProdInfoSlctd = function(mHdr, slctnCntxt, slctnNmTxt, slctnPosNbr, slctnAbvFoldInd) {
			
			this.NM = McMaster.MsgMgrMsgs.ProdInfoSlctd.NM;
		
			var mPayload = new McMaster.MsgMgr.Payload();
			mPayload.SlctnCntxt = slctnCntxt;
			mPayload.SlctnNmTxt = slctnNmTxt;
			mPayload.SlctnPosNbr = slctnPosNbr;
			mPayload.SlctnAbvFoldInd = slctnAbvFoldInd;
			
			this.myBase = McMaster.MsgMgrMsgs.MsgBase;
			this.myBase(mHdr, mPayload);
			
		};
		
		//---------------------------------------------------------------------
		// Class: SpecChoiceLnkSlctd
		// Namespace: McMaster.MsgMgrMsgs
		// Summary: Defines a message to be published when a spec from a presentation with spec choice links
		// is selected.
		// Input:
		// mHdr - The header to be stored within the message.
		//---------------------------------------------------------------------
		this.SpecChoiceLnkSlctd = function (mHdr, mPartNbr, mPrsnttnId, mSpecAttrId, mSeqNbr) {
			
			this.NM = McMaster.MsgMgrMsgs.SpecChoiceLnkSlctd.NM;
			
			var mPayload = new McMaster.MsgMgr.Payload();
			if (mSpecAttrId) {
				mPayload.SpecAttrId = mSpecAttrId;
			}
			if (mPartNbr) {
				mPayload.PartNbr = mPartNbr;
			}
			if (mPrsnttnId) {
				mPayload.PrsnttnId = mPrsnttnId;
			}
			if (mSeqNbr) {
				mPayload.SeqNbr = mSeqNbr;
			}
			
			// inherit from MsgBase
			this.myBase = McMaster.MsgMgrMsgs.MsgBase;
			this.myBase(mHdr, mPayload);
		};
    
        //---------------------------------------------------------------------
		// Class: HiddenSpecChoiceLnkSlctd
		// Namespace: McMaster.MsgMgrMsgs
		// Summary: Reopens Inline ordering box when its hidden and a spec choice has been selected
		// Input:
		// mHdr - The header to be stored within the message.
		//---------------------------------------------------------------------
		this.HiddenSpecChoiceLnkSlctd = function (mHdr, mPartNbr) {

			this.NM = McMaster.MsgMgrMsgs.HiddenSpecChoiceLnkSlctd.NM;

			var mPayload = new McMaster.MsgMgr.Payload();

			if (mPartNbr) {
				mPayload.PartNbr = mPartNbr;
			}
			if (mPrsnttnId) {
				mPayload.PrsnttnId = mPrsnttnId;
			}
			// inherit from MsgBase
			this.myBase = McMaster.MsgMgrMsgs.MsgBase;
			this.myBase(mHdr, mPayload);
		};
		
	    //---------------------------------------------------------------------
        // Class: SpecSlctd
        // Namespace: McMaster.MsgMgrMsgs
        // Summary: Defines a message to be published when a spec from choose
		// specs is selected.
        // Input:
        // mHdr - The header to be stored within the message.
        //---------------------------------------------------------------------
	    this.SpecSlctd = function(mHdr) {
			
            this.NM = McMaster.MsgMgrMsgs.SpecSlctd.NM;	
			
			// Do not update <title>; this is done onLoad												
            var mPayload = new McMaster.MsgMgr.Payload();
			
            // inherit from MsgBase
            this.myBase = McMaster.MsgMgrMsgs.MsgBase;
            this.myBase(mHdr, mPayload);
        };
		
        
        //---------------------------------------------------------------------
        // Class: SpecToggleLnkSlctd
        // Namespace: McMaster.MsgMgrMsgs
        // Summary: Defines a message to be published when the hide/show link
		// is selected in choose specs.
        // Input:
        // mHdr - The header to be stored within the message.
        //---------------------------------------------------------------------
	    this.SpecToggleLnkSlctd = function(mHdr) {
			
            this.NM = McMaster.MsgMgrMsgs.SpecToggleLnkSlctd.NM;	
			
			// Do not update <title>; this is done onLoad												
            var mPayload = new McMaster.MsgMgr.Payload();
			
            // inherit from MsgBase
            this.myBase = McMaster.MsgMgrMsgs.MsgBase;
            this.myBase(mHdr, mPayload);
        };
        
        //---------------------------------------------------------------------
        // Class: SpecUpdt
        // Namespace: McMaster.MsgMgrMsgs
        // Summary: Defines a message to be published when the returned specs
        // for choose specs have been updated in session manager.
        // Input:
        // mHdr - The header to be stored within the message.
        //---------------------------------------------------------------------
	    this.SpecUpdt = function(mHdr) {
			
            this.NM = McMaster.MsgMgrMsgs.SpecUpdt.NM;	
			
			// Do not update <title>; this is done onLoad												
            var mPayload = new McMaster.MsgMgr.Payload();
			
			// inherit from MsgBase
            this.myBase = McMaster.MsgMgrMsgs.MsgBase;
            this.myBase(mHdr, mPayload);
        };
		
		//---------------------------------------------------------------------
        // Class: RecentOrdsChged
        // Namespace: McMaster.MsgMgrMsgs
        // Summary: Defines a message to be published when the recent
        //			orders message changed.  (Either an
		//			order was placed or the visitor changed.)
        // Input:
        //  mHdr - The header to be stored within the message.
		//
		// IMPORTANT NOTE:
		// This is NOT the way we want to name and create new messages.
		// Messages should be about what happened or what the user did--
		// not what the message should cause to happen.  This was done
		// for compatibility between old code and the new masthead.
		// Do NOT use this as an example.  Thank you!
		//
        //---------------------------------------------------------------------
	    this.RecentOrdsChged = function(mHdr) {
			
            this.NM = McMaster.MsgMgrMsgs.RecentOrdsChged.NM;
            
            var mPayload = new McMaster.MsgMgr.Payload();
            
            // inherit from MsgBase
            this.myBase = McMaster.MsgMgrMsgs.MsgBase;
            this.myBase(mHdr, mPayload);
            
	    };
		
        //---------------------------------------------------------------------
        // Class: RecentOrdSlctd
        // Namespace: McMaster.MsgMgrMsgs
        // Summary: Defines a message to be published when Saved Order 
        //			is selected
        // Input:
        //  mHdr - The header to be stored within the message.
        //---------------------------------------------------------------------
	    this.RecentOrdSlctd = function(mHdr, mOrdId, mPOTxt) {
            
            this.NM = McMaster.MsgMgrMsgs.RecentOrdSlctd.NM;
            
            // create the payload
            var mPayload = new McMaster.MsgMgr.Payload();
            if (mOrdId) {
				mPayload.OrdID = mOrdId;
			}
			
            if (mPOTxt) {
				mPayload.PO = mPOTxt;				
			}				
			
            // inherit from MsgBase
            this.myBase = McMaster.MsgMgrMsgs.MsgBase;
            this.myBase(mHdr, mPayload);
	    };
    	
        //---------------------------------------------------------------------
        // Class: ResizeBldOrdSlctd
        // Namespace: McMaster.MsgMgrMsgs
        // Summary: Defines a message to be published when 
	    //  	    BuildOrder.asp gets resized
        // Input:
        //  mHdr - The header to be stored within the message.
        //  mBldOrdExpandedInd - Indicates if build order is expanded or contracted
		//  mLowRsltInd - Customer has low monitor resolution
		//
		// IMPORTANT NOTE:
		// This is NOT the way we want to name and create new messages.
		// Messages should be about what happened or what the user did--
		// not what the message should cause to happen.  This was done
		// for compatibility between old code and the new masthead.
		// Do NOT use this as an example.  Thank you!
		//
        //---------------------------------------------------------------------
	    this.ResizeBldOrdSlctd = function(mHdr, mBldOrdExpandedInd, mLowRsltnInd) {
            
            this.NM = McMaster.MsgMgrMsgs.ResizeBldOrdSlctd.NM;
            
            var mPayload = new McMaster.MsgMgr.Payload();
            if (mBldOrdExpandedInd) {
	            mPayload.BldOrdExpandedInd = mBldOrdExpandedInd;
            }
            
            if (mLowRsltnInd) {
	            mPayload.LowRsltnInd = mLowRsltnInd;
            }
            
            // inherit from MsgBase
            this.myBase = McMaster.MsgMgrMsgs.MsgBase;
            this.myBase(mHdr, mPayload);
            
	    };	    
    	
    	
    	//---------------------------------------------------------------------
        // Class: SavedOrdSlctd
        // Namespace: McMaster.MsgMgrMsgs
        // Summary: Defines a message to be published when a particular saved
        //			order is selected
        // Input:
        //  mHdr - The header to be stored within the message.
        //---------------------------------------------------------------------
	    this.SavedOrdSlctd = function(mHdr) {
			
            this.NM = McMaster.MsgMgrMsgs.SavedOrdSlctd.NM;
            
            // create the payload
            var mPayload = new McMaster.MsgMgr.Payload();		
			
            // inherit from MsgBase
            this.myBase = McMaster.MsgMgrMsgs.MsgBase;
            this.myBase(mHdr, mPayload);
			
	    };
    	
	    //---------------------------------------------------------------------
        // Class: SavedOrdsSlctd
        // Namespace: McMaster.MsgMgrMsgs
        // Summary: Defines a message to be published when Saved Order 
        //			is selected
        // Input:
        //  mHdr - The header to be stored within the message.
        //---------------------------------------------------------------------
	    this.SavedOrdsSlctd = function(mHdr) {
			
            this.NM = McMaster.MsgMgrMsgs.SavedOrdsSlctd.NM;
            
            // create the payload
            var mPayload = new McMaster.MsgMgr.Payload();		
			
            // inherit from MsgBase
            this.myBase = McMaster.MsgMgrMsgs.MsgBase;
            this.myBase(mHdr, mPayload);
			
	    };   
		
		//---------------------------------------------------------------------
        // Class: SecondaryContentCollapsed
        // Namespace: McMaster.MsgMgrMsgs
        // Summary: Defines a message to be published when the secondary content is collapsed
        // Input:
        //  mHdr - The header to be stored within the message.
        //---------------------------------------------------------------------
		this.SecondaryContentCollapsed = function(mHdr) {
			
			this.NM = McMaster.MsgMgrMsgs.SecondaryContentCollapsed.NM;
			
			var mPayload = new McMaster.MsgMgr.Payload();
			
			// inherit from MsgBase
            this.myBase = McMaster.MsgMgrMsgs.MsgBase;
            this.myBase(mHdr, mPayload);
			
		};
		
	    //---------------------------------------------------------------------
        // Class: SecondaryContentToggleSlctd
        // Namespace: McMaster.MsgMgrMsgs
        // Summary: Defines a message to be published when the secondary content is toggled.
        // Input:
        //  mHdr - The header to be stored within the message.
        //---------------------------------------------------------------------
	    this.SecondaryContentToggleSlctd = function(mHdr) {
			
            this.NM = McMaster.MsgMgrMsgs.SecondaryContentToggleSlctd.NM;
            
            var mPayload = new McMaster.MsgMgr.Payload();
            
            // inherit from MsgBase
            this.myBase = McMaster.MsgMgrMsgs.MsgBase;
            this.myBase(mHdr, mPayload);
            
	    };
		
		//---------------------------------------------------------------------
        // Class: SecondaryContentExpanded
        // Namespace: McMaster.MsgMgrMsgs
        // Summary: Defines a message to be published when the secondary content is expanded
        // Input:
        //  mHdr - The header to be stored within the message.
        //---------------------------------------------------------------------
		this.SecondaryContentExpanded = function(mHdr) {
			
			this.NM = McMaster.MsgMgrMsgs.SecondaryContentExpanded.NM;
			
			var mPayload = new McMaster.MsgMgr.Payload();
			
			// inherit from MsgBase
            this.myBase = McMaster.MsgMgrMsgs.MsgBase;
            this.myBase(mHdr, mPayload);
			
		};
    	
	    //---------------------------------------------------------------------
        // Class: SecrSlctd
        // Namespace: McMaster.MsgMgrMsgs
        // Summary: Defines a message to be published when a security link 
	    //	    is selected
        // Input:
        //  mHdr - The header to be stored within the message.
        //---------------------------------------------------------------------
	    this.SecrSlctd = function(mHdr) {
			
            this.NM = McMaster.MsgMgrMsgs.SecrSlctd.NM;
            
            var mPayload = new McMaster.MsgMgr.Payload();			
			
            // inherit from MsgBase
            this.myBase = McMaster.MsgMgrMsgs.MsgBase;
            this.myBase(mHdr, mPayload);			
			
	    };	    
		
	
	    //---------------------------------------------------------------------
        // Class: SgnInChged
        // Namespace: McMaster.MsgMgrMsgs
        // Summary: Defines a message to be published when the visitor has 
        //			changed their sign-in by signing either in or out.
        // Input:
        //  mHdr - The header to be stored within the message.
        //---------------------------------------------------------------------
	    this.SgnInChged = function(mHdr) {
            
            this.NM = McMaster.MsgMgrMsgs.SgnInChged.NM;
            
            var mPayload = new McMaster.MsgMgr.Payload();
			
            // inherit from MsgBase
            this.myBase = McMaster.MsgMgrMsgs.MsgBase;
            this.myBase(mHdr, mPayload);
            
	    };
		
		
		//---------------------------------------------------------------------
        // Class: SgnOutSlctd
        // Namespace: McMaster.MsgMgrMsgs
        // Summary: Defines a message to be published when the visitor has 
        //			requested to sign out / switch users.
        // Input:
        //  mHdr - The header to be stored within the message.
        //---------------------------------------------------------------------
	    this.SgnOutSlctd = function(mHdr) {
            
            this.NM = McMaster.MsgMgrMsgs.SgnOutSlctd.NM;
            
            var mPayload = new McMaster.MsgMgr.Payload();
			
            // inherit from MsgBase
            this.myBase = McMaster.MsgMgrMsgs.MsgBase;
            this.myBase(mHdr, mPayload);
            
	    };
		
    	
	    //---------------------------------------------------------------------
        // Class: SpclWrdSlctd
        // Namespace: McMaster.MsgMgrMsgs
        // Summary: Published when a special word result is selected from
		//		a set of search results.
        // Input:
        //  mHdr - The header to be stored within the message.
		//	spclWrdJavascriptMthdNm - The name of the javascript method
		//		to be executed.
        //---------------------------------------------------------------------
	    this.SpclWrdSlctd = function(mHdr, spclWrdJavascriptMthdNm) {
    		
            this.NM = McMaster.MsgMgrMsgs.SpclWrdSlctd.NM;
            
            var mPayload = new McMaster.MsgMgr.Payload();
			mPayload.SpclWrdJavascriptMthdNm = spclWrdJavascriptMthdNm;
			
            // inherit from MsgBase
            this.myBase = McMaster.MsgMgrMsgs.MsgBase;
            this.myBase(mHdr, mPayload);
            
	    };
		
		//---------------------------------------------------------------------
        // Class: ShellIFrameCreated
        // Namespace: McMaster.MsgMgrMsgs
        // Summary: Defines a message to be published when an iframe is created
		//		and added to the Shell.
        //  mHdr - The header to be stored within the message.
        //---------------------------------------------------------------------
	    this.SpecWebPartUnloaded = function(mHdr) {            
            this.NM = McMaster.MsgMgrMsgs.SpecWebPartUnloaded.NM;
            
            // create the payload
            var mPayload = new McMaster.MsgMgr.Payload();
			
            // inherit from MsgBase
            this.myBase = McMaster.MsgMgrMsgs.MsgBase;
            this.myBase(mHdr, mPayload);            
	    };					
		
		
	    //---------------------------------------------------------------------
        // Class: SpellingSuggSlctd
        // Namespace: McMaster.MsgMgrMsgs
        // Summary: Published when a spelling suggestion is selected
		//		from a set of search results.
        // Input:
        //  mHdr - The header to be stored within the message.
		//	spellingSuggTxt - The spelling suggestion text
		//	newArgTxt - the text of the new search argument
		//	origTxt - the customer's original search text
		//	suggSeq - the sequence of the selected suggestion in the list 
		//		of suggestions
        //---------------------------------------------------------------------
	    this.SpellingSuggSlctd = function(mHdr, spellingSuggTxt, newArgTxt, origTxt, suggSeq) {
            
            this.NM = McMaster.MsgMgrMsgs.SpellingSuggSlctd.NM;
            
            var mPayload = new McMaster.MsgMgr.Payload();
			mPayload.SpellingSuggTxt = spellingSuggTxt;
			mPayload.SpellingSuggNewArgTxt = newArgTxt;
			mPayload.SpellingSuggOrigTxt = origTxt;
			mPayload.SpellingSuggSuggSeq = suggSeq;				
			
            // inherit from MsgBase
            this.myBase = McMaster.MsgMgrMsgs.MsgBase;
            this.myBase(mHdr, mPayload);
            
	    };				
		
		//---------------------------------------------------------------------
		// Summary: This message announces that fetch ahead data was received
		//			for search results.
		//---------------------------------------------------------------------
		this.SrchFetchAheadDatRcvd = function(hdr, srchTermTxt, specSrchInp
						, fetchAheadGrpId, currWebPartIdTxt){
			this.NM = McMaster.MsgMgrMsgs.SrchFetchAheadDatRcvd.NM;
			var payload = new McMaster.MsgMgr.Payload();
			
			if (srchTermTxt){
				payload.SrchTxt = srchTermTxt;
			}
			
			if (specSrchInp) {
				payload.SpecSrchInp = specSrchInp;
			}
			
			if (fetchAheadGrpId) {
				payload.FetchAheadGrpId = fetchAheadGrpId;
			}
			
			if (currWebPartIdTxt) {
				payload.CurrWebPartIdTxt = currWebPartIdTxt;
			}
			
			this.myBase = McMaster.MsgMgrMsgs.MsgBase;
			this.myBase(hdr, payload);
		}
		
	    //---------------------------------------------------------------------
	    // Class: SrchRsltFocused
	    // Namespace: McMaster.MsgMgrMsgs
	    // Summary: Defines a message to be published when the search Result is 
	    //         in focus.
	    // Input:
	    //  mHdr - The header to be stored within the message.
	    //  mSrchRsltInfoObj - The search result info object.
	    //---------------------------------------------------------------------
	    this.SrchRsltFocused = function(mHdr, mSrchRsltInfoObj) {
		    this.NM = McMaster.MsgMgrMsgs.SrchRsltFocused.NM;
		    var mPayload = new McMaster.MsgMgr.Payload();
			
	        if (mSrchRsltInfoObj) {
				mPayload.SrchRsltInfoObj = mSrchRsltInfoObj;
	        }
			
		    // inherit from MsgBase
		    this.myBase = McMaster.MsgMgrMsgs.MsgBase;
		    this.myBase(mHdr, mPayload);						
			
	    };   
    	
	    //---------------------------------------------------------------------
	    // Class: SrchRsltSlctd
	    // Namespace: McMaster.MsgMgrMsgs
	    // Summary: Defines a message to be published when the search Result is 
	    //         selected.
	    // Input:
	    //  mHdr - The header to be stored within the message.
	    //  mSrchRsltInfoObj - The search result info object.
	    // Remarks: Info object has type (catalog page, info), 
	    //          search result id and type specific info.
	    //---------------------------------------------------------------------
	    this.SrchRsltSlctd = function(mHdr, mSrchRsltInfoObj) {
			
		    this.NM = McMaster.MsgMgrMsgs.SrchRsltSlctd.NM;
			
            // create the payload
		    var mPayload = new McMaster.MsgMgr.Payload();
			
		    if (mSrchRsltInfoObj) {
				mPayload.SrchRsltInfoObj = mSrchRsltInfoObj;
		    }
			
		    // inherit from MsgBase
		    this.myBase = McMaster.MsgMgrMsgs.MsgBase;
		    this.myBase(mHdr, mPayload);			
			
	    };
       	
       	//---------------------------------------------------------------------
	    // Class: SrchSuggSlcted
	    // Namespace: McMaster.MsgMgrMsgs
	    // Summary: Defines a message to be published when the search 
	    //         has been submitted
	    // Input:
	    //  mHdr - The header to be stored within the message.
	    //  mSrchTxt - The search text.
	    // Remarks: Info object has type (catalog page, info), 
	    //          search result id and type specific info.
	    //---------------------------------------------------------------------
	    this.SrchSuggSlctd = function(mHdr, mSrchRsltID, mSrchRsltNm, mSpecs) {
			
		    this.NM = McMaster.MsgMgrMsgs.SrchSuggSlctd.NM;
			
		    var mPayload = new McMaster.MsgMgr.Payload();
        	
	        if (mSrchRsltNm) {
		        mPayload.SrchTxt = mSrchRsltNm;		
			}	
			
			if (mSrchRsltID) {
			    mPayload.SrchRsltID = mSrchRsltID;
			}	
			
			if (mSpecs) {
			    mPayload.Specs = mSpecs;
			}
			
            mPayload.TS = (new Date()).getTime();		
			
		    // inherit from MsgBase
		    this.myBase = McMaster.MsgMgrMsgs.MsgBase;
		    this.myBase(mHdr, mPayload);						
			
	    }; 
       	
	    //---------------------------------------------------------------------
	    // Class: SrchSubmitted
	    // Namespace: McMaster.MsgMgrMsgs
	    // Summary: Defines a message to be published when the search 
	    //         has been submitted
	    // Input:
	    //  mHdr - The header to be stored within the message.
	    //  mSrchTxt - The search text.
	    // Remarks: Info object has type (catalog page, info), 
	    //          search result id and type specific info.
	    //---------------------------------------------------------------------
        this.SrchSubmitted = function (mHdr, mSrchTxt) {
			
		    this.NM = McMaster.MsgMgrMsgs.SrchSubmitted.NM;
			
		    var mPayload = new McMaster.MsgMgr.Payload();
        	
	        if (mSrchTxt) {
		        mPayload.SrchTxt = mSrchTxt;		
			}		
			
            mPayload.TS = (new Date()).getTime();		
			
		    // inherit from MsgBase
		    this.myBase = McMaster.MsgMgrMsgs.MsgBase;
		    this.myBase(mHdr, mPayload);						
			
	    };       
	    
	    //---------------------------------------------------------------------
	    // Class: UnionRsltSlctd
	    // Namespace: McMaster.MsgMgrMsgs
	    // Summary: Defines a message to be published when a union search 
	    //          search has been selected
	    // Input:
	    //  mHdr - The header to be stored within the message.
	    //  mSrchTxt - The search text.
	    //  mTermsUnionSrchRslts - The union search result names that were used 
	    //      to retrieve content.
	    //---------------------------------------------------------------------
	    this.UnionRsltSlctd = function(mHdr, mSrchTxt, mSlctdUnionSrchRsltNmsTxt, mSlctdUnionSrchRsltId, mTermsUnionSrchRsltNms, mCoveringUnionSrchRsltNmTxt, mCombineUnionIntermediatePagesInd) {
			
		    this.NM = McMaster.MsgMgrMsgs.UnionRsltSlctd.NM;
			
		    var mPayload = new McMaster.MsgMgr.Payload();
        	
	        if (mSrchTxt) {
		        mPayload.SrchTxt = mSrchTxt;		
			}		
			
			if (mSlctdUnionSrchRsltNmsTxt) {
			    mPayload.SlctdUnionSrchRsltNmsTxt = mSlctdUnionSrchRsltNmsTxt
			}
			
			if (mSlctdUnionSrchRsltId) {
			    mPayload.SlctdUnionSrchRsltId = mSlctdUnionSrchRsltId
			}
			
			if (mTermsUnionSrchRsltNms) {
			    mPayload.TermsUnionSrchRsltNms = mTermsUnionSrchRsltNms;
			}
			
			if (mCoveringUnionSrchRsltNmTxt) {
			    mPayload.CoveringUnionSrchRsltNmTxt = mCoveringUnionSrchRsltNmTxt;
			}
			
			if (mCombineUnionIntermediatePagesInd) {
			    mPayload.CombineUnionIntermediatePagesInd = mCombineUnionIntermediatePagesInd;
			}
			
            mPayload.TS = (new Date()).getTime();		
			
		    // inherit from MsgBase
		    this.myBase = McMaster.MsgMgrMsgs.MsgBase;
		    this.myBase(mHdr, mPayload);						
			
	    };       
		
	    //---------------------------------------------------------------------
	    // Class: SrchSuggCntnrCollapsed
	    // Namespace: McMaster.MsgMgrMsgs
	    // Summary: Defines a message to be published when the search 
	    //	suggestions layer is collapsed and closed.
	    // Input:
	    //  mHdr - The header to be stored within the message.
	    //---------------------------------------------------------------------
	    this.SrchSuggCntnrCollapsed = function(mHdr) {
			
		    this.NM = McMaster.MsgMgrMsgs.SrchSuggCntnrCollapsed.NM;
		    var mPayload = new McMaster.MsgMgr.Payload();		
        	
		    // inherit from MsgBase
		    this.myBase = McMaster.MsgMgrMsgs.MsgBase;
		    this.myBase(mHdr, mPayload);						
	    };			
		
	    //---------------------------------------------------------------------
	    // Class: SrchSuggCntnrExpanded
	    // Namespace: McMaster.MsgMgrMsgs
	    // Summary: Defines a message to be published when the search 
	    //	suggestions layer is expanded and opened.
	    // Input:
	    //  mHdr - The header to be stored within the message.
	    //---------------------------------------------------------------------
	    this.SrchSuggCntnrExpanded = function(mHdr) {
			
		    this.NM = McMaster.MsgMgrMsgs.SrchSuggCntnrExpanded.NM;
		    var mPayload = new McMaster.MsgMgr.Payload();		
        	
		    // inherit from MsgBase
		    this.myBase = McMaster.MsgMgrMsgs.MsgBase;
		    this.myBase(mHdr, mPayload);						
	    };	       	

	    //---------------------------------------------------------------------
	    // Class: SrchSuggStReset
	    // Namespace: McMaster.MsgMgrMsgs
	    // Summary: Published when the state of Search Suggestions is reset
	    // Input:
	    //  mHdr - Message header
	    //---------------------------------------------------------------------
	    this.SrchSuggStReset = function(mHdr) {
			
		    this.NM = McMaster.MsgMgrMsgs.SrchSuggStReset.NM;
		    var mPayload = new McMaster.MsgMgr.Payload();		
        	
		    // inherit from MsgBase
		    this.myBase = McMaster.MsgMgrMsgs.MsgBase;
		    this.myBase(mHdr, mPayload);						
	    };			
       	
		
	    //---------------------------------------------------------------------
	    // Class: SrchTxtChged
	    // Namespace: McMaster.MsgMgrMsgs
	    // Summary: Defines a message to be published when the search 
	    //         text changed
	    // Input:
	    //  mHdr - The header to be stored within the message.
	    //  mKyCd - The key code.
	    //  mSrchTxt - The search text.
	    //  mFastTrackingInd - Whether the search suggestion was fasttracked (autoselected)
	    //                      or chosen by the user (false)
	    // Remarks: Info object has type (catalog page, info), 
	    //          search result id and type specific info.
	    //---------------------------------------------------------------------
	    this.SrchTxtChged = function(mHdr, mKyCd, mSrchTxt, hasFastTrackResult, mFastTrackingInd) {
			
		    this.NM = McMaster.MsgMgrMsgs.SrchTxtChged.NM;
			
		    var mPayload = new McMaster.MsgMgr.Payload();
        	
	        if (mKyCd) {
		        mPayload.KyCd = mKyCd;
		    }
	        if (mSrchTxt) {
		        mPayload.SrchTxt = mSrchTxt;
		    }
		    
		    if (mFastTrackingInd) {
		        mPayload.FastTrackingInd = true;
		    }

			mPayload.AlreadyFastTracked = !!hasFastTrackResult;
		    mPayload.TS = (new Date()).getTime();			
        	
		    // inherit from MsgBase
		    this.myBase = McMaster.MsgMgrMsgs.MsgBase;
		    this.myBase(mHdr, mPayload);						
	    };
		
		//---------------------------------------------------------------------
	    // Class: TaxSlctd
	    // Namespace: McMaster.MsgMgrMsgs
	    // Summary: Defines a message to be published when the tax 
	    //	page has been selected.
	    // Input:
	    //  mHdr - The header to be stored within the message.
	    //---------------------------------------------------------------------
	    this.TaxSlctd = function(mHdr, StateTxt) {
			
		    this.NM = McMaster.MsgMgrMsgs.TaxSlctd.NM;
			
		    // create the payload
            var mPayload = new McMaster.MsgMgr.Payload();
			if (StateTxt) {
				mPayload.StateTxt = StateTxt;
		    } 	
        	
		    // inherit from MsgBase
		    this.myBase = McMaster.MsgMgrMsgs.MsgBase;
		    this.myBase(mHdr, mPayload);						
	    };	
		
		//---------------------------------------------------------------------
	    // Class: UsrInpTxtSubmitted
	    // Namespace: McMaster.MsgMgrMsgs
	    // Summary: Defines a message to be published when the user input text 
	    //         has been submitted
	    // Input:
	    //  mHdr - The header to be stored within the message.
	    //  mUsrInpTxt - The user input text.
		//  mSrchTrkInfo - Search tracker information object.
	    //---------------------------------------------------------------------
	    this.UsrInpTxtSubmitted = function(mHdr, mUsrInpTxt, mSrchTrkInfo) {
			
		    this.NM = McMaster.MsgMgrMsgs.UsrInpTxtSubmitted.NM;
			this.SrchTrkInfo = mSrchTrkInfo;
			
		    var mPayload = new McMaster.MsgMgr.Payload();
        	
	        if (typeof mUsrInpTxt == "string") {
				// If the user input is a valid string (which includes the empty string), set the payload property
		        mPayload.UsrInpTxt = mUsrInpTxt;		
			}		
			
            mPayload.TS = (new Date()).getTime();		
			
		    // inherit from MsgBase
		    this.myBase = McMaster.MsgMgrMsgs.MsgBase;
		    this.myBase(mHdr, mPayload);						
			
	    };       	    
       	
		//---------------------------------------------------------------------
	    // Class: UsrInpTxtChged
	    // Namespace: McMaster.MsgMgrMsgs
	    // Summary: Defines a message to be published when the user input 
	    //         text is changed
	    // Input:
	    //  mHdr - The header to be stored within the message.
	    //  mUsrInpTxt - The user input text.
	    //---------------------------------------------------------------------
		this.UsrInpTxtChged = function(mHdr, mUsrInpTxt) {
			
		    this.NM = McMaster.MsgMgrMsgs.UsrInpTxtChged.NM;
			
		    var mPayload = new McMaster.MsgMgr.Payload();
        	
	        if (typeof mUsrInpTxt == "string") {
				// If the user input is a valid string (which includes the empty string), set the payload property
		        mPayload.UsrInpTxt = mUsrInpTxt;		
			}	
			
		    mPayload.TS = (new Date()).getTime();			
        	
		    // inherit from MsgBase
		    this.myBase = McMaster.MsgMgrMsgs.MsgBase;
		    this.myBase(mHdr, mPayload);	
		};
		
	    //---------------------------------------------------------------------
	    // Class: WndwResized
	    // Namespace: McMaster.MsgMgrMsgs
	    // Summary: Published after the browser window has been resized.
	    // Input:
	    //  mHdr - Message header
	    //---------------------------------------------------------------------
	    this.WndwResized = function(mHdr) {
			
		    this.NM = McMaster.MsgMgrMsgs.WndwResized.NM;
		    var mPayload = new McMaster.MsgMgr.Payload();		
        	
		    // inherit from MsgBase
		    this.myBase = McMaster.MsgMgrMsgs.MsgBase;
		    this.myBase(mHdr, mPayload);						
	    };			
		
		//---------------------------------------------------------------------
        // Class: AbbrPrsnttnClicked
        // Namespace: McMaster.MsgMgrMsgs
        // Summary: Defines a message to be published when the abbr prsnttn 
        //          is clicked
        // Input:
        //  mHdr - The header to be stored within the message.
        //---------------------------------------------------------------------
		this.AbbrPrsnttnClicked = function(mHdr) {
			
			this.NM = McMaster.MsgMgrMsgs.AbbrPrsnttnClicked.NM;
			
			var mPayload = new McMaster.MsgMgr.Payload();
			
			// inherit from MsgBase
            this.myBase = McMaster.MsgMgrMsgs.MsgBase;
            this.myBase(mHdr, mPayload);
		};
		
		//---------------------------------------------------------------------
        // Class: PrsnttnNmClicked
        // Namespace: McMaster.MsgMgrMsgs
        // Summary: Defines a message to be published when a full prsnttn 
        //          name is clicked
        // Input:
        //  mHdr - The header to be stored within the message.
        //---------------------------------------------------------------------
		this.PrsnttnNmClicked = function(mHdr) {
			
			this.NM = McMaster.MsgMgrMsgs.PrsnttnNmClicked.NM;
			
			var mPayload = new McMaster.MsgMgr.Payload();
			
			// inherit from MsgBase
            this.myBase = McMaster.MsgMgrMsgs.MsgBase;
            this.myBase(mHdr, mPayload);
		};
		
		
		//---------------------------------------------------------------------
        // Class: AbbrPrsnttnClosed
        // Namespace: McMaster.MsgMgrMsgs
        // Summary: Defines a message to be published when the abbr prsnttn 
        //          is closed.
        // Input:
        //  mHdr - The header to be stored within the message.
        //---------------------------------------------------------------------
		this.AbbrPrsnttnClosed = function(mHdr) {
			
			this.NM = McMaster.MsgMgrMsgs.AbbrPrsnttnClosed.NM;
			
			var mPayload = new McMaster.MsgMgr.Payload();
			
			// inherit from MsgBase
            this.myBase = McMaster.MsgMgrMsgs.MsgBase;
            this.myBase(mHdr, mPayload);
			
		};
		
		//---------------------------------------------------------------------
        // Class: FullPrsnttnClosed
        // Namespace: McMaster.MsgMgrMsgs
        // Summary: Defines a message to be published when the full prsnttn 
        //          is closed.
        // Input:
        //  mHdr - The header to be stored within the message.
        //---------------------------------------------------------------------
		this.FullPrsnttnClosed = function(mHdr) {
			
			this.NM = McMaster.MsgMgrMsgs.FullPrsnttnClosed.NM;
			
			var mPayload = new McMaster.MsgMgr.Payload();
			
			// inherit from MsgBase
            this.myBase = McMaster.MsgMgrMsgs.MsgBase;
            this.myBase(mHdr, mPayload);
			
		};
		
		
	    //---------------------------------------------------------------------
        // Class: SiteSettingsSlctd
        // Namespace: McMaster.MsgMgrMsgs
        // Summary: Defines a message to be published when a site settings link 
	    //	    is selected
        // Input:
        //  mHdr - The header to be stored within the message.
        //---------------------------------------------------------------------
	    this.SiteSettingsSlctd = function(mHdr) {
			
            this.NM = McMaster.MsgMgrMsgs.SiteSettingsSlctd.NM;
            
            var mPayload = new McMaster.MsgMgr.Payload();			
			
            // inherit from MsgBase
            this.myBase = McMaster.MsgMgrMsgs.MsgBase;
            this.myBase(mHdr, mPayload);			
			
	    };	  

	    //---------------------------------------------------------------------
        // Class: LoginChged
        // Namespace: McMaster.MsgMgrMsgs
        // Summary: Defines a message to be published when login changes 
        // Input:
        //  mHdr - The header to be stored within the message.
        //  mUsrNm - The user name
        //---------------------------------------------------------------------
	    this.LoginChged = function(mHdr, mUsrNm) {
			
            this.NM = McMaster.MsgMgrMsgs.LoginChged.NM;

            var mPayload = new McMaster.MsgMgr.Payload();			
                        
	        if (typeof mUsrNm == "string") {
				// If the user name is a valid string (which includes the empty string), set the payload property
		        mPayload.UsrNm = mUsrNm;		
			}
            		
            // inherit from MsgBase
            this.myBase = McMaster.MsgMgrMsgs.MsgBase;
            this.myBase(mHdr, mPayload);			
			
	    };	
	    		
	    //---------------------------------------------------------------------
        // Class: LoginCanceled
        // Namespace: McMaster.MsgMgrMsgs
        // Summary: Defines a message to be published when user cancels login 
        // Input:
        //  mHdr - The header to be stored within the message.
        //---------------------------------------------------------------------
	    this.LoginCanceled = function(mHdr) {
			
            this.NM = McMaster.MsgMgrMsgs.LoginCanceled.NM;
            
            var mPayload = new McMaster.MsgMgr.Payload();			
			
            // inherit from MsgBase
            this.myBase = McMaster.MsgMgrMsgs.MsgBase;
            this.myBase(mHdr, mPayload);			
			
	    };	
	    
	    //---------------------------------------------------------------------
        // Class: CrtePswdCanceled
        // Namespace: McMaster.MsgMgrMsgs
        // Summary: Defines a message to be published when user cancels login 
        // Input:
        //  mHdr - The header to be stored within the message.
        //---------------------------------------------------------------------
	    this.CrtePswdCanceled = function(mHdr, mUsrNm) {
			
            this.NM = McMaster.MsgMgrMsgs.CrtePswdCanceled.NM;
            
            var mPayload = new McMaster.MsgMgr.Payload();			

	        if (typeof mUsrNm == "string") {
				// If the user name is a valid string (which includes the empty string), set the payload property
		        mPayload.UsrNm = mUsrNm;		
			}
						
            // inherit from MsgBase
            this.myBase = McMaster.MsgMgrMsgs.MsgBase;
            this.myBase(mHdr, mPayload);			
			
	    };	
	    
        //---------------------------------------------------------------------
        // Class: MastheadLoginSlctd
        // Namespace: McMaster.MsgMgrMsgs
        // Summary: Defines a message to be published when login link 
	    //	    is selected
        // Input:
        //  mHdr - The header to be stored within the message.
        //---------------------------------------------------------------------
	    this.MastheadLoginSlctd = function(mHdr) {
			
            this.NM = McMaster.MsgMgrMsgs.MastheadLoginSlctd.NM;
            
            var mPayload = new McMaster.MsgMgr.Payload();			
			
            // inherit from MsgBase
            this.myBase = McMaster.MsgMgrMsgs.MsgBase;
            this.myBase(mHdr, mPayload);			
			
	    };	

        //---------------------------------------------------------------------
        // Class: MastheadLoginCanceled
        // Namespace: McMaster.MsgMgrMsgs
        // Summary: Defines a message to be published when masthead login
	    //	    is canceled
        // Input:
        //  mHdr - The header to be stored within the message.
        //---------------------------------------------------------------------
	    this.MastheadLoginCanceled = function(mHdr) {
			
            this.NM = McMaster.MsgMgrMsgs.MastheadLoginCanceled.NM;
            
            var mPayload = new McMaster.MsgMgr.Payload();			
			
            // inherit from MsgBase
            this.myBase = McMaster.MsgMgrMsgs.MsgBase;
            this.myBase(mHdr, mPayload);			
			
	    };

        //---------------------------------------------------------------------
        // Class: MultiPageNavExpanded
        // Namespace: McMaster.MsgMgrMsgs
        // Summary: Defines a message to be published when multipage navigation is expanded
        // Input:
        //  mHdr - The header to be stored within the message.
        //---------------------------------------------------------------------
		this.MultiPageNavExpanded = function(mHdr){
		
		    this.NM = McMaster.MsgMgrMsgs.MultiPageNavExpanded.NM;
            
            var mPayload = new McMaster.MsgMgr.Payload();			
			
            // inherit from MsgBase
            this.myBase = McMaster.MsgMgrMsgs.MsgBase;
            this.myBase(mHdr, mPayload);		
	
		};
		
		//---------------------------------------------------------------------
        // Class: MultiPageNavCollapsed
        // Namespace: McMaster.MsgMgrMsgs
        // Summary: Defines a message to be published when multipage navigation is collapsed
        // Input:
        //  mHdr - The header to be stored within the message.
        //---------------------------------------------------------------------
		this.MultiPageNavCollapsed = function(mHdr) {
		    
			this.NM = McMaster.MsgMgrMsgs.MultiPageNavCollapsed.NM;
            
            var mPayload = new McMaster.MsgMgr.Payload();			
			
            // inherit from MsgBase
            this.myBase = McMaster.MsgMgrMsgs.MsgBase;
            this.myBase(mHdr, mPayload);		
			
		};
		
        //---------------------------------------------------------------------
        // Class: MastheadLoginLoaded
        // Namespace: McMaster.MsgMgrMsgs
        // Summary: Defines a message to be published when login masthead
	    //	    has loaded
        // Input:
        //  mHdr - The header to be stored within the message.
        //---------------------------------------------------------------------
	    this.MastheadLoginLoaded = function(mHdr) {
			
            this.NM = McMaster.MsgMgrMsgs.MastheadLoginLoaded.NM;
            
            var mPayload = new McMaster.MsgMgr.Payload();			
			
            // inherit from MsgBase
            this.myBase = McMaster.MsgMgrMsgs.MsgBase;
            this.myBase(mHdr, mPayload);			
			
	    };
	    
	    //---------------------------------------------------------------------
        // Class: MastheadLoginRdoBtnSlctd
        // Namespace: McMaster.MsgMgrMsgs
        // Summary: Defines a message to be published when login masthead
	    //	    radio button is selected
        // Input:
        //  mHdr - The header to be stored within the message.
        //---------------------------------------------------------------------
	    this.MastheadLoginRdoBtnSlctd = function(mHdr) {
			
            this.NM = McMaster.MsgMgrMsgs.MastheadLoginRdoBtnSlctd.NM;
            
            var mPayload = new McMaster.MsgMgr.Payload();			
			
            // inherit from MsgBase
            this.myBase = McMaster.MsgMgrMsgs.MsgBase;
            this.myBase(mHdr, mPayload);			
			
	    };
	    
	    //---------------------------------------------------------------------
        // Class: MastheadLoginIAmNewRdoBtnSlctd
        // Namespace: McMaster.MsgMgrMsgs
        // Summary: Defines a message to be published when login masthead "I An New"
	    //	    radio button is selected
        // Input:
        //  mHdr - The header to be stored within the message.
        //---------------------------------------------------------------------
	    this.MastheadLoginIAmNewRdoBtnSlctd = function(mHdr) {
			
            this.NM = McMaster.MsgMgrMsgs.MastheadLoginIAmNewRdoBtnSlctd.NM;
            
            var mPayload = new McMaster.MsgMgr.Payload();			
			
            // inherit from MsgBase
            this.myBase = McMaster.MsgMgrMsgs.MsgBase;
            this.myBase(mHdr, mPayload);			
			
	    };
	    	    
		//---------------------------------------------------------------------
        // Class: CntctInfoUpdtd
        // Namespace: McMaster.MsgMgrMsgs
        // Summary: Defines a message to be published when contact info is updated in order pad.
        // Input:
        //  mHdr - The header to be stored within the message.
        //---------------------------------------------------------------------
	    this.CntctInfoUpdtd = function(mHdr) {
			
            this.NM = McMaster.MsgMgrMsgs.CntctInfoUpdtd.NM;
            
            var mPayload = new McMaster.MsgMgr.Payload();			
			
            // inherit from MsgBase
            this.myBase = McMaster.MsgMgrMsgs.MsgBase;
            this.myBase(mHdr, mPayload);			
			
	    };		
		
		//---------------------------------------------------------------------
        // Class: CtlgPageBlocked
        // Namespace: McMaster.MsgMgrMsgs
        // Summary: Defines a message to be published when create password link 
	    //	    is selected
        // Input:
        //  mHdr - The header to be stored within the message.
        //---------------------------------------------------------------------
	    this.CtlgPageBlocked = function(mHdr) {
			
            this.NM = McMaster.MsgMgrMsgs.CtlgPageBlocked.NM;
            
            var mPayload = new McMaster.MsgMgr.Payload();				

            // inherit from MsgBase
            this.myBase = McMaster.MsgMgrMsgs.MsgBase;
            this.myBase(mHdr, mPayload);			
			
	    };	
		
		//---------------------------------------------------------------------
        // Class: FndAgainPlcdOrdsCmplt
        // Namespace: McMaster.MsgMgrMsgs
        // Summary: Defines a message to be published when an order is placed  
	    //	        and the find again information has been sucessfully recordered
		//			in the database.
        // Input:
        //  mHdr - The header to be stored within the message.
        //---------------------------------------------------------------------
	    this.FndAgainPlcdOrdsCmplt = function(mHdr) {
			
            this.NM = McMaster.MsgMgrMsgs.FndAgainPlcdOrdsCmplt.NM;
            
            var mPayload = new McMaster.MsgMgr.Payload();				

            // inherit from MsgBase
            this.myBase = McMaster.MsgMgrMsgs.MsgBase;
            this.myBase(mHdr, mPayload);			
			
	    };			
        // END REGION: Message Definitions
    	
        
    	// REGION: Message Names
        
	    //-----------------------------------------------------------------
        // Summary: The name of the message available without creating an
        //          instance.
        //-----------------------------------------------------------------
        
        // KEEP THESE VALUES ALPHABETIZED
        
        // "Loaded" actions, happening because of a web part or IFrame loading or unloading
        
        this.LegacyWebPartLoaded.NM = "LegacyWebPart_Loaded"; 
		this.NewHomePageInlineJSInit.NM = "NewHomePageInlineJS_Initialized";
        this.ShellInitContentLoaded.NM = "Shell_InitContent_Loaded";  	
        this.ShellLoaded.NM = "Shell_Loaded";    
        this.WebPartFatalErrOccurred.NM = "WebPart_FatalErrOccurred";
		this.WebPartLoaded.NM = "WebPart_Loaded";
        this.WebPartUnloaded.NM = "WebPart_Unloaded";    
		this.WebPartPreUnloaded.NM = "WebPart_PreUnloaded";
        
        // User actions
		this.AuthErrOccurred.NM = "AuthErr_Occurred";
		this.AbbrPrsnttnClicked.NM = "AbbrPrsnttn_Clicked";
        this.AbbrPrsnttnClosed.NM = "AbbrPrsnttn_Closed";
        this.AddnlContentSlctd.NM= "AddnlContent_Slctd";
        this.AppHelpSlctd.NM = "AppHelp_Slctd";
		this.BldOrdSlctd.NM = "BldOrd_Slctd";
        this.BMsSlctd.NM = "BMs_Slctd";
		this.BMLoginLoaded.NM = "BM_Login_Loaded";
		this.BrowserNavSlctd.NM = "Browser_Nav_Slctd";			
		this.Cad3dSlctd.NM = "Cad3D_Slctd";
		this.Cad2dSlctd.NM = "Cad2D_Slctd";			
		this.CadLnkSlctd.NM = "CadLnk_Slctd";
        this.CareersSlctd.NM = "Careers_Slctd";
        this.ChooseSpecsClearAllClick.NM = "ChooseSpecs_Clear_All_Click";
        this.ChooseSpecsFiltersChg.NM = "ChooseSpecs_Filters_Chg";
		this.ChooseSpecsSlctd.NM = "ChooseSpecs_Slctd";
        this.ChooseSpecsStatChg.NM = "ChooseSpecs_Stat_Chg";
		this.CollapseSecondaryContent.NM = "Collapse_SecondaryContent";
        this.CntctUsSlctd.NM = "CntctUs_Slctd";
		this.CntnctInfoUpdted.NM = "CntnctInfo_Updted";
        this.CurrOrdSlctd.NM = "CurrOrd_Slctd";
		this.CtlgPageBlocked.NM = "CtlgPage_Blocked";
    	this.CtlgPageSlctd.NM = "CtlgPage_Slctd";
		this.CtlgPageLoaded.NM = "CtlgPage_Loaded";
        this.DelParentSlctd.NM = "DelParent_Slctd";
        this.DelPartNbrSlctd.NM = "DelPartNbr_Slctd";
        this.DiscntndPartNbrSlctd.NM = "DiscntndPartNbr_Slctd";
        this.DiscntndPartNbrWthDelParentSlctd.NM = "DiscntndPartNbrWthDelParent_Slctd";
		this.DynamicContentFetchAheadDatRcvd.NM = "DynamicContentFetchAheadDatRcvd";
		this.DynamicContentSlctd.NM = "DynamicContent_Slctd";
		this.DynamicPageSlctd.NM = "DynamicPage_Slctd";
		this.DynamicPageUnloaded.NM = "DynamicPag_Done";
		this.FetchAheadDatRcvd.NM = "FetchAheadDat_Rcvd";
        this.FindTabSlctd.NM = "FindTab_Slctd";
        this.FndAgainPlcdOrdsCmplt.NM = "FndAgainPlcdOrdsCmplt";		
        this.FullPrsnttnClosed.NM = "FullPrsnttn_Closed";
        this.HelpSlctd.NM = "Help_Slctd";
        this.HomeSlctd.NM = "Home_Slctd";
        this.HomePageCatgMouseout.NM = "HomePageCatg_Mouseout";
        this.HomePageCatgMouseover.NM = "HomePageCatg_Mouseover";
        this.HomePageCatgSlctd.NM = "HomePageCatg_Slctd";
        this.HomePageNavCatgAlphaListSlctd.NM = "HomePageNavCatgAlphaListSlctd";
        this.HomePageNavCatgNormalListSlctd.NM = "HomePageNavCatgNormalListSlctd";
		this.ImgClicked.NM = "Img_Clicked";
		this.ImplicitSpecSlctd.NM = "Implicit_Spec_Slctd";
        this.IncmplOrdsChged.NM = "IncmplOrds_Chged";
		this.InlnOrdBxClosed.NM = "InlnOrdBx_Closed";		
		this.InLnSpecSlctd.NM = "InLnSpecSlctd";
		this.InlnOrdBxReopened.NM = "InlnOrdBx_Reopened";
		this.ItmPrsnttnSpecSlctd.NM = "ItmPrsnttnSpec_Slctd";
		this.ItmPrsnttnFetchAhead.NM = "ItmPrsnttnFetchAhead";
		this.OrdPadLnSpecSlctd.NM = "OrdPadLnSpecSlctd";
		this.SpecChoiceLnkSlctd.NM = "SpecChoiceLnkSlctd";
        this.HiddenSpecChoiceLnkSlctd.NM = "HiddenSpecChoiceLnkSlctd";
		this.IntermediatePageLoaded.NM = "IntermediatePageLoaded";			
        this.IntermediatePageSlctd.NM = "IntermediatePageSlctd";
        this.KyBoardNavKyPressed.NM = "KyBoardNav_KyPressed";
        this.LandingPageSlctd.NM = "LandingPage_Slctd";
		this.MainContentCntnrResized.NM = "MainContentCntnr_Resized";
		this.MultiPageNavExpanded.NM = "MultiPageNav_Expanded";
		this.MultiPageNavCollapsed.NM = "MultiPageNav_Collapsed";
        this.NeedHelpSlctd.NM = "NeedHelp_Slctd";
        this.NonCtlgPartNbrSlctd.NM = "NonCtlgPartNbr_Slctd";
        this.OrdDeleted.NM = "Ord_Deleted";
    	this.OrdForwarded.NM = "Ord_Forwarded";
		this.OrdHistLoginLoaded.NM = "OrdHist_Login_Loaded"
        this.OrdHistSlctd.NM = "OrdHist_Slctd";
        this.OrdLnsUpdated.NM = "OrdLns_Updated";
    	this.OrdPlcd.NM = "Ord_Plcd";
    	this.OrdSaved.NM = "Ord_Saved";
        this.ParentSlctd.NM = "Parent_Slctd";
        this.PartNbrSlctd.NM = "PartNbr_Slctd";
		this.PartNbrSrchd.NM = "PartNbr_Srchd";
        this.PartNbrNotFoundOnPg.NM = "PartNbr_NotFoundOnPg";
        this.PageResizeReq.NM="PageResize_Req";
		this.POTxtChged.NM = "POTxtChged";
		this.ProdPageFetchAheadDatRcvd.NM = "ProdPageFetchAheadDatRcvd";
		this.PSrchSlctd.NM = "PSrch_Slctd";
		this.PSrchFmlySlctd.NM = "PSrchFmly_Slctd";
		this.ProdPageSlctd.NM = "ProdPage_Slctd";
		this.ProdPageUnloaded.NM = "ProdPg_Done";
		this.ProdDtlLnkClicked.NM = "ProdDtlLink_Clicked";
		this.ProdInfoSlctd.NM = "Prod_Info_Slctd";
        this.RecentOrdsChged.NM = "RecentOrds_Chged";
        this.RecentOrdSlctd.NM = "RecentOrd_Slctd";
        this.ResizeBldOrdSlctd.NM = "ResizeBldOrd_Slctd";
        this.SavedOrdSlctd.NM = "SavedOrd_Slctd";
        this.SavedOrdsSlctd.NM = "SavedOrds_Slctd";
		this.SecondaryContentCollapsed.NM = "SecondaryContent_Collapsed";
        this.SecondaryContentToggleSlctd.NM = "SecondaryContentToggle_Slctd";
		this.SecondaryContentExpanded.NM = "SecondaryContent_Expanded";
        this.SecrSlctd.NM = "Secr_Slctd";
        this.ShellIFrameCreated.NM = "ShellIFrame_Created";
        this.SgnInChged.NM = "SgnIn_Chged";
		this.SgnOutSlctd.NM = "SgnOut_Slctd";
		this.SpclWrdSlctd.NM = "SpclWrd_Slctd";
        this.SpecSlctd.NM = "Spec_Slctd";
        this.SpecToggleLnkSlctd.NM = "Spec_Toggle_Lnk_Slctd"
        this.SpecUpdt.NM = "Spec_Updt";	
		this.SpecWebPartUnloaded.NM = "Spec_Unloaded";
		this.SpellingSuggSlctd.NM = "SpellingSugg_Slctd";
        this.SrchFetchAheadDatRcvd.NM = "SrchFetchAheadDatRcvd";
		this.SrchRsltFocused.NM = "SrchRslt_Focused";
        this.SrchRsltSlctd.NM = "SrchRslt_Slctd";
        this.SrchSubmitted.NM = "Srch_Submitted";
		this.SrchSuggCntnrCollapsed.NM = "SrchSugg_Cntnr_Collapsed";
		this.SrchSuggCntnrExpanded.NM = "SrchSugg_Cntnr_Expanded";
	    this.SrchSuggSlctd.NM = "SrchSugg_Slctd";
		this.SrchSuggStReset.NM = "SrchSugg_St_Reset";
        this.SrchTxtChged.NM = "Srch_TxtChged";
		this.TaxSlctd.NM = "Tax_Slctd";
		this.UnionRsltSlctd.NM = "UnionRsltSlctd";
        this.UnknownParentSlctd.NM = "UnknownParent_Slctd";
        this.UnknownPartNbrSlctd.NM = "UnknownPartNbr_Slctd";
        this.UnPubParentSlctd.NM = "UnPubParentSlctd";
        this.UnPubPartNbrSlctd.NM = "UnPubPartNbr_Slctd";
		this.UsrInpTxtChged.NM = "Usr_Inp_Txt_Chged";
		this.UsrInpTxtSubmitted.NM = "Usr_Inp_Txt_Submitted";
		this.WndwResized.NM = "Wndw_Resized";
		this.SiteSettingsSlctd.NM = "SiteSettings_Slctd";		
		this.LoginChged.NM = "Login_Chged";	
		this.LoginCanceled.NM = "Login_Canceled";	
		this.CrtePswdCanceled.NM = "CrtePswd_Canceled";	
		this.MastheadLoginSlctd.NM = "MastheadLogin_Slctd";		
		this.MastheadLoginCanceled.NM = "MastheadLogin_Canceled";	
		this.CntctInfoUpdtd.NM = "CntctInfo_Updtd";
		this.MastheadLoginLoaded.NM = "MastheadLogin_Loaded";
		this.MastheadLoginRdoBtnSlctd.NM = "MastheadLoginRdoBtn_Slctd";
		this.MastheadLoginIAmNewRdoBtnSlctd.NM = "MastheadLoginIAmNewRdoBtn_Slctd";
		this.PrsnttnNmClicked.NM = "FullPrsnttnNm_Clicked";
		
        // END REGION: Message Names
        
        
	    // REGION: Create Internal Message Array
        
	    // Create an array in which the messages defined in this class will be stored
	    var msgArr = new Array();		
        
	    // Iterate through this class's members
	    for (var memberMsg in this) {
        if (this.hasOwnProperty(memberMsg)) {
		    var msgNm = this[memberMsg].NM;
		    if (msgNm) {
			    if (msgNm != MSG_BASE_NM) {
				    // Member is a function with a "NM"; it is a message, so add it to the msgArr
				    msgArr.push(this[memberMsg]);
			    }
		    }
	    }	
    }
	    
	    // END REGION: Create Internal Message Array	
	    
		
	    // REGION: PUBLIC METHODS
        
	    // Returns an array of messages
	    // The name of the message can be accessed via the "NM" property
	    this.GetMsgs = function() {
		    return msgArr;
	    };
	    
	    // END REGION: Public Methods
    	
		
    }
}


if(this.McMaster){}else{McMaster=GetMcMaster();}if(this.McMaster.MsgMgr){}else{McMaster.MsgMgr=new function(){this.PRIORITY={LOW:"low",MEDIUM:"medium",HIGH:"high"};YAHOO.util.Event.throwErrors=true;this.ThrowJavaScriptErrorsInd=false;this.TrkJavaScriptErrorsInd=false;var c=new CmnColls.HashTable;this.AddSubscriber=function(k,r,p){var s=false;var o=r.toString();if(k){var l=j(k.NM);if(l){var i=l.subscribers;var q=true;for(var n=0;n<i.length;n++){var m=i[n].fn.toString();if(o==m){q=false;}}if(q==true){if(p==this.PRIORITY.HIGH){f(l,r);}else{if(p==this.PRIORITY.LOW){g(l,r);}else{a(l,r);}}s=true;}}}return s;};this.PubMsg=function(i){var m=j(i.NM);if(m){try{m.fire(i);}catch(k){if(this.TrkJavaScriptErrorsInd){var l=b(k);Cmn.TrkAct(l,"MsgMgrErr");}if(this.ThrowJavaScriptErrorsInd){throw (k);}}return true;}else{return false;}};this.RemSubscriber=function(k,q){var r=false;var p=q.toString();var n=new Array();if(k){var l=j(k.NM);if(l){var i=l.subscribers;for(var o=0;o<i.length;o++){var m=i[o].fn.toString();if(p==m){i.splice(o,1);r=true;break;}}}}return r;};this.RemAllSubscribers=function(i){var k=false;if(i){var l=j(i.NM);if(l){k=l.unsubscribeAll();}}return k;};var j=function(k){if(c.ContainsKy(k)){var i=c.Itm(k);return i;}else{return false;}};var f=function(m,i){var l=m.subscribers;var k=new YAHOO.util.Subscriber(i);l.splice(m.SUBSCRIBER_IDX.HIGH,0,k);m.SUBSCRIBER_IDX.HIGH=m.SUBSCRIBER_IDX.HIGH+1;m.SUBSCRIBER_IDX.MEDIUM=m.SUBSCRIBER_IDX.MEDIUM+1;};var a=function(m,i){var l=m.subscribers;var k=new YAHOO.util.Subscriber(i);l.splice(m.SUBSCRIBER_IDX.MEDIUM,0,k);m.SUBSCRIBER_IDX.MEDIUM=m.SUBSCRIBER_IDX.MEDIUM+1;};var g=function(m,i){var l=m.subscribers;var k=new YAHOO.util.Subscriber(i);m.subscribe(i);};var e=function(k){if(c.ContainsKy(k)){}else{var i=new YAHOO.util.CustomEvent(k,this,false,YAHOO.util.CustomEvent.FLAT);i.SUBSCRIBER_IDX={HIGH:0,MEDIUM:0};c.Add(k,i);}};var b=function(i){var k={};k.message="";k.nm="";k.ieErrNbr="notApplicable";k.fileNm="unknownFileName";k.lineNbr="unknownLineNbr";k.stackTrace="unknownStackTrace";if(i.description){k.message=i.description;}else{if(i.message){k.message=i.message;}}if(i.name){k.nm=i.name;}if(i.number){k.ieErrNbr=i.number;}if(i.stack){var l=i.stack;if(l.length>700){l.substr(0,699);}k.stackTrace=l;}return k;};var d=McMaster.MsgMgrMsgs.GetMsgs();for(var h=0;h<d.length;h++){e(d[h].NM);}};}

if (this.McMaster) {
} else {
McMaster = GetMcMaster()
}
if (this.McMaster.MsgMgrHdr) {
} else {
McMaster.MsgMgr.Hdr = function(msgCntxt, verNbr) {
var DEFLT_VER_NBR = "1.0";
var ERR_MSG_CNTXT = null;
if (msgCntxt) {
if (McMaster.MsgMgr.CntxtNms.ChkVldCntxtNm(msgCntxt)) {
this.CntxtNm = msgCntxt;
} else {
this.CntxtNm = ERR_MSG_CNTXT;
}
} else {
this.cntxtNm = ERR_MSG_CNTXT;
}
if (verNbr) {
this.verNbr = verNbr
} else {
this.verNbr = DEFLT_VER_NBR;
}
} // End McMaster.MsgMgr.Hdr()
McMaster.MsgMgr.Hdr.ERR_MSG_CNTXT = null;
} // End check for McMaster.MsgMgr


if(this.McMaster){}else{McMaster=GetMcMaster();}if(!this.McMaster.MsgMgr){}else{McMaster.MsgMgr.Payload=function(){this.CntnrNm=null;this.EcmrcMode=null;this.HelpTopic=null;this.LoadFrmSesn=null;this.OrdID=null;this.SrchRsltInfoTyp=null;this.SrchRsltInfoObj=null;this.UsrInpTxt=null;this.UsrNm=null;this.PO=null;this.SiteTitlTxt=null;this.URLHashTxt=null;this.URLHashArgsTxt=null;this.BldOrdExpandedInd=null;this.LowRsltnInd=null;this.KyCd=null;this.SrchTxt=null;this.PrsnttnId=null;this.SpecAttrId=null;this.AttrCompIds=null;this.PartNbr=null;this.TS=null;this.AddnlContent=null;this.ChooseSpecsAutoStatChgInd=null;this.ChooseSpecsSt=null;this.AutoSlctdInd=null;this.LnSeqNbr=null;this.AttrNmsTxt=null;this.AttrValsTxt=null;this.CadImgSlctdInd=false;this.PSrchDscIdsArr=[];this.SpclWrdJavascriptMthdNm=null;this.SpellingSuggTxt=null;this.SpellingSuggNewArgTxt=null;this.SpellingSuggOrigTxt=null;this.SpellingSuggSuggSeq=null;this.CtlgPageNbr=null;this.SrchTyp=null;this.CtlgEdtnNbr=null;this.RelatedCtlgPagesArr=[];this.CareerCntxt=null;this.StateTxt=null;this.PrsnttnUsrInp=null;this.SpecSrchInp=null;this.ImgUsrInp=null;this.FetchAheadRsltNm=null;this.FetchAheadSrchRsltID=null;this.PrsnttnRankSeq=null;this.VstrKnownInd=null;};}

if(this.McMaster){}else{McMaster=GetMcMaster();}if(!this.McMaster.MsgMgr){}else{McMaster.MsgMgr.CntxtNms=new function(){this.ADDNL_CONTENT="AddnlContent";this.ABBR_PRSNTTN="AbbrPrsnttn";this.ADD_ITM_SUCCESS="AddItmSuccess";this.AUTH_ERR_HANDLER="AuthErrHandler";this.BLD_ORD="BldOrd";this.BMS="BMs";this.BOTTOM_NAV_WEB_PART="BottomNavWebPart";this.CAD="Cad";this.CAD_WEB_PART="CadWebPart";this.CAREERS="Careers";this.CHG_SGN_IN="ChgSgnIn";this.CHG_SGN_IN_CONFIRMATION="ChgSgnInConfirmation";this.CHOOSE_SPECS="ChooseSpecs";this.CNCL_CONFIRMATION="CnclConfirmation";this.CNTCT_US="CntctUs";this.CNXN_MGR="CnxnMgr";this.CONTENT="ContentWebPart";this.CRTE_SGN_IN="CrteSgnIn";this.CTLG_PAGE="CtlgPage";this.CTLG_PAGE_WEB_PART="CtlgPageWebPart";this.DYNAMIC_CONTENT_COORDINATOR="DynamicContentCoordinator";this.DYNAMIC_CTLG_PAGE="DynamicCtlgPage";this.DYNAMIC_PAGE="DynamicPage";this.EMAIL_CRTE_SGN_IN_CONFIRMATION="EmailCrteSgnInConfirmation";this.FETCH_AHEAD="FetchAhead";this.FILTER_PANE="FilterPane";this.FIND_TAB="FindTab";this.FND_AGAIN="FndAgain";this.FULL_PRSNTTN="FullPrsnttn";this.HOME_PAGE="HomePage";this.HOME_PAGE_NAV="HomePageNav";this.HOME_PAGE_URL_MONITOR="HomePageUrlMonitor";this.HTML_CTLG_PAGE="HTMLCtlgPage";this.INCMPL_ORDS="IncmplOrds";this.INLN_ORD="InLnOrd";this.INTERMEDIATE_PAGE="IntermediatePage";this.INTERMEDIATE_PRSNTTN="IntermediatePrsnttn";this.ITM_CONFIRMATION="ItmConfirmation";this.ITM_INFO="ItmInfo";this.ITM_PRSNTTN="ItmPrsnttn";this.LOADING_ORD_PAD="LoadingOrdPad";this.LOGIN="Login";this.LOGOFF="Logoff";this.LANDING_PAGE="LandingPage";this.MASTHEAD="MastHead";this.MCMASTERCOM_LOADMGR="McMasterComLoadMgr";this.MCMLOGO="McmLogo";this.NEED_HELP="NeedHelp";this.NEW_HOME_PAGE_INLINE_JS="NewHomePageInlineJSInit";this.ORD_CONFIRMATION="OrdConfirmation";this.ORD_DTL="OrdDtl";this.ORD_HIST="OrdHist";this.ORD_INFO="OrdInfo";this.ORD_NAV="OrdNav";this.ORD_PAD="OrdPad";this.NEW_ORD_PAD="NewOrdPad";this.PDF_CTLG_PAGE="PDFCtlgPage";this.PROD_PAGE="ProductPage";this.PROD_DAT_PROTECTION="ProdDatProtection";this.PROD_DAT_PROTECTION_EMAIL_REQD="ProdDatProtectionEmailReqd";this.PRODUCTS="Products";this.PRSNTTN="Prsnttn";this.PSRCH="PSrch";this.RECENT_ORDS="RecentOrds";this.RESET_PSWD_EMAIL="ResetPswdEmail";this.RESET_PSWD_EMAIL_CONFIRMATION="ResetPswdEmailConfirmation";this.RTRV_BMS="RtrvBMs";this.SECR_PREF="SecrPref";this.SECR_PREF_CONFIRMATION="SecrPrefConfirmation";this.MCM_SESN_MGR="McMasterSesnMgr";this.SGN_IN="SgnIn";this.SHELL="Shell";this.SETTINGS="SiteSettings";this.SND_EMAIL_CONFIRMATION="SndEmailConfirmation";this.SPCL_WRD_LOADER="SpclWrdLoader";this.SPEC="Spec";this.SRCH="Srch";this.SRCH_ENTRY_WEB_PART="SrchEntryWebPart";this.SRCH_RSLT_EVNT_HANDLER="SrchRsltEvntHandler";this.SRCH_RSLT_WEB_PART_LOADER="SrchRsltWebPartLoader";this.SRCH_RSLTS="SrchRslts";this.SRCH_SUGG="SrchSugg";this.SUPPLIER="Supplier";this.TEMP_USR_INP_TOGGLE="TempUsrInpToggle";this.TOOLBAR="Toolbar";this.TRKR="Tracker";this.URL_MGR="UrlMgr";this.WEB_TOOLSET_WEB_PART="WebToolsetWebPart";this.MULTI_PAGE_NAV_TOOL="MultiPageNav";var a=new Array();for(var b in this){if(this.hasOwnProperty(b)){if(typeof b=="string"){a.push(this[b]);}}}this.ChkVldCntxtNm=function(c){var e=false;for(var d=0;d<a.length;d++){if(a[d]==c){e=true;break;}}return e;};};}

if(McMaster.Globals){}else{McMaster.Globals=new function(){this.CONTENT_LOADER_TIMEOUT_MS_CNT=15000;this.SPEC_SRCH_LOADER_TIMEOUT_MS_CNT=15000;};}

this.McMaster.CnxnMgr||(McMaster.CnxnMgr=new function(){var f=new CmnColls.HashTable,l=2053;this.PerformAjaxCnxn=function(a,b,c){var d;if(b){b.cnxnParm=b.cnxnParm||{};b.cnxnParm.respTyp=b.cnxnParm.respTyp||"";b.timeout=b.timeout||"15000";b.maxRetry=b.maxRetry||2;var g;d=a;if(0<=d.indexOf("204.asp"))g="GET";else switch(b.httpMthd){case "POST":g=b.httpMthd;break;default:d.length>l||!0===Cmn.ChkLoadedSecure()?(g="POST",d=d.split("?",2),b.postDat=d[1]):g="GET"}var e=a;d=m(b);var r=n(b),h=p(b,c);c=q(e,
b,c);e=s(b);c={customevents:{onStart:d,onComplete:r,onSuccess:h,onFailure:c,onAbort:e},scope:b.scope,argument:b.cnxnParm,timeout:b.timeout};0===Cmn.GetCookieVal("sesnextrep").length?(d=McMaster.SesnMgr.GetStVal(McMaster.SesnMgr.StValDefs.SesnExtRepKy.KyTxt()),a=Cmn.AddQSNmVal(a,"sesnextrep",d)):a=Cmn.RemoveQSNmVal(a,"sesnextrep");!0===Cmn.IsTouchAware()&&!0===b.sendTouch&&(a=Cmn.AddQSNmVal(a,"touch","true"));!0===Cmn.IsAppMode()&&(a=Cmn.AddQSNmVal(a,"appmode","true"));"0"===Cmn.GetCookieVal("gzip")&&
(a=Cmn.AddQSNmVal(a,"gzip","0"));d=McMaster.SesnMgr.GetStVal(McMaster.SesnMgr.StValDefs.EnvrMgrCharSetInd.KyTxt());null!=d&&0<d&&(a=99==d?Cmn.AddQSNmVal(a,"envrmgrcharsetind",1):Cmn.AddQSNmVal(a,"envrmgrcharsetind",d));d=Cmn.GetQSVal("combine_content");""!==d&&(a=Cmn.AddQSNmVal(a,"combine_content",d));d=t(g,a,c,b.postDat);f.Add(d.tId,{retryCnt:0,httpMthd:g,url:a,yuiCallback:c,postDat:b.postDat,maxRetry:b.maxRetry})}return d};this.AbortAjaxCnxn=function(a){if(a){var b=!1,c=f.Itm(a.tId);c&&(b=YAHOO.util.Connect.abort(a,
c.yuiCallback));return b}};this.ModifyCnxn=function(a,b,c){a&&(a.startEvent.unsubscribeAll(),a.startEvent.subscribe(m(b)),a.completeEvent.unsubscribeAll(),a.completeEvent.subscribe(n(b)),a.successEvent.unsubscribeAll(),a.successEvent.subscribe(p(b,c)),a.failureEvent.unsubscribeAll(),a.failureEvent.subscribe(q(a.url,b,c)),a.abortEvent.unsubscribeAll(),a.abortEvent.subscribe(s(b)));return a};var t=function(a,b,c,d){a=YAHOO.util.Connect.asyncRequest(a,b,c,d);a.url=b;return a},u=function(a){var b=!1,
c=f.Itm(a);if(c)if(c.retryCnt>=c.maxRetry)f.Rem(a);else{if(0===c.retryCnt&&994<c.url.length){c.httpMthd="POST";a=c.url.split("?",2);c.url=a[0];c.postDat=a[1];var d=c.yuiCallback.customevents.onSuccess;c.yuiCallback.customevents.onSuccess=function(a,b){l=994;d(a,b)}}setTimeout(function(){t(c.httpMthd,c.url,c.yuiCallback,c.postDat)},200);c.retryCnt+=1;b=!0}return b},m=function(a){return function(b,c){"function"===typeof a.strt&&a.strt()}},n=function(a){return function(b,c){"function"===typeof a.cmpl&&
a.cmpl()}},p=function(a,b){return function(c,d){var g=d[0],e=a.cnxnParm,r=e.respTyp;respHdr=g.getAllResponseHeaders;var h=g.responseText,k="";if(h)switch(r.toUpperCase()){case McMaster.CnxnMgr.WEB_PART_RESP_TYP_TXT:try{if(/^\d{10}/.test(h)){var l=1*h.substring(0,10),m=h.substring(10,10+l),n=h.substring(10+l),k=YAHOO.lang.JSON.parse(m);k.MarkupTxt=n}else k=YAHOO.lang.JSON.parse(h)}catch(p){Cmn.TrkAct("0110ErrorParsingWebPartResponse&status="+p.name,"McMaster.CnxnMgr")}break;case McMaster.CnxnMgr.JSON_RESP_TYP_TXT:try{k=
YAHOO.lang.JSON.parse(h)}catch(q){Cmn.TrkAct("0120ErrorParsingJsonResponse&status="+q.name,"McMaster.CnxnMgr")}break;default:k=h}"function"===typeof a.success&&a.success(k,e,b,respHdr);f.Rem(g.tId)}},q=function(a,b,c){return function(a,c){var e=c[0],f=b.cnxnParm;switch(e.status){case 403:e.authErr=!0;"function"===typeof b.failure&&b.failure(e,f);0>e.responseText.indexOf("hroXm{+sWhit-ZI2i<Z5aOk$qnA;1hQUsfj&n)e2")?(McMaster.LoadMgr.ResetShowCntnr("MainIFrame"),MainIFrame.document.open(),0<e.responseText.length?
MainIFrame.document.write(e.responseText):MainIFrame.document.write('<div xmlns="http://www.w3.org/1999/xhtml" id="MainContent" style="display: block;"><div id="CnxnMgr_webToolSetCntnr" style="padding-bottom: 22px;"><div class="WebToolsetWebPart_Cntnr" style="top: 80px; left: 30px; width: 1219px;"><div class="WebToolsetToolWebPart_Cntnr WebToolsetToolWebPart_Aligned_LEFT WebToolsetToolWebPart_TxtTool_Cntnr">Access has been restricted</div></div></div><div id="ProdDatProtectionWebPart_MainContentCntnr"><p>We apologize for the interruption.</p><br /><p>We detected something unusual in your configuration. Please <a href="/#contact">contact us</a> to resolve the issue.</p></div></div>'),
MainIFrame.document.close()):(e=new McMaster.MsgMgr.Hdr(McMaster.MsgMgr.CntxtNms.CNXN_MGR),e=new McMaster.MsgMgrMsgs.AuthErrOccurred(e),McMaster.MsgMgr.PubMsg(e));break;default:u(e.tId)||"function"===typeof b.failure&&b.failure(e,f)}}},s=function(a){return function(b,c){var d=c[0];"function"===typeof a.abort&&a.abort();f.Rem(d.tId)}};window.ActiveXObject&&Cmn.AddEvntListener(window,"unload",function(){for(var a=f.Vals(),b=0;b<a.length;b++)McMaster.CnxnMgr.AbortAjaxCnxn(a[b])})},McMaster.CnxnMgr.WEB_PART_RESP_TYP_TXT=
"WEBPART",McMaster.CnxnMgr.JSON_RESP_TYP_TXT="JSON");


/// <reference path="MyDEVReferences.js" />
if (this.CADWebPart) {
	// Continue
} else {
	
	CADWebPart = new function() {
	/// <summary>
	/// Contains client-side functionality for the CAD Web Part. 
	/// </summary>
	
		/// #Region "Declarations"

		var Me = this;
		var CAD_HTTP_HANDLER_URL = "/WebParts/CADWebPart/CAD.aspx";
		var ACT_TXT = "acttxt";
		var ADD_ORD_LN = "addordln";
		var PART_NBR_TXT = "partnbrtxt";		
		var SET_CAD_DWNLD_PREF = "setcaddwnldpref";
		var CAD_DWNLD_PREF_NM = "caddwnldprefnm";
		var IGNORE_ERROR_IND_QS_KY_TXT = "ignoreerrorind";
		var QTY_TXT = "qtytxt";
		var ATTR_NM = "attrnm";
		var ATTR_VAL = "attrval";
		var SML_TECH_DRAWING_SFX = "S.GIF"; 
		var PDF_FRMT_TYP_TXT = "PDF"; 
		var mMetaDat; 
		var mWebPartObj;
		var mReadyNxtAjaxCallInd = true; 
		var mErrAlertBuffer = 10;
		var MIN_SCRN_SIZE_LRGE_CONFIG = 1140; 
		var ENT_KY_CD = 13; 
		var QTY_ERR_MSG = "Please enter a quantity."; 
		var FIRM_PKG_ERR_IND = "firmpkgerrind";
		/// #End Region

		/// #Region "Event Handlers"
		
		Me.WebPart_Load = function(webPartObj) {
			/// <summary>
			/// Called when the web part loads and performs initialization
			/// functionality.
			/// </summary>
			/// <param name="webPartObj">
			/// The current instance of the CAD web part object.
			/// </param>
			/// <remarks>
			/// The main thing this load method does is figures out which CAD 
			/// configuration to load; that is, if the screen is small, we 
			/// place the download options container above the technical drawing
			/// instead of beside it when the screen is large. 
			/// </remarks>
						
			var msgNm, msgHdr, webPartLoadedMsg;
			var transCntnr = Cmn.GetObj("CadWebPart_TransInfoCntnr"); 
			var cadWebPartCntnr = Cmn.GetObj("CADWebPartCntnr");
			var cadInfoCntnr = Cmn.GetObj("CadWebPart_CadInfoCntnr"); 
			var dwnldOptsCntnr = Cmn.GetObj("CadWebPart_DwnldOptsCntnr");
			var techDrwingCntnr = Cmn.GetObj("CadWebPart_TechDrawingCntnr"); 
			var viewportWidth = Cmn.GetViewportWidth();
			mWebPartObj = webPartObj; 
			
			// Build and publish a loaded message.
			msgNm = McMaster.MsgMgr.CntxtNms.INLN_ORD;
			msgHdr = new McMaster.MsgMgr.Hdr(msgNm); 
			
			// Create the web part loaded message. 
			webPartLoadedMsg = new McMaster.MsgMgrMsgs.WebPartLoaded(msgHdr, webPartObj.CntnrIDTxt);
			
			// Publish the web part loaded message. 
			McMaster.MsgMgr.PubMsg(webPartLoadedMsg);			
			
			//Special styling required for IE6 so the transaction container has a max-width of 250.
			if (Cmn.IsIE6()) {
				Cmn.SetStyle(transCntnr, "width", 250 + "px"); 
			}
			
			
			// Position the transactional information so that it's flush with the download container.
			// 1140px is the minimum width of the screen that will support the download options container
			// beside the technical drawing.
			if(viewportWidth < MIN_SCRN_SIZE_LRGE_CONFIG) {				
				var cad3DMdlCntnr = Cmn.GetObj("CadWebPart_3DMdlCntnr"); 
				var cad2DMdlCntnr = Cmn.GetObj("CadWebPart_2DMdlOptsCntnr"); 
				
				// Change the class on the download options container so that it is wider and
				// no longer floated to the right of the technical drawing. 
				Cmn.ReplaceCls(dwnldOptsCntnr,
							   "CadWebPartLayout_DwnldOptsLrgResCntnr",
							   "CadWebPartLayout_DwnldOptsSmlResCntnr");
							   
				// Change the classes on the 3D and 2D options containers so that they
				// appear side-by-side instead of on top of one another. 
				Cmn.ReplaceCls(cad3DMdlCntnr, "CadWebPartLayout_3DMdlLgResCntnr", "CadWebPartLayout_3DMdlSmlResCntnr"); 
				Cmn.AddCls(cad2DMdlCntnr, "CadWebPartLayout_2DMdlSmlResCntnr"); 
				
				// Float the technical drawing container and the container that contains it (as well
				// as the rest of the CAD information) left so that they are stacked. 
				Cmn.RemCls(techDrwingCntnr, "CadWebPartLayout_Left"); 
				Cmn.RemCls(cadInfoCntnr, "CadWebPartLayout_Left");
				
				// Float the transaction container right so it ends with the edge of the page. 
				Cmn.ReplaceCls(transCntnr, 
							   "CabWebPartLayout_AddToOrdInfo", 
							   "CadWebPartLayout_TransInfoSmlResCntnr");				
				
			} else {
				// Set the widths of the containers so that the information does not run together. 
				setCntnrWidths(viewportWidth, cadWebPartCntnr, transCntnr, dwnldOptsCntnr);
			}
			
			//Sets the help context when the CAD part loads to direct the help link to the correct help page
			McMaster.SesnMgr.SetStVal(McMaster.SesnMgr.StValDefs.HelpCntxtTxt.KyTxt(), "drawingsandmodels");
			
			// This is for the back button, but we're not ready to install it. 
			// If we are loading the CAD page due to a click of the CAD link
			// rather than a back/forward click, we want to take a back button
			// snapshot.
			if(webPartObj.CadLnkClckInd) {
				Me.TakeSnapShot();
			}
		}

		Me.WebPart_PreUnload = function(webPartObj){

		};

		Me.WebPart_Unload = function(webPartObj) {
			/// <summary>
			/// Called just prior to the web part unloading and takes steps to clean
			/// up global data and report the unload to the rest of the site.
			/// </summary>
			/// <param name="webPartObj">
			/// The current web part object.
			/// </param>
			
			// Create a web part unloaded message. 
			var msgNm = McMaster.MsgMgr.CntxtNms.INLN_ORD;
			var msgHdr = new McMaster.MsgMgr.Hdr(msgNm);
			var cntnrNm = webPartObj.CntnrIDTxt;
			var webPartUnLoadedMsg = new McMaster.MsgMgrMsgs.WebPartUnloaded(msgHdr, cntnrNm);
			
			// Publish the message
			McMaster.MsgMgr.PubMsg(webPartUnLoadedMsg);
		};

		Me.AddToOrdBtn_Click = function(btn, partNbrTxt) {
			/// <summary>
			/// Adds the selected product to the user's order. 
			/// </summary>
			/// <param name="btn">The button on which the user clicked.</param>
			/// <param name="partNbrTxt">The part number text.</param>

			var transCntnr = Cmn.GetAncestorByClsNm(btn, "CadWebPartLayout_TransInfo"); 
			var qtyInp = Cmn.GetObj("CadWebPart_QtyInp");
			var qtyInpTxt = qtyInp.value;
			var attrSlctCntnr = Cmn.Get("InLnOrdWebPartAttrCntnr" + partNbrTxt);
			var attrSlcts = Cmn.GetElementsByClsNm("InLnOrdWebPart_AttrSlct", "select", attrSlctCntnr);
			var attrnms = [], attrvals = [], addtoOrdBxCntnr, inpQtyBxCntnr, inpBx;
			var attrMissingInd = false;
			var qtyErrCntnr = Cmn.GetElementsByClsNm("CadWebPartLayout_QtyErr", "div", transCntnr)[0];
			var checkQtyErrInd = true;
			var qtyAlertCntnr = Cmn.GetObj("CadWebPart_QtyAlert");

			// Change zero quantity to empty string.
			if (parseFloat(qtyInpTxt) == 0) {
				qtyInpTxt = "";
			}

			// Sub-routine that creates the ajax connection. 
			var performAjaxCnxn = function() {
			
				// Set the indicator to false to indicate that a call has already been made.
				// Don't want to add multiple lines of a single item to order because user
				// clicked or hit enter multiple times quickly.
				mReadyNxtAjaxCallInd = false; 
			
				var ignoreErrInd = false; 
				
				if(qtyAlertCntnr) {
					ignoreErrInd = Cmn.HasCls(qtyAlertCntnr, "CadWebPartLayout_Alert"); 
				} 
			
				var cnxnObj = {
					success: hndlAddToOrdAJAXResp,
					failure: hndlFailedAddToOrdAJAXResp,
					cnxnParm: {
						respTyp: McMaster.CnxnMgr.WEB_PART_RESP_TYP_TXT,
						PartNbrTxt: partNbrTxt
						}
				};

				var url = CAD_HTTP_HANDLER_URL + "?" +
							ACT_TXT + "=" + 
							ADD_ORD_LN + "&" +
							PART_NBR_TXT + "=" +
							partNbrTxt + "&" +
							QTY_TXT + "=" +
							encodeURIComponent(qtyInpTxt) + "&" +
							ATTR_NM + "=" +
							attrnms + "&" +
							ATTR_VAL + "=" +
							attrvals + "&" +
							IGNORE_ERROR_IND_QS_KY_TXT + "=" +
							ignoreErrInd + "&" +
							FIRM_PKG_ERR_IND + "=" +
							!Cmn.HasCls(qtyErrCntnr, "Hide");

				// Use Connection Manager to call the web part's HTTP handler.
				McMaster.CnxnMgr.PerformAjaxCnxn(url, cnxnObj);
			}
			// This is for attributes when they get added

			//for (var slctIdx = 0; slctIdx < attrSlcts.length; slctIdx++) {
			//	attrnms[slctIdx] = attrSlcts[slctIdx].id;
			//	attrvals[slctIdx] = attrSlcts[slctIdx].options[attrSlcts[slctIdx].selectedIndex].value;
			//	if (attrvals[slctIdx].length == 0) {
			//		attrMissingInd = true;
			//	}
			//}		

			// Check for errors, if there are none send request to server.		
			if(attrMissingInd) {
				alertCntnr.innerHTML = "Please complete the specification for this item.";
			} else if(Cmn.HasCls(qtyErrCntnr, "Hide") && qtyInpTxt.length == 0){
				qtyErrCntnr.innerHTML = QTY_ERR_MSG; 
				Cmn.ReplaceCls(qtyErrCntnr, 'Hide', 'Show');
				Cmn.TrkAct('CADQtyErr', 'CAD');
			} else if(mWebPartObj.MetaDat.WebOrdLnWrapper.Itm.IsFirmPkgInd && (qtyInpTxt.indexOf("-") > -1 || qtyInpTxt.indexOf("/") > -1) && Cmn.HasCls(qtyErrCntnr, "Hide")) {
				// This item is sold in a firm package and the customer entered a value that contains
				// a "-" or a "/". We need to send that information to the server for parsing. 
				performAjaxCnxn(); 
			} else if(mWebPartObj.MetaDat.WebOrdLnWrapper.Itm.IsFirmPKgInd && (parseFloat(qtyInpTxt) % 1 > 0)) {
				// This item is sold in a firm package and the customer entered a quantity that breaks
				// the package. Show an error message.
				qtyErrCntnr.innerHTML = "This item is sold in packs of " + mWebPartObj.MetaDat.WebOrdLnWrapper.Itm.SellStdPkgQty + "."; 
				Cmn.ReplaceCls(qtyErrCntnr, "Hide", "Show"); 
				Cmn.TrkAct("CADFirmPkgErr&partnbr=" + partNbrTxt, "CAD"); 
			} else if (mReadyNxtAjaxCallInd) {
				// If the indicator is true, there is not an ajax connection already in progress and
				// another request can be executed.
				performAjaxCnxn();
			}
		};
		
		Me.InpBxKeyUp = function(evnt, inpBx, partNbrTxt) {
			/// <summary>
			/// Checks the key press from the input box for enters and 
			/// calls the add to order function if so.
			/// </summary>
			/// <param name="evnt"> The key up event on the input quantity box. </param>
			/// <param name="inpBx"> The input quantity box. </param>
			/// <param name="partNbrTxt"The part number text.></param>
			
			if (evnt.keyCode == ENT_KY_CD) {
				Me.AddToOrdBtn_Click(inpBx, partNbrTxt);
			} else {
				var transCntnr = Cmn.GetAncestorByClsNm(inpBx, "CadWebPartLayout_TransInfo"); 
				var qtyErrCntnr = Cmn.GetElementsByClsNm("CadWebPartLayout_QtyErr", "div", transCntnr)[0];
				qtyErrCntnr.innerHTML = QTY_ERR_MSG;
				Cmn.ReplaceCls(qtyErrCntnr, "Show", "Hide");
			}
		};
		
		Me.SaveCADFileBtn_Click = function() {
			/// <summary>
			/// Handles a click on the "Save" button inside the download menu. 
			/// </summary>
			
			var mainCntntCntnr = Cmn.GetObj("MainContent"); 
			var mainCadCntnr = Cmn.GetFrstChld(mainCntntCntnr);
			var rdoInps = Cmn.GetElementsByClsNm("CadWebPart_RdoInp", "input", Cmn.GetObj("CadWebPart_DwnldOptsCntnr")); 
			var rdoBtnLblNms = Cmn.GetElementsByClsNm("CadWebPart_RdoLbls", "label", Cmn.GetObj("CadWebPart_DwnldOptsCntnr")); 
			var slctdTypFileURITxt; 
			var slctdRdoInpLbl; 
			var mainIFrameCntnr = Cmn.GetNxtSibling(mainCntntCntnr); 
			var cadDwnldIFrame = Cmn.GetFrstChld(mainIFrameCntnr);
													
			//Item presentation cad download option
			var cadOpts = Cmn.GetElementsByClsNm("CadOpt");
			if (cadOpts.length > 0) {
				for (var idx=0; idx < cadOpts.length; idx++){
					if (Cmn.HasCls(cadOpts[idx], "CadOptSlctd")){
						slctdTypFileURITxt = cadOpts[idx].getAttribute("data-mcm-cad-option");
						slctdRdoInpLbl = cadOpts[idx].innerHTML;
						break;
					}
				}
			}else{
				// Loop through the radio inputs and figure out which one the user
				// has checked. 
				for(var rdoInpIdx = 0; rdoInpIdx < rdoInps.length; rdoInpIdx++) {
					if(rdoInps[rdoInpIdx].checked) {
						slctdTypFileURITxt = rdoInps[rdoInpIdx].value; 
						break;
					}
				}							
				
				// Get the label (format type) of the selected input. 
				slctdRdoInpLbl = rdoBtnLblNms[rdoInpIdx].innerHTML;
			}
			
			// Set the source of the iframe to the URI text. This will
			// either show the PDF formats or create a popup with the
			// file to download.
			cadDwnldIFrame.src = slctdTypFileURITxt; 
			
			// If the format is PDF, then we have to manually hide the
			// contents of the main iframe. 
			if(slctdTypFileURITxt.indexOf(PDF_FRMT_TYP_TXT) > -1) {
				Cmn.SetStyle(cadDwnldIFrame, "display", "block"); 
				Cmn.SetStyle(mainCntntCntnr, "display", "none"); 
				
				//Take a snapshot for the back button if a PDF was 
				//loaded
				Me.TakeSnapShot();
				
			} else {
				// Do nothing. 
			}
			
			// Create the connection object.
			var cnxnObj = {
				success: hndlSetCADPrefAJAXResp
			};

			// Build the query string URL. 
			var url = CAD_HTTP_HANDLER_URL + "?" +
					  ACT_TXT + "=" +
					  SET_CAD_DWNLD_PREF + "&" +
					  CAD_DWNLD_PREF_NM + "=" +
					  slctdRdoInpLbl; 
			
			// Perform the AJAX connection. 
			McMaster.CnxnMgr.PerformAjaxCnxn(url, cnxnObj); 
			
			// Tracking for web reports. 
			Cmn.TrkAct('CADSave&FileTyp=' + slctdRdoInpLbl,'CAD');
		}
		
		Me.GifLnk_Click = function(lnk, uriTxt) {
			/// <summary>
			/// Handles link clicks to the "Small" and "Large" links
			/// above the technical drawing. Swaps the images depending on
			/// what the user wants to see.
			/// </summary>
			/// <param name="lnk">The link on which the user clicked.</param>
			/// <param name="uriTxt">The URI at which the image is located.</param>
			
			var imgCntnr = Cmn.GetObj("CADWebPart_ImgCntnr"); 
			
			if(uriTxt.indexOf(SML_TECH_DRAWING_SFX) > -1) {
				// The user clicked on the "Small" link. 
				var verticalSeprt = Cmn.GetNxtSibling(lnk); 
				var largeLnk = Cmn.GetNxtSibling(verticalSeprt); 
				
				// Turn the font color of the selected link from blue to black.
				Cmn.ReplaceCls(lnk, "AddnlInfoLnk", "CadWebPartLayout_SlctdLnk"); 
				
				// Turn the font color of the unselected link from black to blue. 
				Cmn.ReplaceCls(largeLnk, "CadWebPartLayout_SlctdLnk", "AddnlInfoLnk"); 
				
			} else {
				// The user clicked on the "Large" link. 
				var verticalSeprt = Cmn.GetPrevSibling(lnk); 
				var smallLnk = Cmn.GetPrevSibling(verticalSeprt); 
				
				// Turn the font color of the selected link from blue to black. 
				Cmn.ReplaceCls(lnk, "AddnlInfoLnk", "CadWebPartLayout_SlctdLnk"); 
				
				// Turn the font color of the unselected link from black to blue. 
				Cmn.ReplaceCls(smallLnk, "CadWebPartLayout_SlctdLnk", "AddnlInfoLnk");
			}

			// Replace the image container with the size of the image the 
			// user selected. 
			imgCntnr.innerHTML = "<img src='" + uriTxt + "' /></div>";
		}
		
		Me.ImgLoad = function () {
			/// <summary>
			/// Called when the image loads. We need this function because the image
			/// does not load as quickly as the page. If we make adjustments to the
			/// display before the image loads, it can lead to some ugly layouts.
			/// </summary>
			var transCntnr = Cmn.GetObj("CadWebPart_TransInfoCntnr"); 
			var cadWebPartCntnr = Cmn.GetObj("CADWebPartCntnr");
			var dwnldOptsCntnr = Cmn.GetObj("CadWebPart_DwnldOptsCntnr");
			var viewportWidth = Cmn.GetViewportWidth();
			if(viewportWidth < MIN_SCRN_SIZE_LRGE_CONFIG) {	
				// Do nothing as the container widths will not need to be adjusted.
			} else {
				// Set the widths of the containers so that the information doesn't run together.
				setCntnrWidths(viewportWidth, cadWebPartCntnr, transCntnr, dwnldOptsCntnr);
			}
		}
		
		Me.TakeSnapShot = function () {
			/// <summary>
			/// Takes a snap shot for back button use.
			/// </summary>
			
			//The StVal.Defs name for CAD pages
			var sesnStNbr = McMaster.SesnMgr.GetStVal(McMaster.SesnMgr.StValDefs.CadInLnOrdBxLoadedSesnStat.KyTxt());
			if(sesnStNbr == null) sesnStNbr = -1;
			McMaster.SesnMgr.SetStVal(McMaster.SesnMgr.StValDefs.CadInLnOrdBxLoadedSesnStat.KyTxt(), sesnStNbr + 1);
		}
		
		Me.DetailsLnk_Click = function() {
			window.open("../../help/drawingsandmodels.asp#disclaimer",'helpWindow','width=835,height=400,toolbar,status,scrollbars=yes,resizable');
		}
			
		/// #End Region "Event Handlers"

		var hndlAddToOrdAJAXResp = function(msgObj) {
			/// <summary>
			/// The success function that gets executed when the user has 
			/// successfully added the item to their order.
			/// </summary>
			/// <param name="msgObj">The message object that comes back from the server.</param>
			
			//Reset the indicator to true allowing another call to be executed.
			mReadyNxtAjaxCallInd = true;
			
			if(msgObj) {				
				var confMsgCntnr = Cmn.GetObj("CadWebPart_ConfMsgCntnr");
				
				if(confMsgCntnr) {
					// Create the order lines updated message.
					var msgHdr = new McMaster.MsgMgr.Hdr(McMaster.MsgMgr.CntxtNms.CAD_WEB_PART);
					var ordLnsUpdtdMsg = new McMaster.MsgMgrMsgs.OrdLnsUpdated(msgHdr);
					var partNbrInfoCntnr = Cmn.GetObj("CadWebPart_AddToOrdCntnr"); 
					
					if (msgObj.ConfMsg == "Available Lengths Error") {
						// Show the available lengths error. 
						var qtyAlertCntnr = Cmn.GetObj("CadWebPart_QtyAlert");
						Cmn.AddCls(qtyAlertCntnr,"CadWebPartLayout_Alert");
						Cmn.TrkAct('CADInvldQtyErr','CAD');
					} else if (msgObj.FirmPkErrInd) {
						// This item is sold in a firm package and the customer entered a quantity
						// that breaks the package. Show an error message.
						var qtyErrCntnr = Cmn.GetElementsByClsNm("CadWebPartLayout_QtyErr", "div")[0]; 
						
						qtyErrCntnr.innerHTML = "This item is sold in packs of " + mWebPartObj.MetaDat.WebOrdLnWrapper.Itm.SellStdPkgQty + ".";
						Cmn.ReplaceCls(qtyErrCntnr, "Hide", "Show"); 
						Cmn.TrkAct("InLnOrdQtyPck&partnbr=" + msgObj.partNbrTxt, "CAD"); 
					} else {
						// Show the confirmation message.
						confMsgCntnr.innerHTML = msgObj.ConfMsg; 
						setConfMsgCntnrWdth(confMsgCntnr); 
						Cmn.ReplaceCls(confMsgCntnr, "Hide", "Show");
						Cmn.ReplaceCls(partNbrInfoCntnr, "Show", "Hide"); 
						Cmn.GetObj("CadWebPart_QtyInp").blur();
																
						// Publish the order lines updated message. 
						McMaster.MsgMgr.PubMsg(ordLnsUpdtdMsg); 
						
						// Tracking for web reports.
						Cmn.TrkAct('CADAddtoOrd','CAD');
					}
				} else {
					// Do nothing. 
				}
			}
		}
		
		var hndlFailedAddToOrdAJAXResp = function(msgObj) {
		
			//Reset the indicator to true allowing another call to be executed.
			mReadyNxtAjaxCallInd = true;
		}
		
		var setCntnrWidths = function(viewportWidth, cadWebPartCntnr, transCntnr, dwnldOptsCntnr) {
			/// <summary>
			/// The success function that gets executed when the user has 
			/// successfully added the item to their order.
			/// </summary>
			/// <param name="viewportWidth">The viewable width of the browser.</param>
			/// <param name="cadWebPartCntnr">The container for the web part.</param>
			/// <param name="transCntnr">The transaction container (price, add to order button, etc.). </param>
			/// <param name="dwnldOptsCntntr">The box that contains all the download options.</param>
			
			//IE6 & IE7 don't wrap parent divs around floated children divs, esp. those floated right
			//so we need to calculate the width of the child elements and set the width of the parent
			//element equal to those two values
			if(Cmn.IsIE6() || Cmn.IsIE7()) {
				
				var cadTechDrawingCntnr = Cmn.GetObj("CadWebPart_TechDrawingCntnr"); 
				var cadTechDrawingCntnrWdth = Cmn.GetWidth(cadTechDrawingCntnr); 
				var dwnldOptsCntnrWdth = Cmn.GetWidth(dwnldOptsCntnr); 
				var cadInfoCntnr = Cmn.GetObj("CadWebPart_CadInfoCntnr"); 
				var newCadInfoCntnrWdth = cadTechDrawingCntnrWdth + dwnldOptsCntnrWdth; 
				
				Cmn.SetStyle(cadInfoCntnr, "width", newCadInfoCntnrWdth + "px"); 
			}
			
			// Get the container that has the item description. 
			var partNbrInfoCntnr = Cmn.GetObj("CadWebPart_PartNbrInfo");
			
			// Subtract the width of the transaction container from the width of the CAD web part 
			// container (basically the width of the main content div). 
			var partNbrInfoCntnrWidth = Cmn.GetWidth(cadWebPartCntnr) - Cmn.GetWidth(transCntnr); 
			
			// Figure out the distance to the right edge of the download options container.
			var offsetRightDwnldCntnr = dwnldOptsCntnr.offsetLeft + Cmn.GetWidth(dwnldOptsCntnr); 
						
			// Set the width of the product description container such that it ends at the right
			// edge of the download options container. 
			partNbrInfoCntnrWidth = offsetRightDwnldCntnr - Cmn.GetWidth(transCntnr) - mErrAlertBuffer; 
			Cmn.SetStyle(partNbrInfoCntnr, "width", partNbrInfoCntnrWidth + "px"); 			
		}
		
		var hndlSetCADPrefAJAXResp = function(MsgObj) {
			/// <summary>
			/// The success function that runs once the CAD download preference
			/// has been set. This is mostly for 
			/// </summary>
			
			if(MsgObj){
				var ConfirmedCADPrefMsg = MsgObj.CADPrefMsg;
			} else {
				//Do nothing
			}
		}
		
		var setConfMsgCntnrWdth = function(confMsgCntnr){
			/// <summary>
			/// Sets the width of the Confirmation Message Container so it doesn't extend past
			///	the edge of the CadInfoCntnr. 
			/// </summary>
			
			var cadInfoCntnr = Cmn.GetObj("CadWebPart_CadInfoCntnr"); 
			var cadInfoCntnrWdth = Cmn.GetWidth(cadInfoCntnr); 
			
			Cmn.SetStyle(confMsgCntnr, "width", cadInfoCntnrWdth + "px"); 
			
		}
	}
}


if(this.CADWebPartLoader){}else{CADWebPartLoader=new function(){var k=this;var l="MainContent";var j="/WebParts/CADWebPart/CADWebPart.aspx";var i="cntnridtxt";var c="partnbrtxt";var h="intrnpartnbrtxt";var a="cntnrwdth";var m="cadlnkclckind";var f=new McMaster.MsgMgr.Hdr(McMaster.MsgMgr.CntxtNms.CAD_WEB_PART);var e=function(o){CADWebPartLoader.Load(o);};McMaster.MsgMgr.AddSubscriber(McMaster.MsgMgrMsgs.CadLnkSlctd,e);var b=null;var d=false;var n;var g;k.mStartTm=null;k.AbortStaleReq=function(){if(b){McMaster.CnxnMgr.AbortAjaxCnxn(b);}};k.Load=function(o){n=o.MsgPayload().PartNbr;g=o.MsgPayload().IntrnPartNbr;k.mStartTm=new Date().getTime();McMaster.SesnMgr.SetStVal(McMaster.SesnMgr.StValDefs.CADWebPartLoadFrmSesnInd.KyTxt(),false);McMaster.SesnMgr.SetStVal(McMaster.SesnMgr.StValDefs.MainIFrameWebPartNm.KyTxt(),McMaster.SesnMgr.StValDefs.MainIFrameWebPartNm.CAD_WEB_PART);k.CrteAjaxCnxn(true);};k.LoadFrmSesn=function(){k.mStartTm=new Date().getTime();k.CrteAjaxCnxn(false);};k.CrteAjaxCnxn=function(o){var q={success:function(r,s){b=null;McMaster.LoadMgr.LoadWebPart(r);},failure:function(r,s){b=null;},cnxnParm:{respTyp:McMaster.CnxnMgr.WEB_PART_RESP_TYP_TXT}};var p=j+"?"+i+"="+l+"&"+c+"="+n+"&"+a+"="+Cmn.GetViewportWidth()+"&"+m+"="+o+"&"+h+"="+g;k.AbortStaleReq();if(Cmn.IsOpera()){}else{McMaster.LoadMgr.UnloadCntnr(l);McMaster.LoadMgr.ShowCntnr(l);McMaster.LoadMgr.DisplWaitIcon(l);}b=McMaster.CnxnMgr.PerformAjaxCnxn(p,q);};};}

if(this.McMaster.EnvrMgr){}else{McMaster.EnvrMgr=new function(){var c=this;var B="Dur=";var C="&";var m="=";var x="EnvrDat=";var y="Seq=";var G=15;var q=250;var e=5000;var j=3500;var H="McMaster_EnvrMgr_TestDiv";var E="inline";var p="absolute";var v="hidden";var h="HomePageVertScrollTm";var u=100;var b=400;var t="FAST";var g="MEDIUM";var k="SLOW";var i=null;var r="/gfx/home/Measuring-and-Inspect-collage-60.png";var l="Content-Length:";var f="FAST";var A="SLOW";McMaster.MsgMgr.AddSubscriber(McMaster.MsgMgrMsgs.ShellInitContentLoaded,function(){c.TrkEnvrInfo();setTimeout(c.TrkBasicClntInfo,e);setTimeout(c.CalcCnxnSpeed,j);});c.TrkEnvrInfo=function(){var I=new Date().getTime();var L=new Object();var K=o();var J=a();F(L,0,J,0,K,I);s();};c.GetClntInfo=function(J){var I=Cmn.GetBrowserInfo();McMaster.SesnMgr.SetStVal(McMaster.SesnMgr.StValDefs.OperatingSys.KyTxt(),Cmn.GetOperatingSys());McMaster.SesnMgr.SetStVal(McMaster.SesnMgr.StValDefs.MobileDeviceInd.KyTxt(),J);McMaster.SesnMgr.SetStVal(McMaster.SesnMgr.StValDefs.BrowserNm.KyTxt(),I.browserNm);McMaster.SesnMgr.SetStVal(McMaster.SesnMgr.StValDefs.BrowserVer.KyTxt(),I.browserVer);McMaster.SesnMgr.SetStVal(McMaster.SesnMgr.StValDefs.GeckoBrowserInd.KyTxt(),I.geckoBrowserInd);McMaster.SesnMgr.SetStVal(McMaster.SesnMgr.StValDefs.WebKitEnabledInd.KyTxt(),I.webkitEnabledInd);};c.TrkBasicClntInfo=function(){var I=McMaster.SesnMgr.GetStVal(McMaster.SesnMgr.StValDefs.OperatingSys.KyTxt());var L=McMaster.SesnMgr.GetStVal(McMaster.SesnMgr.StValDefs.BrowserNm.KyTxt());var M=McMaster.SesnMgr.GetStVal(McMaster.SesnMgr.StValDefs.BrowserVer.KyTxt());var K=McMaster.SesnMgr.GetStVal(McMaster.SesnMgr.StValDefs.MobileDeviceInd.KyTxt());var J="OperatingSystem="+I;J+="&BrowserNm="+L;J+="&BrowserVer="+M;J+="&MobileDevice="+K;Cmn.TrkAct(J,"TrkBasicClntInfo");};c.SetEnvrVal=function(I,J){if(McMaster.SesnMgr.GetStVal(McMaster.SesnMgr.StValDefs.ClntProfInd.KyTxt())===false){}else{McMaster.SesnMgr.SetStVal(I,J);c.ProfClntSpeed(I,J);}};c.ProfClntSpeed=function(K,J){var I=false;if(K&&J){I=z(K,J);if(I){McMaster.SesnMgr.SetStVal(McMaster.SesnMgr.StValDefs.ClntProfInd.KyTxt(),false);}}};c.CalcCnxnSpeed=function(){var N;var R;var Q;var I;var P;var M=128;var O="\n";var L;var K;var J={httpMthd:"GET",success:function(Y,X,V,S){R=(new Date()).getTime();Q=((R-N)/1000);var U=S.indexOf(l)+(l.length+1);var W=S.indexOf(O,U);if(U>0){I=((S.slice(U,W)/M)/Q);if(I>350){McMaster.SesnMgr.SetStVal(McMaster.SesnMgr.StValDefs.CnxnSpeed.KyTxt(),f);}else{McMaster.SesnMgr.SetStVal(McMaster.SesnMgr.StValDefs.CnxnSpeed.KyTxt(),A);}var T=I.toFixed(0);Cmn.TrkAct("imgDwnld="+T,"HmPg");}}};N=(new Date()).getTime();P=McMaster.CnxnMgr.PerformAjaxCnxn(r,J,L,K);};var s=function(){var I=Cmn.GetWidth(i);var J=0;if(Cmn.GetWidth(i)>461){J=1;if(Cmn.GetWidth(i)==463){J=2;}if(Cmn.GetWidth(i)>469){J=99;}}McMaster.SesnMgr.SetStVal(McMaster.SesnMgr.StValDefs.EnvrMgrCharSetInd.KyTxt(),J);};var D=function(K,O){var L=0;var P=new Array();var I=0;for(var Q in K){if(K.hasOwnProperty(Q)){var M="Style";var J=M+m+"0";for(var N in K[Q]){if(K[Q].hasOwnProperty(N)){J=J+C+I+"_"+L+m+K[Q][N];I++;}}P[L]=J;I=0;L++;}}n(P,1,O);};var n=function(L,K,J){var M="";for(var O=0;O<L.length;O++){var I=new Date().getTime();var N=(I-J)/1000;M=L[O]+C+y+K+C+B+N;Cmn.TrkAct(M,"shell");K++;}};var o=function(){var I=new Array();I[0]="bold 12px/14px arial,helvetica,sans-serif";return I;};var a=function(){var I=new Array();I[0]='The quick brown fox jumped over the lazy dog. Pedestal (35" Ht. x 4" Wd. x 4" Dp.)';return I;};var F=function(M,J,I,L,P,O){var K=function(){F(M,J,I,L,P,O);};var N=Math.min(J+G,I.length);while(J<N&&L<P.length){var Q=P[L];M[Q]=M[Q]||new Object();var R=I[J];M[Q][R]=d(R,Q);J++;}if(L<P.length){if(J<I.length){setTimeout(K,q);}else{L++;J=0;setTimeout(K,q);}}else{D(M,O);}};var d=function(I,J){i=w();if(i.style.font!=J){i.style.font=J;}i.innerHTML=I;return Cmn.GetWidth(i);};function w(){if(i){}else{i=document.createElement("div");i.appendChild(document.createTextNode(""));i.id=H;i.style.display=E;i.style.position=p;i.style.visibility=v;document.body.appendChild(i);}return i;}function z(K,J){var I=false;switch(K){case h:if(!McMaster.SesnMgr.GetStVal(McMaster.SesnMgr.StValDefs.BrowserProcSpeed.KyTxt())){McMaster.SesnMgr.SetStVal(McMaster.SesnMgr.StValDefs.SlowClntInd.KyTxt(),false);if(J<u){McMaster.SesnMgr.SetStVal(McMaster.SesnMgr.StValDefs.BrowserProcSpeed.KyTxt(),t);}else{if(J<b){McMaster.SesnMgr.SetStVal(McMaster.SesnMgr.StValDefs.BrowserProcSpeed.KyTxt(),g);}else{McMaster.SesnMgr.SetStVal(McMaster.SesnMgr.StValDefs.BrowserProcSpeed.KyTxt(),k);McMaster.SesnMgr.SetStVal(McMaster.SesnMgr.StValDefs.SlowClntInd.KyTxt(),true);I=true;}}}break;case McMaster.SesnMgr.StValDefs.HomePageLoadTm.KyTxt():break;case McMaster.SesnMgr.StValDefs.CtlgHtmlPageLoadTm.KyTxt():case McMaster.SesnMgr.StValDefs.CtlgDynamicPageLoadTm.KyTxt():case McMaster.SesnMgr.StValDefs.CtlgPDFPageLoadTm.KyTxt():break;case McMaster.SesnMgr.StValDefs.OrdPadLoadTm.KyTxt():break;}return I;}};}

if(McMaster.SesnMgr){}else{McMaster.SesnMgr=new function(){var p=this,j=new CmnColls.HashTable(),k=new CmnColls.HashTable(),o={},l={},b=new CmnColls.HashTable(),e=new CmnColls.DeprecatedHashTable(),r=[],q=0,a=null,d=null,n=null,i=false;this.SITE_TITL_PRFX_TXT="McMaster-Carr";p.IsLoadingPrevSesnStInd=function(){return i;};p.InitSesnStKy=function(){return n;};p.StHistEnabledInd=function(){return(typeof(McMaster.SesnMgr.StHist)==="object");};p.StValDefs={};p.ContainsStValKy=function(s){var t=false;if(typeof(s)==="string"){s=s.toLowerCase();if(j.ContainsKy(s)){t=true;}else{if(e.ContainsKy(s)){t=true;}}}return t;};p.CrteSesnStSnapshot=function(){var x=Cmn.GetClonedObj(j),t=Cmn.GetClonedObj(k),w=Cmn.GetClonedObj(l),s=Cmn.GetClonedObj(o),v=Cmn.GetClonedObj(b),u=Cmn.GetClonedObj(a);q+=1;return new p.SesnStSnapshot(x,t,w,s,v,u,q);};p.GetIFrameDatByCntnrId=function(v){var u=null,t=b.Vals();for(var s=0;s<t.length;s++){if(t[s].CntnrIDTxt===v){u=t[s];break;}}return u;};p.GetStVal=function(s){var u=null;s=s.toLowerCase();if(f(s)){var t=j.Itm(s);if(t){u=t.Val;}}else{u=e.Itm(s);}return Cmn.GetClonedObj(u);};p.GetWebPartDatByCntnrId=function(t){var s=null;var u=l[t];if(u){s=k.Itm(u);}return s;};p.GetImplicitWebPartChildrenByCntnrId=function(E,y){var B=[],x=k.Keys(),F=new CmnColls.HashTable();for(var D=0;D<x.length;D++){var t=x[D],A=k.Itm(t).CntnrIDTxt;F.Add(t,A);}for(var z in o){if(o.hasOwnProperty(z)){var w=o[z];for(var s=0;s<w.length;s++){var v=w[s];F.Rem(v);}}}var u=F.Vals();for(var D=0;D<u.length;D++){var A=u[D];if(y.Cmn&&y.Cmn.IsAncestor(E,A)){var C=p.GetWebPartDatByCntnrId(A);if(C){B.push(C);}}}return B;};p.IsWebPartLoaded=function(u,v){var x=false;if(v){var s=McMaster.SesnMgr.GetWebPartDatByCntnrId(v);if(s){if(s.ClsNm===u){x=true;}}}else{for(var w in l){if(l.hasOwnProperty(w)){var t=McMaster.SesnMgr.GetWebPartDatByCntnrId(w);if(t){if(t.ClsNm===u){x=true;break;}}}}}return x;};p.IsVldSesnStKy=function(t){var s=false;if(p.StHistEnabledInd){s=McMaster.SesnMgr.StHist.isVldSesnStKy(t);}return s;};p.LoadDefltWebsiteSt=function(s){if(typeof(McMaster.SesnMgr.StValDefs.LoadDefltWebsiteSt)==="function"){McMaster.SesnMgr.StValDefs.LoadDefltWebsiteSt(s);}};p.LoadPrevSesnSt=function(t){if(p.StHistEnabledInd()){var s=McMaster.SesnMgr.StHist.getPrevSesnStSnapshot(t);if(s){i=true;h(s);o=s.ParToChldWebPartDats;a=s.SiteTitlTxt;q=s.Seq;l=Cmn.GetClonedObj(s.CntnrToWebPartDats);j=Cmn.GetClonedObj(s.SesnStVals);k=Cmn.GetClonedObj(s.WebPartDats);b=Cmn.GetClonedObj(s.IFrameDats);McMaster.LoadMgr.LoadFrmSesn(k,b);p.SetSiteTitlTxt(a);i=false;}}};p.ReloadCurrSesnSt=function(){var s=McMaster.UrlMgr.GetSesnStKyTxtFrmHash(document.location.hash);if(s){p.LoadPrevSesnSt(s);}};p.RemIFrameDatByCntnrId=function(s){if(b.ContainsKy(s)){b.Rem(s);}};p.RemStVal=function(s){s=s.toLowerCase();if(j.ContainsKy(s)){j.Rem(s);}else{if(e.ContainsKy(s)){e.Rem(s);}}};p.RemWebPartDat=function(v,B){if(k.ContainsKy(v)){var t=k.Itm(v),D=t.ChldWebPartDats.Vals();for(var s=0;s<D.length;s++){p.RemWebPartDat(D[s].IDTxt);}if(B){var y=k.Itm(B);if(y){y.remChldWebPartDat(v);}var w=[],u=o[B];if(u){for(var s=0;s<u.length;s++){var z=u[s];if(z===v){}else{w.push(z);}}o[B]=w;}}if(o[v]&&o[v].length===0){var A=[];for(var C in o){if(o.hasOwnProperty(C)){if(C===v){}else{A[C]=o[C];}}}o=A;}var x=k.Itm(v).CntnrIDTxt;l[x]=null;k.Rem(v);}};p.SetIFrameDat=function(s,u,v){c(s);var t=new McMaster.SesnMgr.IFrameDat(s,u,v);b.Add(s,t);};p.SetSiteTitlTxt=function(t){t=(t)?Cmn.Trim(t):"";var s=p.SITE_TITL_PRFX_TXT;if(t.length>0){s+=" - "+t;}a=t;document.title=s;};p.SetStVal=function(s,v){s=s.toLowerCase();var u=null;v=Cmn.GetClonedObj(v);if(f(s)){if(j.ContainsKy(s)){u=j.Itm(s).Val;j.Replace(s,new McMaster.SesnMgr.SesnStVal(v));}else{j.Add(s,new McMaster.SesnMgr.SesnStVal(v));}}else{if(e.ContainsKy(s)){u=e.Itm(s);e.Replace(s,v);}else{e.Add(s,v);}}if(m()){var t=new p.StChgCntxt(s,v,u);g(t);}};p.SetWebPartDat=function(y,s){var w=y.CntnrIDTxt,u=y.IDTxt,v=y.ClsNm;var z=(y.SesnStSnapshotInd!==false)?true:false;c(w);var A=new McMaster.SesnMgr.WebPartDat(w,u,v,z);k.Add(u,A);if(s&&s!=u){var t=o[s];if(t==null){t=[];}t.push(u);o[s]=t;var x=k.Itm(s);x.addChldWebPartDat(A);}if(w){l[w]=u;}};p.addSnapshotSesnStValKy=function(s){r.push(s);};var c=function(t){var s=l[t];if(s){p.RemWebPartDat(s);}if(b.ContainsKy(t)){p.RemIFrameDatByCntnrId(t);}};var h=function(s){var z=new CmnColls.HashTable(),B=k.Vals(),A=null;for(A=0;A<B.length;A++){z.Add(B[A].CntnrIDTxt,B[A]);}var v=b.Vals();for(A=0;A<v.length;A++){z.Add(v[A].CntnrIDTxt,v[A]);}var w=new CmnColls.HashTable();B=s.WebPartDats.Vals();for(A=0;A<B.length;A++){w.Add(B[A].CntnrIDTxt,B[A]);}v=s.IFrameDats.Vals();for(A=0;A<v.length;A++){w.Add(v[A].CntnrIDTxt,v[A]);}var x=z.Keys();for(A=0;A<x.length;A++){var y=x[A];if(w.ContainsKy(y)&&w.Itm(y).ClsNm===z.Itm(y).ClsNm){}else{var u=z.Itm(y);if(u instanceof p.WebPartDat){if(u.SesnStSnapshotInd===true){McMaster.LoadMgr.UnloadWebPart(u);}}else{if(u instanceof p.IFrameDat){var t=window[u.IDTxt];if(t&&t.location){McMaster.LoadMgr.UnloadIFrame(t);}}}}}};var m=function(){if(d===null){d=false;if(typeof(McMaster.UrlMgr)==="object"){if(p.StHistEnabledInd()){d=true;}else{if(McMaster.UrlMgr.FriendlyUrlsEnabledInd()){d=true;}}}}return d;};var f=function(s){var t=false,u;for(u in r){if(r.hasOwnProperty(u)){if(r[u]==s){t=true;break;}}}return t;};var g=function(s){var t=false,u=null;if(p.StHistEnabledInd()){s.RelStChgCntxts=McMaster.SesnMgr.StHist.relStChgCntxts();if(McMaster.SesnMgr.StHist.isEndOfStHistChg(s)){u=McMaster.SesnMgr.StHist.hndlStHistChg(s);if(n===null){n=u;}t=true;}else{McMaster.SesnMgr.StHist.mntnRelStChgCntxts(s);}}else{if(McMaster.UrlMgr.FriendlyUrlsEnabledInd()){t=true;}}if(t){McMaster.UrlMgr.UpdtUrlHash(s,u);McMaster.SesnMgr.StHist.clearRelStChgCntxts();}};p.IFrameDat=function(t,v,s){var w=this,u=new Date();w.ClsNm=null;w.CntnrIDTxt=t;w.CrteTs=u;w.IDTxt=v;w.LoaderClsNm=null;w.URLTxt=s;};p.IFrameDat.prototype.Clone=function(){var s={};for(var t in this){if(this.hasOwnProperty(t)){s[t]=this[t];}}return s;};p.SesnStSnapshot=function(A,y,v,s,w,z,u){var x=this,t=new Date();x.CntnrToWebPartDats=v;x.CrteTs=t;x.IFrameDats=w;x.ParToChldWebPartDats=s;x.SesnStVals=A;x.Seq=u;x.SiteTitlTxt=z;x.WebPartDats=y;};p.SesnStSnapshot.prototype.Clone=function(){var y=Cmn.GetClonedObj(this.SesnStVals),u=Cmn.GetClonedObj(this.WebPartDats),x=Cmn.GetClonedObj(this.CntnrToWebPartDats),t=Cmn.GetClonedObj(this.ParToChldWebPartDats),w=Cmn.GetClonedObj(this.IFrameDats),v=Cmn.GetClonedObj(this.SiteTitlTxt),s=Cmn.GetClonedObj(this.Seq);return new p.SesnStSnapshot(y,u,x,t,w,v,s);};p.StChgCntxt=function(v,t,s){var u=this,w=null;u.PropertyNm=v;u.NewVal=t;u.OldVal=s;u.RelStChgCntxts=w;u.StHistChgDefNm=null;};p.StChgCntxt.prototype.Clone=function(){return this;};p.StChgCntxt.prototype.IsValChg=function(u){var s=false;if(this.PropertyNm.toLowerCase()==u.toLowerCase()){if(Cmn.AreEqual(this.OldVal,this.NewVal)===false){s=true;}}else{if(this.RelStChgCntxts){var t=this.RelStChgCntxts.Itm(u);if(t){if(Cmn.AreEqual(t.OldVal,t.NewVal)===false){s=true;}}}}return s;};p.WebPartDat=function(t,v,y,x){var w=this,u=new Date(),s=new CmnColls.HashTable();w.ChldWebPartDats=s;w.ClsNm=y;w.CntnrIDTxt=t;w.CrteTs=u;w.IDTxt=v;w.SesnStSnapshotInd=x;w.addChldWebPartDat=function(z){return s.Add(z.IDTxt,z);};w.remChldWebPartDat=function(z){if(s.ContainsKy(z)){s.Rem(z);}};};p.WebPartDat.prototype.Clone=function(){var s=new McMaster.SesnMgr.WebPartDat(this.CntnrIDTxt,this.IDTxt,this.ClsNm,this.SesnStSnapshotInd,this.EmbeddedIntoShellInd);s.CrteTs=this.CrteTs;s.ChldWebPartDats=this.ChldWebPartDats;return s;};p.SesnStVal=function(u){var t=this,s=new Date();t.Val=u;t.CrteTs=s;};p.SesnStVal.prototype.Clone=function(){var s=Cmn.GetClonedObj(this.Val),t=new McMaster.SesnMgr.SesnStVal(s);t.CrteTs=this.CrteTs;return t;};p.SesnStValDef=function(u,t){var s=this;s.KyTxt=function(){return u;};s.Vals={};s.isSnapshotStInd=function(){return(t)?t:false;};if(s.isSnapshotStInd()){McMaster.SesnMgr.addSnapshotSesnStValKy(s.KyTxt());}};p.SesnStValDef.prototype.Clone=function(){var s=new McMaster.SesnMgr.SesnStValDef(this.KyTxt(),this.isSnapshotStInd());s.Vals=this.Vals;return s;};};}

if(McMaster.SesnMgr.StHist){}else{McMaster.SesnMgr.StHist=new function(){var e=this,g=new CmnColls.HashTable(),d=0,h=new CmnColls.HashTable(),a=15,c=1231000000000;e.Defs={};e.MaxHistSnapshotsCnt=a;e.SesnStKyTSSeedMSOffset=c;e.clearRelStChgCntxts=function(){h=new CmnColls.HashTable();};e.getPrevSesnStSnapshot=function(i){return g.Itm(i);};e.hndlStHistChg=function(i){var k=f().toLowerCase();if(typeof(McMaster.SesnMgr.StHist.Defs[i.StHistChgDefNm].bldSiteTitlTxt)==="function"){var l=McMaster.SesnMgr.StHist.Defs[i.StHistChgDefNm].bldSiteTitlTxt(i);McMaster.SesnMgr.SetSiteTitlTxt(l);}var j=McMaster.SesnMgr.CrteSesnStSnapshot();mCurrSesnStKyTxt=k;b(k,j);return k;};e.isEndOfStHistChg=function(j){var k=false,i;for(i in McMaster.SesnMgr.StHist.Defs){if(McMaster.SesnMgr.StHist.Defs.hasOwnProperty(i)){if(McMaster.SesnMgr.StHist.Defs[i].isEndOfStHistChg(j)){k=true;j.StHistChgDefNm=i;break;}}}return k;};e.isVldSesnStKy=function(j){var i=false;if(g.Itm(j)!=null){i=true;}return i;};e.mntnRelStChgCntxts=function(i){var j=i.PropertyNm;if(h.ContainsKy(j)){h.Replace(j,i);}else{h.Add(j,i);}};e.relStChgCntxts=function(){return h;};var f=function(){var i=new Date().getTime()-e.SesnStKyTSSeedMSOffset;i=Math.floor(i/100);var j=Cmn.GetBaseConversionNbr(i,10,36);return j;};var b=function(p,m){var j=m.Seq;if(j>d){g.Add(p,m);var l=g.Cnt();if(l>e.MaxHistSnapshotsCnt){var k=l-e.MaxHistSnapshotsCnt;var n=g.Keys();for(var i=0;i<k;i++){var o=n[i];g.Rem(o);}}d=j;}else{var n=g.Keys();for(var i=n.length;i>=j;i--){var o=n[i-1];g.Rem(o);}g.Add(p,m);}};};}

// Session manager must exist
if (typeof(McMaster.SesnMgr) == 'object') {
    //-------------------------------------------------------------------------
    // Class:       StValDefs
    // Namespace:   McMaster.SesnMgr
    // Summary:     Defines various session states used in the website.
    // Remarks:     This is an application-specific file and each website
    //              should have its own version. We've identified two uses for
    //              creating session state definitions:
    //                  1. Consistency - when multiple parts of a website are
    //                      getting and setting the same session state values
    //                      this object servers to provide a consistent way of
    //                      getting and setting those values.
    //                  2. Website snapshot values - the set of facts we need
    //                      to know in order to recreate the state of the 
    //                      website is only a subset of the set of values that
    //                      can be stored in Session. We are requiring that 
    //                      all values that are needed to recreate the state
    //                      of the website be included in this file, and
    //                      setting the isSnapshotStInd property to true. We
    //                      should only set this property to true when 
    //                      necessary. It can have an impact on the memory
    //                      demands of the client's computer.
    //                      The second parameter of the SesnStValDef is the
    //                      isSnapshotStInd. By default it gets set to false.
    //-------------------------------------------------------------------------
    McMaster.SesnMgr.StValDefs = new function() {

        // Declarations
        var me = this
           , sesnMgr = McMaster.SesnMgr;

        // End Declarations

        // Public Properties
        // Define web part names
        // This is first because it is used by other definitions
        me.WebPartNms = new sesnMgr.SesnStValDef("webpartnms", false);
        me.WebPartNms.Vals.LEGACY_2D_CAD = "Legacy2DCAD";
        me.WebPartNms.Vals.LEGACY_3D_CAD = "Legacy3DCAD";
        me.WebPartNms.Vals.CAD_WEB_PART = "CadWebPart";
        me.WebPartNms.Vals.LEGACY_ADDTNL_CONTENT = "LegacyAddtnlContent";
        me.WebPartNms.Vals.LEGACY_CAREERS = "LegacyCareers";
        me.WebPartNms.Vals.LEGACY_CTLG_PG = "LegacyCtlgPg";
        me.WebPartNms.Vals.LEGACY_CNTCT_EMAIL = "LegacyCntctEmail";
        me.WebPartNms.Vals.LEGACY_CNTCT_US = "LegacyCntctUs";
        me.WebPartNms.Vals.LEGACY_HOME = "LegacyHomepage";
        me.WebPartNms.Vals.LEGACY_ORD_PAD = "LegacyOrdPad";
        me.WebPartNms.Vals.LEGACY_ORD_CONFIRMATION = "LegacyOrdConfirmation";
        me.WebPartNms.Vals.LEGACY_PDF_CTLG_PG = "LegacyPdfCtlgPg";
        me.WebPartNms.Vals.LEGACY_PSRCH = "LegacyPSrch";
        me.WebPartNms.Vals.LEGACY_PSRCH_ITM_DTL = "LegacyPSrchItmDtl";
        me.WebPartNms.Vals.LEGACY_SECR_SETTINGS = "LegacySecrPref";
        me.WebPartNms.Vals.DYNAMIC_CTLG_PG = "DynamicCtlgPage";
        me.WebPartNms.Vals.HOMEPAGE = "HomePageWebPart";
        me.WebPartNms.Vals.INTERMEDIATE_PAGE = "IntermediatePage";
        me.WebPartNms.Vals.ITM_LOOKUP = "ItmLookup";
        me.WebPartNms.Vals.MASTHEAD = "MastheadWebPart";
        me.WebPartNms.Vals.ORD_DTL = "OrdDtlWebPart";
        me.WebPartNms.Vals.ORD_HIST = "OrdHistWebPart";
        me.WebPartNms.Vals.ORD_PAD = "OrdPadWebPart";
        me.WebPartNms.Vals.SRCH_RSLT = "SrchRsltWebPart";

        me.CntnrNms = new sesnMgr.SesnStValDef("containernms", false);
        me.CntnrNms.Vals.MAIN_CONTENT = "MainContent";

        // additional content
        me.AddtnlContentIdTxt = new sesnMgr.SesnStValDef("addtnlcontentidtxt", true);
		
        // Build order pad
        me.BldOrdExpandInd = new sesnMgr.SesnStValDef("bldordexpandind", true);

        // Bookmarks context text
        me.BookmarksCntxtTxt = new sesnMgr.SesnStValDef("bookmarkscntxttxt", false);
        me.BookmarksCntxtTxt.Vals.BOOKMARKS = "bookmarks";

        // cad values
        me.CADDatTxt = new sesnMgr.SesnStValDef("caddattxt", true);
        me.CADWebPartLoadFrmSesnInd = new sesnMgr.SesnStValDef("cadwebpartloadfrmsesnind", false);
        me.CadInLnOrdBxLoadedSesnStat = new sesnMgr.SesnStValDef("cadinlnordbxloadedsesnst", true);


        // Careers context text
        me.CareersCntxtTxt = new sesnMgr.SesnStValDef("careerscntxttxt", false);
        me.CareersQSKyTxt = new sesnMgr.SesnStValDef("careersqskytxt", false);


        // Choose Specs state
        me.ChooseSpecsStat = new sesnMgr.SesnStValDef("choosespecsstat", true);
        me.ChooseSpecsLoadFrmSesnInd = new sesnMgr.SesnStValDef("choosespecsloadfrmsesnind", false);
        me.ChooseSpecsRsltnOvrdInd = new sesnMgr.SesnStValDef("choosespecsrsltnovrdind", true);
        me.SpecsSrchSuppressInd = new sesnMgr.SesnStValDef("specssrchsuppressind", true);
        me.SysSlctdSpecFiltersInd = new sesnMgr.SesnStValDef("sysslctdspecfiltersind", false);

        //Spec Search scrollable containers state.
        me.ScrollableCntnrs = new sesnMgr.SesnStValDef("scrollablecontainers", true);

        //Dynamic Page state
        me.DynamicPagePrsnttnStats = new sesnMgr.SesnStValDef("dynamicpageprsnttnstats", true);
        me.DynamicPageSrchRsltId = new sesnMgr.SesnStValDef("dynamicpagesrchrsltid", true);
        me.DynamicPageActvPrsnttnId = new sesnMgr.SesnStValDef("dynamicpageactvprsnttnid", true);
        me.DynamicPageLoadFrmSesnInd = new sesnMgr.SesnStValDef("dynamicpageloadfrmsesnind", false);
        me.ContentCntnrWdth = new sesnMgr.SesnStValDef("contentcntnrwdth", true);
		
		//Page has specs. Set indicator let us know this is true.
		me.HasSpecSrchInd = new sesnMgr.SesnStValDef("hasspecsrchind",true);
		me.SrchRsltIdForSpecSrch = new sesnMgr.SesnStValDef("srchrsltidforspecsrch",true);

		// The dynamic content web parts that initiated this snapshot (if applicable)
        me.DynamicContentSnapshotInitiators = new sesnMgr.SesnStValDef("dynamiccontentsnapshotinitiators", true);		
		//Item presentation related session values
		me.SrchdPartNbrTxt = new sesnMgr.SesnStValDef("srchdpartnbrtxt", true);
		me.OldStylAttrNms = new sesnMgr.SesnStValDef("oldstylattrnms", true);
		me.OldStylValTxts = new sesnMgr.SesnStValDef("oldstylvaltxts", true);
		me.ItmPrsnttnFeedbackFormOpened = new sesnMgr.SesnStValDef("itmprsnttnfeedbackformopened", true);
		
        //HACK: we'll just update the number in this object to act as a dummy "take a snapshot" method
        me.DynamicContentSesnSt = new sesnMgr.SesnStValDef("dynamiccontentsesnst", true);
		me.DynamicContentSiteTitleText = new sesnMgr.SesnStValDef("dynamiccontentsitetitletext", true);
		
        // Product Page State
        me.ProdPageLoadFrmSesnInd = new sesnMgr.SesnStValDef("prodpageloadfrmsesnind", false);
        // me.ProdPgInitLoadInd = new sesnMgr.SesnStValDef("prodpginitload", true);

		//Content state
		me.ContentLoadFrmSesnInd = new sesnMgr.SesnStValDef("contentloadfrmsesnind", false);
     
        // Cookie refusal
        me.CookieRefusalInd = new sesnMgr.SesnStValDef("cookierefusalind", false);

        //Current message sequence number
        me.CurrMsgSqNbr = new sesnMgr.SesnStValDef("currmsgseqnbr", false);

        // Catalog information
        me.CtlgPgLoaded = new sesnMgr.SesnStValDef("ctlgpgloaded", false);
        me.CtlgPgLoadFrmSesn = new sesnMgr.SesnStValDef("ctlgpgloadfrmsesn", false);
        me.CurrCtlgEdtnNbr = new sesnMgr.SesnStValDef("currctlgedtnnbr", false);
        me.CurrCtlgMaxPageNbr = new sesnMgr.SesnStValDef("currctlgmaxpagenbr", false);
        me.CurrCtlgPgNbr = new sesnMgr.SesnStValDef("currctlgpgnbr", true);
        me.CurrRelatedCtlgPgsTxt = new sesnMgr.SesnStValDef("currrelatedctlgpgstxt", true);
        me.ReqCtlgEdtnNbr = new sesnMgr.SesnStValDef("reqctlgedtnnbr", true);
		me.CtlgPartNbrSlctd = new sesnMgr.SesnStValDef("ctlgpartnbrslctd", false);
		
        //Find Again information
		// Please note: Ensure the flag remains "false" for these. We do not want to repeat all of the 
		// historical data for someone into each snapshot. That would be bad. :-) or should I say :-(
        me.FndAgainInd = new sesnMgr.SesnStValDef("fndagainind", false);
		me.FndAgainPrsnttnIdsToHighlight = new sesnMgr.SesnStValDef("fndagainprsnttnidstohighlight", false); // This must remain false !!!
		me.FndAgainPrtNbrsToHighlight = new sesnMgr.SesnStValDef("fndagainprtnbrstohighlight", false);       // This must remain false !!!
		//Part numbers by location:
		me.FndAgainLocPrtNbrsToHighlight = new sesnMgr.SesnStValDef("fndagainlocprtnbrstohighlight", false); // This must remain false !!!
		me.FndAgainSpecIdValsToParts = new sesnMgr.SesnStValDef("fndagainspecidvalstoparts", false);		 // This must remain false !!!
		me.FndAgainSearchIdsToParts = new sesnMgr.SesnStValDef("fndagainsrchidstoparts", false);		     // This must remain false !!!
		me.FndAgainSearchTermsToHighlight = new sesnMgr.SesnStValDef("fndagainsrchtermstohighlight", false); // This must remain false !!!
		me.FndAgainSlsWrkStObj = new sesnMgr.SesnStValDef("fndagainslswrkstobj", false);                     // This must remain false !!!
		
        //Help context text
        me.HelpCntxtTxt = new sesnMgr.SesnStValDef("helpcntxttxt", false);
        me.HelpCntxtTxt.Vals.BOOKMARKS = "bookmarks";
        me.HelpCntxtTxt.Vals.ABOUTUS = "aboutus";
        me.HelpCntxtTxt.Vals.ORD = "order";

        //Homepage Navigation
        me.HomePageSlctdCatgID = new sesnMgr.SesnStValDef("homepageslctdcatgid", true);
        me.HomePageSlctdCatgTxt = new sesnMgr.SesnStValDef("homepageslctdcatgtxt", true);
        me.HomePageSlctdEntryScrollTop = new sesnMgr.SesnStValDef("homepageslctdentryscrolltop");

        //The Initial Load indicator for the website
        me.WebsiteInitLoadInd = new sesnMgr.SesnStValDef("websiteinitLoadind", false);

        //The inline ordering boxes state
        me.InLnOrdBxsSesnStat = new sesnMgr.SesnStValDef("inlnordbxssesnst", true);		
		me.InLnOrdBxsCrtd = new sesnMgr.SesnStValDef("inlnordbxscrtd", true);
		me.ActvInLnOrdBx = new sesnMgr.SesnStValDef("actvinlnordbx", true); 

        //Item fast track
        me.ItmFastTrackInd = new sesnMgr.SesnStValDef("itmfasttrackind", false);

        //Intermediate pages
        me.IntermediatePageNms = new sesnMgr.SesnStValDef("intermediatepagenms", false); // (a comma-delimited list of the intermediate pages; set by the homepage)
        me.IntermediatePageSrchTxt = new sesnMgr.SesnStValDef("intermediatepagesrchtxt", true);
        me.IntermediatePagePrevSrchTxt = new sesnMgr.SesnStValDef("intermediatepageprevsrchtxt", false);
        me.IntermediatePageLoadFrmSesnInd = new sesnMgr.SesnStValDef("intermediatepageloadfrmsesnind", false);
        me.LandingPageDesignID = new sesnMgr.SesnStValDef("landingpagedesignid", false);

        //Login
        //me.NewLoginInd = new sesnMgr.SesnStValDef("newloginind", false);

        // The main iframe web part name
        me.MainIFrameWebPartNm = new sesnMgr.SesnStValDef("mainiframewebpartnm", true);
        me.MainIFrameWebPartNm.Vals.LEGACY_2D_CAD = me.WebPartNms.Vals.LEGACY_2D_CAD;
        me.MainIFrameWebPartNm.Vals.LEGACY_3D_CAD = me.WebPartNms.Vals.LEGACY_3D_CAD;
        me.MainIFrameWebPartNm.Vals.CAD_WEB_PART = me.WebPartNms.Vals.CAD_WEB_PART;
        me.MainIFrameWebPartNm.Vals.LEGACY_ADDTNL_CONTENT = me.WebPartNms.Vals.LEGACY_ADDTNL_CONTENT;
        me.MainIFrameWebPartNm.Vals.LEGACY_CAREERS = me.WebPartNms.Vals.LEGACY_CAREERS;
        me.MainIFrameWebPartNm.Vals.LEGACY_CNTCT_EMAIL = me.WebPartNms.Vals.LEGACY_CNTCT_EMAIL;
        me.MainIFrameWebPartNm.Vals.LEGACY_CNTCT_US = me.WebPartNms.Vals.LEGACY_CNTCT_US;
        me.MainIFrameWebPartNm.Vals.LEGACY_CTLG_PG = me.WebPartNms.Vals.LEGACY_CTLG_PG;
        me.MainIFrameWebPartNm.Vals.LEGACY_HOME = me.WebPartNms.Vals.LEGACY_HOME;
        me.MainIFrameWebPartNm.Vals.LEGACY_ORD_PAD = me.WebPartNms.Vals.LEGACY_ORD_PAD;
        me.MainIFrameWebPartNm.Vals.LEGACY_ORD_CONFIRMATION = me.WebPartNms.Vals.LEGACY_ORD_CONFIRMATION;
        me.MainIFrameWebPartNm.Vals.LEGACY_PDF_CTLG_PG = me.WebPartNms.Vals.LEGACY_PDF_CTLG_PG;
        me.MainIFrameWebPartNm.Vals.LEGACY_PSRCH = me.WebPartNms.Vals.LEGACY_PSRCH;
        me.MainIFrameWebPartNm.Vals.LEGACY_PSRCH_ITM_DTL = me.WebPartNms.Vals.LEGACY_PSRCH_ITM_DTL;
        me.MainIFrameWebPartNm.Vals.LEGACY_SECR_SETTINGS = me.WebPartNms.Vals.LEGACY_SECR_SETTINGS;
        me.MainIFrameWebPartNm.Vals.INTERMEDIATE_PAGE = me.WebPartNms.Vals.INTERMEDIATE_PAGE;
        me.MainIFrameWebPartNm.Vals.ORD_DTL = me.WebPartNms.Vals.ORD_DTL;
        me.MainIFrameWebPartNm.Vals.ORD_HIST = me.WebPartNms.Vals.ORD_HIST;

        //Multiple orders state key
        me.MultOrdsInd = new sesnMgr.SesnStValDef("multordsind", false);

        // Order pad state key
        me.OrdPadStKy = new sesnMgr.SesnStValDef("ordpadstky", false);
        me.OrdPadStKy.Vals.TOOLBAR = "toolbar";


        //New Order pad state values
        me.CurrOrdId = new sesnMgr.SesnStValDef("currordid", false);
        me.NewOrdPadInd = new sesnMgr.SesnStValDef("newordpadind", false);
        me.OrdPadLoadedInd = new sesnMgr.SesnStValDef("ordpadloadedind", true);
        me.OrdPadLoadFrmSesnInd = new sesnMgr.SesnStValDef("ordpadloadfrmsesnind", false);
        me.CurrVstrCntctEmailAddrTxt = new sesnMgr.SesnStValDef("currvstrcntctemailaddrtxt", false);

        // part number search text
        me.PartNbrSrchTxt = new sesnMgr.SesnStValDef("partnbrsrchtxt", false);

		//web version number for invalidating local storage cache
		me.WebVerTS = new sesnMgr.SesnStValDef("webversiontimestamp", false);
		
		// Performance tracking sequence value
		me.PerfTrackingEvntsQs = new sesnMgr.SesnStValDef("perftrackingevntqs", false); 
		me.PerfTrackingEvntCntxt = new sesnMgr.SesnStValDef("perftrackingevntcntxt", false);
		me.PerfTrackingTransSeq = new sesnMgr.SesnStValDef("perftrackingtransseq", false);
		me.PerfTrackingBypassFastTrkInd = new sesnMgr.SesnStValDef("perftrackingbypassfasttrkind", false);

        // FetchAhead
        me.FetchAheadInd = new sesnMgr.SesnStValDef("fetchaheadind", false);
		
		// Self-Service PO Change Preference Indicator
        me.SelfSvcPOChgInd = new sesnMgr.SesnStValDef("selfsvcpochgind", false);
		
        //Item presentation product detail link activation indicator
        me.ProdDetLnkActvnInd = new sesnMgr.SesnStValDef("proddetlnkactvnind", false);

		//Item presentation feedback form activation indicator
		me.itmPrsnttnFeedbackFormInd = new sesnMgr.SesnStValDef("itmprsnttnfeedbackformind", false);
		// Dynamic Landing Pages activation indicator
		me.DynLandingPgsEnabledInd = new sesnMgr.SesnStValDef("dynlandingpgind", false);

        // Product Page state values
        me.ProdPageLoadFrmSesnInd = new sesnMgr.SesnStValDef("prodpageloadfrmsesnind", false);
//        // Prod Page updating ind -- describes if there are any updates to product page processing
//        me.ProdPageUpdatingInd = new sesnMgr.SesnStValDef("prodpageupdatingind", false);

        // Prod Page unloading ind -- is set when product page is being unloaded.
     //   me.ProdPageUnloadingInd = new sesnMgr.SesnStValDef("prodpageunloadingind", false);
        me.ProdPageReloadingInd = new sesnMgr.SesnStValDef("prodpagereloadingind", false);
	
        // Parametric search keys
        me.PSrchUrl = new sesnMgr.SesnStValDef("psrchurl", false);

        // Recent orders indicator -- describes whether there are any recent orders
        me.RecentOrdsInd = new sesnMgr.SesnStValDef("recentordsind", false);

        // Secondary content iframe web part name
        me.SecondaryContentWebPartNm = new sesnMgr.SesnStValDef("secondarycontentwebpartname", true);
        me.SecondaryContentWebPartNm.Vals.ITM_LOOKUP = me.WebPartNms.Vals.ITM_LOOKUP;
        me.SecondaryContentWebPartNm.Vals.SRCH_RSLT = me.WebPartNms.Vals.SRCH_RSLT;

        // Session extension rep key
        me.SesnExtRepKy = new sesnMgr.SesnStValDef("sesnextrepky", false);

        // The selected masthead button name
        me.SlctdMastheadBtnNm = new sesnMgr.SesnStValDef("slctdmastheadbtnnm", true);
        me.SlctdMastheadBtnNm.Vals.BMS = "bms";
        me.SlctdMastheadBtnNm.Vals.CONTACT_US = "contactus";
        me.SlctdMastheadBtnNm.Vals.CURR_ORD = "currord";
        me.SlctdMastheadBtnNm.Vals.ORD_HIST = "ordhist";

        // The selected part number
        me.SlctdPartNbrTxt = new sesnMgr.SesnStValDef("sltcdpartnbrtxt", true);
        // The selected part number html element id
        me.SlctdPartNbrElemIdTxt = new sesnMgr.SesnStValDef("sltcdpartnbrelemidtxt", true);

        // The selected order history PO text
        me.SlctdOrdHistOrdId = new sesnMgr.SesnStValDef("slctdordhistordid", true);
        me.SlctdOrdHistPOTxt = new sesnMgr.SesnStValDef("slctdordhistpotxt", false);

        // selected quick index link text
        me.SlctdQuickIdxLnkTxt = new sesnMgr.SesnStValDef("slctdquickidxlnktxt", true);

        // The selected search result info
        me.LastSlctdSrchRsltTxt = new sesnMgr.SesnStValDef("lastslctdsrchrslttxt", true);
        me.SlctdSrchRsltTxt = new sesnMgr.SesnStValDef("slctdsrchrslttxt", true);
        me.SlctdSrchRsltId = new sesnMgr.SesnStValDef("slctdsrchrsltid", true);
        me.SlctdSrchRsltFilters = new sesnMgr.SesnStValDef("slctdsrchrsltfilters", true);
        me.SlctdSrchRsltPgNbrs = new sesnMgr.SesnStValDef("slctdsrchrsltpgnbrs", true);
        me.SpecUsrInps = new sesnMgr.SesnStValDef("specusrinps", true);
        me.UnionSrchRsltLoadedInd = new sesnMgr.SesnStValDef("unionsrchrsltloadedind", true);
		me.PreSlctdSpecCntxtNm = new sesnMgr.SesnStValDef("preslctdspeccntxtnm", true);
		
        // Search entry and search results
        me.SrchCompleteInd = new sesnMgr.SesnStValDef("srchcompleteind", true);
        me.SrchCurrInpTxt = new sesnMgr.SesnStValDef("srchcurrinptxt", false);
        me.SrchEntryMode = new sesnMgr.SesnStValDef("srchentrymode", false);
        me.SrchEntryMode.Vals.SRCH_ENTRY_MODE_SRCH = "SRCH";
        me.SrchEntryMode.Vals.SRCH_ENTRY_MODE_KEYBOARD = "KYBOARDNAV";
        me.SrchReqAvgDelay = new sesnMgr.SesnStValDef("srchreqavgdelay", false);
        me.SrchTxt = new sesnMgr.SesnStValDef("srchtxt", true);
        me.SrchLastReqArgs = new sesnMgr.SesnStValDef("srchlastreqargs", false);
        me.SrchSentReqTxt = new sesnMgr.SesnStValDef("srchsntreqtxt", false);
        me.SrchLoadFrmSesnInd = new sesnMgr.SesnStValDef("srchloadfrmsesnind", false);
        me.SrchSuggRecencyReorderInd = new sesnMgr.SesnStValDef("srchsuggrecencyreorderind", false);

        //Homepage Session Ext Rep Kys
        me.SesnExtRepKy = new sesnMgr.SesnStValDef("sesnextrepky", false);

        //HomepageWebPart Versioning Information
        me.HomePageWebPartVerKy = new sesnMgr.SesnStValDef("homepagewebpartver", false);

        //HomepageNavWebPart Versioning Information
        me.HomePageNavWebPartVerKy = new sesnMgr.SesnStValDef("homepagenavwebpartver", false);

        // set the maximum number of snapshots allowed in the state history snapshots collection
        McMaster.SesnMgr.StHist.MaxHistSnapshotsCnt = 15;

        //the tab preference set by the shell to determine old build order customers
        me.TabPref = new sesnMgr.SesnStValDef("tabpref", false)

        //Is true if the homepage redesign will be loaded
        me.HomePageRedesign = new sesnMgr.SesnStValDef("homepageredesign", false)

        // Keep track of the size of the main content container
        me.MainContentCntnrWidth = new sesnMgr.SesnStValDef("maincontentcntnrwidth", false);
        me.MainContentCntnrHeight = new sesnMgr.SesnStValDef("maincontentcntnrheight", false);

        // Keep track of client related environment info (browser, version, processing speed, etc.)
        me.ClntProfInd = new sesnMgr.SesnStValDef("clientprofileind", false);
        me.HomePageLoadTm = new sesnMgr.SesnStValDef("homepageloadtime", false);
        me.CtlgHtmlPageLoadTm = new sesnMgr.SesnStValDef("cataloghtmlpageloadtime", false);
        me.CtlgDynamicPageLoadTm = new sesnMgr.SesnStValDef("catalogdynamicpageloadtime", false);
        me.CtlgPDFPageLoadTm = new sesnMgr.SesnStValDef("catalogpdfpageloadtime", false);
        me.OrdPadLoadTm = new sesnMgr.SesnStValDef("orderpadloadtime", false);
        me.OperatingSys = new sesnMgr.SesnStValDef("operatingsystem", false);
        me.BrowserNm = new sesnMgr.SesnStValDef("browsername", false);
        me.BrowserVer = new sesnMgr.SesnStValDef("browserversion", false);
        me.MobileDeviceInd = new sesnMgr.SesnStValDef("mobiledeviceind", false);
        me.SlowClntInd = new sesnMgr.SesnStValDef("slowclientind", false);
        me.BrowserProcSpeed = new sesnMgr.SesnStValDef("browserprocessingspeed", false);
        me.CnxnSpeed = new sesnMgr.SesnStValDef("connectionspeed", false);
        me.GeckoBrowserInd = new sesnMgr.SesnStValDef("geckobrowserind", false);
        me.WebKitEnabledInd = new sesnMgr.SesnStValDef("webkitenabledind", false);
        me.GZipKnownIncompatibilityInd = new sesnMgr.SesnStValDef("gzipknownincompatibilityind", false);
		me.BrowsRes = new sesnMgr.SesnStValDef("browserresolution", false);

		//Keep track of the presentation user inputs
		me.PrsnttnUsrInps = new sesnMgr.SesnStValDef("prsnttnusrinps",true);
		//group user inputs
		me.GrpUsrInps = new sesnMgr.SesnStValDef("grpusrinps", true);
		//Keep track of image user inputs
		me.ImgUsrInps = new sesnMgr.SesnStValDef("imgusrinps",true);
		//Snapshot of group user inputs when spec search loads
		me.GrpUsrInpsWhenSpecSrchLoads = new sesnMgr.SesnStValDef("grpusrinpswhenspecsrchloads", true);

        me.InLnSpecUsrInps = new sesnMgr.SesnStValDef("inlnspecusrinps", true);
        me.OrdLnSpecUsrInps = new sesnMgr.SesnStValDef("ordlnspecusrinps", true);
		//snapshot to scroll position
		me.SnapShotScrollPos = new sesnMgr.SesnStValDef("snapshotscrollpos", false);		
	//the code set to use when measuring text in EnvrMgr
				me.EnvrMgrCharSetInd = new sesnMgr.SesnStValDef("envrmgrcharsetind",false);
        // End Public Properties    

        // Public Methods

        //-----------------------------------------------------------------
        // Summary: Loads the default state of the website
        // Remarks: Is called by session and load manager when a url can't
        //          be interpreted to anything else
        //-----------------------------------------------------------------
        me.LoadDefltWebsiteSt = function(hpFirstLoadInd) {

            var currHomePageSlctdCatgTxt = ""
               , msg = null
               , hdr = new McMaster.MsgMgr.Hdr(McMaster.MsgMgr.CntxtNms.MCM_SESN_MGR);

            //Check if the redesigned home page is set to load
            var isRedesignInd = McMaster.SesnMgr.GetStVal(McMaster.SesnMgr.StValDefs.HomePageRedesign.KyTxt());

            //Get the visitor's Tab preference
            var tabPref = McMaster.SesnMgr.GetStVal(McMaster.SesnMgr.StValDefs.TabPref.KyTxt());

            //Get the current state value that will show whether 
            //the visitor selected from the 'Choose a Category' frame.  
            if (McMaster.SesnMgr.StValDefs.HomePageSlctdCatgTxt) {
                currHomePageSlctdCatgTxt = McMaster.SesnMgr.GetStVal(McMaster.SesnMgr.StValDefs.HomePageSlctdCatgTxt.KyTxt());
                if (currHomePageSlctdCatgTxt == null) {
                    currHomePageSlctdCatgTxt = ""
                }
            }

            switch (true) {
                case (isRedesignInd && HomePageWebPart.GetLoadedInd() && currHomePageSlctdCatgTxt.length > 0):
                    //The visitor had selected a category so the home page is 
                    //already loaded, but all categories except for the selected   
                    //one are hidden in the MainIFrame.  To show all categories,
                    //set up a message to reload the home page.
                    msg = new McMaster.MsgMgrMsgs.HomeSlctd(hdr);
                    break;

                case (isRedesignInd && HomePageWebPart.GetLoadedInd()):
                    //The new home page is already loaded and no category had been selected; 
                    //all categories are already showing so no action is needed.
                    break;

                case (isRedesignInd && tabPref == "BUILDORDER" &&
						McMaster.SesnMgr.GetStVal(McMaster.SesnMgr.StValDefs.WebsiteInitLoadInd.KyTxt()) === false):
                    //Set the 'current selected' mast head button in session
                    McMaster.SesnMgr.SetStVal(McMaster.SesnMgr.StValDefs.SlctdMastheadBtnNm.KyTxt()
                                             , McMaster.SesnMgr.StValDefs.SlctdMastheadBtnNm.Vals.CURR_ORD);

                    //Indicate that the website has already loaded.
                    McMaster.SesnMgr.SetStVal(McMaster.SesnMgr.StValDefs.WebsiteInitLoadInd.KyTxt(), true);

                    //Set a 'current order selected' message
                    msg = new McMaster.MsgMgrMsgs.CurrOrdSlctd(hdr);
                    break;

                default:
                    //set the indicator showing that the website has loaded for the first time.
                    if (McMaster.SesnMgr.GetStVal(McMaster.SesnMgr.StValDefs.WebsiteInitLoadInd.KyTxt()) === false) {
                        McMaster.SesnMgr.SetStVal(McMaster.SesnMgr.StValDefs.WebsiteInitLoadInd.KyTxt(), true);
                    }
                    //Set a "Home Selected' message
                    msg = new McMaster.MsgMgrMsgs.HomeSlctd(hdr);
                    break;
            }

           
            if (msg == null) {
                ; //Continue
            } else {
				if (hpFirstLoadInd) {
					msg.MsgPayload().HomePageFirstLoad = true;
				}
                McMaster.MsgMgr.PubMsg(msg);
            }
        }


        //-----------------------------------------------------------------
        // Summary: Removes the session information related to search results
        //-----------------------------------------------------------------
        me.RemSrchRsltInfo = function() {
            McMaster.SesnMgr.RemStVal(McMaster.SesnMgr.StValDefs.SlctdSrchRsltTxt.KyTxt());
            McMaster.SesnMgr.RemStVal(McMaster.SesnMgr.StValDefs.SlctdSrchRsltId.KyTxt());
            McMaster.SesnMgr.RemStVal(McMaster.SesnMgr.StValDefs.SlctdSrchRsltPgNbrs.KyTxt());
            McMaster.SesnMgr.RemStVal(McMaster.SesnMgr.StValDefs.SlctdQuickIdxLnkTxt.KyTxt());
        }

        //-----------------------------------------------------------------
        // Summary: Removes the session information related to catalog pages
        //-----------------------------------------------------------------
        me.RemCtlgPgInfo = function() {
            McMaster.SesnMgr.RemStVal(McMaster.SesnMgr.StValDefs.CurrCtlgPgNbr.KyTxt());
            McMaster.SesnMgr.RemStVal(McMaster.SesnMgr.StValDefs.CurrRelatedCtlgPgsTxt.KyTxt());
            McMaster.SesnMgr.RemStVal(McMaster.SesnMgr.StValDefs.CtlgPgLoaded.KyTxt());
            McMaster.SesnMgr.RemStVal(McMaster.SesnMgr.StValDefs.CtlgPgLoadFrmSesn.KyTxt());
        }

        // End Public Methods
    }
}


if(McMaster.SesnMgr.SiteTitlTxts){}else{McMaster.SesnMgr.SiteTitlTxts=new function(){var c=this,b=McMaster.SesnMgr,a=b.StValDefs;this.AddtnlContent=function(){return"Product Information - "+b.GetStVal(a.AddtnlContentIdTxt.KyTxt());};this.BMsSignIn=function(){return"Retrieve Your Bookmarks";};this.Cad_2D=function(){return"Technical Drawing for "+b.GetStVal(a.SlctdPartNbrTxt.KyTxt());};this.Cad_3D=function(){return"3-D Model for "+b.GetStVal(a.SlctdPartNbrTxt.KyTxt());};this.Careers=function(){var d=b.GetStVal(a.CareersCntxtTxt.KyTxt());if(d&&d!=="Main"){var e=(Cmn.Trim(d).length===0)?"Careers":"Careers - "+d;}else{var e="Careers";}return e;};this.ChgSignIn=function(){return"Change Your Sign In";};this.CntctUs=function(){return"Contact Us";};this.CrteSignIn=function(){return"Create Your Sign In";};this.CtlgPg=function(){var i=null;var g=b.GetStVal(a.CurrCtlgPgNbr.KyTxt());var f=b.GetStVal(a.SlctdSrchRsltPgNbrs.KyTxt());var e=new RegExp(",?"+g+",?");if(e.test(f)){var h=b.GetStVal(a.SlctdSrchRsltTxt.KyTxt());if(h&&h.length>0){i=h;}else{var d=b.GetStVal(a.SlctdQuickIdxLnkTxt.KyTxt());if(d&&d.length>0){i=d;}}}if(!i){if(g){i="Catalog Page "+g;}else{i="";}}return i;};this.CrtePswrd=function(){return"Create Password";};this.ForgotPswrd=function(){return"Forgot your password?";};this.Home=function(){return"";};this.HomePageCatg=function(){var d=b.GetStVal(a.HomePageSlctdCatgTxt.KyTxt());return d;};this.IntermediatePage=function(){return b.GetStVal(a.IntermediatePageSrchTxt.KyTxt());};this.OrdDtl=function(){var d=b.GetStVal(a.SlctdOrdHistPOTxt.KyTxt());return"Order Detail for "+d;};this.OrdHist=function(){return"Order History";};this.OrdPad=function(){return"Current Order";};this.PartNbr=function(){return"Item "+b.GetStVal(a.SlctdPartNbrTxt.KyTxt());};this.PSrch=function(){return McMaster.SesnMgr.GetStVal(McMaster.SesnMgr.StValDefs.SlctdSrchRsltTxt.KyTxt());};this.Secr=function(){return"Security Settings";};this.SignIn=function(){return"About You";};this.SlctdQuickIdx=function(){var d=b.GetStVal(a.SlctdQuickIdxLnkTxt.KyTxt());return d;};this.SlctdSrchRslt=function(){var d=b.GetStVal(a.SlctdSrchRsltTxt.KyTxt());return d;};this.Suppliers=function(){return"Suppliers";};};}

McMaster.SesnMgr.StHist.Defs.ProdContentLoaded=new function(){var a=McMaster.SesnMgr.StValDefs;this.isEndOfStHistChg=function(b){var c=!1;if(b.PropertyNm===a.MainIFrameWebPartNm.KyTxt()){var d=McMaster.SesnMgr.GetStVal(a.MainIFrameWebPartNm.KyTxt());if(d===a.MainIFrameWebPartNm.Vals.LEGACY_CTLG_PG||d===a.MainIFrameWebPartNm.Vals.LEGACY_PDF_CTLG_PG||d===a.MainIFrameWebPartNm.Vals.LEGACY_PSRCH||d===a.MainIFrameWebPartNm.Vals.LEGACY_ADDTNL_CONTENT)switch(!0){case !0===b.IsValChg(a.SlctdSrchRsltTxt.KyTxt()):case !0===
b.IsValChg(a.CurrCtlgPgNbr.KyTxt()):case !0===b.IsValChg(a.PSrchUrl.KyTxt()):case !0===b.IsValChg(a.SlctdQuickIdxLnkTxt.KyTxt()):case !0===b.IsValChg(a.UnionSrchRsltLoadedInd.KyTxt()):case !0===b.IsValChg(a.AddtnlContentIdTxt.KyTxt()):case !0===b.IsValChg(a.MainIFrameWebPartNm.KyTxt()):!0!==McMaster.SesnMgr.GetStVal(a.ItmFastTrackInd.KyTxt())&&(c=!0)}}return c};this.bldSiteTitlTxt=function(b){var c=null;(c=!0===b.IsValChg(a.SlctdSrchRsltTxt.KyTxt())&&!0!==b.IsValChg(a.UnionSrchRsltLoadedInd.KyTxt())?
McMaster.SesnMgr.SiteTitlTxts.SlctdSrchRslt():!0===b.IsValChg(a.SlctdQuickIdxLnkTxt.KyTxt())?McMaster.SesnMgr.SiteTitlTxts.SlctdQuickIdx():!0===b.IsValChg(a.AddtnlContentIdTxt.KyTxt())?McMaster.SesnMgr.SiteTitlTxts.AddtnlContent():McMaster.SesnMgr.SiteTitlTxts.CtlgPg())&&(c=c.replace(/,/,""));return c}};
McMaster.SesnMgr.StHist.Defs.CtlgPgLoaded=new function(){var a=McMaster.SesnMgr.StValDefs;this.isEndOfStHistChg=function(b){var c=!1;b.PropertyNm==a.CtlgPgLoaded.KyTxt()&&!0===b.IsValChg(a.CurrCtlgPgNbr.KyTxt())&&(c=!0);return c};this.bldSiteTitlTxt=function(){}};
McMaster.SesnMgr.StHist.Defs.HomeLoaded=new function(){var a=McMaster.SesnMgr.StValDefs;this.isEndOfStHistChg=function(b){var c=!1;b.PropertyNm===a.MainIFrameWebPartNm.KyTxt()&&b.NewVal===a.WebPartNms.Vals.LEGACY_HOME&&b.IsValChg(a.MainIFrameWebPartNm.KyTxt())&&(c=!0);return c};this.bldSiteTitlTxt=function(){return McMaster.SesnMgr.SiteTitlTxts.Home()}};
McMaster.SesnMgr.StHist.Defs.HomePageCatgClick=new function(){var a=McMaster.SesnMgr.StValDefs;this.isEndOfStHistChg=function(b){var c=!1;b.PropertyNm===a.HomePageSlctdCatgID.KyTxt()&&b.IsValChg(a.HomePageSlctdCatgID.KyTxt())&&null!==b.NewVal&&(c=!0);return c};this.bldSiteTitlTxt=function(){return McMaster.SesnMgr.SiteTitlTxts.HomePageCatg()}};
McMaster.SesnMgr.StHist.Defs.PartNbrLoaded=new function(){var a=McMaster.SesnMgr.StValDefs,b=McMaster.SesnMgr.StValDefs.WebPartNms.Vals;this.isEndOfStHistChg=function(c){var d=!1;if(c.PropertyNm===a.SecondaryContentWebPartNm.KyTxt()&&c.NewVal===a.SecondaryContentWebPartNm.Vals.ITM_LOOKUP||c.PropertyNm===a.MainIFrameWebPartNm.KyTxt()&&c.NewVal===b.LEGACY_PSRCH_ITM_DTL){if(c.IsValChg(a.SlctdPartNbrTxt.KyTxt())&&!c.IsValChg(a.PartNbrSrchTxt.KyTxt()))switch(McMaster.SesnMgr.GetStVal(McMaster.SesnMgr.StValDefs.MainIFrameWebPartNm.KyTxt())){case McMaster.SesnMgr.StValDefs.MainIFrameWebPartNm.Vals.LEGACY_ORD_PAD:case McMaster.SesnMgr.StValDefs.MainIFrameWebPartNm.Vals.ORD_HIST:case McMaster.SesnMgr.StValDefs.MainIFrameWebPartNm.Vals.ORD_DTL:break;
default:d=!0}}else if(c.PropertyNm===a.MainIFrameWebPartNm.KyTxt())switch(c.NewVal){case b.LEGACY_CTLG_PG:case b.LEGACY_PDF_CTLG_PG:case b.LEGACY_PSRCH:c.IsValChg(a.SlctdPartNbrTxt.KyTxt())&&c.IsValChg(a.PartNbrSrchTxt.KyTxt())&&(d=!0)}return d};this.bldSiteTitlTxt=function(){return McMaster.SesnMgr.SiteTitlTxts.PartNbr()}};
McMaster.SesnMgr.StHist.Defs.OrdPadLoaded=new function(){var a=McMaster.SesnMgr.StValDefs;this.isEndOfStHistChg=function(b){var c=!1;b.PropertyNm===a.MainIFrameWebPartNm.KyTxt()&&b.NewVal===a.MainIFrameWebPartNm.Vals.LEGACY_ORD_PAD||b.NewVal===a.MainIFrameWebPartNm.Vals.LEGACY_ORD_CONFIRMATION?b.IsValChg(a.MainIFrameWebPartNm.KyTxt())&&(c=!0):b.PropertyNm===a.OrdPadLoadedInd.KyTxt()&&!0===McMaster.SesnMgr.GetStVal(a.OrdPadLoadedInd.KyTxt())&&(c=!0);return c};this.bldSiteTitlTxt=function(){return McMaster.SesnMgr.SiteTitlTxts.OrdPad()}};
McMaster.SesnMgr.StHist.Defs.OrdDtlLoaded=new function(){var a=McMaster.SesnMgr.StValDefs;this.isEndOfStHistChg=function(b){var c=!1;b.PropertyNm===a.MainIFrameWebPartNm.KyTxt()&&b.NewVal===a.MainIFrameWebPartNm.Vals.ORD_DTL&&b.IsValChg(a.SlctdOrdHistPOTxt.KyTxt())&&(c=!0);return c};this.bldSiteTitlTxt=function(){return McMaster.SesnMgr.SiteTitlTxts.OrdDtl()}};
McMaster.SesnMgr.StHist.Defs.OrdHistLoaded=new function(){var a=McMaster.SesnMgr.StValDefs;this.isEndOfStHistChg=function(b){var c=!1;b.PropertyNm===a.MainIFrameWebPartNm.KyTxt()&&b.NewVal===a.MainIFrameWebPartNm.Vals.ORD_HIST&&b.IsValChg(a.MainIFrameWebPartNm.KyTxt())&&(c=!0);return c};this.bldSiteTitlTxt=function(){return McMaster.SesnMgr.SiteTitlTxts.OrdHist()}};
McMaster.SesnMgr.StHist.Defs.Cad2DLoaded=new function(){var a=McMaster.SesnMgr.StValDefs;this.isEndOfStHistChg=function(b){var c=!1;b.PropertyNm===a.MainIFrameWebPartNm.KyTxt()&&b.NewVal===a.WebPartNms.Vals.LEGACY_2D_CAD&&b.IsValChg(a.MainIFrameWebPartNm.KyTxt())&&(c=!0);return c};this.bldSiteTitlTxt=function(){return McMaster.SesnMgr.SiteTitlTxts.Cad_2D()}};
McMaster.SesnMgr.StHist.Defs.Cad3DLoaded=new function(){var a=McMaster.SesnMgr.StValDefs;this.isEndOfStHistChg=function(b){var c=!1;b.PropertyNm===a.MainIFrameWebPartNm.KyTxt()&&b.NewVal===a.WebPartNms.Vals.LEGACY_3D_CAD&&b.IsValChg(a.MainIFrameWebPartNm.KyTxt())&&(c=!0);return c};this.bldSiteTitlTxt=function(){return McMaster.SesnMgr.SiteTitlTxts.Cad_3D()}};
McMaster.SesnMgr.StHist.Defs.IntermediatePageLoaded=new function(){var a=McMaster.SesnMgr.StValDefs;this.isEndOfStHistChg=function(b){var c=!1;if(b.PropertyNm===a.IntermediatePageSrchTxt.KyTxt()&&b.IsValChg(a.IntermediatePageSrchTxt.KyTxt())&&(b.IsValChg(a.SlctdSrchRsltTxt.KyTxt())||b.IsValChg(a.SlctdSrchRsltId.KyTxt())))c=!0;return c};this.bldSiteTitlTxt=function(){return McMaster.SesnMgr.SiteTitlTxts.IntermediatePage()}};
McMaster.SesnMgr.StHist.Defs.SrchRsltLoaded=new function(){var a=McMaster.SesnMgr.StValDefs;this.isEndOfStHistChg=function(b){var c=!1;if(b.PropertyNm===a.SlctdSrchRsltTxt.KyTxt()||b.PropertyNm===a.SlctdSrchRsltId.KyTxt()||b.PropertyNm===a.LastSlctdSrchRsltTxt.KyTxt())b.IsValChg(a.IntermediatePageSrchTxt.KyTxt())&&(b.IsValChg(a.SlctdSrchRsltTxt.KyTxt())&&b.IsValChg(a.SlctdSrchRsltId.KyTxt())&&b.IsValChg(a.LastSlctdSrchRsltTxt.KyTxt()))&&(c=!0);return c};this.bldSiteTitlTxt=function(a){}};
McMaster.SesnMgr.StHist.Defs.DynamicContentChg=new function(){var a=McMaster.SesnMgr.StValDefs;this.isEndOfStHistChg=function(b){var c=!1;b.PropertyNm==a.DynamicContentSesnSt.KyTxt()&&b.IsValChg(a.DynamicContentSesnSt.KyTxt())&&(c=!0);return c};this.bldSiteTitlTxt=function(){return McMaster.SesnMgr.GetStVal(a.DynamicContentSiteTitleText.KyTxt())}};
McMaster.SesnMgr.StHist.Defs.ContactUsLoaded=new function(){var a=McMaster.SesnMgr.StValDefs;this.isEndOfStHistChg=function(b){var c=!1;b.PropertyNm===a.MainIFrameWebPartNm.KyTxt()&&b.NewVal===a.WebPartNms.Vals.LEGACY_CNTCT_US&&b.IsValChg(a.MainIFrameWebPartNm.KyTxt())&&(c=!0);return c};this.bldSiteTitlTxt=function(){return McMaster.SesnMgr.SiteTitlTxts.CntctUs()}};
McMaster.SesnMgr.StHist.Defs.SrchRsltOnlyLoaded=new function(){var a=McMaster.SesnMgr.StValDefs;this.isEndOfStHistChg=function(b){var c=!1;b.PropertyNm===a.SecondaryContentWebPartNm.KyTxt()&&b.NewVal===a.SecondaryContentWebPartNm.Vals.SRCH_RSLT&&(c=!0);return c};this.bldSiteTitlTxt=function(a){}};
McMaster.SesnMgr.StHist.Defs.SecrPrefLoaded=new function(){var a=McMaster.SesnMgr.StValDefs;this.isEndOfStHistChg=function(b){var c=!1;b.PropertyNm===a.MainIFrameWebPartNm.KyTxt()&&b.NewVal===a.WebPartNms.Vals.LEGACY_SECR_SETTINGS&&b.IsValChg(a.MainIFrameWebPartNm.KyTxt())&&(c=!0);return c};this.bldSiteTitlTxt=function(){return McMaster.SesnMgr.SiteTitlTxts.Secr()}};
McMaster.SesnMgr.StHist.Defs.CareersLoaded=new function(){var a=McMaster.SesnMgr.StValDefs;this.isEndOfStHistChg=function(b){var c=!1;b.PropertyNm===a.MainIFrameWebPartNm.KyTxt()&&b.NewVal===a.WebPartNms.Vals.LEGACY_CAREERS&&(b.IsValChg(a.MainIFrameWebPartNm.KyTxt())?c=!0:b.IsValChg(a.CareersCntxtTxt.KyTxt())&&(c=!0));return c};this.bldSiteTitlTxt=function(){return McMaster.SesnMgr.SiteTitlTxts.Careers()}};
McMaster.SesnMgr.StHist.Defs.InLnOrdBxChg=new function(){var a=McMaster.SesnMgr.StValDefs;this.isEndOfStHistChg=function(b){var c=!1;b.PropertyNm==a.InLnOrdBxsSesnStat.KyTxt()&&b.IsValChg(a.InLnOrdBxsSesnStat.KyTxt())&&(c=!0);return c};this.bldSiteTitlTxt=function(){}};
McMaster.SesnMgr.StHist.Defs.CadInLnOrdBxLoaded=new function(){var a=McMaster.SesnMgr.StValDefs;this.isEndOfStHistChg=function(b){var c=!1;b.PropertyNm==a.CadInLnOrdBxLoadedSesnStat.KyTxt()&&b.IsValChg(a.CadInLnOrdBxLoadedSesnStat.KyTxt())&&(c=!0);return c};this.bldSiteTitlTxt=function(){}};


McMaster.LoadMgr||(McMaster.LoadMgr=new function(){var e=this,u=/^\/(css|include)\//,v=/\?.*$/;e.IFRAME_CNTNR_TYP="iframe";e.WEBPART_CNTNR_TYP="webpart";e.MULTI_CNTNR_TYP="multi";e.AppendContent=function(a,b,c){null==c&&(c=window);if(a=c.document.getElementById(a))a.innerHTML+=b};e.InsrtContent=function(a,b,c){null==c&&(c=window);if(a=c.document.getElementById(a))a.innerHTML=b};e.LoadAppendWebPart=function(a,b){if(a){var c=b?!0:!1;null==b&&(b=window);var d;d="undefined"===typeof a.CSSInclSrcFilePaths?
a.CSSInclFilePaths:a.CSSInclSrcFilePaths;k(a,b,c,!0);n(a.CSSInclFilePaths,d,{reloadInd:c,inclWindow:b,successFunc:function(a){}})}};e.LoadAssocWebPartFiles=function(a,b){if(a){var c=b?!0:!1;null==b&&(b=window);a.ParWebPart||e.ResetShowCntnr(a.CntnrIDTxt);var d;d="undefined"===typeof a.CSSInclSrcFilePaths?a.CSSInclFilePaths:a.CSSInclSrcFilePaths;k(a,b,c,!1,!1);n(a.CSSInclFilePaths,d,{reloadInd:c,inclWindow:b,successFunc:function(a){}})}};e.LoadFrmSesn=function(a,b){var c=McMasterCom.Nav.GetTopFrame();
new c.PerfTracker.Evnt(c.PerfTracker.EvntNms.LoadFrmSesn,c.PerfTracker.PgCntxtNms.DynCntnt);c=window;if(a){var d=a.Vals(),g;for(g in d)if(d.hasOwnProperty(g)){var f=d[g];!0===f.SesnStSnapshotInd&&(e.ShowCntnr(f.CntnrIDTxt),Cmn.CallMethodOnSingletonObjByMethodNm(c[f.ClsNm+"Loader"],"LoadFrmSesn",f))}}if(b){var d=b.Vals(),h;for(h in d)if(d.hasOwnProperty(h)&&(g=d[h],f=window[g.IDTxt]))!1===q(f,g.URLTxt)&&(e.ShowCntnr(g.CntnrIDTxt),null!=g.LoaderClsNm?(Cmn.CallMethodOnSingletonObjByMethodNm(c[g.LoaderClsNm],
"LoadFrmSesn",g.ClsNm),!1===q(f,g.URLTxt)&&f.location.replace(g.URLTxt)):f.location.replace(g.URLTxt)),null!=g.ClsNm&&Cmn.CallMethodOnSingletonObjByMethodNm(c[g.ClsNm],"LoadCmpl")}};e.LoadIFrame=function(){return function(a,b,c){try{var d=Cmn.GetQSVal("combine_content");""!==d&&(b=Cmn.AddQSNmVal(b,"combine_content",d));if(a){var g=a.name;e.ResetShowCntnr(g);!1!==c&&McMaster.SesnMgr.SetIFrameDat(g,a.name,b)}a&&b&&a.location.replace(b)}catch(f){Cmn.IsIE9?Cmn.GetObj("MainIFrame").src=b:a.location.href=
b}}}();e.LoadWebPart=function(a,b,c){if(a){var d=b?!0:!1;null==b&&(b=window);a.ParWebPart||e.ResetShowCntnr(a.CntnrIDTxt,c);c="undefined"===typeof a.CSSInclSrcFilePaths?a.CSSInclFilePaths:a.CSSInclSrcFilePaths;k(a,b,d);n(a.CSSInclFilePaths,c,{reloadInd:d,inclWindow:b,successFunc:function(a){}})}};e.LoadInsrtWebPart=function(a,b,c){var d=null;a&&b&&(b.cnxnParm=b.cnxnParm?b.cnxnParm:{},b.cnxnParm.respTyp||(b.cnxnParm.respTyp=McMaster.CnxnMgr.WEB_PART_RESP_TYP_TXT),!0==c&&(c=Cmn.GetQSVal("cntnrIDtxt",
a),e.UnloadCntnr(c),e.ShowCntnr(c),e.DisplWaitIcon(c)),c={},c.OrigOnSuccess=b.success,b.success=function(a,b,c){"function"==typeof c.OrigOnSuccess&&c.OrigOnSuccess(a,b);a&&e.LoadWebPart(a)},d=McMaster.CnxnMgr.PerformAjaxCnxn(a,b,c));return d};e.DisplWaitIcon=function(a){if(a=Cmn.GetObj(a))a.innerHTML='<div class="ShellLayout_WaitIcon"></div>'};e.ResetShowCntnr=function(a,b){e.ShowCntnr(a);var c=McMaster.SesnMgr.GetWebPartDatByCntnrId(a);c&&e.UnloadWebPart(c,null,b)};e.RemContent=function(a,b){var c;
null==b&&(b=window);if(c=b.document.getElementById(a))c.innerHTML=""};e.ShowCntnr=function(a){var b=window;if(e.CntnrDefs){var c;c=null;for(var d in e.CntnrDefs)if(e.CntnrDefs.hasOwnProperty(d)&&e.CntnrDefs[d].IDTxt==a){c=e.CntnrDefs[d];c=c.OverrideCntnrDef?c.OverrideCntnrDef:c;break}if(c){if(c){d=c.UnloadCntnrDefs;for(var g in d)if(d.hasOwnProperty(g)){var f=d[g];e.UnloadCntnr(f.OverrideIDTxt?f.OverrideIDTxt:f.IDTxt,f.Typ)}}if(g=Cmn.GetObj(c.IDTxt))!0==c.DisplManagedByWebPartInd?(a=McMaster.SesnMgr.GetWebPartDatByCntnrId(a))&&
Cmn.CallMethodOnSingletonObjByMethodNm(b[a.ClsNm],"WebPart_SetCntnrDispl",a):g.style.display="block"}}};e.UnloadCntnr=function(a,b,c){var d,g;b=b?b:e.WEBPART_CNTNR_TYP;c=c?c:!1;if(b==e.IFRAME_CNTNR_TYP||b==e.MULTI_CNTNR_TYP)if(d=McMaster.SesnMgr.GetIFrameDatByCntnrId(a)){if(d=Cmn.GetObj(a))e.UnloadIFrame(d,a),d.style.display="none"}else if((d=Cmn.GetObj(a))&&"iframe"==d.nodeName.toLowerCase())e.UnloadIFrame(d,a),d.style.display="none";if(b==e.WEBPART_CNTNR_TYP||b==e.MULTI_CNTNR_TYP){(b=McMaster.SesnMgr.GetWebPartDatByCntnrId(a))&&
McMaster.LoadMgr.UnloadWebPart(b);b=null;for(g in e.CntnrDefs)if(e.CntnrDefs.hasOwnProperty(g)&&e.CntnrDefs[g].IDTxt==a){b=e.CntnrDefs[g];break}if(g=b)for(var f in g.ChildCntnrDefs)g.ChildCntnrDefs.hasOwnProperty(f)&&(b=g.ChildCntnrDefs[f],d=b.OverrideIDTxt?b.OverrideIDTxt:b.IDTxt,e.UnloadCntnr(d,b.Typ,!0));if(!1==c&&(c=Cmn.GetObj(a)))!0==g.DisplManagedByWebPartInd?(a=McMaster.SesnMgr.GetWebPartDatByCntnrId(a))&&Cmn.CallMethodOnSingletonObjByMethodNm(currWindow[a.ClsNm],"WebPart_SetCntnrDispl",a):
c.style.display="none"}};e.UnloadIFrame=function(a,b){var c=null;try{a.location?c=a.location:a.contentWindow&&a.contentWindow.location&&(c=a.contentWindow.location)}catch(d){c=null}try{c&&"about:blank"!==c.href&&(c.replace("about:blank"),!0!==McMaster.SesnMgr.IsLoadingPrevSesnStInd()&&McMaster.SesnMgr.RemStVal(McMaster.SesnMgr.StValDefs.MainIFrameWebPartNm.KyTxt()))}catch(e){c.replace("about:blank"),!0!==McMaster.SesnMgr.IsLoadingPrevSesnStInd()&&McMaster.SesnMgr.RemStVal(McMaster.SesnMgr.StValDefs.MainIFrameWebPartNm.KyTxt())}McMaster.SesnMgr.RemIFrameDatByCntnrId(b)};
e.UnloadWebPart=function(a,b,c,d,g){if(a){null==b&&(b=window);a.LoadFrmSesnInd=c?c:!1;if(!0!==d)for(var f=McMaster.SesnMgr.GetImplicitWebPartChildrenByCntnrId(a.CntnrIDTxt,b),h=0;h<f.length;h++){var l=!0;e.UnloadWebPart(f[h],b,c,l,a.IDTxt)}var f=a.ChldWebPartDats.Vals(),m;for(m in f)f.hasOwnProperty(m)&&(l=!0,e.UnloadWebPart(f[m],b,c,l,a.IDTxt));Cmn.CallMethodOnSingletonObjByMethodNm(b[a.ClsNm],"WebPart_PreUnload",a);!0!==d&&e.RemContent(a.CntnrIDTxt,b);Cmn.CallMethodOnSingletonObjByMethodNm(b[a.ClsNm],
"WebPart_Unload",a);McMaster.SesnMgr.RemWebPartDat(a.IDTxt,g)}};var q=function(a,b){var c=!1,d=null;try{d=a.location.href}catch(e){}if(d&&d!==b){var f=a.location.pathname,h=d.indexOf(f),f=b.indexOf(f);0<=h&&0<=f&&(d=d.substring(h,d.length),h=b.substring(f,b.length),d===h&&(c=!0))}return c},w=function(a){for(var b=[],c=0;c<a.length;c++)b[c]=a[c];return b},x=function(a,b,c){var d=[],e=!0;null==c&&(c=window);if(b)for(var f=0;f<b.length;f++){var h=b[f];if(!c.mPageEmbeddedFiles[p(h)]){e=!1;break}}if(!e&&
a)for(f=0;f<a.length;f++)h=a[f],c.mPageEmbeddedFiles[p(h)]||(d[d.length]=h);return d},s=function(a,b,c,d){var e=d?d.inclWindow:null,f=d?d.data:null,h=d?d.reloadInd:!1,l=d?d.successFunc:function(){},m=d?d.failureFunc:function(){},k=!0;d.inclWindow&&(k=!1);h||(b=x(b,c,e));if(b&&0<b.length)YAHOO.util.Get[a](w(b),{autopurge:k,win:e,onSuccess:function(){for(var a=0;a<b.length;a++)r(b[a],e);for(a=0;a<c.length;a++)r(c[a],e);l(f)},onFailure:function(){m(f)}});else l(f)},n=function(a,b,c){s("css",a,b,c)},
y=function(a,b,c){s("script",a,b,c)},r=function(a,b){null==b&&(b=window);b.mPageEmbeddedFiles||(b.mPageEmbeddedFiles={});b.mPageEmbeddedFiles[p(a)]=1},p=function(a){a=a.replace(u,"");a=a.replace(v,"");return a=a.toLowerCase()},t=function(a,b,c,d){McMaster.SesnMgr.SetWebPartDat(a,a.ParWebPart?a.ParWebPart.IDTxt:null);a.EmbeddedIntoShellInd&&(null==a.MarkupTxt||""==a.MarkupTxt)?Cmn.CallMethodOnSingletonObjByMethodNm(b[a.ClsNm],"WebPart_Load",a):!1===d?Cmn.CallMethodOnSingletonObjByMethodNm(b[a.ClsNm],
"WebPart_AssocFilesLoad",a):!0===c?(e.AppendContent(a.CntnrIDTxt,a.MarkupTxt,b),Cmn.CallMethodOnSingletonObjByMethodNm(b[a.ClsNm],"WebPart_Append",a)):(a.CntnrIDTxt&&e.InsrtContent(a.CntnrIDTxt,a.MarkupTxt,b),Cmn.CallMethodOnSingletonObjByMethodNm(b[a.ClsNm],"WebPart_Load",a));if(a&&a.LoadChldWebPartsInd)for(var g=0;g<a.ChldWebParts.length;g++)a.ChldWebParts[g].ParWebPart=a,t(a.ChldWebParts[g],b,c,d);Cmn.CallMethodOnSingletonObjByMethodNm(b[a.ClsNm],"WebPart_LoadCmpl",a)},k=function(a,b,c,d,e){y(a.JSInclFilePaths,
a.JSInclSrcFilePaths,{reloadInd:c,inclWindow:b,successFunc:function(){t(a,b,d,e);window.FetchAhead&&FetchAheadLoader.HndlWebPart(a)}})};e.CntnrDef=function(a,b){this.ChildCntnrDefs=[];this.DisplManagedByWebPartInd=!1;this.IDTxt=a;this.OverrideCntnrDef=null;this.UnloadCntnrDefs=[];this.Typ=b};e.CntnrDef.prototype.addChildCntnr=function(a){this.ChildCntnrDefs.push(a)};e.CntnrDef.prototype.addUnloadCntnr=function(a){this.UnloadCntnrDefs.push(a)};e.CntnrDef.prototype.setOverrideCntnr=function(a){this.OverrideCntnrDef=
a}});


if(this.McMaster.LoadMgr.CntnrDefs){}else{McMaster.LoadMgr.CntnrDefs=new function(){var a=this;var b=McMaster.LoadMgr;a.Catalog=new b.CntnrDef("Catalog",b.IFRAME_CNTNR_TYP);a.ChooseSpecCntnr=new b.CntnrDef("SpecSrch_Cntnr",b.WEBPART_CNTNR_TYP);a.ChooseSpecInner=new b.CntnrDef("SpecSrch_Inner",b.WEBPART_CNTNR_TYP);a.ChooseSpecToggle=new b.CntnrDef("SpecSrch_Toggle",b.WEBPART_CNTNR_TYP);a.MainContent=new b.CntnrDef("MainContent",b.WEBPART_CNTNR_TYP);a.ProdPageContent=new b.CntnrDef("ProdPageContent",b.WEBPART_CNTNR_TYP);a.MainIFrame=new b.CntnrDef("MainIFrame",b.IFRAME_CNTNR_TYP);a.ResultsIFrame=new b.CntnrDef("ResultsIFrame",b.IFRAME_CNTNR_TYP);a.SecondaryContent=new b.CntnrDef("SecondaryContent",b.WEBPART_CNTNR_TYP);a.SecondaryContentTitl=new b.CntnrDef("SecondaryContentTitl",b.WEBPART_CNTNR_TYP);a.Catalog.setOverrideCntnr(a.MainIFrame);a.ChooseSpecCntnr.addChildCntnr(a.ChooseSpecInner);a.ChooseSpecCntnr.addChildCntnr(a.ChooseSpecToggle);a.ChooseSpecCntnr.DisplManagedByWebPartInd=true;a.ChooseSpecInner.setOverrideCntnr(a.ChooseSpecCntnr);a.MainContent.addUnloadCntnr(a.MainIFrame);a.MainIFrame.addUnloadCntnr(a.MainContent);a.MainIFrame.addUnloadCntnr(a.ChooseSpecCntnr);a.ResultsIFrame.addUnloadCntnr(a.SecondaryContent);a.SecondaryContent.addUnloadCntnr(a.ResultsIFrame);};}

if(this.McMaster.LoadMgr.IFrameLoadDlyDefs){}else{McMaster.LoadMgr.IFrameLoadDlyDefs=new function(){var a=this;a.IsIFrameLoadDelayNeeded=function(e,i){var c="Catalog";var g="MainIFrame";var d="ResultsIFrame";var l=i.toLowerCase();var h="reqtyp=catalog&ctlgpgnbr=";var m="t1=pn&itmfasttrack=true";var b="/itmlookup/itmlookup.aspx?searchstring=";var n="/ordhist/ordhist.aspx?";var o="/order/ordnav.aspx?loademailform=true";var f=".pdf";var k=false;try{switch(e.name){case (g):if(l.indexOf(n)>-1||(l.indexOf(h)>-1&&l.indexOf(m)>-1)||l.indexOf(f)>-1){k=true;}break;case (d):if(l.indexOf(o)>-1||l.indexOf(b)>-1){k=true;}break;case (c):if(l.indexOf(h)>-1&&l.indexOf(m)>-1){k=true;}break;}}catch(j){}return k;};};}

if(!this.SrchTrkr)var SrchTrkr=new function(){this.UsrActTyps={KEY:"key",BK_FWD_BTN:"bkOrFwd",FRIENDLY_URL:"friendlyURL",EXPAND:"expand",COLLAPSE:"collapse",SLCT:"slct",DESLCT:"deslct",AUTOSLCT:"autoSlct",ADD:"add"};this.RespTyps={WEB_SRCH_ENG:"webSrchEng",SPEC_MTCH:"specMtch"};this.ElemTyps={SPEC:"spec",DEEP_SPEC:"deepSpec",INLINE_SPEC:"inlineSpec",PART_NBR_LNK:"partNbrLnk",VIEW_ALL_PRODS_LNK:"viewAllProdsLnk",HOME_PAGE_ELEM:"homePageElem",HOME_PAGE_LOGO:"homePageLogo",HOME_PAGE_CATG_NM:"homePageCatgNm",
SRCH_RSLT:"srchRslt",SRCH_SUGG:"srchSugg",INTERMEDIATE_PRSNTTN:"intermediatePrsnttn",BOTTOM_NAV_LNK:"bottomNavLnk",MAIN_SRCH_BOX:"mainSrchBx",CNTXT_SRCH_BX:"cntxtSrchBx",CLR_ALL_SPECS_LNK:"clearAllSpecsLnk",ATTR_SHOW_LNK:"attrShowLnk",ATTR_HIDE_LNK:"attrHideLnk",MASTHEAD_LNK:"mastheadLnk",CAD_LNK:"CADLnk",ADDNL_CNTNT_LNK:"addnlContentLnk",ABBR_PRSNTTN:"abbrPrsnttn",GRP_PRSNTTN:"grpPrsnttn",FULL_PRSNTTN:"fullPrsnttn",FULL_PRSNTTN_LNK:"fullPrsnttnLnk",PRSNTTN_IMG:"prsnttnImg",ADDNL_INFO_LNK:"addnlInfoLnk",
CTLG_PG:"ctlgPage",PART_NBR_CTLG_PG:"partNbrCtlgPage",BOOKMARK:"bookmark",CLOSE_BTN:"closeBtn",PLACE_ORD_BTN:"placeOrdBtn",BK_OR_FWD:"backOrFwdBtn",PROD_DTL_LNK:"prodDtlLnk",ADD_TO_ORD_BTN:"addToOrdBtn",SPELL_SUGG_LNK:"spellSuggLnk"};this.SrchDat=function(a){if(a.usr&&"string"===typeof a.usr&&0<a.usr.length){var e=Cmn.Utilities.Values(SrchTrkr.UsrActTyps);this.usr=Cmn.Utilities.InArray(e,a.usr)?new g(a.usr):new g("UNKNOWN-TYPE = "+a.usr)}a.resp&&("string"===typeof a.resp&&0<a.resp.length)&&(e=Cmn.Utilities.Values(SrchTrkr.RespTyps),
this.resp=Cmn.Utilities.InArray(e,a.resp)?new h(a.resp):new h("UNKNOWN-TYPE = "+a.resp));if(!a.usr&&!a.resp&&!a.err||a.usr&&"string"!==typeof a.usr||a.resp&&"string"!==typeof a.resp||a.err&&"string"!==typeof a.err)this.err="INVALID-SIGNAL-PROCESS";this.Trk=function(){try{var a=this.usr,d=this.resp,e=this.err;if(d&&d.bestMtch&&(d.rsltExtnt=!0,!("string"===typeof d.bestMtch||"number"===typeof d.bestMtch))){var b="",k=[],c=d.bestMtch;if(c.WebSrchEngMetaDat)if("string"===typeof c.WebSrchEngMetaDat)b+=
c.WebSrchEngMetaDat;else if(c.WebSrchEngMetaDat.TermsUnionSrchRslts){if(c.WebSrchEngMetaDat.TermsUnionSrchRslts.UnionRsltDtls){for(var l=c.WebSrchEngMetaDat.TermsUnionSrchRslts.UnionRsltDtls,c=[],f=0;f<l.length;f++)l[f].SrchRsltNm&&(c[f]=l[f].SrchRsltNm);k=c}}else c.WebSrchEngMetaDat.SrchRsltNm?b+=c.WebSrchEngMetaDat.SrchRsltNm:c.WebSrchEngMetaDat.FastTrackSrchRsltId&&(b+=c.WebSrchEngMetaDat.FastTrackSrchRsltId);else if(!d.srcNm||""===d.srcNm)d.rsltExtnt=!1;d.bestMtch=""!==b?b:k?k:null}b={};b.usr=
a;b.resp=d;b.err=e;var g=YAHOO.lang.JSON.stringify(b,m),a={};a.trkObj=g;Cmn.TrkAct(a,"srchTrkr")}catch(h){Cmn.TrkAct({err:"SRCHTRKR-FAILURE"},"srchTrkr")}}};var g=function(a){this.typ=a;this.prsnttnCnt=this.specIDs=this.spec=this.slctdElemOffsetXYPosn=this.slctdID=this.slctdNm=this.slctdTxt=this.entryTxt=this.elemTyp=this.srcNm=null},h=function(a){this.typ=a;this.mtchdSpecIDs=this.mtchdSpec=this.rcgnzdSpec=this.rsltExtnt=this.partNbr=this.bestMtchIDs=this.bestMtch=this.srchTyp=this.srcNm=null},m=
function(a,e){if(null!==e)return e}};


McMaster.UrlMgr||(McMaster.UrlMgr=new function(){var d=this,f=null,l=!1,h=!1,g=!0,m=new McMaster.MsgMgr.Hdr(McMaster.MsgMgr.CntxtNms.URL_MGR),n=new McMaster.MsgMgrMsgs.BrowserNavSlctd(m);d.CurrUrl=function(){return f};d.FriendlyUrlsEnabledInd=function(){return"object"==typeof McMaster.UrlMgr.FriendlyUrls};d.SesnStKyPrfxTxt=function(){return"="};d.GetSiteCntxt=function(){var a=McMasterCom.Nav.GetTopFrame(),a=k(a.location.hash),a=McMaster.UrlMgr.FriendlyUrls.getFriendlyUrlTxtFrmHash(a),b="the home page";
a&&0<a.length&&(b=a.replace(/\-/g," "));return b};d.GetSesnStKyTxtFrmHash=function(a){var b=null;if(-1<a.lastIndexOf("=")){a=a.split("=");var c=a.length;0<c&&(b=a[c-1])}return b};d.InterpretUrlHash=function(a){a=decodeURI(a);if(a!=f){if("string"==typeof a){f=a=k(a);var b=d.GetSesnStKyTxtFrmHash(a),c=!1;b&&(c=McMaster.SesnMgr.IsVldSesnStKy(b));c?(McMaster.SesnMgr.LoadPrevSesnSt(b),c=new Date,a=c.getHours()+1,b=c.getMinutes(),c=c.getSeconds(),Cmn.TrkAct("Timestamp="+(""+a+b+c)+"&Action=back/forward clicked",
"UrlMgr"),a=new SrchTrkr.SrchDat({usr:SrchTrkr.UsrActTyps.SLCT}),a.usr.srcNm="UrlMgr",a.usr.elemTyp=SrchTrkr.ElemTyps.BK_OR_FWD,a.Trk(),McMaster.MsgMgr.PubMsg(n)):d.FriendlyUrlsEnabledInd()?(b=McMaster.UrlMgr.FriendlyUrls.getFriendlyUrlTxtFrmHash(a))&&0<b.length?(b=new McMaster.MsgMgrMsgs.UsrInpTxtSubmitted(m,b,"friendlyURL"),McMaster.MsgMgr.PubMsg(b),Cmn.TrkAct("InterpHashTxt="+a,"UrlMgr"),!1===g&&(a=McMasterCom.Nav.GetTopFrame(),new a.PerfTracker.Evnt(a.PerfTracker.EvntNms.UrlUsrChg,a.PerfTracker.PgCntxtNms.DynCntnt))):
McMaster.SesnMgr.LoadDefltWebsiteSt(g):McMaster.SesnMgr.LoadDefltWebsiteSt(g)}g=!1}};d.ParseUrlToArray=function(a){var b=[];a&&(b=a.split("/"));return b};d.ResetUrlHash=function(){"#"!==window.location.hash&&(window.location.hash="#")};d.UpdtUrlHash=function(a,b){var c=null;McMaster.UrlMgr.FriendlyUrlsEnabledInd&&(c=McMaster.UrlMgr.FriendlyUrls.bldFriendlyUrl(a));var e=null,d=!1;c?!1==c.NoHashTxtInd?(e=null==c.Txt||""==c.Txt?"":c.Txt+"/",e+=null==b?"":"="+b):(e="",d=!0):e=null==b?"":"="+b;e&&0<e.length?
(c=e.toLowerCase(),e=c=c.replace(/\/$/,""),e!=k(location.hash)&&(!0===h?!0===l&&(f=e,YAHOO.util.History.navigate("McMasterCom",e)):window.location.hash=e)):!0===d&&b!=McMaster.SesnMgr.InitSesnStKy()&&"#"!==window.location.hash&&(window.location.hash="#")};var k=function(a){return a=a.replace(/^#/,"")};McMaster.MsgMgr.AddSubscriber(McMaster.MsgMgrMsgs.ShellLoaded,function(){!0===McMaster.SesnMgr.StHistEnabledInd()&&(h=!0);if(!0===h){YAHOO.util.History.onReady(function(){l=!0;d.InterpretUrlHash(document.location.hash)});
YAHOO.util.History.register("McMasterCom","",McMaster.UrlMgr.InterpretUrlHash);var a;McMasterCom&&McMasterCom.Nav&&(a=McMasterCom.Nav.GetTopFrame(self));YAHOO.util.History.initialize("yui-history-field","yui-history-iframe",a)}0>=window.location.hash.length&&(window.location.hash="#")})});


if(McMaster.UrlMgr.FriendlyUrls){}else{McMaster.UrlMgr.FriendlyUrls=new function(){var c=McMaster.UrlMgr;var b=this;var a=null;b.Defs=new Object;b.bldFriendlyUrl=function(d){var g=null,i;for(i in c.FriendlyUrls.Defs){if(c.FriendlyUrls.Defs.hasOwnProperty(i)){var h=c.FriendlyUrls.Defs[i];if(h.isBldMatch(d)){var e=h.bld(d);if(typeof(e)=="string"){e=b.frmtFriendlyUrlTxt(e);}var f=(h.noHashTxtInd)?h.noHashTxtInd:false;g=new b.FriendlyUrlDat(e,f);break;}}}return g;};b.getFriendlyUrlTxtFrmHash=function(d){var e=null;var f=d.lastIndexOf(McMaster.UrlMgr.SesnStKyPrfxTxt());if(f>=0&&f<d.length-1){e=d.substring(0,f);}else{e=d;}e=decodeURIComponent(e.replace(/\/$/,""));return e;};b.interp=function(d){var f=false,g;for(g in c.FriendlyUrls.Defs){if(c.FriendlyUrls.Defs.hasOwnProperty(g)){var e=c.FriendlyUrls.Defs[g];if(e.isInterpMatch(d)){e.interp(d);f=true;break;}}}if(f==false&&a){a.interp(d);}};b.setDefltInterpDef=function(d){a=d;};b.frmtFriendlyUrlTxt=function(d){d=d.replace(/^\//,"");d=d.replace(/\/$/,"");d=d.replace(/[ ]/g,"-");d=d.toLowerCase();d=d.replace(/\uFFFD/g,"");d=d.replace(/\u00AE/g,"");d=d.replace(/\u2122/g,"");return d;};b.FriendlyUrlDat=function(f,d){var e=this;e.Txt=f;e.NoHashTxtInd=d;};};}

McMaster.UrlMgr.FriendlyUrls.Defs.HomePageCatg=new function(){var c=this;var b=McMaster.SesnMgr;var a=McMaster.SesnMgr.StValDefs;this.noHashTxtInd=true;this.isBldMatch=function(d){var e=false;if(d.PropertyNm===a.HomePageSlctdCatgID.KyTxt()){if(d.IsValChg(a.HomePageSlctdCatgID.KyTxt())){e=true;}if(McMaster.SesnMgr.GetStVal(a.HomePageSlctdCatgID.KyTxt())){c.noHashTxtInd=false;}else{c.noHashTxtInd=true;}}return e;};this.bld=function(){var d=b.GetStVal(a.HomePageSlctdCatgTxt.KyTxt());d=d.toLowerCase().replace(/[\s,&]+/ig,"-");return d;};};

McMaster.UrlMgr.FriendlyUrls.Defs.ProdContent=new function(){var e="catalog";var b=McMaster.SesnMgr.SetStVal;var d=McMaster.SesnMgr.GetStVal;var a=McMaster.SesnMgr.StValDefs;this.isBldMatch=function(g){var h=false;if(g.PropertyNm==a.MainIFrameWebPartNm.KyTxt()){var f=d(a.MainIFrameWebPartNm.KyTxt());if(f===a.MainIFrameWebPartNm.Vals.LEGACY_CTLG_PG||f===a.MainIFrameWebPartNm.Vals.LEGACY_PDF_CTLG_PG||f===a.MainIFrameWebPartNm.Vals.LEGACY_PSRCH||f===a.MainIFrameWebPartNm.Vals.LEGACY_ADDTNL_CONTENT){switch(true){case (g.IsValChg(a.SlctdSrchRsltTxt.KyTxt())===true):case (g.IsValChg(a.CurrCtlgPgNbr.KyTxt())===true):case (g.IsValChg(a.PSrchUrl.KyTxt())===true):case (g.IsValChg(a.SlctdQuickIdxLnkTxt.KyTxt())===true):case (g.IsValChg(a.UnionSrchRsltLoadedInd.KyTxt())===true):case (g.IsValChg(a.AddtnlContentIdTxt.KyTxt())===true):case (g.IsValChg(a.MainIFrameWebPartNm.KyTxt())===true):if(d(a.ItmFastTrackInd.KyTxt())!==true){h=true;}}}}else{if(g.PropertyNm===a.DynamicContentSesnSt.KyTxt()&&g.IsValChg(a.DynamicContentSesnSt.KyTxt())){h=true;}else{if(g.PropertyNm==a.IntermediatePageSrchTxt.KyTxt()){if(g.IsValChg(a.IntermediatePageSrchTxt.KyTxt())){h=true;}}else{if(g.PropertyNm==a.SlctdSrchRsltId.KyTxt()){if(g.IsValChg(a.SlctdSrchRsltId.KyTxt())){h=true;}}else{if(g.PropertyNm==a.SlctdSrchRsltTxt.KyTxt()){if(g.IsValChg(a.SlctdSrchRsltTxt.KyTxt())){h=true;}}else{if(g.PropertyNm==a.LastSlctdSrchRsltTxt.KyTxt()){if(g.IsValChg(a.LastSlctdSrchRsltTxt.KyTxt())){h=true;}}}}}}}return h;};this.bld=function(f){var h=null;var g=d(a.SlctdSrchRsltTxt.KyTxt());switch(true){case (f.IsValChg(a.SlctdSrchRsltTxt.KyTxt())===true&&f.IsValChg(a.UnionSrchRsltLoadedInd.KyTxt())!==true&&g!=null):h=g;break;case (f.IsValChg(a.SlctdQuickIdxLnkTxt.KyTxt())===true):h=d(a.SlctdQuickIdxLnkTxt.KyTxt());break;case (f.IsValChg(a.MainIFrameWebPartNm.KyTxt())===true&&f.IsValChg(a.SlctdSrchRsltTxt.KyTxt())===true):h=g;break;case (f.PropertyNm===a.DynamicContentSesnSt.KyTxt()):h=McMaster.SesnMgr.GetStVal(McMaster.SesnMgr.StValDefs.LastSlctdSrchRsltTxt.KyTxt());break;case (f.IsValChg(a.IntermediatePageSrchTxt.KyTxt())===true):h=d(a.IntermediatePageSrchTxt.KyTxt());break;case (f.IsValChg(a.AddtnlContentIdTxt.KyTxt())===true):h=d(a.AddtnlContentIdTxt.KyTxt());break;default:h=c();break;}if(h!=null){h=h.replace(/,/,"");}return h;};var c=function(){var f=d(a.ReqCtlgEdtnNbr.KyTxt());var k=d(a.CurrCtlgPgNbr.KyTxt());var j=d(a.SlctdSrchRsltPgNbrs.KyTxt());var i=new RegExp(",?"+k+",?");var h=null;if(i.test(j)){var l=d(a.SlctdSrchRsltTxt.KyTxt());if(l&&l.length>0){h=l;}else{var g=d(a.SlctdQuickIdxLnkTxt.KyTxt());if(g&&g.length>0){h=g;}}}if(!h){if(k&&f){h=[e,f,k].join("/");}else{h="";}}return h;};};

McMaster.UrlMgr.FriendlyUrls.Defs.PartNbr=new function(){var e="";var c=McMaster.SesnMgr.SetStVal;var d=McMaster.SesnMgr.GetStVal;var a=McMaster.SesnMgr.StValDefs;var b=McMaster.SesnMgr.StValDefs.WebPartNms.Vals;this.isBldMatch=function(f){var g=false;if((f.PropertyNm===a.SecondaryContentWebPartNm.KyTxt()&&f.NewVal===a.SecondaryContentWebPartNm.Vals.ITM_LOOKUP)||(f.PropertyNm===a.MainIFrameWebPartNm.KyTxt()&&f.NewVal===b.LEGACY_PSRCH_ITM_DTL)){if(f.IsValChg(a.SlctdPartNbrTxt.KyTxt())&&!f.IsValChg(a.PartNbrSrchTxt.KyTxt())){g=true;}}else{if(f.PropertyNm===a.MainIFrameWebPartNm.KyTxt()){switch(f.NewVal){case b.LEGACY_CTLG_PG:case b.LEGACY_PDF_CTLG_PG:case b.LEGACY_PSRCH:if(f.IsValChg(a.SlctdPartNbrTxt.KyTxt())&&f.IsValChg(a.PartNbrSrchTxt.KyTxt())){g=true;}}}}return g;};this.bld=function(){return d(a.SlctdPartNbrTxt.KyTxt());};};

McMaster.UrlMgr.FriendlyUrls.Defs.CurrOrd=new function(){var d="orders";var b=McMaster.SesnMgr.SetStVal;var c=McMaster.SesnMgr.GetStVal;var a=McMaster.SesnMgr.StValDefs;this.isBldMatch=function(e){var f=false;if(e.PropertyNm===a.MainIFrameWebPartNm.KyTxt()&&(e.NewVal===a.MainIFrameWebPartNm.Vals.LEGACY_ORD_PAD||e.NewVal===a.MainIFrameWebPartNm.Vals.LEGACY_ORD_CONFIRMATION)){f=true;}else{if(e.PropertyNm===a.OrdPadLoadedInd.KyTxt()){f=true;}}return f;};this.bld=function(){return d;};};

McMaster.UrlMgr.FriendlyUrls.Defs.OrdHist=new function(){var c="order-history";var b=McMaster.SesnMgr;var a=McMaster.SesnMgr.StValDefs;this.isBldMatch=function(e){var f=false;switch(true){case (e.PropertyNm===a.MainIFrameWebPartNm.KyTxt()):var d=b.GetStVal(a.MainIFrameWebPartNm.KyTxt());if(d===a.MainIFrameWebPartNm.Vals.ORD_HIST||d===a.MainIFrameWebPartNm.Vals.ORD_DTL){f=true;}break;}return f;};this.bld=function(){var d=null;var e=b.GetStVal(a.SlctdOrdHistPOTxt.KyTxt());if(e){d=c+"/"+escape(e);}else{d=c;}return d;};};

McMaster.UrlMgr.FriendlyUrls.Defs.CntctUs=new function(){var c="contact";var b=McMaster.SesnMgr;var a=McMaster.SesnMgr.StValDefs;this.isBldMatch=function(d){var e=false;if(d.PropertyNm===a.MainIFrameWebPartNm.KyTxt()&&d.NewVal===a.WebPartNms.Vals.LEGACY_CNTCT_US){if(d.IsValChg(a.MainIFrameWebPartNm.KyTxt())){e=true;}}return e;};this.bld=function(){return c;};};

McMaster.UrlMgr.FriendlyUrls.Defs.Cad2d=new function(){var d="cad-2d";var b=McMaster.SesnMgr.SetStVal;var c=McMaster.SesnMgr.GetStVal;var a=McMaster.SesnMgr.StValDefs;this.isBldMatch=function(e){var f=false;if(e.PropertyNm===a.MainIFrameWebPartNm.KyTxt()&&e.NewVal===a.WebPartNms.Vals.LEGACY_2D_CAD){f=true;}return f;};this.bld=function(){var e=c(a.SlctdPartNbrTxt.KyTxt());return[d,e].join("/");};};

McMaster.UrlMgr.FriendlyUrls.Defs.Cad3d=new function(){var d="cad-3d";var b=McMaster.SesnMgr.SetStVal;var c=McMaster.SesnMgr.GetStVal;var a=McMaster.SesnMgr.StValDefs;this.isBldMatch=function(e){var f=false;if(e.PropertyNm===a.MainIFrameWebPartNm.KyTxt()&&e.NewVal===a.WebPartNms.Vals.LEGACY_3D_CAD){f=true;}return f;};this.bld=function(){var e=c(a.SlctdPartNbrTxt.KyTxt());return[d,e].join("/");};};

McMaster.UrlMgr.FriendlyUrls.Defs.CadInLnOrd=new function(){var b=McMaster.SesnMgr;var a=McMaster.SesnMgr.StValDefs;this.isBldMatch=function(c){var d=false;if(c.PropertyNm===a.CadInLnOrdBxLoadedSesnStat.KyTxt()){d=true;}return d;};this.bld=function(){var c=McMaster.SesnMgr.GetStVal(McMaster.SesnMgr.StValDefs.SlctdPartNbrTxt.KyTxt());var d="CadInLnOrd/"+c;return d;};};

McMaster.UrlMgr.FriendlyUrls.Defs.Careers=new function(){var c="careers";var b=McMaster.SesnMgr;var a=McMaster.SesnMgr.StValDefs;this.isBldMatch=function(d){var e=false;if(d.PropertyNm===a.MainIFrameWebPartNm.KyTxt()&&d.NewVal===a.WebPartNms.Vals.LEGACY_CAREERS){if(d.IsValChg(a.MainIFrameWebPartNm.KyTxt())||d.IsValChg(a.CareersCntxtTxt.KyTxt())){e=true;}}return e;};this.bld=function(){var d="careers";var e=b.GetStVal(a.CareersCntxtTxt.KyTxt());if(typeof(e)=="string"){d=d+"/"+e;}return d;};};

McMaster.UrlMgr.FriendlyUrls.Defs.Help=new function(){this.isBldMatch=function(a){return false;};};

McMaster.UrlMgr.FriendlyUrls.Defs.InLnOrd=new function(){var b=McMaster.SesnMgr;var a=McMaster.SesnMgr.StValDefs;this.isBldMatch=function(c){var d=false;if(c.PropertyNm===a.InLnOrdBxsSesnStat.KyTxt()){d=true;}return d;};this.bld=function(){var c=McMaster.UrlMgr.FriendlyUrls.getFriendlyUrlTxtFrmHash(Cmn.GetUrlHash());return c;};};

McMaster.UrlMgr.FriendlyUrls.Defs.EnterASPPSrch=new function(){this.isBldMatch=function(a){return false;};};

McMaster.UrlMgr.FriendlyUrls.Defs.Srch=new function(){var c="";var b=McMaster.SesnMgr;var a=McMaster.SesnMgr.StValDefs;this.isBldMatch=function(d){return false;};McMaster.UrlMgr.FriendlyUrls.setDefltInterpDef(this);};

McMaster.UrlMgr.FriendlyUrls.Defs.Bookmarks=new function(){var b=McMaster.SesnMgr;var a=McMaster.SesnMgr.StValDefs;this.isBldMatch=function(c){var d=false;if(c.PropertyNm===a.BookmarksCntxtTxt.KyTxt()){if(c.IsValChg(a.BookmarksCntxtTxt.KyTxt())){d=true;}}return d;};this.bld=function(){var c=b.GetStVal(a.BookmarksCntxtTxt.KyTxt());return c;};};

McMaster.UrlMgr.FriendlyUrls.Defs.SecrPref=new function(){var c="security-settings";var b=McMaster.SesnMgr;var a=McMaster.SesnMgr.StValDefs;this.isBldMatch=function(d){var e=false;if(d.PropertyNm===a.MainIFrameWebPartNm.KyTxt()&&d.NewVal===a.WebPartNms.Vals.LEGACY_SECR_SETTINGS){if(d.IsValChg(a.MainIFrameWebPartNm.KyTxt())){e=true;}}return e;};this.bld=function(){return c;};};

McMaster.TxtInterp=McMaster.TxtInterp||function(){var d=[];var e=[];var g=McMaster.SesnMgr.StValDefs;var a=McMaster.SesnMgr.SetStVal;var c=McMaster.SesnMgr.GetStVal;var f={regexes:[],match:function(k,h){for(var j=0;j<this.regexes.length;j++){if(this.regexes[j].test(k)){return k;}}return false;},interp:function(h){return this;}};var b=function(h){var i=Cmn.create(f);i.regexes=h||[];d[d.length]=i;return i;};return{Defs:e,CrteDef:b};}();

McMaster.TxtInterp.Defs.IntermediatePg=function(){var f=McMaster.MsgMgrMsgs,g=McMaster.MsgMgr,a=McMaster.TxtInterp.CrteDef([/^\w+/i]),e={locknuts:"Locknuts","electrical enclosures":"Electrical Enclosures","hex nuts":"Hex Nuts",loctite:"Loctite","loctite adhesives":"Loctite"},h={"electrical enclosures":"Electrical Enclosures","hex nuts":"Hex Nuts",loctite:"Loctite","loctite adhesives":"Loctite"};a.VldtIntermediatePageNm=function(b){var d=!1,c,a=decodeURIComponent(b),a=a.replace(/[^a-zA-Z 0-9\-\/'\(\)\,\.\:\"]+/g,
"");McMaster.SesnMgr.GetStVal(McMaster.SesnMgr.StValDefs.SysSlctdSpecFiltersInd.KyTxt())||(c=Cmn.GetApplEnvrPrfx(),"pub"===c.toLowerCase()&&h[b.toLowerCase()]||(e[b.toLowerCase()]?d=!0:e[a.toLowerCase()]&&(d=!0)));return d};a.match=function(b){for(var a=!1,c=0;c<this.regexes.length;c++)if(this.regexes[c].test(b)&&this.VldtIntermediatePageNm(b)){a=!0;break}return a};a.interp=function(a){var d=a.MsgPayload().UsrInpTxt.Trim();a=new McMaster.MsgMgr.Hdr(a.MsgHdr().CntxtNm);g.PubMsg(new f.SrchSubmitted(a,
d))};return a}();


McMaster.WebSrchEng=McMaster.WebSrchEng||function(){var h=McMaster.SesnMgr.StValDefs,n=McMaster.SesnMgr.SetStVal,H=McMaster.SesnMgr.GetStVal,d=McMaster.MsgMgrMsgs,f=McMaster.MsgMgr;procssUsrInpTxtSubmitted=function(d){var D=d.MsgPayload().UsrInpTxt?d.MsgPayload().UsrInpTxt.Trim():"",G=new f.Hdr(d.MsgHdr().CntxtNm);d=d.SrchTrkInfo;var z=H(h.CurrCtlgEdtnNbr.KyTxt());n(h.ReqCtlgEdtnNbr.KyTxt(),z);n(h.SrchCurrInpTxt.KyTxt(),D);A(D,G,d)};var A=function(I,D,G){var A="/WebParts/SrchRsltWebPart/WebSrchEng.aspx?inpArgTxt="+
encodeURIComponent(I);McMaster.CnxnMgr.PerformAjaxCnxn(A,{success:function(A,K){for(i=0;i<A.length;i++){var a=A[i],g=I,b=D,l=G,x=!0,e=a.EntityTyp,c=!1;try{l.resp.typ="webSrchEng";var m=l;m.resp.srcNm="WebSrchEng";m.resp.bestMtch=a;m.resp.srchTyp=e;if(a.WebSrchEngMetaDat&&a.WebSrchEngMetaDat.PreSlctdVals&&0<a.WebSrchEngMetaDat.PreSlctdVals.length){var r=[];for(specCnt=0;specCnt<a.WebSrchEngMetaDat.PreSlctdVals.length;specCnt++)r[specCnt]={attrID:a.WebSrchEngMetaDat.PreSlctdVals[specCnt].AttrID,valID:a.WebSrchEngMetaDat.PreSlctdVals[specCnt].AttrValId};
m.resp.rcgnzdSpec=r}}catch(L){"friendlyURL"==l&&(c=!0),l=new SrchTrkr.SrchDat({err:"LOAD-ERROR-IN-WEB-SRCH-ENG"}),l.usr={},l.resp={}}switch(e){case "CtlgPgs":g=l;c=a.WebSrchEngMetaDat.CtlgPgNbrList;e=c[0];a=parseInt(a.WebSrchEngMetaDat.CtlgEditionNbr);e=parseInt(e);for(m=0;m<c.length;m++)c[m]=parseInt(c[m]);h.RemCtlgPgInfo();n(h.ReqCtlgEdtnNbr.KyTxt(),a);0<e?(n(h.CurrCtlgPgNbr.KyTxt(),e),n(h.CurrRelatedCtlgPgsTxt.KyTxt(),c.toString()),a=new d.CtlgPageSlctd(b,e,c,a,null,"Catalog"),f.PubMsg(a),b.CntxtNm==
f.CntxtNms.SRCH_ENTRY_WEB_PART&&(Cmn.TrkAct("pagenbr="+e,"SrchEntryPageNbrSrch"),g.resp.bestMtch=e)):alert("Please enter an item description, a McMaster-Carr part number, or a page number. \nClick on the Help link at the bottom of the page if you'd like some help with searching.");break;case "McMPartNbr":case "McMParentNbr":var x=l,m=c,c=!0,C=r=e=void 0,s=void 0,y=void 0,w=void 0,t=void 0,u=void 0,k=void 0,p=void 0,v=a.EntityTyp;switch(v){case "McMPartNbr":e=a.WebSrchEngMetaDat.PartNbr;r=a.WebSrchEngMetaDat.KnownToMcMInd;
C=a.WebSrchEngMetaDat.MostRecentCtlgPgNbr;s=a.WebSrchEngMetaDat.CtlgStatCd;y=a.WebSrchEngMetaDat.DiscontinuedInd;w=a.WebSrchEngMetaDat.NonCtlgPartNbrInd;t=a.WebSrchEngMetaDat.ParInfo.ParNm;parStatCd=a.WebSrchEngMetaDat.ParInfo.CtlgStatCd;u=a.WebSrchEngMetaDat.ParInfo.KnownToMcMInd;k=a.WebSrchEngMetaDat.ParInfo.MostRecentCtlgPgNbr;p=a.WebSrchEngMetaDat.ParInfo.MostRecentCtlgEdtnNbr;break;case "McMParentNbr":t=a.WebSrchEngMetaDat.ParNm,parStatCd=a.WebSrchEngMetaDat.CtlgStatCd,u=a.WebSrchEngMetaDat.KnownToMcMInd,
k=a.WebSrchEngMetaDat.MostRecentCtlgPgNbr,p=a.WebSrchEngMetaDat.MostRecentCtlgEdtnNbr}a=McMaster.SesnMgr.GetStVal(McMaster.SesnMgr.StValDefs.CurrCtlgEdtnNbr.KyTxt());if(!1==r&&e.Trim().toLowerCase()!=g.Trim().toLowerCase())c=!1;else{if(null==Cmn.GetObj("catg0")){var B=Cmn.Get("ResultsIFrame"),E=Cmn.Get("SecondaryContent");"Search Results"==Cmn.Get("SecondaryContentTitl").innerHTML&&(B&&McMaster.LoadMgr.UnloadCntnr("ResultsIFrame","iframe",!1),E&&(McMaster.LoadMgr.UnloadCntnr("SecondaryContent","webpart",
!1),McMaster.LoadMgr.UnloadCntnr("SecondaryContentTitl","webpart",!1)),B=new d.CollapseSecondaryContent(void 0),McMaster.MsgMgr.PubMsg(B),McMaster.SesnMgr.RemStVal(McMaster.SesnMgr.StValDefs.CurrRelatedCtlgPgsTxt.KyTxt()))}switch(!0){case !1===r&&!1===u:McMaster.MsgMgr.PubMsg(new d.UnknownPartNbrSlctd(b,e));break;case !1===r&&!0===u:z(k,p);McMaster.MsgMgr.PubMsg(new d.UnknownPartNbrSlctd(b,e));McMaster.MsgMgr.PubMsg(new McMaster.MsgMgrMsgs.CtlgPageSlctd(b,k,null,p,null));break;case "McMParentNbr"===
v&&!1===u:McMaster.MsgMgr.PubMsg(new d.UnknownParentSlctd(b,t));break;case !0===w&&"Current"===parStatCd:z(k,p);McMaster.MsgMgr.PubMsg(new d.NonCtlgPartNbrSlctd(b,e));McMaster.MsgMgr.PubMsg(new McMaster.MsgMgrMsgs.CtlgPageSlctd(b,k,null,p,null));break;case !0===w&&"Deleted"===parStatCd:McMaster.MsgMgr.PubMsg(new d.NonCtlgPartNbrSlctd(b,e));break;case "Deleted"===s&&"Current"===parStatCd:z(k,p);McMaster.MsgMgr.PubMsg(new d.DelPartNbrSlctd(b,e));McMaster.MsgMgr.PubMsg(new McMaster.MsgMgrMsgs.CtlgPageSlctd(b,
k,null,p,null));break;case "Deleted"===s&&"Deleted"===parStatCd:McMaster.MsgMgr.PubMsg(new d.DelPartNbrSlctd(b,e));break;case !0===y&&"Current"===parStatCd:z(k,p);McMaster.MsgMgr.PubMsg(new d.DiscntndPartNbrSlctd(b,e));break;case !0===y&&"Deleted"===parStatCd:McMaster.MsgMgr.PubMsg(new d.DiscntndPartNbrWthDelParentSlctd(b,e));break;case "McMParentNbr"===v&&"Deleted"===parStatCd:McMaster.MsgMgr.PubMsg(new d.DelParentSlctd(b,t));break;case "Unknown"===s&&"Current"===parStatCd:McMaster.MsgMgr.PubMsg(new d.ParentSlctd(b,
e));McMaster.MsgMgr.PubMsg(new McMaster.MsgMgrMsgs.CtlgPageSlctd(b,ctlgPgNbr,null,a,e));break;case "Unknown"===s&&"Unknown"===parStatCd:McMaster.MsgMgr.PubMsg(new d.UnPubPartNbrSlctd(b,e));break;case "Current"===s:z(C,a);!0==m&&-1==g.Trim().toLowerCase().indexOf("catalog/")?(a=new McMaster.MsgMgr.Hdr(McMaster.MsgMgr.CntxtNms.ITM_PRSNTTN),McMaster.MsgMgr.PubMsg(new McMaster.MsgMgrMsgs.PartNbrSrchd(a,e))):McMaster.MsgMgr.PubMsg(new d.PartNbrSlctd(b,e));break;case "McMParentNbr"===v&&"Current"===parStatCd:z(k,
p);McMaster.MsgMgr.PubMsg(new d.ParentSlctd(b,t));McMaster.MsgMgr.PubMsg(new McMaster.MsgMgrMsgs.CtlgPageSlctd(b,k,null,p,null));break;case "McMParentNbr"===v&&!0===u&&"Unknown"===parStatCd:McMaster.MsgMgr.PubMsg(new d.UnPubParentSlctd(b,t));break;default:"McMPartNbr"===v?McMaster.MsgMgr.PubMsg(new d.UnknownPartNbrSlctd(b,e)):"McMParentNbr"===v&&McMaster.MsgMgr.PubMsg(new d.UnknownParentSlctd(b,t))}b.CntxtNm==f.CntxtNms.SRCH_ENTRY_WEB_PART&&(Cmn.TrkAct("partnbr="+e,"SrchEntryPartNbrSrch"),x.resp.partNbr=
e,x.resp.bestMtch=e,c=!0)}x=c;break;case "AddnlContent":g=l;a=a.WebSrchEngMetaDat;n(h.AddtnlContentIdTxt.KyTxt(),a);f.PubMsg(new d.AddnlContentSlctd(b));b.CntxtNm==f.CntxtNms.SRCH_ENTRY_WEB_PART&&Cmn.TrkAct("addnlContentNbr="+a,"SrchEntryAddnlContentNbrSrch");g.bestMtch=a;break;case "CAD":g=l;c=a.WebSrchEngMetaDat.CADReqTyp;a=a.WebSrchEngMetaDat.McMPartNbr;n(h.SlctdPartNbrTxt.KyTxt(),a);switch(c){case "CAD2D":f.PubMsg(new d.Cad2dSlctd(b));break;case "CAD3D":f.PubMsg(new d.Cad3dSlctd(b));break;case "InlineOrd":n(h.CadInLnOrdBxLoadedSesnStat.KyTxt(),
!0),f.PubMsg(new d.CadLnkSlctd(b,a))}g.resp.partNbr=a;g.resp.bestMtch=c;break;case "CurrOrd":a=l;n(h.MainIFrameWebPartNm.KyTxt(),h.MainIFrameWebPartNm.Vals.LEGACY_ORD_PAD);n(h.OrdPadStKy.KyTxt(),h.OrdPadStKy.Vals.TOOLBAR);f.PubMsg(new d.CurrOrdSlctd(b));a.resp.bestMtch="CurrentOrder";break;case "ContactUs":"contact"==a.WebSrchEngMetaDat.toLowerCase()&&b.CntxtNm==f.CntxtNms.SRCH_ENTRY_WEB_PART?x=!1:(a=l,f.PubMsg(new d.CntctUsSlctd(b)),a.resp.bestMtch="ContactUs");break;case "OrdHist":g=l;a=a.WebSrchEngMetaDat.Trim();
a=McMaster.UrlMgr.ParseUrlToArray(a);c=null;1<a.length&&(c=unescape(a[1]));n(h.SlctdMastheadBtnNm.KyTxt(),h.SlctdMastheadBtnNm.Vals.ORD_HIST);n(h.SlctdOrdHistPOTxt.KyTxt(),c);n("friendlyUrlPOReqTxt",c);n(h.MainIFrameWebPartNm.KyTxt(),h.MainIFrameWebPartNm.ORD_HIST);f.PubMsg(new d.OrdHistSlctd(b));g.resp.bestMtch="OrderHistory";break;case "Help":g=l;c="";switch(a.WebSrchEngMetaDat){case "TermsAndConditions":c="termsconditions";break;case "TermsAndConditionsFrmLnk":c="termsConditionsConfirm";break;
case "HomePageSettings":c="homepagesettings";break;case "ReturnsPolicy":c="return";break;case "Suppliers":c="supplier";break;case "Help":c="";break;case "Unknown":c="";break;default:c=""}f.PubMsg(new d.HelpSlctd(b,c));g.resp.bestMtch=c;break;case "AppHelp":a=l;f.PubMsg(new d.AppHelpSlctd(b));a.resp.bestMtch="AppHelp";break;case "Bookmarks":b.CntxtNm==f.CntxtNms.SRCH_ENTRY_WEB_PART?x=!1:(a=l,McMaster.SesnMgr.GetStVal(McMaster.SesnMgr.StValDefs.MainIFrameWebPartNm.KyTxt())||(g=new f.Hdr(f.CntxtNms.URL_MGR),
f.PubMsg(new d.HomePageCatgSlctd(g,!1))),f.PubMsg(new d.BMsSlctd(b)),a.resp.bestMtch="LoadBookmarks");break;case "Careers":g=l;c=null;e=void 0;switch(a.WebSrchEngMetaDat){case "CustomerService":c="customerservice";e="customer-service";break;case "Management":e=c="management";break;case "Publishing":c="publishing";e="merchandising-and-publishing";break;case "Systems":e=c="systems";break;case "Apply":c="apply",e="how-to-apply"}n(h.CareersQSKyTxt.KyTxt(),c);f.PubMsg(new d.CareersSlctd(b,e));g.resp.bestMtch=
e;break;case "Taxes":g=l;a=a.WebSrchEngMetaDat.Trim();a=McMaster.UrlMgr.ParseUrlToArray(a);c=null;1<a.length&&(c=a[1].toLowerCase());f.PubMsg(new d.TaxSlctd(b,c));g.resp.bestMtch="Taxes";break;case "WebsiteSettings":f.PubMsg(new d.SiteSettingsSlctd(b));break;case "SecuritySettings":f.PubMsg(new d.SecrSlctd(b));break;case "HomePgCatg":g=l;c=a.WebSrchEngMetaDat.HomePgCatgNm;a=a.WebSrchEngMetaDat.HomePgCatgID;n(h.HomePageSlctdCatgTxt.KyTxt(),c);n(h.HomePageSlctdCatgID.KyTxt(),a);b=new d.HomePageCatgSlctd(b);
b.MsgPayload().UsrInpTxt=c;f.PubMsg(b);g.resp.bestMtch=c;break;case "DeepLnkIntermediatePg":preSlctdSpecsInd=H(h.SysSlctdSpecFiltersInd.KyTxt());applEnvrPrfx=Cmn.GetApplEnvrPrfx().toLowerCase();preSlctdSpecsInd||"pub"==applEnvrPrfx?x=!1:(a=a.WebSrchEngMetaDat.Trim(),g=FastTrackLoader.CreateHeaders(),McMaster.MsgMgr.PubMsg(new McMaster.MsgMgrMsgs.IntermediatePageSlctd(g,a)),f.PubMsg(new d.SrchSubmitted(b,a)));break;case "Term":c=l;g=g.Trim();B=v=p=k=e=void 0;E=!1;m=[];r=[];C=void 0;s=!1;y=void 0;w=
"";u=t=!1;switch(Cmn.GetApplEnvrPrfx()+Cmn.GetApplEnvrSfx()){case "pubdev":case "pubqual":case "pub":u=!0;default:!0==McMaster.SesnMgr.ContainsStValKy(McMaster.SesnMgr.StValDefs.DynLandingPgsEnabledInd.KyTxt())&&(u=McMaster.SesnMgr.GetStVal(McMaster.SesnMgr.StValDefs.DynLandingPgsEnabledInd.KyTxt()))}if(a.WebSrchEngMetaDat&&(e=a.WebSrchEngMetaDat.FastTrackSrchRsltId,p=Cmn.Trim(a.WebSrchEngMetaDat.SrchRsltNm),v=a.WebSrchEngMetaDat.PreSlctdVals,B=a.WebSrchEngMetaDat.IntermediatePageInd,E="about"==p.toLowerCase().substring(0,
5),k=a.WebSrchEngMetaDat.TermsUnionSrchRslts,spcSvngPrtNbrInd=a.WebSrchEngMetaDat.SpaceSavingPartNbrInd,k)){s=k.AllHaveIntermediatePagesInd;y=k.CoveringSrchRsltNm;for(q=0;q<k.UnionRsltDtls.length;q++)w+=k.UnionRsltDtls[q].SrchRsltId.toString(),q<k.UnionRsltDtls.length-1&&(w+=",");t=10>=a.WebSrchEngMetaDat.FastTrackCtlgPgCnt;for(q=0;q<k.UnionRsltDtls.length;q++)m.push(k.UnionRsltDtls[q].SrchRsltNm)}if(a.WebSrchEngMetaDat&&!0==B)J(p,c);else if(a.WebSrchEngMetaDat&&e&&-1!=e&&!1==E)SecondaryContentCoordinator.Init(),
a=new McMaster.MsgMgrMsgs.SrchSuggSlctd(b,e,p,v),McMaster.MsgMgr.PubMsg(a),c.resp.srchTyp="DynamicContent";else if(a.WebSrchEngMetaDat&&-1==e&&k)if(s){for(var F=m[0],q=1;q<m.length;q++)F=F+";"+m[q];J(F,c)}else if(t||u)SecondaryContentCoordinator.Init(),a=new McMaster.MsgMgrMsgs.SrchSuggSlctd(b,w,g,v),McMaster.MsgMgr.PubMsg(a);s||y||w&&(t||u)?(y?(r.push(y),C=e):F&&(r=m),f.PubMsg(new d.UnionRsltSlctd(b,g,r,C,m,y,s)),c.resp.srchTyp="TermRsltUnion"):f.PubMsg(new d.SrchSubmitted(b,g));break;default:McMaster.SesnMgr.LoadDefltWebsiteSt()}x&&
l.Trk();if(!0==x)break}},cnxnParm:{respTyp:McMaster.CnxnMgr.JSON_RESP_TYP_TXT}})},z=function(d,f){McMaster.SesnMgr.SetStVal(McMaster.SesnMgr.StValDefs.CurrCtlgPgNbr.KyTxt(),d);McMaster.SesnMgr.SetStVal(McMaster.SesnMgr.StValDefs.ReqCtlgEdtnNbr.KyTxt(),f)},J=function(d,f){var h=FastTrackLoader.CreateHeaders(),h=new McMaster.MsgMgrMsgs.IntermediatePageSlctd(h,d);McMaster.MsgMgr.PubMsg(h);f.resp.srchTyp="IntmdPg"};McMaster.MsgMgr.AddSubscriber(McMaster.MsgMgrMsgs.UsrInpTxtSubmitted,procssUsrInpTxtSubmitted)}();


if(this.McMasterCom){}else{McMasterCom=GetMcMasterCom();}if(this.McMasterCom.LoadMgr){}else{McMasterCom.LoadMgr=new function(){var j="sesnextrep";var f="204.asp";var a=McMasterCom.Nav.GetTopFrame(self);var c=new McMaster.MsgMgr.Hdr(McMaster.MsgMgr.CntxtNms.MCMASTERCOM_LOADMGR);this.LoadMainIFrame=function(k){h();d(a.MainIFrame,k);};this.LoadResultsIFrame=function(k){i();d(a.ResultsIFrame,k);};this.LoadCtlgFrame=function(k){d(a.MainIFrame.Catalog,k);};this.LoadFormInIFrame=function(m,n,u,t){var q=null;if(m&&m.action){q=m.action;if(q.indexOf("?")>-1){q+="&";}else{q+="?";}var l=m.elements;for(var v=0;v<l.length;v++){var r=l[v];var p=(r&&r.type)?r.type:"";switch(p){case"text":case"textarea":case"hidden":var w=r.name;var o=r.value;q+=w+"="+encodeURIComponent(o)+"&";break;case"checkbox":var s=r.checked;var w=r.name;var o=r.value;if(s){q+=w+"="+o+"&";}else{q+=w+"=&";}break;case"radio":var s=r.checked;if(s){var w=r.name;var o=r.value;q+=w+"="+o+"&";}break;case"select":var k=r.selectedIndex;var w=r.name;var o=r.options[k].value;q+=w+"="+encodeURIComponent(o)+"&";break;}}}q=q.replace(/&$/,"");if(!u||u==="get"){d(n,q,t);}else{if(u==="post"){}}};var d=function(k,l,q){l=e(l);try{try{if(l.match(/itmLookup/i)){var o=k.location.pathname;var p=l.indexOf(o);if(p>=0){l=l.substring(p,l.length);}McMaster.MsgMgr.PubMsg(new McMaster.MsgMgrMsgs.WebPartLoaded(new McMaster.MsgMgr.Hdr(McMaster.MsgMgr.CntxtNms.TRKR,"1.0"),l));}}catch(m){}if(l.indexOf(f)>-1){var n={success:function(){}};McMaster.CnxnMgr.PerformAjaxCnxn(l,n);}else{McMaster.LoadMgr.LoadIFrame(k,l,q);}}catch(m){try{var r=k.name;document.getElementById(r).src=l;}catch(m){}}};var e=function(m){var l="";var k=Cmn.GetCookieVal(j);if(k.length==0){var n=McMaster.SesnMgr.GetStVal(McMaster.SesnMgr.StValDefs.SesnExtRepKy.KyTxt());l=Cmn.AddQSNmVal(m,j,n);}else{l=Cmn.RemoveQSNmVal(m,j);}return l;};var h=function(){var k=false;if(a.MainIFrame){}else{k=true;var m={name:"MainIFrame",id:"MainIFrame",frameBorder:"0",allowTransparency:"true"};var l=Cmn.CrteElement("iframe",m);Cmn.GetObj("ShellLayout_MainIFrame_Cntnr").appendChild(l);b();}return k;};var i=function(){var k=false;if(a.ResultsIFrame){}else{k=true;var m={name:"ResultsIFrame",id:"ResultsIFrame",frameBorder:"0",allowTransparency:"true"};var l=Cmn.CrteElement("iframe",m);Cmn.GetObj("ShellLayout_SecondaryContent_Content_Cntnr").appendChild(l);}return k;};var g=function(k){var l=function(){if(h()){Cmn.GetObj("MainIFrame").style.display="none";}if(i()){Cmn.GetObj("ResultsIFrame").style.display="none";}};setTimeout(l,1000);};var b=function(){var k=new McMaster.MsgMgrMsgs.ShellIFrameCreated(c);McMaster.MsgMgr.PubMsg(k);};McMaster.MsgMgr.AddSubscriber(McMaster.MsgMgrMsgs.ShellLoaded,function(k){g(k);});};}

if(this.McMaster.PrfrmncTrkMgr){}else{McMaster.PrfrmncTrkMgr=new function(){var a={DynamicCtlgPage:{mStartTS:null,mStopTS:null},FindTab:{mStartTS:null,mStopTS:null},HomePage:{mStartTS:null,mStopTS:null},HTMLCtlgPage:{mStartTS:null,mStopTS:null},IntermediatePage:{mStartTS:null,mStopTS:null},NewOrdPad:{mStartTs:null,mStopTS:null},OrdHist:{mStartTS:null,mStopTS:null},OrdPad:{mStartTs:null,mStopTS:null},PDFCtlgPage:{mStartTS:null,mStopTS:null},PSrch:{mStartTS:null,mStopTS:null,mSrchTxt:null},RecentOrds:{mStartTS:null,mStopTS:null},SrchEntryWebPart:{mStartTS:null,mStopTS:null},SrchRslts:{mStartTS:null,mStopTS:null,mSrchTxt:null}};var i=false;var g="";McMaster.MsgMgr.AddSubscriber(McMaster.MsgMgrMsgs.CtlgPageSlctd,function(j){c(j);});McMaster.MsgMgr.AddSubscriber(McMaster.MsgMgrMsgs.CurrOrdSlctd,function(j){c(j);});McMaster.MsgMgr.AddSubscriber(McMaster.MsgMgrMsgs.IntermediatePageSlctd,function(j){c(j);});McMaster.MsgMgr.AddSubscriber(McMaster.MsgMgrMsgs.NewHomePageInlineJSInit,function(j){c(j);});McMaster.MsgMgr.AddSubscriber(McMaster.MsgMgrMsgs.OrdHistSlctd,function(j){c(j);});McMaster.MsgMgr.AddSubscriber(McMaster.MsgMgrMsgs.ShellLoaded,function(j){c(j);});McMaster.MsgMgr.AddSubscriber(McMaster.MsgMgrMsgs.SrchSubmitted,function(j){c(j);});McMaster.MsgMgr.AddSubscriber(McMaster.MsgMgrMsgs.CtlgPageLoaded,function(j){b(j);});McMaster.MsgMgr.AddSubscriber(McMaster.MsgMgrMsgs.IntermediatePageLoaded,function(j){b(j);});McMaster.MsgMgr.AddSubscriber(McMaster.MsgMgrMsgs.WebPartLoaded,function(k){b(k);var j=k.MsgHdr().CntxtNm;switch(j){case McMaster.MsgMgr.CntxtNms.DYNAMIC_PAGE:f(k);break;default:}});McMaster.MsgMgr.AddSubscriber(McMaster.MsgMgrMsgs.WebPartPreUnLoaded,function(k){var j=k.MsgHdr().CntxtNm;switch(j){case McMaster.MsgMgr.CntxtNms.DYNAMIC_PAGE:e(k);break;default:}});McMaster.MsgMgr.AddSubscriber(McMaster.MsgMgrMsgs.SrchRsltSlctd,function(j){if(i){var k,l,m;k=j.MsgPayload().SrchRsltInfoObj;if(k&&k.RsltInfo){l=k.RsltInfo.SrchRsltId;m=k.RsltInfo.SrchTrm;}else{m=k.Nm;}Cmn.TrkAct("PrfrmncTrkIML02=&SpSrchLd="+g+"&SrchRsltLd="+m+"&SrchRsltId"+l,"SrchRsltSpecSrch");}});var f=function(k){i=true;g=McMaster.SesnMgr.GetStVal(McMaster.SesnMgr.StValDefs.SrchTxt.KyTxt());var j=Cmn.GetElementsByClsNm("WebToolsetToolWebPart_Aligned_LEFT")[0];if(j){Cmn.TrkAct("PrfrmncTrkIML01=&SpSrchLd="+g+"&ProdCnt="+j.innerHTML,"SrchRsltSpecSrch");}};var e=function(j){i=false;g="";};var c=function(k){var j=k.MsgHdr().CntxtNm;switch(k.NM){case McMaster.MsgMgrMsgs.CtlgPageSlctd.NM:a[McMaster.MsgMgr.CntxtNms.DYNAMIC_CTLG_PAGE].mStartTS=new Date();a[McMaster.MsgMgr.CntxtNms.HTML_CTLG_PAGE].mStartTS=new Date();a[McMaster.MsgMgr.CntxtNms.PDF_CTLG_PAGE].mStartTS=new Date();break;case McMaster.MsgMgrMsgs.CurrOrdSlctd.NM:a[McMaster.MsgMgr.CntxtNms.ORD_PAD].mStartTS=new (Date);a[McMaster.MsgMgr.CntxtNms.NEW_ORD_PAD].mStartTS=new (Date);break;default:switch(j){case McMaster.MsgMgr.CntxtNms.SRCH:a[McMaster.MsgMgr.CntxtNms.SRCH_RSLTS].mStartTS=new Date();a[McMaster.MsgMgr.CntxtNms.SRCH_RSLTS].mSrchTxt=k.MsgPayload().SrchTxt;a[McMaster.MsgMgr.CntxtNms.PSRCH].mSrchTxt=k.MsgPayload().SrchTxt;a[McMaster.MsgMgr.CntxtNms.PSRCH].mStartTS=new Date();break;case McMaster.MsgMgr.CntxtNms.SRCH_RSLTS:a[McMaster.MsgMgr.CntxtNms.INTERMEDIATE_PAGE].mStartTS=new Date();break;case McMaster.MsgMgr.CntxtNms.NEW_HOME_PAGE_INLINE_JS:var l=k.MsgPayload().StrtTime;a[McMaster.MsgMgr.CntxtNms.HOME_PAGE].mStartTS=l;a[McMaster.MsgMgr.CntxtNms.RECENT_ORDS].mStartTS=l;a[McMaster.MsgMgr.CntxtNms.SRCH_ENTRY_WEB_PART].mStartTS=l;break;case McMaster.MsgMgr.CntxtNms.MASTHEAD:a[McMaster.MsgMgr.CntxtNms.ORD_HIST].mStartTS=new Date();break;default:}}};var b=function(l){switch(l.NM){case McMaster.MsgMgrMsgs.CtlgPageLoaded.NM:var j=McMaster.SesnMgr.GetStVal(McMaster.SesnMgr.StValDefs.CurrCtlgPgNbr.KyTxt());var k=l.MsgHdr().CntxtNm;switch(k){case McMaster.MsgMgr.CntxtNms.HTML_CTLG_PAGE:if(a[k].mStartTS){var m=new Date()-a[k].mStartTS.getTime();var o=m/1000;Cmn.TrkAct("HTMLCatalogPageLoadTime="+o+"&CtlgPgNbr="+j,"CtlgPgResponseTime");McMaster.EnvrMgr.SetEnvrVal(McMaster.SesnMgr.StValDefs.CtlgHtmlPageLoadTm.KyTxt(),m);}break;case McMaster.MsgMgr.CntxtNms.DYNAMIC_CTLG_PAGE:if(a[k].mStartTS){var m=new Date()-a[k].mStartTS.getTime();var o=m/1000;Cmn.TrkAct("DynamicHTMLCatalogPageLoadTime="+o+"&CtlgPgNbr="+j,"CtlgPgResponseTime");McMaster.EnvrMgr.SetEnvrVal(McMaster.SesnMgr.StValDefs.CtlgDynamicPageLoadTm.KyTxt(),m);}break;case McMaster.MsgMgr.CntxtNms.PDF_CTLG_PAGE:if(a[k].mStartTS){var m=new Date()-a[k].mStartTS.getTime();var o=m/1000;Cmn.TrkAct("PDFCatalogPageLoadTime="+o+"&CtlgPgNbr="+j,"CtlgPgResponseTime");McMaster.EnvrMgr.SetEnvrVal(McMaster.SesnMgr.StValDefs.CtlgPDFPageLoadTm.KyTxt(),m);}break;default:}d();break;case McMaster.MsgMgrMsgs.IntermediatePageLoaded.NM:var k=l.MsgHdr().CntxtNm;if(a[k].mStartTS){var m=new Date()-a[k].mStartTS.getTime();var o=m/1000;var n=McMaster.SesnMgr.GetStVal(McMaster.SesnMgr.StValDefs.IntermediatePageSrchTxt.KyTxt());Cmn.TrkAct("LPTrkID1LoadTime="+o+"&PageNm="+n,"LandingPage");a[k].mStartTS=null;}break;case McMaster.MsgMgrMsgs.WebPartLoaded.NM:var k=l.MsgHdr().CntxtNm;if(a[k]){if(a[k].mStartTS>0){a[k].mStopTS=new Date();h(a[k],k);}else{}}break;default:}};var d=function(j){a[McMaster.MsgMgr.CntxtNms.HTML_CTLG_PAGE].mStartTS=null;a[McMaster.MsgMgr.CntxtNms.HTML_CTLG_PAGE].mStopTS=null;a[McMaster.MsgMgr.CntxtNms.DYNAMIC_CTLG_PAGE].mStartTS=null;a[McMaster.MsgMgr.CntxtNms.DYNAMIC_CTLG_PAGE].mStopTS=null;a[McMaster.MsgMgr.CntxtNms.PDF_CTLG_PAGE].mStartTS=null;a[McMaster.MsgMgr.CntxtNms.PDF_CTLG_PAGE].mStopTS=null;};var h=function(l,j){var m=l.mStopTS.getTime()-l.mStartTS.getTime();var n=m/1000;var k=1;switch(j){case McMaster.MsgMgr.CntxtNms.FIND_TAB:Cmn.TrkAct("FindTab_SrchBar_Loaded="+n,"HmPg");break;case McMaster.MsgMgr.CntxtNms.HOME_PAGE:Cmn.TrkAct("NewShellLoadTime_InlineJStoHomePageLoaded="+n+"&WebRptTrkNbr="+mWebRptTrkNbr,"HmPg");McMaster.EnvrMgr.SetEnvrVal(McMaster.SesnMgr.StValDefs.HomePageLoadTm.KyTxt(),m);break;case McMaster.MsgMgr.CntxtNms.INTERMEDIATE_PAGE:k=null;break;case McMaster.MsgMgr.CntxtNms.ORD_HIST:Cmn.TrkAct("OrdHistLoadTime="+n,"OrdHistResponseTime");break;case McMaster.MsgMgr.CntxtNms.PSRCH:Cmn.TrkAct("PSrchLoadTime="+n+"&srchTxt="+l.mSrchTxt,"PSrchLoadTime");break;case McMaster.MsgMgr.CntxtNms.RECENT_ORDS:Cmn.TrkAct("NewShellLoadTime_InlineJStoRecentOrds="+n,"HmPg");break;case McMaster.MsgMgr.CntxtNms.SRCH_ENTRY_WEB_PART:Cmn.TrkAct("SrchEntryWebPart_SrchBar_Loaded="+n,"HmPg");break;case McMaster.MsgMgr.CntxtNms.SRCH_RSLTS:Cmn.TrkAct(j+"LoadTime="+n+"&srchTxt="+l.mSrchTxt,"PerformanceTracker");break;case McMaster.MsgMgr.CntxtNms.ORD_PAD:Cmn.TrkAct(j+"LoadTime="+n,j);break;case McMaster.MsgMgr.CntxtNms.NEW_ORD_PAD:Cmn.TrkAct(j+"LoadTime="+n+"&WebRptTrkNbr="+mWebRptTrkNbr,j);McMaster.EnvrMgr.SetEnvrVal(McMaster.SesnMgr.StValDefs.OrdPadLoadTm.KyTxt(),m);break;default:}if(k){a[j].mStartTS=null;}};};}

if(this.ContentHistMgr){}else{ContentHistMgr=new function(){this.TYP={ATTR_GRP:"CollapseExpandAttrGrp",CHOOSE_SPECS:"CollapseExpandChooseSpecs",CHOOSE_SPECS_LOAD:"ChooseSpecsLoad",CONTENT_LOAD:"DynamicContentLoad",PROD_PAGE_LOAD:"ProdPageLoad",PRSNTTN:"CollapseExpandPrsnttn",ITM_PRSNTTN_LOAD:"ItmPrsnttnLoad"};mSnapshotQue=[],mInFlightSnapshotInitiators={};this.Init_Snapshot=function(a){mSnapshotQue.push(a);mInFlightSnapshotInitiators[a]=true;};this.Abort_Snapshot=function(a){var b=false;b=this.Rem_Snapshot(a);return b;};this.Rem_Snapshot=function(c){var d=false;var a=null;for(var b in mSnapshotQue){if(mSnapshotQue.hasOwnProperty(b)){if(mSnapshotQue[b]==c){a=b;break;}}}if(a!=null){mSnapshotQue.splice(a,1);d=true;}return d;};this.ShouldILoadFrmSesn=function(c){var b=false,a=McMaster.SesnMgr.GetStVal(McMaster.SesnMgr.StValDefs.DynamicContentSnapshotInitiators.KyTxt());if(a&&a[c]){b=true;}return b;};this.Take_Snapshot=function(a){var c=this.Rem_Snapshot(a);if(c&&mSnapshotQue.length==0){var b=McMaster.SesnMgr.GetStVal(McMaster.SesnMgr.StValDefs.DynamicContentSesnSt.KyTxt());if(b==null){b=-1;}McMaster.SesnMgr.SetStVal(McMaster.SesnMgr.StValDefs.DynamicContentSnapshotInitiators.KyTxt(),mInFlightSnapshotInitiators);mInFlightSnapshotInitiators={};McMaster.SesnMgr.SetStVal(McMaster.SesnMgr.StValDefs.DynamicContentSesnSt.KyTxt(),b+1);}};this.Reset_Snapshot=function(){mSnapshotQue=new Array();};};}

if(this.ShellPreInit){}else{ShellPreInit=new function(){ShellASPX.PreInitFunc();if(Cmn.IsIE6Below()){YAHOO.util.Event.addListener(window,"load",function(){ShellASPX.PreShellLoadedFunc();});}else{YAHOO.util.Event.onDOMReady(function(){ShellASPX.PreShellLoadedFunc();});}};}

function Animator(a){this.setOptions(a);var b=this;this.timerDelegate=function(){b.onTimerEvent();};this.subjects=[];this.target=0;this.state=0;this.lastTime=null;}Animator.prototype={setOptions:function(a){this.options=Animator.applyDefaults({interval:20,duration:400,onComplete:function(){},onStep:function(){},transition:Animator.tx.easeInOut},a);},seekTo:function(a){this.seekFromTo(this.state,a);},seekFromTo:function(b,a){this.target=Math.max(0,Math.min(1,a));this.state=Math.max(0,Math.min(1,b));this.lastTime=new Date().getTime();if(!this.intervalId){this.intervalId=window.setInterval(this.timerDelegate,this.options.interval);}},jumpTo:function(a){this.target=this.state=Math.max(0,Math.min(1,a));this.propagate();},toggle:function(){this.seekTo(1-this.target);},addSubject:function(a){this.subjects[this.subjects.length]=a;return this;},clearSubjects:function(){this.subjects=[];},propagate:function(){var b=this.options.transition(this.state);for(var a=0;a<this.subjects.length;a++){if(this.subjects[a].setState){this.subjects[a].setState(b);}else{this.subjects[a](b);}}},onTimerEvent:function(){var c=new Date().getTime();var a=c-this.lastTime;this.lastTime=c;var b=(a/this.options.duration)*(this.state<this.target?1:-1);if(Math.abs(b)>=Math.abs(this.state-this.target)){this.state=this.target;}else{this.state+=b;}try{this.propagate();}finally{this.options.onStep.call(this);if(this.target==this.state){this.stop();}}},stop:function(){if(this.intervalId){window.clearInterval(this.intervalId);this.intervalId=null;this.options.onComplete.call(this);}},play:function(){this.seekFromTo(0,1);},reverse:function(){this.seekFromTo(1,0);},inspect:function(){var b="#<Animator:\n";for(var a=0;a<this.subjects.length;a++){b+=this.subjects[a].inspect();}b+=">";return b;}};Animator.applyDefaults=function(c,b){b=b||{};var d,a={};for(d in c){a[d]=b[d]!==undefined?b[d]:c[d];}return a;};Animator.makeArrayOfElements=function(c){if(c==null){return[];}if("string"==typeof c){return[document.getElementById(c)];}if(!c.length){return[c];}var a=[];for(var b=0;b<c.length;b++){if("string"==typeof c[b]){a[b]=document.getElementById(c[b]);}else{a[b]=c[b];}}return a;};Animator.camelize=function(c){var e=c.split("-");if(e.length==1){return e[0];}var b=c.indexOf("-")==0?e[0].charAt(0).toUpperCase()+e[0].substring(1):e[0];for(var d=1,a=e.length;d<a;d++){var f=e[d];b+=f.charAt(0).toUpperCase()+f.substring(1);}return b;};Animator.apply=function(c,b,a){if(b instanceof Array){return new Animator(a).addSubject(new CSSStyleSubject(c,b[0],b[1]));}return new Animator(a).addSubject(new CSSStyleSubject(c,b));};Animator.makeEaseIn=function(b){return function(a){return Math.pow(a,b*2);};};Animator.makeEaseOut=function(b){return function(a){return 1-Math.pow(1-a,b*2);};};Animator.makeElastic=function(a){return function(b){b=Animator.tx.easeInOut(b);return((1-Math.cos(b*Math.PI*a))*(1-b))+b;};};Animator.makeADSR=function(d,b,c,a){if(a==null){a=0.5;}return function(e){if(e<d){return e/d;}if(e<b){return 1-((e-d)/(b-d)*(1-a));}if(e<c){return a;}return a*(1-((e-c)/(1-c)));};};Animator.makeBounce=function(a){var b=Animator.makeElastic(a);return function(c){c=b(c);return c<=1?c:2-c;};};Animator.tx={easeInOut:function(a){return((-Math.cos(a*Math.PI)/2)+0.5);},linear:function(a){return a;},easeIn:Animator.makeEaseIn(1.5),easeOut:Animator.makeEaseOut(1.5),strongEaseIn:Animator.makeEaseIn(2.5),strongEaseOut:Animator.makeEaseOut(2.5),elastic:Animator.makeElastic(1),veryElastic:Animator.makeElastic(3),bouncy:Animator.makeBounce(1),veryBouncy:Animator.makeBounce(3)};function NumericalStyleSubject(b,c,e,d,a){this.els=Animator.makeArrayOfElements(b);if(c=="opacity"&&window.ActiveXObject){this.property="filter";}else{this.property=Animator.camelize(c);}this.from=parseFloat(e);this.to=parseFloat(d);this.units=a!=null?a:"px";}NumericalStyleSubject.prototype={setState:function(f){var d=this.getStyle(f);var a=(this.property=="opacity"&&f==0)?"hidden":"";var b=0;for(var c=0;c<this.els.length;c++){try{this.els[c].style[this.property]=d;}catch(g){if(this.property!="fontWeight"){throw g;}}if(b++>20){return;}}},getStyle:function(a){a=this.from+((this.to-this.from)*a);if(this.property=="filter"){return"alpha(opacity="+Math.round(a*100)+")";}if(this.property=="opacity"){return a;}return Math.round(a)+this.units;},inspect:function(){return"\t"+this.property+"("+this.from+this.units+" to "+this.to+this.units+")\n";}};function ColorStyleSubject(a,b,d,c){this.els=Animator.makeArrayOfElements(a);this.property=Animator.camelize(b);this.to=this.expandColor(c);this.from=this.expandColor(d);this.origFrom=d;this.origTo=c;}ColorStyleSubject.prototype={expandColor:function(b){var c,e,d,a;c=ColorStyleSubject.parseColor(b);if(c){e=parseInt(c.slice(1,3),16);d=parseInt(c.slice(3,5),16);a=parseInt(c.slice(5,7),16);return[e,d,a];}if(window.ANIMATOR_DEBUG){alert("Invalid colour: '"+b+"'");}},getValueForState:function(a,b){return Math.round(this.from[a]+((this.to[a]-this.from[a])*b));},setState:function(c){var a="#"+ColorStyleSubject.toColorPart(this.getValueForState(0,c))+ColorStyleSubject.toColorPart(this.getValueForState(1,c))+ColorStyleSubject.toColorPart(this.getValueForState(2,c));for(var b=0;b<this.els.length;b++){this.els[b].style[this.property]=a;}},inspect:function(){return"\t"+this.property+"("+this.origFrom+" to "+this.origTo+")\n";}};ColorStyleSubject.parseColor=function(d){var a="#",c;if(c=ColorStyleSubject.parseColor.rgbRe.exec(d)){var b;for(var e=1;e<=3;e++){b=Math.max(0,Math.min(255,parseInt(c[e])));a+=ColorStyleSubject.toColorPart(b);}return a;}if(c=ColorStyleSubject.parseColor.hexRe.exec(d)){if(c[1].length==3){for(var e=0;e<3;e++){a+=c[1].charAt(e)+c[1].charAt(e);}return a;}return"#"+c[1];}return false;};ColorStyleSubject.toColorPart=function(a){if(a>255){a=255;}var b=a.toString(16);if(a<16){return"0"+b;}return b;};ColorStyleSubject.parseColor.rgbRe=/^rgb\(\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*\)$/i;ColorStyleSubject.parseColor.hexRe=/^\#([0-9a-fA-F]{3}|[0-9a-fA-F]{6})$/;function DiscreteStyleSubject(b,c,e,d,a){this.els=Animator.makeArrayOfElements(b);this.property=Animator.camelize(c);this.from=e;this.to=d;this.threshold=a||0.5;}DiscreteStyleSubject.prototype={setState:function(c){var a=0;for(var b=0;b<this.els.length;b++){this.els[b].style[this.property]=c<=this.threshold?this.from:this.to;}},inspect:function(){return"\t"+this.property+"("+this.from+" to "+this.to+" @ "+this.threshold+")\n";}};function CSSStyleSubject(d,m,j){d=Animator.makeArrayOfElements(d);this.subjects=[];if(d.length==0){return;}var a,n,b;if(j){b=this.parseStyle(m,d[0]);n=this.parseStyle(j,d[0]);}else{n=this.parseStyle(m,d[0]);b={};for(a in n){b[a]=CSSStyleSubject.getStyle(d[0],a);}}var a;for(a in b){if(b[a]==n[a]){delete b[a];delete n[a];}}var a,h,e,i,l,k;for(a in b){var g=String(b[a]);var c=String(n[a]);if(n[a]==null){if(window.ANIMATOR_DEBUG){alert("No to style provided for '"+a+'"');}continue;}if(l=ColorStyleSubject.parseColor(g)){k=ColorStyleSubject.parseColor(c);i=ColorStyleSubject;}else{if(g.match(CSSStyleSubject.numericalRe)&&c.match(CSSStyleSubject.numericalRe)){l=parseFloat(g);k=parseFloat(c);i=NumericalStyleSubject;e=CSSStyleSubject.numericalRe.exec(g);var f=CSSStyleSubject.numericalRe.exec(c);if(e[1]!=null){h=e[1];}else{if(f[1]!=null){h=f[1];}else{h=f;}}}else{if(g.match(CSSStyleSubject.discreteRe)&&c.match(CSSStyleSubject.discreteRe)){l=g;k=c;i=DiscreteStyleSubject;h=0;}else{if(window.ANIMATOR_DEBUG){alert("Unrecognised format for value of "+a+": '"+b[a]+"'");}continue;}}}this.subjects[this.subjects.length]=new i(d,a,l,k,h);}}CSSStyleSubject.prototype={parseStyle:function(b,c){var g={};if(b.indexOf(":")!=-1){var j=b.split(";");for(var e=0;e<j.length;e++){var d=CSSStyleSubject.ruleRe.exec(j[e]);if(d){g[d[1]]=d[2];}}}else{var a,h,f;f=c.className;c.className=b;for(var e=0;e<CSSStyleSubject.cssProperties.length;e++){a=CSSStyleSubject.cssProperties[e];h=CSSStyleSubject.getStyle(c,a);if(h!=null){g[a]=h;}}c.className=f;}return g;},setState:function(b){for(var a=0;a<this.subjects.length;a++){this.subjects[a].setState(b);}},inspect:function(){var b="";for(var a=0;a<this.subjects.length;a++){b+=this.subjects[a].inspect();}return b;}};CSSStyleSubject.getStyle=function(b,c){var a;if(document.defaultView&&document.defaultView.getComputedStyle){a=document.defaultView.getComputedStyle(b,"").getPropertyValue(c);if(a){return a;}}c=Animator.camelize(c);if(b.currentStyle){a=b.currentStyle[c];}return a||b.style[c];};CSSStyleSubject.ruleRe=/^\s*([a-zA-Z\-]+)\s*:\s*(\S(.+\S)?)\s*$/;CSSStyleSubject.numericalRe=/^-?\d+(?:\.\d+)?(%|[a-zA-Z]{2})?$/;CSSStyleSubject.discreteRe=/^\w+$/;CSSStyleSubject.cssProperties=["azimuth","background","background-attachment","background-color","background-image","background-position","background-repeat","border-collapse","border-color","border-spacing","border-style","border-top","border-top-color","border-right-color","border-bottom-color","border-left-color","border-top-style","border-right-style","border-bottom-style","border-left-style","border-top-width","border-right-width","border-bottom-width","border-left-width","border-width","bottom","clear","clip","color","content","cursor","direction","display","elevation","empty-cells","css-float","font","font-family","font-size","font-size-adjust","font-stretch","font-style","font-variant","font-weight","height","left","letter-spacing","line-height","list-style","list-style-image","list-style-position","list-style-type","margin","margin-top","margin-right","margin-bottom","margin-left","max-height","max-width","min-height","min-width","orphans","outline","outline-color","outline-style","outline-width","overflow","padding","padding-top","padding-right","padding-bottom","padding-left","pause","position","right","size","table-layout","text-align","text-decoration","text-indent","text-shadow","text-transform","top","vertical-align","visibility","white-space","width","word-spacing","z-index","opacity","outline-offset","overflow-x","overflow-y"];function AnimatorChain(c,a){this.animators=c;this.setOptions(a);for(var b=0;b<this.animators.length;b++){this.listenTo(this.animators[b]);}this.forwards=false;this.current=0;}AnimatorChain.prototype={setOptions:function(a){this.options=Animator.applyDefaults({resetOnPlay:true},a);},play:function(){this.forwards=true;this.current=-1;if(this.options.resetOnPlay){for(var a=0;a<this.animators.length;a++){this.animators[a].jumpTo(0);}}this.advance();},reverse:function(){this.forwards=false;this.current=this.animators.length;if(this.options.resetOnPlay){for(var a=0;a<this.animators.length;a++){this.animators[a].jumpTo(1);}}this.advance();},toggle:function(){if(this.forwards){this.seekTo(0);}else{this.seekTo(1);}},listenTo:function(a){var b=a.options.onComplete;var c=this;a.options.onComplete=function(){if(b){b.call(a);}c.advance();};},advance:function(){if(this.forwards){if(this.animators[this.current+1]==null){return;}this.current++;this.animators[this.current].play();}else{if(this.animators[this.current-1]==null){return;}this.current--;this.animators[this.current].reverse();}},seekTo:function(a){if(a<=0){this.forwards=false;this.animators[this.current].seekTo(0);}else{this.forwards=true;this.animators[this.current].seekTo(1);}}};

if(this.Toolbar){}else{Toolbar=new function(){var CLS_NM="toolbar";var timestamp;var cPageNbr;var TS_COOKIE_NM="timestamp";var ORD_PAD_ST_COOKIE_NM="OrderPadState";this.Order=new Object();this.toolbarframeloaded=true;var mcmTop=McMasterCom.Nav.GetTopFrame(self);var Me=this;this.LoadLeftSideResults=function(loadResultsTxt){try{var sesnextrep=McMaster.SesnMgr.GetStVal(McMaster.SesnMgr.StValDefs.SesnExtRepKy.KyTxt());var isVstrBmsDispl=false;var isOrdNavDispl=false;var isItmLookupDispl=false;var isAddItmSuccessDispl=false;var isAboutUsDispl=false;if(typeof ResultsIFrame!=="undefined"&&ResultsIFrame.location&&ResultsIFrame.location.href){isVstrBmsDispl=(ResultsIFrame.location.href.search(/DisplVstrBms/i)!=-1);isOrdNavDispl=(ResultsIFrame.location.href.search(/ordnav/i)!=-1);isItmLookupDispl=(ResultsIFrame.location.href.search(/itmLookup/i)!=-1);isAddItmSuccessDispl=(ResultsIFrame.location.href.search(/addItm/i)!=-1);isAboutUsDispl=(ResultsIFrame.location.href.search(/aboutus/i)!=-1);}var ordNavPath="/order/OrdNav.aspx?sesnextrep=";var itmLookupPath="/itmLookup/itmLookup.aspx?sesnextrep=";var addItmSuccessPath="/ord/AddItmSuccess.asp?sesnextrep=";var srchStr;var ordSeqQuery;var ordSeq;var strTS;if(loadResultsTxt=="true"){loadResultsTxt="show";}if(loadResultsTxt=="false"){if(isAddItmSuccessDispl){strTS=Me.getOrderTimestamp();if(strTS&&strTS!=""){ReloadOrderPad(strTS,"force");}}}else{if(isAboutUsDispl){McMasterCom.LoadMgr.LoadResultsIFrame(ordNavPath+sesnextrep);}else{if(loadResultsTxt=="force"&&McMaster.SesnMgr.GetStVal(McMaster.SesnMgr.StValDefs.MultOrdsInd.KyTxt())){McMasterCom.LoadMgr.LoadResultsIFrame(ordNavPath+sesnextrep);}else{if(isVstrBmsDispl){}else{if((loadResultsTxt=="show"||loadResultsTxt=="refresh")&&isOrdNavDispl){McMasterCom.LoadMgr.LoadResultsIFrame(ordNavPath+sesnextrep);}else{if(loadResultsTxt=="refresh"&&isItmLookupDispl){srchStr=(ResultsIFrame.location.href.match(/\d{3,5}(a|k|t)\d{1,3}/)[0]);McMasterCom.LoadMgr.LoadResultsIFrame(itmLookupPath+sesnextrep+"&searchstring="+srchStr);}else{if(loadResultsTxt=="refresh"&&isAddItmSuccessDispl){ordSeqQuery=(ResultsIFrame.location.href.match(/ordLnSeq\=\d/)[0]);ordSeq=(ordSeqQuery.match(/\d/)[0]);McMasterCom.LoadMgr.LoadResultsIFrame(addItmSuccessPath+sesnextrep+"&ordLnSeq="+ordSeq);}else{if(loadResultsTxt=="show"&&(isItmLookupDispl||isAddItmSuccessDispl)){}else{if(loadResultsTxt=="show"&&Toolbar.GetMultOrds()){McMasterCom.LoadMgr.LoadResultsIFrame(ordNavPath+sesnextrep);}else{if(loadResultsTxt=="show"&&HomePageWebPart){McMasterCom.LoadMgr.LoadResultsIFrame(ordNavPath+sesnextrep);}}}}}}}}}}}catch(ex){}};this.ReloadOrderPad=function(ordTS,forceLoadInd){try{Me.saveOrderTimestamp(ordTS);var ordPadSt=Me.getOrderPadState();if(forceLoadInd||ordPadSt=="Loaded"){if(forceLoadInd||!isIEWin()){Toolbar.LoadOrderPad("false",true,true);}else{mcmTop.OrderPadFlag.location.replace(Cmn.BldNonSecureURL("/nav/setTS.asp","?timestamp="+ordTS+"&ordnavload=false",mcmTop.location.host));}}}catch(ex){}};this.LoadOrdPadFromOrdNav=function(){try{var loadResultsTxt="false";if(mcmTop.MainIFrame.OrderPad){if(mcmTop.MainIFrame.OrderPad.document.mainform){if(mcmTop.MainIFrame.OrderPad.document.mainform.usedponumfield.value!=""){loadResultsTxt="force";}}}Toolbar.LoadOrderPad(loadResultsTxt,true);}catch(ex){Toolbar.LoadOrderPad("false",true);}};this.LoadOrderPad=function(loadResultsTxt,forceLoadInd,isFromReloadInd){McMaster.MsgMgr.PubMsg(new McMaster.MsgMgrMsgs.OrdPadSlctd(new McMaster.MsgMgr.Hdr(McMaster.MsgMgr.CntxtNms.TOOLBAR)));};this.saveOrderTimestamp=function(ordTS){timestamp=ordTS;setCookie(TS_COOKIE_NM,ordTS);};this.getOrderTimestamp=function(){var rtnOrdTSCookieVal=getCookie(TS_COOKIE_NM);if(!rtnOrdTSCookieVal||rtnOrdTSCookieVal==""){rtnOrdTSCookieVal=timestamp;}return rtnOrdTSCookieVal;};this.getOrderPadState=function(){var rtnOrdPadStTxt=getCookie(ORD_PAD_ST_COOKIE_NM);if(!rtnOrdPadStTxt||rtnOrdPadStTxt==""){rtnOrdPadStTxt=timestamp;}return rtnOrdPadStTxt;};this.saveOrderPadState=function(displStTxt){timestamp=displStTxt;setCookie(ORD_PAD_ST_COOKIE_NM,displStTxt);};this.setOrdPadDisplSt=function(displStTxt){timestamp=displStTxt;};this.getOrdPadDisplSt=function(){return timestamp;};this.SetMultOrds=function(multOrdsInd){McMaster.SesnMgr.SetStVal(McMaster.SesnMgr.StValDefs.MultOrdsInd.KyTxt(),multOrdsInd);};this.GetMultOrds=function(){return McMaster.SesnMgr.GetStVal(McMaster.SesnMgr.StValDefs.MultOrdsInd.KyTxt());};this.savePage=function(ctlgPageNbr){cPageNbr=ctlgPageNbr;};this.savehelpContext=function(helpCntxtTxt){McMaster.SesnMgr.SetStVal(McMaster.SesnMgr.StValDefs.HelpCntxtTxt.KyTxt(),helpCntxtTxt);};this.getRefusal=function(){return McMaster.SesnMgr.GetStVal(McMaster.SesnMgr.StValDefs.CookieRefusalInd.KyTxt());};this.saveRefusal=function(cookieRefusalVal){McMaster.SesnMgr.SetStVal(McMaster.SesnMgr.StValDefs.CookieRefusalInd.KyTxt(),cookieRefusalVal);};this.sendmail=function(cntxtInd){openSendMailFormLnkContext(MainIFrame,cntxtInd);};var setCookie=function(cookieNm,cookieVal){var cookieExistsInd=false;var cookie=YAHOO.util.Cookie.get(cookieNm);if(cookie){cookieExistsInd=true;YAHOO.util.Cookie.set(cookieNm,cookieVal,{path:"/",domain:".mcmaster.com"});}else{}return cookieExistsInd;};var getCookie=function(cookieNm){return YAHOO.util.Cookie.get(cookieNm);};var delCookie=function(cookieNm){YAHOO.util.Cookie.remove(cookieNm,{domain:".mcmaster.com"});};var isIEWin=function(){var browserUserAgent=navigator.userAgent.toUpperCase();var isIE=false;var isWindows=false;var isCompatible=false;if(browserUserAgent.indexOf("MSIE")>-1){if((browserUserAgent.indexOf("OPERA")==-1)&&(browserUserAgent.indexOf("OPERA/")==-1)){isIE=true;}}if(browserUserAgent.indexOf("WINDOWS")>-1){isWindows=true;}return(isIE&&isWindows);};this.saveOrderPadState("Ready");var openSendMailFormLnkContext=function(target,msgContext){var bolFindProduct=false;var strQS="";var baseURL=Cmn.BldNonSecureURL();var emailURL="";var sesnextrep=Cmn.GetSesnExtRep();var cntctWindowPixelWdth=635;var cntctWindowPixelHght=635;if(msgContext==true||msgContext==false){bolFindProduct=msgContext;}eval("try{strQS = getFrameContext(target,bolFindProduct);} catch(e){}");emailURL=baseURL+"/custcrspndnc/sendMailForm/sendMailForm.aspx?sesnextrep="+sesnextrep+strQS+"&lnkContext=&msgContext="+msgContext;window.open(emailURL,"emailWindow","width="+cntctWindowPixelWdth+",height="+cntctWindowPixelHght,",toolbar,status,scrollbars,resizable");};var getFrameContext=function(target,bolFindProduct){var resultsIFrameObj=ResultsIFrame;var mainIFrameObj=MainIFrame;var strCurrentPage;var strPageType;var strLeftPageValue="";var strRightPageValue="";var strLeftSideLink="";var strRightSideLink="";var strQS="";if(typeof resultsIFrameObj!="undefined"&&resultsIFrameObj!=null){strCurrentPage=ResultsIFrame.document.location.href;strPageType=matchLeftPage(strCurrentPage);if(strPageType!=""){strLeftSideLink=strPageType;strLeftPageValue=setLeftPageValues(strPageType,strCurrentPage);}}if(typeof mainIFrameObj!=undefined&&mainIFrameObj!=null){strCurrentPage=MainIFrame.document.location.href;strPageType=matchRightPage(strCurrentPage);if(strPageType!=""){strRightSideLink=strPageType;strRightPageValue=setRightPageValues(strPageType,strCurrentPage);}}strQS="&rightside="+strRightSideLink+"&rightvalue="+strRightPageValue+"&leftside="+strLeftSideLink+"&leftvalue="+strLeftPageValue+"&findProduct="+bolFindProduct;return strQS;};var matchLeftPage=function(strPage){var strPageType;var arrPages=new Array(3);arrPages[0]="itmlookup";arrPages[1]="keywordsearch";arrPages[2]="displvstrbms.aspx";arrPages[3]="additmsuccess.";var intPos;for(var i=0;i<arrPages.length;i++){intPos=strPage.toLowerCase().indexOf(arrPages[i].toLowerCase());if(intPos>0){strPageType=arrPages[i];break;}}return strPageType;};var matchRightPage=function(strPage){var strPageType;var arrPages=new Array(7);arrPages[0]="products.";arrPages[1]="orderpad";arrPages[2]="catalog";arrPages[3]="ordinfo.";arrPages[4]="contacting.";arrPages[5]="supplier.aspx";arrPages[6]="ordhist.aspx";arrPages[7]="orddtl.aspx";var intPos;for(var i=0;i<arrPages.length;i++){intPos=strPage.toLowerCase().indexOf(arrPages[i].toLowerCase());if(intPos>0){strPageType=arrPages[i];break;}}return strPageType;};var setLeftPageValues=function(strPageType,strCurrentPage){if(strPageType&&strPageType.toLowerCase()=="itmlookup"){strLeftPageValue=toolsetGetState(strCurrentPage,"searchstring");}else{if(strPageType&&strPageType.toLowerCase()=="keywordsearch"){strLeftPageValue=toolsetGetState(strCurrentPage,"input");}else{strLeftPageValue="";}}return strLeftPageValue;};var setRightPageValues=function(strPageType,strCurrentPage){if(strPageType&&strPageType.toLowerCase()=="catalog"){strRightPageValue=toolsetGetState(strCurrentPage,"CtlgPgNbr");}else{if(strPageType&&strPageType.toLowerCase()=="parametric"){strRightPageValue=toolsetGetState(strCurrentPage,"desc");}else{strRightPageValue="";}}return strRightPageValue;};var toolsetGetState=function(strQueryString,strName){var strState=strQueryString;if(strName.length>0){strState=getNameValue(strQueryString,strName);}return strState;};var getNameValue=function(strQueryString,strName){var strValue="";var strWrk=strName+"=";var strState=strQueryString+"&";var regWrk=new RegExp(strWrk.toString(),"i");var intPos=strState.search(regWrk);if(intPos>-1){var intAmper=strState.indexOf("&",intPos+1);if(intAmper>-1){strValue=strState.substring(intPos+strWrk.length,intAmper);}}return strValue;};};}

(function(){if(this.GZipCapability){}else{GZipCapability=new function(){var d="gzip";GZIP_FORCER_PATH="/HTTPHandlers/GZipCapability.aspx",CLS_NM="GZipCapability";this.TrkAcceptEncodingHdr=function(e){Cmn.TrkAct("accept_encoding_header_reached_server="+e.toString(),CLS_NM);};var a=function(){if(b()==="1"){}else{Cmn.TrkAct("browser_failed_to_handle_gzip=true",CLS_NM);c();}};var c=function(){YAHOO.util.Cookie.set("gzip","0",{path:"/",domain:".mcmaster.com",expires:new Date(2050,5,7)});};var b=function(){return Cmn.GetCookieVal(d);};if(Cmn.GetQSVal("disable_gzip")==="true"){c();}};}})();

(function(){var n=this.Cmn,l=n.IsTouchAware(),o="no-touch",q="touch";McMaster.MsgMgr.AddSubscriber(McMaster.MsgMgrMsgs.ShellLoaded,function(){if(l){n.AddCls(document.body,q);h(true);}else{n.AddCls(document.body,o);}i();},McMaster.MsgMgr.PRIORITY.HIGH);var a=function(){var w=false;if(/(iPhone|iPod|iPad)/i.test(navigator.userAgent)){if(/OS [1-5](_.*) like Mac OS X/i.test(navigator.userAgent)){w=false;}else{w=true;}}return w;};if(a()&&n.IsIPad()){n.AddEvntListener(document.body,"blur",function(w){window.scrollTo(0,0);});n.AddEvntListener(document.body,"focus",function(w){window.scrollTo(0,0);});}if(a()){document.getElementById("MainContent").style.WebkitOverflowScrolling="touch";document.getElementById("SecondaryContent").style.WebkitOverflowScrolling="touch";}else{if(l){var k=new function(){var B=[],F=null;this.RemTouchPathByCntnr=function(J){var I=D(J),K=I[0],H=I[1];if(K){B.splice(H,1);}};var x=function(J){if(w(J)){}else{n.StopPropagation(J);var I=A(J);if(I){var H=u.CrteFrmEvnt(J,I);F=z(I);if(F){F.SetStartPt(H);}else{F=new t(H);B.push(F);}}else{}}};var C=function(I){if(w(I)){}else{n.PreventDeflt(I);if(F){var H=u.CrteFrmEvnt(I,F.Cntnr());F.AddPt(H);}else{}}};var z=function(H){return D(H)[0];};var D=function(J){var K=null,L=-1,H=B.length;for(var I=0;I<H;I++){if(B[I].Cntnr()===J){L=I;K=B[I];break;}}return[K,L];};var G=function(){if(F){F.Finish();}F=null;};var A=function(I){var H=n.GetEvntTarget(I);while(H!==document.body){if(E(H)){return H;}H=H.parentNode;}return null;};var E=function(I){var H=false;if(n.GetStyle(I,"overflow-y")==="auto"&&I.scrollHeight>I.offsetHeight){H=true;}return H;};var w=function(H){if(H.touches&&H.touches.length>1){return true;}else{return false;}};var y=function(){n.AddEvntListener(document.body,"touchstart",x);n.AddEvntListener(document.body,"touchmove",C);n.AddEvntListener(document.body,"touchend",G);n.AddEvntListener(document.body,"touchcancel",G);n.AddEvntListener(window,"orientationchange",r);};McMaster.MsgMgr.AddSubscriber(McMaster.MsgMgrMsgs.ShellLoaded,y,McMaster.MsgMgr.PRIORITY.HIGH);};var u=function(w,B,A,z){this.X=w;this.Y=B;this.Ts=A;this.Cntnr=z;};u.CrteFrmEvnt=function(x,w){return new u(x.changedTouches[0].pageX,x.changedTouches[0].pageY,new Date(x.timeStamp),w);};var p=function(x,w){this.StartPt=x;this.EndPt=w;this.Len=b(x,w);this.DeltaY=w.Y-x.Y;this.DeltaX=w.X-x.X;this.ElapsedTime=j(x,w);this.Velocity=e(x,w);this.Angle=c(x,w);this.Cntnr=w.Cntnr;};p.CrteFrmPrevPt=function(x,w){return new p(x,w);};var m=700,s=15;var t=function(w){this.mCntnr=w.Cntnr;this.mStartPt=w;this.mSegments=[];this.mTouchScrollCntnr=new f(w.Cntnr);};t.prototype={AddPt:function(x){if(this.lastPt()){var w=p.CrteFrmPrevPt(this.lastPt(),x);this.segments().push(w);this.scrollCntnr().Scroll(w);}else{this.SetStartPt(x);}},Cntnr:function(){return this.mCntnr;},Finish:function(){var w;if(this.isVerticalFlick()){if(this.isUpward()){w="up";}else{w="down";}this.scrollCntnr().Flick(this.terminalVelocity(),w);}else{}this.reset();},SetStartPt:function(w){this.mStartPt=w;this.mSegments=[];},avgVelocityInSegments:function(x){var w=x.length,B=0,A=0,z=0;for(var y=0;y<w;y++){if(x[y]&&x[y].ElapsedTime){A+=x[y].ElapsedTime;B+=x[y].Len;}}if(A===0){return 0;}else{return B/A;}},angle:function(){return c(this.firstPt(),this.lastPt());},elapsedTime:function(){return j(this.lastPt(),this.firstPt());},firstPt:function(){return this.mSegments.length>0?this.segments()[0].StartPt:this.startPt();},getLastSegments:function(A){var x=this.segments(),C=x.length,z=C-1-A,B=[],w=0;if(C===0){return B;}else{if(C<A){z=0;}}for(var y=z;y<C;y++){B.push(x[y]);}return B;},isFlick:function(){return this.terminalVelocity()>m&&this.length()>s;},isVerticalFlick:function(){return this.isFlick()&&this.isVertical();},isVertical:function(){return this.isUpward()||this.isDownward();},isUpward:function(){return this.angle()>135;},isDownward:function(){return this.angle()<45;},lastPt:function(){var w=this.nbrSegments();return w>0?this.segments()[w-1].EndPt:this.startPt();},length:function(){return b(this.firstPt(),this.lastPt());},nbrSegments:function(){return this.segments().length;},reset:function(){this.mSegments=[];this.mStartPt=null;},scrollCntnr:function(){return this.mTouchScrollCntnr;},segments:function(){return this.mSegments;},startPt:function(){return this.mStartPt;},terminalVelocity:function(){return this.avgVelocityInSegments(this.getLastSegments(1));}};var g=7900;var f=function(w){this.mCntnr=w;this.mAnim=null;w.style.webkitUserSelect="none";};f.prototype={Flick:function(A,F){var E=this.cntnr(),B=E.scrollTop,y=E.scrollLeft,C=E.scrollHeight-E.offsetHeight,z=0,x=0,G=0,D=0,w=false;if(this.mAnim&&this.mAnim.isAnimated()){this.mAnim.stop(w);}G=A/g;D=0.5*A*G;if(B===z&&F==="up"){}else{if(B===C&&F==="down"){}else{switch(F){case"up":x=B+D;break;case"down":x=B-D;break;}if(x<z){x=z;}else{if(x>C){x=C;}}this.mAnim=new YAHOO.util.Scroll(this.cntnr(),{scroll:{to:[y,x]}},G,YAHOO.util.Easing.easeOut);this.mAnim.animate();}}},Scroll:function(z){var x=this.cntnr(),D=x.scrollTop,C=x.scrollLeft,w=D-z.DeltaY,y=C-z.DeltaX,B=x.scrollHeight-x.offsetHeight,A=x.scrollWidth-x.offsetWidth;if(this.isVerticalSegment(z)){if(w<0){w=0;}else{if(w>B){w=B;}}if(D===w){}else{x.scrollTop=w;}}if(this.isHorizontalSegment(z)){if(y<0){y=0;}else{if(y>A){y=A;}}if(C===y){}else{x.scrollLeft=y;}}},cntnr:function(){return this.mCntnr;},isHorizontalSegment:function(w){return(w.Angle>75&&w.Angle<105);},isVerticalSegment:function(w){return(w.Angle>130||w.Angle<=50);}};var b=function(z,y){var w=y.Y-z.Y;var x=y.X-z.X;return Math.sqrt(Math.pow(w,2)+Math.pow(x,2));};var c=function(y,x){var w=(x.Y-y.Y),z=b(y,x);if(z===0){return 0;}else{return Math.acos(w/z)*(180/Math.PI);}};var j=function(y,x){var w=x.Ts.getTime()-y.Ts.getTime();w=Math.max(w,1);return Math.abs(w/1000);};var e=function(y,x){var w=j(y,x);if(w===0){w=1;}return(b(y,x)/w);};}}var v="TouchEventManager";var h=function(x){var w={touchaware:x.toString(),orientation:d()};n.TrkAct(w,v);};var i=function(x){var w;if(n.IsIPad()){w={ipad:true};n.TrkAct(w,v);}};var r=function(){var w={orientationchanged:"true",orientation:d()};n.TrkAct(w,v);};var d=function(){var w="unknown";switch(window.orientation){case 0:w="Portrait";break;case -90:w="Landscape (right, screen turned clockwise)";break;case 90:w="Landscape (left, screen turned counterclockwise)";break;case 180:w="Portrait (upside-down portrait)";break;default:break;}return w;};})();

if(this.Shell){}else{Shell=new function(){var aA=this,r="pubdev",p="wwwdev",k="pubqual",O="wwwqual",C="www",D="pub",au="ShellLayout_Content_Cntnr",U="ShellLayout_Cntnr",a="ShellLayout_SecondaryContent_Cntnr",h="ShellLayout_SecondaryContent_Cntnr_SecondaryContent_Expanded",e="ShellLayout_SecondaryContent_Cntnr_SecondaryContent_Collapsed",l="ShellLayout_SecondaryContentToggle_Cntnr",I="ShellLayout_SecondaryContentToggle_SecondaryContent_Expanded",aD="ShellLayout_SecondaryContentToggle_SecondaryContent_Collapsed",g="MainIFrame",y="MainContent",v="ShellLayout_MainContent_Inner",u="ShellLayout_MainContent_Inner_SecondaryContent_Expanded",t="ShellLayout_MainContent_Inner_SecondaryContent_Collapsed",ae="ShellLayout_MainContent_ProdPage_Loaded",M="ShellLayout_Masthead_Cntnr",m="ResultsIFrame",af="SecondaryContent",ac="Shell_BottomNavWebPart_Cntnr",an="secondaryContentToggleAction=Collapsed",az="secondaryContentToggleAction=Expanded",N="shell",K="screenWidth",W="screenHeight",S="viewportWidth",G="viewportHeight",aa="acrobatVerTxt",ai="userAgent",o=0,b=null,aB=null,q=0,ax=0,ad=null,al=null,c=null,i=null,Q=null,F=null,w=false,ay=false,T=false;var ag=function(){var aE=false,aF=Cmn.GetApplEnvrPrfx()+Cmn.GetApplEnvrSfx();if(window.location.host==="localhost"){aE=true;}else{switch(aF){case (p):case (O):case (C):break;default:aE=true;}}return aE;};mIntEnvrInd=ag();this.PubShellLoadedMsg=function(aF){T=ap();var aE=McMaster.MsgMgr.CntxtNms.SHELL;var aH=new McMaster.MsgMgr.Hdr(aE);hashTxt=McMasterCom.Nav.GetTopFrame().location.hash;var aG=new McMaster.MsgMgrMsgs.ShellLoaded(aH,hashTxt,aF);McMaster.MsgMgr.PubMsg(aG);};this.BreakFraming=function(){if(top.location!==self.location){document.documentElement.style.display="none";top.location.replace(self.location);}};this.SecondaryContentToggle_Btn_Click=function(){var aE=McMaster.MsgMgr.CntxtNms.SHELL;var aG=new McMaster.MsgMgr.Hdr(aE);var aF=new McMaster.MsgMgrMsgs.SecondaryContentToggleSlctd(aG);McMaster.MsgMgr.PubMsg(aF);};this.ExpandSecondaryContent=function(aH){if(Cmn.IsAppMode()){}else{var aG=Cmn.GetObj(a);var aF=Cmn.GetObj(l);var aE=Cmn.GetObj(v);if(aG.className.match(e)){Cmn.ReplaceCls(aG,e,h);Cmn.ReplaceCls(aF,aD,I);Cmn.ReplaceCls(aE,t,u);aj();T=false;if(aH){Cmn.TrkAct(az,N);}}}};this.GetMainContentHeight=function(){return Z()-aA.GetMainContentTopPosn()-at();};this.GetSecondaryContentWdth=function(){var aF=0;if(al==null||al==0){var aG=Cmn.GetObj(l);al=Cmn.GetWidth(aG);}if(T){aF=al;}else{if(ad===null){var aE=Cmn.GetObj(a);ad=Cmn.GetWidth(aE)+al;}aF=ad;}return aF;};var aC=function(aG){var aF=aG.MsgHdr().CntxtNm;var aH=aG.MsgPayload().CntnrNm;var aE=Cmn.GetObj(y);if(aE&&aH===y){if(aF===McMaster.MsgMgr.CntxtNms.PROD_PAGE){if(Cmn.HasCls(aE,ae)===false){Cmn.AddCls(aE,ae);}}else{if(Cmn.HasCls(aE,ae)){Cmn.RemCls(aE,ae);}}}if(aH==="ResultsIFrame"||aH==="SecondaryContent"){if(T){if(aF===McMaster.MsgMgr.CntxtNms.SRCH_RSLTS||aF===McMaster.MsgMgr.CntxtNms.HOME_PAGE_NAV){}else{aA.ExpandSecondaryContent();}}ah();}else{if(aH==="MainIFrame"||aH==="MainContent"||aH==="Catalog"||aH==="OrderPad"){ah();}}};var V=function(aE){if(aE.origin===Cmn.BldSecureURL()){if(aE.data.indexOf("LoginWebPart")!==-1){LoginWebPart.UpdtLogin(aE.data);}else{if(aE.data.indexOf("ChgPswdWebPart")!==-1){ChgPswdWebPart.UpdtChgPswd(aE.data);}else{if(aE.data.indexOf("ChgUsrNmWebPart")!==-1){ChgUsrNmWebPart.UpdtChgUsrNm(aE.data);}else{if(aE.data==="submitforinline"){NewCustSgnUpWebPartPymtMthd.InLineCrCrdAdd();}else{if(aE.data==="newcustcrcrdadded"){NewCustSgnUpWebPartPymtMthd.HndleCrCrdAdded();}else{if(aE.data==="crcrdadded"){OrdPadShpBillWebPartPymtMthd.HndlCrCrdAdded();}else{if(aE.data.indexOf("CrtePswdWebPart")!==-1){CrtePswdWebPart.UpdtCrtePswd(aE.data);}else{}}}}}}}}};var H=function(aE){var aF=aE.MsgPayload().CntnrNm;if(ao(aF)===true){P();McMaster.MsgMgr.RemSubscriber(McMaster.MsgMgrMsgs.WebPartLoaded,H);}};var ao=function(aF){var aE=false;if(mIntEnvrInd===true){ay=true;}if(aF===g||aF===y){w=true;}else{if(aF===M){ay=true;}}if(w===true&&ay===true){aE=true;}return aE;};var P=function(){var aE=McMaster.MsgMgr.CntxtNms.SHELL;var aG=new McMaster.MsgMgr.Hdr(aE);var aF=new McMaster.MsgMgrMsgs.ShellInitContentLoaded(aG);McMaster.MsgMgr.PubMsg(aF);};var ak=function(){var aE=true;if(T){aA.ExpandSecondaryContent(aE);}else{X(aE);}ah();};var ab=function(){var aE=McMaster.MsgMgr.CntxtNms.SHELL;var aG=new McMaster.MsgMgr.Hdr(aE);var aF=new McMaster.MsgMgrMsgs.SecondaryContentCollapsed(aG);McMaster.MsgMgr.PubMsg(aF);};var aj=function(){var aE=McMaster.MsgMgr.CntxtNms.SHELL;var aG=new McMaster.MsgMgr.Hdr(aE);var aF=new McMaster.MsgMgrMsgs.SecondaryContentExpanded(aG);McMaster.MsgMgr.PubMsg(aF);};var n=function(){var aE=McMaster.MsgMgr.CntxtNms.SHELL;var aG=new McMaster.MsgMgr.Hdr(aE);var aF=new McMaster.MsgMgrMsgs.MainContentCntnrResized(aG);McMaster.MsgMgr.PubMsg(aF);};var ar=function(){var aE=McMaster.MsgMgr.CntxtNms.SHELL;var aG=new McMaster.MsgMgr.Hdr(aE);var aF=new McMaster.MsgMgrMsgs.WndwResized(aG);McMaster.MsgMgr.PubMsg(aF);};var X=function(aH){var aG=Cmn.GetObj(a);var aF=Cmn.GetObj(l);var aE=Cmn.GetObj(v);if(aG.className.match(h)){Cmn.ReplaceCls(aG,h,e);Cmn.ReplaceCls(aF,I,aD);Cmn.ReplaceCls(aE,u,t);ab();T=true;if(aH){Cmn.TrkAct(an,N);}}};this.GetMainContentWidth=function(){var aE=parseInt(Cmn.GetStyle(y,"padding-left"))+parseInt(Cmn.GetStyle(y,"padding-right"));if(parseInt(Cmn.GetStyle(y,"padding-right"))>0){aE+=2;}return R(aE);};this.GetMainContentTopPosn=function(){if(!c){var aE=Cmn.GetObj(au);c=parseInt(Cmn.GetStyle(aE,"top"));}return c;};var R=function(aG){var aF=A();var aE=aA.GetSecondaryContentWdth();return aF-aE-aG;};this.GetMainIframeWidth=R.curry(5);var ah=function(){var aF=aA.GetMainContentWidth();var aG=aA.GetMainContentHeight();am(aG,aF);var aE=false;if(aG!==ax){av(aG);aE=true;}ax=aG;if(aF!==q){Y(aF);}if(aF===q||q===0){}else{aE=true;}q=aF;if(aE){n();}};this.ResizeContentCntnrs=ah;var am=function(aJ,aE){if(Cmn.IsIE()){Cmn.SetStyle(au,"height",aJ+"px");var aF=A();Cmn.SetStyle(au,"width",aF+"px");Cmn.SetStyle(g,"height",aJ+"px");Cmn.SetStyle(y,"height",aJ+"px");var aK=aA.GetMainIframeWidth();Cmn.SetStyle(g,"width",aK+"px");Cmn.SetStyle(y,"width",aE+"px");var aI=f();if(aI){Cmn.SetStyle(m,"height",aI+"px");}var aH=z();if(aH){Cmn.SetStyle(af,"height",aH+"px");}var aG=J();if(aG){Cmn.SetStyle(l,"height",aG+"px");}}else{}};var Y=function(aE){McMaster.SesnMgr.SetStVal(McMaster.SesnMgr.StValDefs.MainContentCntnrWidth.KyTxt(),aE);};var av=function(aE){McMaster.SesnMgr.SetStVal(McMaster.SesnMgr.StValDefs.MainContentCntnrHeight.KyTxt(),aE);};var Z=function(){if(!aB){aB=Cmn.GetViewportHeight();}return aB;};var A=function(){if(!b){b=Cmn.GetViewportWidth();}return b;};var f=function(){var aE=aA.GetMainContentTopPosn()+aq();return Z()-aE-at();};var aq=function(){if(!Q){var aE=Cmn.GetObj("ResultsIFrame");Q=parseInt(Cmn.GetStyle(aE,"margin-top"));}return Q;};var aw=function(){if(!F){var aE=Cmn.GetObj("SecondaryContent");F=parseInt(Cmn.GetStyle(aE,"margin-top"));}return F;};var z=function(){secondaryContentTopPosn=aA.GetMainContentTopPosn()+aw();return Z()-secondaryContentTopPosn-at();};var J=function(){return Z()-aA.GetMainContentTopPosn()-at();};var at=function(){i=Cmn.GetObj(ac).clientHeight;return i;};var s=function(){var aJ=screen.width;var aK=screen.height;var aE=A();var aF=Z();var aH=E();var aI=K+"="+aJ;aI+="&"+W+"="+aK;aI+="&"+S+"="+aE;aI+="&"+G+"="+aF;aI+="&"+aa+"="+aH;aI+="&"+ai+"="+navigator.userAgent;Cmn.TrkAct(aI,N);var aG=ai+"="+navigator.userAgent;Cmn.TrkAct(aG,N);};var E=function(){var aG="Information not available";var aF=L();if(aF&&aF.ver){var aE=aF.ver;if(aE.toString().length===1){aE+=".0";}aG=aE;}aG=encodeURIComponent(aG);return aG;};var L=function(){var aF={};aF.ver="";if(navigator.plugins&&navigator.plugins.length){for(x=0;x<navigator.plugins.length;x++){var aJ=navigator.plugins[x].description.toLowerCase();if(aJ.indexOf("adobe acrobat")!==-1||aJ.indexOf("adobe pdf plug-in")!==-1){if(aJ==="adobe pdf plug-in for firefox and netscape"){aF.ver="8.0 or higher";break;}else{var aG=parseFloat(aJ.split("version ")[1]);aF.ver=aG;break;}}}}else{if(window.ActiveXObject){var aE=null;try{aE=new ActiveXObject("AcroPDF.PDF");}catch(aI){return;}if(!aE){try{aE=new ActiveXObject("PDF.PdfCtrl");}catch(aI){return;}}if(aE){var aH=aE.GetVersions().split(",");aH=aH[0].split("=");var aG=parseFloat(aH[1]);aF.ver=aG;}}}return aF;};var ap=function(){var aF=Cmn.GetObj(a);var aE=Cmn.HasCls(aF,e);return aE;};var B=function(aE){var aF=McMaster.MsgMgr;if(aE.MsgPayload().CntnrNm=="SecondaryContent"||aE.MsgPayload().CntnrNm=="ResultsIFrame"){switch(aE.MsgHdr().CntxtNm){case aF.CntxtNms.ITM_INFO:case aF.CntxtNms.ITM_CONFIRMATION:d("Product Detail");break;case aF.CntxtNms.SRCH_RSLTS:case aF.CntxtNms.CTLG_PAGE_WEB_PART:d("Search Results");break;case aF.CntxtNms.HOME_PAGE:case aF.CntxtNms.HOME_PAGE_NAV:d("Choose a Category");break;case aF.CntxtNms.BMS:case aF.CntxtNms.RTRV_BMS:d("Bookmarks");break;case aF.CntxtNms.CAREERS:d("Careers");break;case aF.CntxtNms.ORD_NAV:var aG=getval(valdefs.SlctdMastheadBtnNm.KyTxt());if(aG=="ordhist"){d("Order History");}else{d("Build Order");}break;case aF.CntxtNms.ADDNL_CONTENT:d("Additional Information");break;default:break;}}};var d=function(aF){var aE=Cmn.GetObj("SecondaryContentTitl");aE.innerHTML=aF;aE.style.display="block";};McMaster.MsgMgr.AddSubscriber(McMaster.MsgMgrMsgs.SecondaryContentToggleSlctd,function(aE){ak();});McMaster.MsgMgr.AddSubscriber(McMaster.MsgMgrMsgs.BMsSlctd,function(aE){aA.ExpandSecondaryContent();});McMaster.MsgMgr.AddSubscriber(McMaster.MsgMgrMsgs.OrdHistSlctd,function(aE){aA.ExpandSecondaryContent();});Cmn.AddEvntListener(window,"resize",function j(aF){o+=1;var aG=o;setTimeout(function aE(){if(aG===o){var aH=Math.floor(Cmn.GetViewportWidth());var aJ=Math.floor(Cmn.GetViewportHeight());if(aH!==b||aJ!==aB){b=aH;aB=aJ;var aI=[];aI.Action="Resizing window";aI.Window=document.documentElement.clientWidth+"x"+document.documentElement.clientHeight;aI.Resolution=screen.width+"x"+screen.height;aI.Browser=navigator.userAgent;var aK=McMaster.UrlMgr.GetSiteCntxt();Cmn.TrkAct(aI,aK,true);ah();ar();}}},500);});Cmn.AddEvntListener(window,"orientationchange",function(){ah();ar();});Cmn.AddEvntListener(window,"message",function(aE){V(aE);});McMaster.MsgMgr.AddSubscriber(McMaster.MsgMgrMsgs.ShellLoaded,function(){ah();});McMaster.MsgMgr.AddSubscriber(McMaster.MsgMgrMsgs.ChooseSpecsStatChg,function(aE){ah();});McMaster.MsgMgr.AddSubscriber(McMaster.MsgMgrMsgs.WebPartLoaded,function(aE){aC(aE);});McMaster.MsgMgr.AddSubscriber(McMaster.MsgMgrMsgs.WebPartLoaded,H);McMaster.MsgMgr.AddSubscriber(McMaster.MsgMgrMsgs.ShellInitContentLoaded,function(){s();},McMaster.MsgMgr.PRIORITY.HIGH);McMaster.MsgMgr.AddSubscriber(McMaster.MsgMgrMsgs.CollapseSecondaryContent,function(aE){X();ah();});McMaster.MsgMgr.AddSubscriber(McMaster.MsgMgrMsgs.ShellIFrameCreated,function(aE){ah();});McMaster.MsgMgr.AddSubscriber(McMaster.MsgMgrMsgs.WebPartLoaded,B);};}

McMaster.SrchRsltWebPartOvrd||(SrchRsltWebPartOvrd=new function(){var a={"electrical enclosures":!1,"hex nuts":!1};this.AutoExpandSearchRslts=function(){return a};this.IsAutoExpandSrchRslt=function(c){var b=!1;a[c.toLowerCase()]&&(b=!0);return b}});


this.LogoWebPart||(LogoWebPart=new function(){var c=this,b=new McMaster.MsgMgr.Hdr(McMaster.MsgMgr.CntxtNms.MCMLOGO,"1.0");this.WebPart_Load=function(a){Cmn.AddEvntListener(Cmn.GetObj("LogoWebPart_Link"),"click",c.HndlClick);McMaster.MsgMgr.PubMsg(new McMaster.MsgMgrMsgs.WebPartLoaded(b,a.CntnrIDTxt))};this.WebPart_PreUnload=function(a){Cmn.RemEvntListener(Cmn.GetObj("LogoWebPart_Link"),"click")};this.WebPart_Unload=function(a){McMaster.MsgMgr.PubMsg(new McMaster.MsgMgrMsgs.WebPartUnloaded(b,a.CntnrIDTxt))};
this.HndlClick=function(a){McMaster.SesnMgr.SetStVal(McMaster.SesnMgr.StValDefs.HomePageSlctdEntryScrollTop.KyTxt(),1);McMaster.MsgMgr.PubMsg(new McMaster.MsgMgrMsgs.HomeSlctd(b));McMaster.UrlMgr.ResetUrlHash();Cmn.PreventDeflt(a);Cmn.TrkAct("HomePageLogoClicked","HomePage");a=new SrchTrkr.SrchDat({usr:SrchTrkr.UsrActTyps.SLCT});a.usr.srcNm="LogoWebPart";a.usr.elemTyp=SrchTrkr.ElemTyps.HOME_PAGE_LOGO;a.usr.slctdNm="Home Page";a.Trk()}});


this.MastHeadWebPart||(MastHeadWebPart=new function(){var f=new McMaster.MsgMgr.Hdr(McMaster.MsgMgr.CntxtNms.MASTHEAD);this.WebPart_PreUnload=function(a){Cmn.RemEvntListener(Cmn.GetObj(a.CntnrIDTxt),"click");Cmn.RemEvntListener(Cmn.GetObj(a.CntnrIDTxt),"mouseover");Cmn.RemEvntListener(Cmn.GetObj(a.CntnrIDTxt),"mouseout")};this.WebPart_Unload=function(a){McMaster.MsgMgr.PubMsg(new McMaster.MsgMgrMsgs.WebPartUnloaded(f,a.CntnrIDTxt))};this.WebPart_Load=function(a){Cmn.AddEvntListener(Cmn.GetObj(a.CntnrIDTxt),
"click",function(b){var c=a.CntnrIDTxt;Cmn.StopEvnt(b);p(b,c,r)});Cmn.AddEvntListener(Cmn.GetObj(a.CntnrIDTxt),"mouseover",function(b){p(b,a.CntnrIDTxt,s)});Cmn.AddEvntListener(Cmn.GetObj(a.CntnrIDTxt),"mouseout",function(b){p(b,a.CntnrIDTxt,t)});McMaster.MsgMgr.PubMsg(new McMaster.MsgMgrMsgs.WebPartLoaded(f,a.CntnrIDTxt));q()};var p=function(a,b,c){for(a=Cmn.GetEvntTarget(a);a.id!==b;)if("A"===a.tagName.toUpperCase()&&a.id.StrtsWth("ShellLayout")){c(a);break}else a=a.parentNode},r=function(a){switch(a.id){case "ShellLayout_CntctUs_Btn":a=
new McMaster.MsgMgrMsgs.CntctUsSlctd(f);McMaster.MsgMgr.PubMsg(a);h(McMaster.MsgMgr.CntxtNms.CNTCT_US);McMaster.SesnMgr.SetStVal(McMaster.SesnMgr.StValDefs.SlctdMastheadBtnNm.KyTxt(),McMaster.SesnMgr.StValDefs.SlctdMastheadBtnNm.Vals.CONTACT_US);TrkMastElemClick("Contact Us");break;case "ShellLayout_BMs_Btn":a=new McMaster.MsgMgrMsgs.BMsSlctd(f);McMaster.MsgMgr.PubMsg(a);h(McMaster.MsgMgr.CntxtNms.BMS);McMaster.SesnMgr.SetStVal(McMaster.SesnMgr.StValDefs.SlctdMastheadBtnNm.KyTxt(),McMaster.SesnMgr.StValDefs.SlctdMastheadBtnNm.Vals.BMS);
Cmn.TrkAct("LoadBMReqstdFrmMastHead","MastHead");TrkMastElemClick("Bookmarks");break;case "ShellLayout_OrdHist_Btn":a=new McMaster.MsgMgrMsgs.OrdHistSlctd(f);McMaster.MsgMgr.PubMsg(a);h(McMaster.MsgMgr.CntxtNms.ORD_HIST);McMaster.SesnMgr.SetStVal(McMaster.SesnMgr.StValDefs.SlctdMastheadBtnNm.KyTxt(),McMaster.SesnMgr.StValDefs.SlctdMastheadBtnNm.Vals.ORD_HIST);TrkMastElemClick("Order History");break;case "ShellLayout_CurrOrd_Btn":new McMaster.MsgMgr.Hdr(McMaster.MsgMgr.CntxtNms.MASTHEAD),a=new McMaster.MsgMgrMsgs.CurrOrdSlctd(f),
McMaster.MsgMgr.PubMsg(a),h(McMaster.MsgMgr.CntxtNms.ORD_PAD),McMaster.SesnMgr.SetStVal(McMaster.SesnMgr.StValDefs.SlctdMastheadBtnNm.KyTxt(),McMaster.SesnMgr.StValDefs.SlctdMastheadBtnNm.Vals.CURR_ORD),TrkMastElemClick("CurrentOrder")}};TrkMastElemClick=function(a){var b=new SrchTrkr.SrchDat({usr:SrchTrkr.UsrActTyps.SLCT});b.usr.srcNm="MastHeadWebPart";b.usr.elemTyp=SrchTrkr.ElemTyps.MASTHEAD_LNK;b.usr.slctdNm=decodeURIComponent(a);b.Trk()};var h=function(a){switch(a){case McMaster.MsgMgr.CntxtNms.CNTCT_US:if(a=
Cmn.GetObj("ShellLayout_CntctUs_Btn"))k(a),l(a);break;case McMaster.MsgMgr.CntxtNms.BMS:if(a=Cmn.GetObj("ShellLayout_BMs_Btn"))k(a),l(a);break;case McMaster.MsgMgr.CntxtNms.ORD_DTL:case McMaster.MsgMgr.CntxtNms.ORD_HIST:if(a=Cmn.GetObj("ShellLayout_OrdHist_Btn"))k(a),l(a);break;case McMaster.MsgMgr.CntxtNms.LOADING_ORD_PAD:case McMaster.MsgMgr.CntxtNms.ORD_PAD:case McMaster.MsgMgr.CntxtNms.NEW_ORD_PAD:if(a=Cmn.GetObj("ShellLayout_CurrOrd_Btn"))k(a),l(a);break;default:(a=Cmn.GetObj("ShellLayout_CntctUs_Btn"))&&
e(a),(a=Cmn.GetObj("ShellLayout_BMs_Btn"))&&e(a),(a=Cmn.GetObj("ShellLayout_OrdHist_Btn"))&&e(a),(a=Cmn.GetObj("ShellLayout_CurrOrd_Btn"))&&e(a),McMaster.SesnMgr.SetStVal(McMaster.SesnMgr.StValDefs.SlctdMastheadBtnNm.KyTxt(),null)}},l=function(a){var b=m(a),b=b+"Actv",c=n(a);a.className=b;Cmn.forEach(c,function(b){g("NewHomePage",b)&&!d("Actv",b)&&(d("Slctd",b)?newClsNm=b.replace(/Slctd$/,"Actv"):d("Btn",b)&&(newClsNm=b+"Actv"));Cmn.AddCls(a,newClsNm)})},e=function(a){var b=m(a),c=n(a);a.className=
b;Cmn.forEach(c,function(b){g("NewHomePage",b)&&(newClsNm=d("Actv",b)?b.replace(/Actv$/,""):d("Slctd",b)?b.replace(/Slctd$/,""):b);Cmn.AddCls(a,newClsNm)})},k=function(a){a=a.id;if("ShellLayout_CntctUs_Btn"!=a){var b=Cmn.GetObj("ShellLayout_CntctUs_Btn");b&&e(b)}"ShellLayout_BMs_Btn"!=a&&(b=Cmn.GetObj("ShellLayout_BMs_Btn"))&&e(b);"ShellLayout_OrdHist_Btn"!=a&&(b=Cmn.GetObj("ShellLayout_OrdHist_Btn"))&&e(b);"ShellLayout_CurrOrd_Btn"!=a&&(b=Cmn.GetObj("ShellLayout_CurrOrd_Btn"))&&e(b)},s=function(a){if(!1==
a.className.Contains("Actv")){var b=m(a),b=b+"Slctd",c=n(a);a.className=b;Cmn.forEach(c,function(b){g("NewHomePage",b)&&(!d("Actv",b)&&!d("Slctd",b))&&(nmSlctd=b+"Slctd");Cmn.AddCls(a,nmSlctd)})}},t=function(a){if(!1==a.className.Contains("Actv")){var b=m(a),c=n(a);a.className=b;Cmn.forEach(c,function(b){g("NewHomePage",b)&&(d("Actv",b)||(newClsNm=d("Slctd",b)?b.replace(/Slctd$/,""):b),Cmn.AddCls(a,newClsNm))})}},m=function(a){a=a.className.split(" ");var b=null,c=/Actv$/,e=/Slctd$/;Cmn.forEach(a,
function(a){if(g("ShellLayout",a))return b=d("Actv",a)?a.replace(c,""):d("Slctd",a)?a.replace(e,""):a});return b},d=function(a,b){var c=!1;RegExp(a+"$").exec(b)&&(c=!0);return c},g=function(a,b){var c=!1;RegExp("^"+a).exec(b)&&(c=!0);return c},n=function(a){a=a.className.split(" ");return Cmn.filter(a,function(a){var c=!0;g("ShellLayout",a)&&(c=!1);return c})},q=function(){var a=Cmn.GetObj("ShellLayout_Masthead_Tbl"),b=Cmn.GetObj("ShellLayout_Header_Cntnr"),c=Cmn.Get("BottomNavBmsSpan");925>Cmn.GetViewportWidth()?
(Cmn.AddCls(a,"ShellLayout_Masthead_HideBMs"),Cmn.AddCls(b,"Low_Res"),a=Cmn.Get("BottomNavWebPart_Cntnr"),c||(a.innerHTML+='<span id="BottomNavBmsSpan" class="VerticalSeprt">| <a class="BottomNavLnk" id="BottomNavBmsLnk" href="/#bookmarks">Bookmarks</a></span>')):(Cmn.RemCls(a,"ShellLayout_Masthead_HideBMs"),Cmn.RemCls(b,"Low_Res"),c&&Cmn.RemElem(c))};McMaster.MsgMgr.AddSubscriber(McMaster.MsgMgrMsgs.WebPartLoaded,function(a){var b=a.MsgHdr().CntxtNm,c=a.MsgPayload().CntnrNm;("MainIFrame"==c||"MainContent"==
c||"OrderPad"==c||"SecondaryContent"==c)&&h(b);a.MsgHdr().CntxtNm==McMaster.MsgMgr.CntxtNms.INCMPL_ORDS&&(a=Cmn.GetElementsByClsNm("currOrdLnCnt","span",Cmn.GetObj("ShellLayout_IncmplOrds_Cntnr"))[0].innerHTML,b=null,0<a?(Cmn.HasCls("ShellLayout_CurrOrd_Btn","NewHomePage_BuildOrd_Btn")?b="NewHomePage_BuildOrd_Btn":Cmn.HasCls("ShellLayout_CurrOrd_Btn","NewHomePage_BuildOrd_BtnSlctd")?b="NewHomePage_BuildOrd_BtnSlctd":Cmn.HasCls("ShellLayout_CurrOrd_Btn","NewHomePage_BuildOrd_BtnActv")&&(b="NewHomePage_BuildOrd_BtnActv"),
null!=b&&Cmn.RemCls(Cmn.GetObj("ShellLayout_CurrOrd_Btn"),b)):0==a&&(Cmn.HasCls("ShellLayout_CurrOrd_Btn","ShellLayout_CurrOrd_Btn")?b="NewHomePage_BuildOrd_Btn":Cmn.HasCls("ShellLayout_CurrOrd_Btn","ShellLayout_CurrOrd_BtnSlctd")?b="NewHomePage_BuildOrd_BtnSlctd":Cmn.HasCls("ShellLayout_CurrOrd_Btn","ShellLayout_CurrOrd_BtnActv")&&(b="NewHomePage_BuildOrd_BtnActv"),null!=b&&Cmn.AddCls(Cmn.GetObj("ShellLayout_CurrOrd_Btn"),b)))});Cmn.AddEvntListener(window,"resize",q)});


this.BottomNavWebPart||(BottomNavWebPart=new function(){var b=new McMaster.MsgMgr.Hdr(McMaster.MsgMgr.CntxtNms.BOTTOM_NAV_WEB_PART);this.WebPart_Load=function(a){a=new McMaster.MsgMgrMsgs.WebPartLoaded(b,a.CntnrIDTxt);McMaster.MsgMgr.PubMsg(a)};this.WebPart_PreUnload=function(a){Cmn.RemEvntListener(Cmn.GetObj(a.CntnrIDTxt),"click")};this.WebPart_Unload=function(a){a=new McMaster.MsgMgrMsgs.WebPartUnloaded(b,a.CntnrIDTxt);McMaster.MsgMgr.PubMsg(a)};this.HndlHomeClick=function(){McMaster.SesnMgr.SetStVal(McMaster.SesnMgr.StValDefs.HomePageSlctdEntryScrollTop.KyTxt(),
1);var a=new McMaster.MsgMgrMsgs.HomeSlctd(b);McMaster.MsgMgr.PubMsg(a);McMaster.UrlMgr.ResetUrlHash();Cmn.TrkAct("BottomNavHomeLinkClicked","HomePage");TrkBttmNavElemClick("Home Page")};this.HndlCareersLnkClick=function(){var a=new McMaster.MsgMgrMsgs.CareersSlctd(b);McMaster.MsgMgr.PubMsg(a);TrkBttmNavElemClick("Careers")};this.HndlBookmarksClick=function(){var a=new McMaster.MsgMgrMsgs.BMsSlctd(b);McMaster.MsgMgr.PubMsg(a);Cmn.TrkAct("LoadBMReqstdFrmBottomNav","BottomNav");TrkBttmNavElemClick("Bookmarks")};
this.HndlSiteSettingsClick=function(){var a=new McMaster.MsgMgrMsgs.SiteSettingsSlctd(b);McMaster.MsgMgr.PubMsg(a);Cmn.TrkAct("GoToSettingsLnkClicked&from=BottomNav","Login");TrkBttmNavElemClick("Settings")};TrkBttmNavElemClick=function(a){var b=new SrchTrkr.SrchDat({usr:SrchTrkr.UsrActTyps.SLCT});b.usr.srcNm=McMaster.MsgMgr.CntxtNms.BOTTOM_NAV_WEB_PART;b.usr.elemTyp=SrchTrkr.ElemTyps.BOTTOM_NAV_LNK;b.usr.slctdNm=decodeURIComponent(a);b.Trk()};McMaster.MsgMgr.AddSubscriber(McMaster.MsgMgrMsgs.HomeSlctd,
function(){var a;if(a=Cmn.GetElementsByClsNm("TermsTxt","span",Cmn.GetObj("BottomNavWebPart_TermsCntnr")))a[0].style.display="inline"});McMaster.MsgMgr.AddSubscriber(McMaster.MsgMgrMsgs.WebPartUnloaded,function(a){if(a.MsgHdr().CntxtNm===McMaster.MsgMgr.CntxtNms.HOME_PAGE&&(a=Cmn.GetElementsByClsNm("TermsTxt","span",Cmn.GetObj("BottomNavWebPart_TermsCntnr"))))a[0].style.display="none"})});


if (this.SrchEntryWebPart) {
    // SrchEntryWebPart is already defined
} else {
    //-------------------------------------------------------------------------
    // Class:   SrchEntryWebPart
    // Summary: Contains behaviors for the Search Entry web part
    //-------------------------------------------------------------------------
    SrchEntryWebPart = new function() {
	
	// Declarations   
	var SRCH_SUBMIT_ICON_ID = "SrchSubmitIcon";
	var SRCH_ENTRY_TXT_BOX_ID = "SrchEntryWebPart_InpBox";
        var mMsgHdr = new McMaster.MsgMgr.Hdr(McMaster.MsgMgr.CntxtNms.SRCH_ENTRY_WEB_PART);
	var mPreviousInpTxt = "";
	// End Declarations
        
	// Public Methods  
        // -------------------------------------------------
        // Summary: Changes the image source of the srch input button when the
	//		   mousedown event happens.
        // --------------------------------------------------		
	this.SrchInpBtn_MouseDown = function() {
	    Cmn.AddCls(Cmn.GetObj(SRCH_SUBMIT_ICON_ID), "down");
	};
	
	// -------------------------------------------------
        // Summary: Changes the image source of the srch input button when the
	//		   mouseup event happens.
        // --------------------------------------------------		
	this.SrchInpBtn_MouseUp = function() {
	    Cmn.RemCls(Cmn.GetObj(SRCH_SUBMIT_ICON_ID), "down");
	};
	
        // ------------------------------------------------
        // Summary: Publishes a message indicating that the user input 
        //		   text has been submitted.
        // Remarks: This message will be called when the search button is clicked.
        // --------------------------------------------------		
	this.SrchInpBtn_Click = function() {
	    pubUsrInpTxtSubmittedMsg();	
	};
	
	// -------------------------------------------------
	//Summary: Calls the private method which creates a UsrTxtSubmitted message
	//		  when the user hits enter.
        // -------------------------------------------------		
	this.SrchInp_Submitted = function() {
	    // publish the UsrTxtEntered message
	    pubUsrInpTxtSubmittedMsg();				
	};
	
	// -------------------------------------------------
	//Summary: Calls the private method which creates a UsrTxtChged message
	//		   when the user hits enter.
        // -------------------------------------------------		
	this.SrchInp_UsrInpTxtChged = function() {
	    var usrInpBox = Cmn.GetObj(SRCH_ENTRY_TXT_BOX_ID);
	    var usrInpTxt = usrInpBox.value;
	    
	    if(usrInpTxt == mPreviousInpTxt){
		// Do nothing, the text has not changed
	    }else{
		//Set the previous input text to the current input text
		mPreviousInpTxt = usrInpTxt;
		
		//Create a User Input Text Submitted Message Object
		var msg = new McMaster.MsgMgrMsgs.UsrInpTxtChged(mMsgHdr, usrInpTxt);
		
		//Publish the Message
		McMaster.MsgMgr.PubMsg(msg);
	    }		
	};
	
	// -------------------------------------------------
	//Summary: Loads search help in a new window
        // -------------------------------------------------	
        this.Help_Clicked = function() {
	    McMasterCom.Nav.LoadHelp("search");
	};
	
        // -------------------------------------------------
        // Summary: Publishes a message indicating that the web part has been loaded
        // 		  and clears the search box .
        // Remarks: Will be called once the webpart is loaded.
        // Input: The web part that's been loaded.
        // --------------------------------------------------
        this.WebPart_Load = function(webPartObj){
        	// webPart is loaded, change the action of the form
			document.getElementById("SrchEntryWebPart_Form").action = "javascript:SrchEntryWebPart.SrchInp_Submitted();"
			// Publish the WebPartLoaded message
			McMaster.MsgMgr.PubMsg(new McMaster.MsgMgrMsgs.WebPartLoaded(mMsgHdr, webPartObj.CntnrIDTxt));		
        };

        // -------------------------------------------------
        // Summary: Publishes a message indicating that the web part has been unloaded.
        // Remarks: Will be called once the webpart is unloaded.
        // Input: The web part that's been unloaded.
        // --------------------------------------------------
        this.WebPart_Unload = function(webPartObj){
            // Publish the WebPartUnloaded message
            McMaster.MsgMgr.PubMsg(new McMaster.MsgMgrMsgs.WebPartUnloaded(
				       mMsgHdr, webPartObj.CntnrIDTxt
				   ));
	    
	    // Log the fact that the find box has been removed
	    Cmn.TrkAct({action:"removed"}, "findbox");

	    // Display an error message and reload the home page 
	    reloadOnError('We made an update to mcmaster.com that requires you to ' +
			  '<a href="/mcm/replacefavoriteslink.asp" style="color:blue" target="_blank">' +
			  'replace the Favorites link' +
			  '</a> ' +
			  'you used to access our site. ');
	};
	
	// End Public Methods
	
	// Private Methods	  
	
	var reloadOnError = function(errMsg) {
	    // Clear out the iFrames (by showing the divs)
	    McMaster.LoadMgr.ShowCntnr("MainContent");
	    McMaster.LoadMgr.ShowCntnr("SecondaryContent");			

	    // Clear out the divs
	    McMaster.LoadMgr.UnloadCntnr("MainContent");
	    McMaster.LoadMgr.UnloadCntnr("SecondaryContent");
	    
	    // Show a message letting customers know how they can resolve the problem
	    var reloadTimerCnt = 10 // seconds
		  , urlTxt = ""
		  ; 
		// Determine the target of the redirect link.
		if (Cmn.ChkLoadedSecure() === true) {
			urlTxt = Cmn.BldSecureURL();
		} else {
			urlTxt = Cmn.BldNonSecureURL();
		}
		
	    McMaster.LoadMgr.ShowCntnr('MainContent');
	    McMaster.LoadMgr.InsrtContent('MainContent', 
					  '<span style="font-family:Verdana; font-size: 14px; color: green;">' + 
					  errMsg + '<br><br>' +
					  'This page will redirect to <a href="/" style="color:blue">' +
					  urlTxt + 
					  '</a> in <span id="counter">' + reloadTimerCnt + '</span> seconds.' + '</span>'
					 );
	    
	    // Reload the page
	    var reloadCounterElem = Cmn.GetObj('counter');
	    setInterval(function() { 
			    if (reloadTimerCnt > 0) reloadCounterElem.innerHTML = (--reloadTimerCnt);
			    else window.location.reload();
			}, 1000);
	};

	// -------------------------------------------------
        // Summary: Publishes a message indicating that the user input 
        // 		   text has been submitted.
        // Remarks: This message will be called when the enter key is 
        //		  pressed and the.
        // Input: Header, text from search box.
        // --------------------------------------------------
	var pubUsrInpTxtSubmittedMsg = function() {

	    var usrInpBox = Cmn.GetObj(SRCH_ENTRY_TXT_BOX_ID);
	    var usrInpTxt = usrInpBox.value;
		
		// Track the event. 
		var top = McMasterCom.Nav.GetTopFrame();
		var trkEvntPayload = new top.PerfTracker.EvntPayload()
		  , trkEvnt; 
		  
		trkEvntPayload.Add("usrEntrdTxt", usrInpTxt);
		trkEvnt = new top.PerfTracker.Evnt(top.PerfTracker.EvntNms.SrchEntryUsrSubmit, top.PerfTracker.PgCntxtNms.DynCntnt, trkEvntPayload); 
		
		// Set the session state variable that will prevent the fast-track event from logging.
		McMaster.SesnMgr.SetStVal(McMaster.SesnMgr.StValDefs.PerfTrackingBypassFastTrkInd.KyTxt(), true); 

	    // First check if this value is nothing
		// or if it is not a valid character
		var invalidInpChars = "[^\u07ED|\u201C|\u201D|\u2019|\u0000-\u007F|ÇüéâäàåçêëèïîíìÄÅÉæÆôöòûùÖÜáíóúñÑÀÁÂÃÈÊËÌÍÎÏÐÒÓÔÕØÙÚÛÝßãðõøýþÿ]+",
			re = new RegExp(invalidInpChars, "g");
		
		usrInpTxt = usrInpTxt.replace(re,"");
		
	    if (isNullInp(usrInpTxt) || usrInpTxt=='') {
		alert("Please enter an item description, a McMaster-Carr part number, or a page number. \nClick on the Help link at the bottom of the page if you'd like some help with searching.");
	    } else {
		//Create srchTrkr object
		var srchTrkInfo = new SrchTrkr.SrchDat({ usr: SrchTrkr.UsrActTyps.KEY, resp:"unknown" });
		srchTrkInfo.usr.srcNm = "SrchEntryWebPart";
		srchTrkInfo.usr.elemTyp = SrchTrkr.ElemTyps.MAIN_SRCH_BOX;
		srchTrkInfo.usr.entryTxt = decodeURIComponent(usrInpTxt);
		//Create a User Input Text Submitted Message Object
		var msg = new McMaster.MsgMgrMsgs.UsrInpTxtSubmitted(mMsgHdr, usrInpTxt, srchTrkInfo);
		
		//Publish the Message
		McMaster.MsgMgr.PubMsg(msg);	
	    }
	};

	
	// -------------------------------------------------
        // Summary: Resets the value of the search entry text box.
        // --------------------------------------------------
	var resetTxtBox = function (msgObj){
		    var srchEntryTxtBox = Cmn.GetObj(SRCH_ENTRY_TXT_BOX_ID);
	    
		    if(srchEntryTxtBox){
			srchEntryTxtBox.value = "";
		    }
	};
	
	// -------------------------------------------------
        // Summary: Updates the value of the search entry text box.
        // --------------------------------------------------
	var updateTxtBox = function (inpTxt){
	    var srchEntryTxtBox = Cmn.GetObj(SRCH_ENTRY_TXT_BOX_ID);
	    // Cleanse the text
	    inpTxt = (inpTxt.replace(/-/g, " ")).toLowerCase(); 
	    if(srchEntryTxtBox && srchEntryTxtBox.value.toLowerCase() != inpTxt.toLowerCase()){
		srchEntryTxtBox.value = inpTxt.toLowerCase();
	    }
	};
	
	// -------------------------------------------------
        // Summary: Sets focus in the search entry text box.
        // --------------------------------------------------
	var focusSrchEntryTxtBox = function() {
	    var srchEntryTextBox = Cmn.GetObj(SRCH_ENTRY_TXT_BOX_ID);
	    
	    if (srchEntryTextBox){
			try {
				// Check to see if the website is embedded within the sales workstation.
				// If so, we don't want focus added to the search box. This was causing 
				// the pop out windows in sales workstation to take focus when reloading the site.
				var embedInSlsWrkStInd = McMaster.SesnMgr.GetStVal(McMaster.SesnMgr.StValDefs.FndAgainSlsWrkStObj.KyTxt());
				if (embedInSlsWrkStInd){
				    //do nothing
				} else {
					// This means we are not embedded within sales workstation, so it is ok to add focus.
					srchEntryTextBox.focus();
				}		    
			} catch(ex) {
				// do nothing
			}
	    }
	};
	
	var hndlInitialFocus = function() {
	    var TAB_COOKIE_NM_TXT = "TAB";
	    var TAB_COOKIE_FINDTAB_VAL_TXT = "FINDTAB";
	    var tabCookieVal = Cmn.GetCookieVal(TAB_COOKIE_NM_TXT);	

	    if (tabCookieVal == TAB_COOKIE_FINDTAB_VAL_TXT || tabCookieVal == ""){
		focusSrchEntryTxtBox();
	    }
	};


	var isNullInp = function (inp) {
	    var isNullRegEx = /^(\s)*$/;
	    var isNullInd = isNullRegEx.test(inp);
	    return isNullInd;
	};


	// End Private Methods 
	
	//Subscriptions	  
	
	McMaster.MsgMgr.AddSubscriber(McMaster.MsgMgrMsgs.HomeSlctd, 
									function(msgObj) {
									    if (msgObj.MsgPayload().HomePageFirstLoad) {
								    		} else {
									    		resetTxtBox(msgObj);
												if (Cmn.IsTouchAware()) {
												  	// do nothing
												  	// touch screen devices bring up the keyboard when the search box is focused.
												  	// no need to do that every time the "home" logo is clicked.
												  } else {
												  	  focusSrchEntryTxtBox();
												  }
							    			}
								    	});

	//Subscribe to the find tab selected message with low priority so that focus can be placed in the search
	//box after the web part has returned to view.
	McMaster.MsgMgr.AddSubscriber(McMaster.MsgMgrMsgs.FindTabSlctd, function() { 
					  focusSrchEntryTxtBox();
				      },McMaster.MsgMgr.PRIORITY.LOW);

	McMaster.MsgMgr.AddSubscriber(McMaster.MsgMgrMsgs.IncmplOrdsChged, function(msgObj) { 
					  var cntxtNm=msgObj.MsgHdr().CntxtNm;
					  if(cntxtNm=="AddItmSuccess")
					      resetTxtBox();
					  focusSrchEntryTxtBox();
				      });
	
	McMaster.MsgMgr.AddSubscriber(McMaster.MsgMgrMsgs.ShellLoaded, function() { 
					  hndlInitialFocus();
				      },McMaster.MsgMgr.PRIORITY.LOW);		

	McMaster.MsgMgr.AddSubscriber(McMaster.MsgMgrMsgs.SrchSubmitted, function(msgObj) { 
					  var cntxtNm=msgObj.MsgHdr().CntxtNm;
					  if(cntxtNm==McMaster.MsgMgr.CntxtNms.SRCH_ENTRY_WEB_PART || cntxtNm==McMaster.MsgMgr.CntxtNms.SRCH_SUGG) {
					      // continue
					  } else {
					      updateTxtBox(msgObj.MsgPayload().SrchTxt);
					  }
				      });
	
	//End Subscriptions
    };
}// End SrchEntryWebPart



if(this.AddnlContentLoader){}else{AddnlContentLoader=new function(){var a="/addnlDocLookup/addnlDocLookup.aspx";var b=function(){var d=McMaster.SesnMgr.GetStVal(McMaster.SesnMgr.StValDefs.AddtnlContentIdTxt.KyTxt());var c=a+"?docId="+d+"&newfrmwk=true";McMasterCom.LoadMgr.LoadResultsIFrame(c);};McMaster.MsgMgr.AddSubscriber(McMaster.MsgMgrMsgs.AddnlContentSlctd,function(){b();});};}

this.AppHelpLoader||(AppHelpLoader=new function(){McMaster.MsgMgr.AddSubscriber(McMaster.MsgMgrMsgs.AppHelpSlctd,function(a){AppHelpLoader.Load(a)});this.Load=function(a){McMasterCom.Nav.LoadiPadHelp()}});


(function(){if(this.AuthErrHandler){}else{var a=McMaster.MsgMgr,b=a.CntxtNms.AUTH_ERR_HANDLER;AuthErrHandler=new function(){var c=function(d){var f=new a.Hdr(b),e=new McMaster.MsgMgrMsgs.CtlgPageBlocked(f);a.PubMsg(e);};McMaster.MsgMgr.AddSubscriber(McMaster.MsgMgrMsgs.AuthErrOccurred,c);};}})();

if(this.BMLoginWebPartLoader){}else{BMLoginWebPartLoader=new function(){var g=this;var b="cntnridtxt";var h=function(i){g.RtrvWebPart(c,false,i);};var a=function(i){BMLoginWebPartLoader.ReloadWebPart(i);};var d=g.loadWebPart;var f="SecondaryContent";var e="/WebParts/BMLoginWebPart/BMLoginWebPart.aspx";g.RtrvWebPart=function(m,l,j){var k={success:m,cnxnParm:{respTyp:McMaster.CnxnMgr.WEB_PART_RESP_TYP_TXT}};var i=e+"?"+b+"="+f;McMaster.CnxnMgr.PerformAjaxCnxn(i,k);};g.ReloadWebPart=function(i){var j=Cmn.Get("SecondaryContentTitl");if(i.NM=="Login_Chged"&&j.innerHTML!="Bookmarks"){}else{if(i.NM=="Login_Canceled"&&j.innerHTML!="Bookmarks"){}else{g.RtrvWebPart(c,false,i);}}};var c=function(i,m){var l;l=i.LoadWebPartInd;if(l===true){Cmn.Get("SecondaryContentTitl").innerHTML="Bookmarks";McMaster.LoadMgr.LoadWebPart(i);}else{var j=new McMaster.MsgMgr.Hdr(McMaster.MsgMgr.CntxtNms.BMS);var k=new McMaster.MsgMgrMsgs.BMLoginLoaded(j);McMaster.MsgMgr.PubMsg(k);}};McMaster.MsgMgr.AddSubscriber(McMaster.MsgMgrMsgs.BMsSlctd,h);McMaster.MsgMgr.AddSubscriber(McMaster.MsgMgrMsgs.LoginCanceled,a);McMaster.MsgMgr.AddSubscriber(McMaster.MsgMgrMsgs.LoginChged,a);};}

if(this.CadLoader){}else{CadLoader=new function(){var a="2D";var c="3D";McMaster.MsgMgr.AddSubscriber(McMaster.MsgMgrMsgs.Cad3dSlctd,function(d){b(c);});McMaster.MsgMgr.AddSubscriber(McMaster.MsgMgrMsgs.Cad2dSlctd,function(d){b(a);});var b=function(d){var f=McMaster.SesnMgr.GetStVal(McMaster.SesnMgr.StValDefs.SlctdPartNbrTxt.KyTxt());var e="/addlcontent/cad.asp?PN="+f+"&view="+d;McMasterCom.LoadMgr.LoadMainIFrame(e);};};}

if(this.CareersLoader){}else{CareersLoader=new function(){var l="/careers/CareersMainLoader.aspx";var c="/careers/customer.aspx";var k="/careers/management.aspx";var a="/careers/publishing.aspx";var h="/careers/systems.aspx";var d="/careers/applyintro.aspx";var e="main";var i="customer-service";var j="management";var b="merchandising-and-publishing";var n="systems";var g="how-to-apply";var m="idxdat";var f=function(o){CareersLoader.Load(o);};McMaster.MsgMgr.AddSubscriber(McMaster.MsgMgrMsgs.CareersSlctd,f);this.Load=function(q){var p;var r=q.MsgPayload();var o;if(r.CareerCntxt){o=r.CareerCntxt.toLowerCase();}else{o=e;}switch(o){case e:p=l;break;case i:p=c;break;case j:p=k;break;case b:p=a;break;case n:p=h;break;case g:p=d;break;}McMaster.SesnMgr.SetStVal(McMaster.SesnMgr.StValDefs.CareersCntxtTxt.KyTxt(),o);McMasterCom.LoadMgr.LoadMainIFrame(p,q);};};}

if (this.CareersMenuLoader) {
} else {
CareersMenuLoader = new function() {
var CAREERS_MENU_DEFLT_URL = "/Careers/CareersMenu.aspx";
var LOAD_FUNC = function(msgObj) { CareersMenuLoader.Load(msgObj); };
McMaster.MsgMgr.AddSubscriber(McMaster.MsgMgrMsgs.CareersSlctd, LOAD_FUNC, McMaster.MsgMgr.PRIORITY.LOW);
this.Load = function (msgObj) {
McMasterCom.LoadMgr.LoadResultsIFrame(CAREERS_MENU_DEFLT_URL);
}
}
}


if(this.CntctUsLoader){}else{CntctUsLoader=new function(){var a="/custcrspndnc/sendMailForm/cntctUsSendMailForm.aspx?isinfrmwk=true";var b=function(c){CntctUsLoader.Load(c);};McMaster.MsgMgr.AddSubscriber(McMaster.MsgMgrMsgs.CntctUsSlctd,b);McMaster.MsgMgr.AddSubscriber(McMaster.MsgMgrMsgs.NeedHelpSlctd,b);this.Load=function(c){McMasterCom.LoadMgr.LoadMainIFrame(a,c);};};}

this.CtlgLoader||(CtlgLoader=new function(){McMaster.MsgMgr.AddSubscriber(McMaster.MsgMgrMsgs.CtlgPageSlctd,function(a){var b=0,c="/nav/framework.asp?ReqTyp=CATALOG",g=McMaster.SesnMgr.GetStVal(McMaster.SesnMgr.StValDefs.CurrCtlgPgNbr.KyTxt()),b=McMaster.SesnMgr.GetStVal(McMaster.SesnMgr.StValDefs.ReqCtlgEdtnNbr.KyTxt()),e=McMaster.SesnMgr.GetStVal(McMaster.SesnMgr.StValDefs.EnvrMgrCharSetInd.KyTxt()),f=null;if(a){if(a.MsgPayload().PartNbr)var h=a.MsgPayload().PartNbr.toUpperCase();a.MsgPayload().RefPartNbr&&
(f=a.MsgPayload().RefPartNbr.toUpperCase());var d=McMaster.SesnMgr.GetStVal(McMaster.SesnMgr.StValDefs.CurrRelatedCtlgPgsTxt.KyTxt());d&&(d=d.toString());"Catalog"==a.MsgPayload().SrchTyp&&k()}g&&(c=Cmn.AddQSNmVal(c,"CtlgPgNbr",g),a=!1,d&&1<d.split(",").length&&(a=!0),a&&(c=Cmn.AddQSNmVal(c,"RelatedCtlgPgs",d)),b&&(c=Cmn.AddQSNmVal(c,"CtlgEdition",b)),h&&McMaster.SesnMgr.SetStVal(McMaster.SesnMgr.StValDefs.CtlgPartNbrSlctd.KyTxt(),h),f&&(c=Cmn.AddQSNmVal(c,"refPartNbr",f)),b=McMaster.SesnMgr.GetStVal(McMaster.SesnMgr.StValDefs.MainContentCntnrHeight.KyTxt()),
c=Cmn.AddQSNmVal(c,"viewporthgt",b),null!=e&&0<e&&(c=Cmn.AddQSNmVal(c,"envrmgrcharsetind",e)),McMasterCom.LoadMgr.LoadMainIFrame(c),McMaster.SesnMgr.SetStVal(McMaster.SesnMgr.StValDefs.MainIFrameWebPartNm.KyTxt(),McMaster.SesnMgr.StValDefs.MainIFrameWebPartNm.LEGACY_CTLG_PG))});this.LoadCmpl=function(){var a=McMasterCom.Nav.GetTopFrame(self).LegacyCtlgPage;if(a){var b=McMaster.SesnMgr.GetIFrameDatByCntnrId("ShellLayout_MainIFrame_Cntnr");b&&!0===b.HasSlctdPartNbrInd?(a.TargetLink(b.TargetID,b.TargetTyp,
b.TargetAnchorID,b.PartNbr),a.ScrollToTarget(b.TargetAnchorID)):a.RestoreLastTarget()}};this.LoadFrmSesn=function(a){k()};var k=function(){var a=Cmn.Get("ResultsIFrame"),b=Cmn.Get("SecondaryContent");Cmn.Get("SecondaryContentTitl");a&&McMaster.LoadMgr.UnloadCntnr("ResultsIFrame","iframe",!1);b&&(McMaster.LoadMgr.UnloadCntnr("SecondaryContent","webpart",!1),McMaster.LoadMgr.UnloadCntnr("SecondaryContentTitl","webpart",!1));a=new McMaster.MsgMgrMsgs.CollapseSecondaryContent(new McMaster.MsgMgr.Hdr(McMaster.MsgMgr.CntxtNms.HOME_PAGE_NAV));
McMaster.MsgMgr.PubMsg(a)}});


this.OrdPadWebPartLoader||(OrdPadWebPartLoader=new function(){new McMaster.MsgMgr.Hdr(McMaster.MsgMgr.CntxtNms.ORD_PAD);this.LoadFrmSesn=function(){McMaster.SesnMgr.SetStVal(McMaster.SesnMgr.StValDefs.OrdPadLoadFrmSesnInd.KyTxt(),!0);d(!0)};var h=function(a,b){Cmn.IsAppMode()?McMaster.LoadMgr.LoadAssocWebPartFiles(a):McMaster.LoadMgr.LoadWebPart(a)},d=function(a,b){if(b){if(!("BMs"==b.MsgHdr().CntxtNm&&"SgnIn_Chged"==b.NM&&null==Cmn.Get("OrdPadWebPartCntnr")||b.NM==McMaster.MsgMgrMsgs.LoginChged.NM&&
null==Cmn.Get("OrdPadWebPartCntnr")||b.NM==McMaster.MsgMgrMsgs.LoginCanceled.NM&&null==Cmn.Get("OrdPadWebPartCntnr"))){var c=McMasterCom.Nav.GetTopFrame();new c.PerfTracker.Evnt(c.PerfTracker.EvntNms.OrdPadUsrReq,c.PerfTracker.PgCntxtNms.DynCntnt);e();f(b)}}else e(),f(b)},e=function(){McMaster.LoadMgr.UnloadCntnr("MainContent");McMaster.LoadMgr.ShowCntnr("MainContent");McMaster.LoadMgr.DisplWaitIcon("MainContent");var a={success:h,cnxnParm:{respTyp:McMaster.CnxnMgr.WEB_PART_RESP_TYP_TXT}},b=location.search,
c="";0<b.length&&(c=b.indexOf("delvoptn"),c=b.slice(c,c+10));McMaster.CnxnMgr.PerformAjaxCnxn("/WebParts/Ordering/OrdPadWebPart/OrdPadWebPart.aspx?cntnridtxt=MainContent&"+c,a)},f=function(a){var b=Cmn.Get("ResultsIFrame"),c=Cmn.Get("SecondaryContent"),d=Cmn.Get("SecondaryContentTitl");a?"Bookmarks"==d.innerHTML&&"SgnIn_Chged"==a.NM&&"BMs"==a.MsgHdr().CntxtNm||g(b,c):g(b,c)},g=function(a,b){var c=new McMaster.MsgMgr.Hdr(McMaster.MsgMgr.CntxtNms.NEW_ORD_PAD),c=new McMaster.MsgMgrMsgs.CollapseSecondaryContent(c);
a&&McMaster.LoadMgr.UnloadCntnr("ResultsIFrame","iframe",!1);b&&(McMaster.LoadMgr.UnloadCntnr("SecondaryContent","webpart",!1),McMaster.LoadMgr.UnloadCntnr("SecondaryContentTitl","webpart",!1));McMaster.MsgMgr.PubMsg(c)};McMaster.MsgMgr.AddSubscriber(McMaster.MsgMgrMsgs.CurrOrdSlctd,function(a){d(!1,a)},McMaster.MsgMgr.PRIORITY.HIGH);McMaster.MsgMgr.AddSubscriber(McMaster.MsgMgrMsgs.LoginChged,function(a){d(!1,a)},McMaster.MsgMgr.PRIORITY.HIGH);McMaster.MsgMgr.AddSubscriber(McMaster.MsgMgrMsgs.LoginCanceled,
function(a){d(!1,a)},McMaster.MsgMgr.PRIORITY.HIGH);McMaster.MsgMgr.AddSubscriber(McMaster.MsgMgrMsgs.SgnInChged,function(a){d(!1,a)},McMaster.MsgMgr.PRIORITY.HIGH);McMaster.MsgMgr.AddSubscriber(McMaster.MsgMgrMsgs.SavedOrdSlctd,function(a){d(!1,a)},McMaster.MsgMgr.PRIORITY.HIGH);McMaster.MsgMgr.AddSubscriber(McMaster.MsgMgrMsgs.OrdDeleted,function(a){OrdPadWebPart.LoadFrmToolset="Del";d(!1,a)},McMaster.MsgMgr.PRIORITY.HIGH);McMaster.MsgMgr.AddSubscriber(McMaster.MsgMgrMsgs.OrdForwarded,function(a){OrdPadWebPart.LoadFrmToolset=
"Fwd";d(!1,a)},McMaster.MsgMgr.PRIORITY.HIGH);McMaster.MsgMgr.AddSubscriber(McMaster.MsgMgrMsgs.OrdSaved,function(a){OrdPadWebPart.LoadFrmToolset="Save";d(!1,a)},McMaster.MsgMgr.PRIORITY.HIGH)});


if(this.CmnVstrIdentification){}else{CmnVstrIdentification=new function(){var a="/ident/vstrmisident.asp?context=ajax";var c=function(){var d={success:b,failure:b};McMaster.CnxnMgr.PerformAjaxCnxn(a,d);};var b=function(d,g){var f=new McMaster.MsgMgr.Hdr(McMaster.MsgMgr.CntxtNms.SGN_IN);var e=new McMaster.MsgMgrMsgs.SgnInChged(f);McMaster.MsgMgr.PubMsg(e);};McMaster.MsgMgr.AddSubscriber(McMaster.MsgMgrMsgs.SgnOutSlctd,c,McMaster.MsgMgr.PRIORITY.HIGH);};}

if(this.OrdPadCnfmWebPartLoader){}else{OrdPadCnfmWebPartLoader=new function(){var b="cntnridtxt";var g="MainContent";var f="/WebParts/Ordering/OrdPadCnfmWebPart/OrdPadCnfmWebPart.aspx";var d="OrdPadCnfmWebPart";var a="ordid";var c=function(i,k){try{if(i){i.SesnStSnapshotInd=false;McMaster.LoadMgr.LoadWebPart(i);Cmn.TrkAct("LoadCnfmAttempted","OrdPadCnfm");}else{e();Cmn.TrkAct("LoadCnfmErr2","OrdPadCnfm");}}catch(j){e();Cmn.TrkAct("LoadCnfmErr2","OrdPadCnfm");}};var h=function(){try{var l=McMaster.SesnMgr.GetStVal(McMaster.SesnMgr.StValDefs.CurrOrdId.KyTxt());Cmn.TrkAct("OrdCnfmOrdId="+l,"OrdPadCnfm");McMaster.LoadMgr.DisplWaitIcon(g);var j={success:c,failure:e,cnxnParm:{respTyp:McMaster.CnxnMgr.WEB_PART_RESP_TYP_TXT}};var i=f+"?"+b+"="+g+"&"+a+"="+l;McMaster.CnxnMgr.PerformAjaxCnxn(i,j);Cmn.TrkAct("LoadCnfmReqstd","OrdPadCnfm");}catch(k){e();Cmn.TrkAct("LoadCnfmErr1","OrdPadCnfm");}};var e=function(i,m){try{var j=new McMaster.MsgMgr.Hdr(McMaster.MsgMgr.CntxtNms.ORD_CONFIRMATION);var l=new McMaster.MsgMgrMsgs.OrdHistSlctd(j);McMaster.MsgMgr.PubMsg(l);Cmn.TrkAct("LoadCnfmFailed","OrdPadCnfm");}catch(k){Cmn.TrkAct("LoadCnfmFailureFailed","OrdPadCnfm");}};};}

if (this.ContentWebPartLoader) {
    // Continue
} else {

    //-------------------------------------------------------------------------
    // Class:  ContentWebPartLoader
    // Summary: Loads content webpart.
    // Remarks: Requires CnxnMgr.
    //-------------------------------------------------------------------------
    ContentWebPartLoader = new function() {
        // Declarations
        var
        MSG_HDR = new McMaster.MsgMgr.Hdr(McMaster.MsgMgr.CntxtNms.CONTENT),
        CONTENT_WEB_PART_CNTNR_DIV_NM = "ProdPageContent",
        PROD_PAGE_WEB_PART_CNTNR_DIV_NM = "MainContent",
        SECONDARY_CONTENT_CNTNR_NM = "ShellLayout_SecondaryContent_Cntnr",
        SECONDARY_CONTENT_CNTNR_COLLAPSED_NM = "ShellLayout_SecondaryContent_Cntnr_SecondaryContent_Collapsed",
        SPECSRCH_CLS_NM = "SpecSrch_Cntnr",
        CONTENT_WEB_PART_HTTP_HANDLER_URL = "/WebParts/Content/ContentWebPart/ContentWebPart.aspx",
        CNTNR_ID_TXT = "cntnrIDtxt",
        SRCH_RSLT_ID_TXT = "srchidtxt",
        CNTNR_WDTH_QS_NM = "cntnrwdth",
        PRSNTTN_RANK_SEQ_TXT = "PrsnttnRankSeq",
        SRCH_RSLT_TXT = "srchrslttxt",
        VSTR_KNOWN_IND_TXT = "vstrknownind",
        EXPANDED_PRSNTTNS_QS_NM = "expandedprsnttns",
        SRCH_RSLTS_CNTNR_WIDTH = 190,
        CONTENT_CNTNR_PADDING = 25,
        CONTENT_CNTNR_ADDITIONAL = 15,
        SPEC_SRCH_CNTNR_WIDTH = 215,
        mFetchAheadCnxnDict = new CmnColls.HashTable(), // key-value pairs of URL to connection object
        mFetchAheadLastHndldGrpId, // the last Fetch Ahead group identifier this web part has seen
        CLS_NM = "ContentWebPartLoader";

        // Message to display to the customer if there is an error returned from the HTTP handler
        ERR_MSG_TXT = "<div class=\"WarningTxt\">We were unable to display products for your search.  Please try again or contact us.</div>",


        LOAD_FUNC = function(msgObj) { ContentWebPartLoader.Load(msgObj); },
        UNLOAD_FUNC = function(msgObj) { ContentWebPartLoader.UnLoadWebPart(); },

        mCurrSrchRsltId = null,
        mSrchRsltId = null,
        mSpecUsrInps = null,
        mAbortInd = false,
        mPrsnttnUsrInps = null,
		mGrpUsrInps = null,
        mImgUsrInps = null,
        Log = Cmn.Utilities.Log;


        //Public var to track previous HTTP request
        this.mPrevCnxn = null;

        //Subscribe to the "Spec selected" message and show an intermediate "loading content" page
        McMaster.MsgMgr.AddSubscriber(McMaster.MsgMgrMsgs.SpecSlctd, function(msgObj) {
                               McMaster.LoadMgr.DisplWaitIcon(CONTENT_WEB_PART_CNTNR_DIV_NM);
                                      });

        McMaster.MsgMgr.AddSubscriber(McMaster.MsgMgrMsgs.LandingPageSlctd, LOAD_FUNC);
        // Subscribe to the messages
        // web part will load in responce to dynamic page selected
        McMaster.MsgMgr.AddSubscriber(McMaster.MsgMgrMsgs.DynamicPageSlctd, LOAD_FUNC);
        // and unloaded when product page unloads
        McMaster.MsgMgr.AddSubscriber(McMaster.MsgMgrMsgs.ProdPageUnloaded, UNLOAD_FUNC, McMaster.MsgMgr.PRIORITY.HIGH);

        //Subscribe to ImgClicked message
        McMaster.MsgMgr.AddSubscriber(McMaster.MsgMgrMsgs.ImgClicked, function(msgObj) {
                       McMaster.LoadMgr.DisplWaitIcon(CONTENT_WEB_PART_CNTNR_DIV_NM);
                                           });

        //Subscribe to Abbreviated presentation clicked message
        McMaster.MsgMgr.AddSubscriber(McMaster.MsgMgrMsgs.AbbrPrsnttnClicked, function(msgObj) {
                       McMaster.LoadMgr.DisplWaitIcon(CONTENT_WEB_PART_CNTNR_DIV_NM);
                                           });

        //Subscribe to Presentation name clicked message
        McMaster.MsgMgr.AddSubscriber(McMaster.MsgMgrMsgs.PrsnttnNmClicked, function(msgObj) {
                       McMaster.LoadMgr.DisplWaitIcon(CONTENT_WEB_PART_CNTNR_DIV_NM);
                                           });

		// Public Methods
        // -------------------------------------------------------------
        // Summary: Returns true if a request is in flight.
        // -------------------------------------------------------------
        this.ReqInFlight = function() {
            return (!!ContentWebPartLoader.mPrevCnxn);
        };

        // -------------------------------------------------------------
        // Summary: Aborts requests in flight
        // Input:   inpStatus is a boolean
        // -------------------------------------------------------------
        this.AbortStaleReq = function() {
            if (ContentWebPartLoader.mPrevCnxn) {

                mAbortInd = true;

                McMaster.CnxnMgr.AbortAjaxCnxn(ContentWebPartLoader.mPrevCnxn);
                //Clear the previous connection
                ContentWebPartLoader.mPrevCnxn = null;

                //Abort the snapshot
                ContentHistMgr.Abort_Snapshot(ContentHistMgr.TYP.CONTENT_LOAD);

            } else {
                mAbortInd = false;
            }
        };

        // -------------------------------------------------------------
        // Summary: Called following back button clicks.
		// Remarks: Because this web part can load itself OR be loaded
		//			as a child of another web part, it must ask the
		//			Content History Manager what to do.
        // -------------------------------------------------------------
		this.LoadFrmSesn = function() {
			if (ContentHistMgr.ShouldILoadFrmSesn(ContentHistMgr.TYP.CONTENT_LOAD)) {
				this.Load(null, true);
			}
		};

        // -------------------------------------------------------------
        // Summary: Method to retrieve information related to
        //            "Choose Specs" from an HTTPHandler, display the
        //            returned markup, and update the State Manager.
        // Input:   msgObj - The message object
        // -------------------------------------------------------------
        this.Load = function(msgObj, loadFrmSesnInd) {

            //initialize snapshot
            if (!loadFrmSesnInd) ContentHistMgr.Init_Snapshot(ContentHistMgr.TYP.CONTENT_LOAD);

            //Set the search result ID modular variable when a search result is selected,
            mSrchRsltId = getSrchId();

            //initialize the load from session indicator
            McMaster.SesnMgr.SetStVal(McMaster.SesnMgr.StValDefs.ContentLoadFrmSesnInd.KyTxt(), false);

            //Get the spec user input object from sessoin state.
            mSpecUsrInps = SpecSrchInp.Get();

            //Get PrsnttnUsrInps from the session state
            mPrsnttnUsrInps = PrsnttnUsrInp.Get();
			
			//Get GrpUsrInps from the session state
			mGrpUsrInps = GrpUsrInp.Get();

            //Get ImgUsrInps from the session state
            mImgUsrInps = ImgUsrInp.Get();

            // Retrieve content from the HTTPHandler
            this.CrteAjaxCnxn();
        };

        // -------------------------------------------------------------
        // Summary: Unloads the choose specs webpart and collapses
        //          the container
        // -------------------------------------------------------------
        this.UnLoadWebPart = function() {

            //Abort any stale Choose Spec AJAX requests
            this.AbortStaleReq();

            //clear class level variables
            mSrchRsltId = null;
            mSpecUsrInps = null;
            mPrsnttnUsrInps = null;
			mGrpUsrInps = null;
            mImgUsrInps = null;

            ContentWebPartLoader.mPrevCnxn = null;
        };

        // -------------------------------------------------------------
        // Summary: Performs the AJAX connection to the HTTPHandler
        // -------------------------------------------------------------
        this.CrteAjaxCnxn = function() {


            //performance timer
			var top = McMasterCom.Nav.GetTopFrame();
            var trkEvnt = new top.PerfTracker.Evnt(top.PerfTracker.EvntNms.CntntLdrAjaxCnxnBgn, top.PerfTracker.PgCntxtNms.DynCntnt);

            //Abort any stale Choose Spec AJAX requests
            this.AbortStaleReq();

            // Show the web part's container and display the waiting icon
			McMaster.LoadMgr.UnloadCntnr(CONTENT_WEB_PART_CNTNR_DIV_NM);
			McMaster.LoadMgr.ShowCntnr(CONTENT_WEB_PART_CNTNR_DIV_NM);
			McMaster.LoadMgr.DisplWaitIcon(CONTENT_WEB_PART_CNTNR_DIV_NM);

            var url = getURL();
			var srchRsltId = getSrchId();


			var cnxnObj = {
				success: function(webPartObj, reqArgs) {
					ContentWebPartLoader.mPrevCnxn = null;

					//performance timer
					var top = McMasterCom.Nav.GetTopFrame();
					trkEvnt = new top.PerfTracker.Evnt(top.PerfTracker.EvntNms.CntntLdrAjaxSuccess, top.PerfTracker.PgCntxtNms.DynCntnt);

					McMaster.LoadMgr.LoadAssocWebPartFiles(webPartObj);
				},
				abort : function(){
					var reportUrl = 'Action=Aborted&url=' + escape(url);
					Cmn.TrkAct(reportUrl, 'ContentWebPart');

					// TODO: This code is not needed because failure callback is always called for abort.
					// Clear out previous connection and loading status
					ContentWebPartLoader.mPrevCnxn = null;

					//Abort the snapshot
					ContentHistMgr.Abort_Snapshot(ContentHistMgr.TYP.CONTENT_LOAD);

				},
				failure: function(failureObj, reqArgs) {
					if (mAbortInd) {
						//set indicator to false and continue
						mAbortInd = false;
					} else {
						// Clear out previous connection and loading status
						ContentWebPartLoader.mPrevCnxn = null;

						//Abort the snapshot
                        ContentHistMgr.Abort_Snapshot(ContentHistMgr.TYP.CONTENT_LOAD);

						if (failureObj.authErr === true) {
							// this failure was due to an authentication error
							// it is NOT a web part-related error, and therefore
							// we should not publish that message.
						} else {
						// Publish a Web Part Fatal Error Occurred message
						var msg = new McMaster.MsgMgrMsgs.WebPartFatalErrOccurred(MSG_HDR);
						McMaster.MsgMgr.PubMsg(msg);
						}
					}
				},
				cnxnParm: { respTyp: McMaster.CnxnMgr.WEB_PART_RESP_TYP_TXT },
            sendTouch: true,
            timeout: McMaster.Globals.CONTENT_LOADER_TIMEOUT_MS_CNT
			}

			switch(true) {
				case (mFetchAheadCnxnDict.ContainsKy(url)):

					var reqMetaDat = mFetchAheadCnxnDict.Itm(url);
					if (reqMetaDat.Status === true) {
						// Retrieve content from the HTTPHandler
						mPrevCnxn = McMaster.CnxnMgr.PerformAjaxCnxn(url, cnxnObj);

						// track complete request
						trkFetchAhead(srchRsltId, FetchAhead.CACHE_STATES.HIT_COMPLETE, url, reqMetaDat);
					} else {
						mPrevCnxn = McMaster.CnxnMgr.ModifyCnxn(req, cnxnObj);

						// The value in the dictionary is updated to the boolean true.
						// Changing the cache entry value ensures that the request won't
						// be cancelled in cnclInFlightFetchAheadRequests().
						// This is a little weird, but oh well. Might be worth changing in the future.
						mFetchAheadCnxnDict.Itm(url).Status = true;

						// track in-flight request
						trkFetchAhead(srchRsltId, FetchAhead.CACHE_STATES.HIT_INFLIGHT, url, reqMetaDat);
					}

					break;

				default:
					// Retrieve content from the HTTPHandler
					mPrevCnxn = McMaster.CnxnMgr.PerformAjaxCnxn(url, cnxnObj);

					// track cache miss - don't do this anymore [t2aes 1/30/13]
					//trkFetchAhead(srchRsltId, FetchAhead.CACHE_STATES.MISS, url);
					break;
			}

			// Cancel any in-flight Fetch Ahead requests so they
			// don't eat up domain connections to www.
			cnclInFlightFetchAheadRequests();

            //performance timer
			var top = McMasterCom.Nav.GetTopFrame();
            trkEvnt = new top.PerfTracker.Evnt(top.PerfTracker.EvntNms.CntntLdrAjaxCnxnEnd, top.PerfTracker.PgCntxtNms.DynCntnt);
        };

        // -------------------------------------------------------------
        // Summary: Publishes a Contact Us Selected message.
        // -------------------------------------------------------------
        this.Cntct_Us = function() {
            var msg = new McMaster.MsgMgrMsgs.CntctUsSlctd(MSG_HDR);
            McMaster.MsgMgr.PubMsg(msg);
        };

        // -------------------------------------------------------------
        // Summary: Creates a string listing the presentations that are expanded delimited by commas
        // -------------------------------------------------------------
        this.GetExpandedPrsnttnQSVal = function() {
            var expandedPrsnttns = "";

            var prsnttnStat = McMaster.SesnMgr.GetStVal(McMaster.SesnMgr.StValDefs.DynamicPagePrsnttnStats.KyTxt());
            for (var i in prsnttnStat) {
                if (prsnttnStat.hasOwnProperty(i)) {
                    if (prsnttnStat[i] == 'FULL') {
                        if (expandedPrsnttns.length > 0) {
                            expandedPrsnttns += "," + String(i);
                        } else {
                            expandedPrsnttns = String(i);
                        }
                    }
                }
            }

            return expandedPrsnttns;
        };

        // -------------------------------------------------------------
        // Returns the search result ID.
        // Remarks: The SlctdSrchRsltId might be null, i.e. if the customer
        //             has selected a part number causing the search result
        //            web part to unload.  Accordingly, we check both that
        //            session value and the DynamicPageSrchRsltId, which is
        //            initialized by the DynamicContentCoordinator.
        // -------------------------------------------------------------
        var getSrchId = function(msgObj) {
			return srchRsltId = McMaster.SesnMgr.GetStVal(McMaster.SesnMgr.StValDefs.SlctdSrchRsltId.KyTxt()) ||
                                McMaster.SesnMgr.GetStVal(McMaster.SesnMgr.StValDefs.DynamicPageSrchRsltId.KyTxt());
		};

        // -------------------------------------------------------------
        // Returns the URL to make an Ajax request to get new spec
		// search content
		// -------------------------------------------------------------
		var getURL = function(msgObj){

			var rtnQS = CONTENT_WEB_PART_HTTP_HANDLER_URL;
			var prsnttnUsrInp, grpUsrInp, cntnrWdth, imgUsrInp, specUsrInp;

			//Build the URL differently if we're pre-fetching
			//content.
			if (msgObj) {
				// fetch ahead. get data from message
				var payload = msgObj.MsgPayload();
				cntnrWdth = getFetchAheadCntnrWidth(cntnrWdth);
				prsnttnUsrInp = payload.PrsnttnUsrInp;
				imgUsrInp = payload.ImgUsrInp;
				specUsrInp = payload.SpecSrchInp;
			} else {
				// non-fetch ahead. get data from SesnMgr and current state of the site
				cntnrWdth = McMaster.SesnMgr.GetStVal(McMaster.SesnMgr.StValDefs.ContentCntnrWdth.KyTxt());
				prsnttnUsrInp = PrsnttnUsrInp.Get();
				grpUsrInp = GrpUsrInp.Get();
				imgUsrInp = ImgUsrInp.Get();
				specUsrInp = SpecSrchInp.Get();

			}
			if (ContentWebPartLoader.GetExpandedPrsnttnQSVal()) rtnQS = Cmn.AddQSNmVal(rtnQS, EXPANDED_PRSNTTNS_QS_NM, ContentWebPartLoader.GetExpandedPrsnttnQSVal());

			rtnQS = Cmn.AddQSNmVal(rtnQS, CNTNR_ID_TXT, CONTENT_WEB_PART_CNTNR_DIV_NM);
			rtnQS = Cmn.AddQSNmVal(rtnQS, SRCH_RSLT_ID_TXT, getSrchId());
			rtnQS = Cmn.AddQSNmVal(rtnQS, CNTNR_WDTH_QS_NM, cntnrWdth);
            rtnQS = Cmn.AddQSNmVal(rtnQS, SRCH_RSLT_TXT, encodeURIComponent(McMaster.SesnMgr.GetStVal(McMaster.SesnMgr.StValDefs.SlctdSrchRsltTxt.KyTxt())));

			rtnQS = specUsrInp.AddSpecUsrInpQS(rtnQS);
			rtnQS = prsnttnUsrInp.AddPrsnttnUsrInpQS(rtnQS);
			rtnQS = grpUsrInp.AddGrpUsrInpQS(rtnQS);
			rtnQS = imgUsrInp.AddImgUsrInpQS(rtnQS);

			var viewPortHgt = McMaster.SesnMgr.GetStVal(McMaster.SesnMgr.StValDefs.MainContentCntnrHeight.KyTxt());
			rtnQS = Cmn.AddQSNmVal(rtnQS, "viewporthgt", viewPortHgt);

			//Add a query string parm so Akamai will return the proper cached IE6 specific markup (no sprites)
			if (Cmn.IsSpriteEnabled()) {
				//do nothing
			} else {
			    //tell the server not to generate the sprite
			    //this query string argument is used by inlineImg.vb
				rtnQS = Cmn.AddQSNmVal(rtnQS, "spriteind", encodeURIComponent(false));
			}

			return rtnQS;
		};

		//----------------------------------------------
		// Summary: Receives fetch ahead data, creates
		//			a url, and makes an AJAX request
		//			for content.
		//----------------------------------------------
		this.HndlFetchAheadDat = function(msgObj){

			var payload = msgObj.MsgPayload(),
			prsnttnUsrInp = payload.PrsnttnUsrInp,
			selectionCnt = getSelectionCnt(msgObj);

			if (selectionCnt > 5) {
				// do nothing
				// don't fetch Content for the long tail
			} else {

    			// If the first request of a group, track the fact that we've chosen to make a Fetch Ahead prediction.
				if (!(mFetchAheadLastHndldGrpId) || mFetchAheadLastHndldGrpId !== payload.FetchAheadGrpId) {
					FetchAhead.TrkPredictions(FetchAhead.PREDICT_STATES.PREDICT, payload.CurrWebPartIdTxt, 'ContentWebPart');
					mFetchAheadLastHndldGrpId = payload.FetchAheadGrpId; // update "last handled" group ID
				}

				var cnxnUrl = getURL(msgObj);

				switch(true){
					case(mFetchAheadCnxnDict.ContainsKy(cnxnUrl)):
						//already fetched this URL
						break;

					default:

					// Make request.
					var cnxnObj = {
							success: function(webPartObj, reqArgs){
								//Update the dictionary to keep track
								//of retrieval successes.
								if(mFetchAheadCnxnDict.ContainsKy(cnxnUrl)) mFetchAheadCnxnDict.Itm(cnxnUrl).Status = true;
                            },
							failure: function(){
								// remove entry
								mFetchAheadCnxnDict.Rem(cnxnUrl);
							},
							abort: function(){
								// remove entry
								mFetchAheadCnxnDict.Rem(cnxnUrl);
							},
							cnxnParm: { respTyp: McMaster.CnxnMgr.WEB_PART_RESP_TYP_TXT },
							sendTouch: true
						};
					var req = McMaster.CnxnMgr.PerformAjaxCnxn(cnxnUrl, cnxnObj);

                    // get the metadata for tracking
                    var reqMetaDat = getFetchAheadMetaDat(req, payload);
                    // Track each Fetch Ahead request.
                    trkFetchAhead(getSrchId(msgObj), FetchAhead.CACHE_STATES.REQUEST, cnxnUrl, reqMetaDat);

					mFetchAheadCnxnDict.Add(cnxnUrl, reqMetaDat);

					break;
				}
			}

		};

		// -------------------------------------------------------------
		// Summary: Cancels any "live" in-flight Fetch Ahead requests.
		// -------------------------------------------------------------
		var cnclInFlightFetchAheadRequests = function() {
			var urls = mFetchAheadCnxnDict.Keys(),
			len = urls.length;

			// Cancel any "live" in-flight requests, unless they match
			// the passed-in request.
			for (var i=0; i<len; i++) {
				var url = urls[i];
				var reqMetaDat = mFetchAheadCnxnDict.Itm(url);

				// If the request is valid and not completed (i.e. boolean true value)
				// cancel it and remove it from the dictionary.
				if (reqMetaDat && reqMetaDat.Status !== true) {
					// Abort the in-flight connection
					McMaster.CnxnMgr.AbortAjaxCnxn(reqMetaDat.Status);

					// Remove aborted connected from cache so that it can be
					// fetched again, if necessary.
					mFetchAheadCnxnDict.Rem(url);
				}
			}
		};

		//----------------------------------------------------------
		// Summary: Tracks successes or failures of Fetch Ahead.
		// Inputs:
		//		srchRsltId - search result ID of the content fetched ahead
		//		cacheStEnum - hit/miss/in-flight enumeration (FetchAhead.CACHE_STATES)
		//		cnxnUrl - the URL of the most recent request for Content Web Part
		//----------------------------------------------------------
		var trkFetchAhead = function(srchRsltId, cacheStEnum, cnxnUrl, reqMetaDat) {
			// track in webreports
			var trkObj = {};
			trkObj.FetchAheadCacheSt = cacheStEnum;
			trkObj.SrchRsltId = srchRsltId;
			trkObj.SpecSrchAttrInps = Cmn.GetQSVal("SpecSrchAttrInps", cnxnUrl);
			trkObj.PrsnttnUsrInps = Cmn.GetQSVal("PrsnttnUsrInps", cnxnUrl);

            if(mFetchAheadLastHndldGrpId) trkObj.FetchAheadGrpId = mFetchAheadLastHndldGrpId;

            if (reqMetaDat) {
                if(reqMetaDat.PrsnttnRank) trkObj.PrsnttnRankSeq = reqMetaDat.PrsnttnRank;
                if(reqMetaDat.VstrKnown) trkObj.VstrKnownInd = reqMetaDat.VstrKnown;
            }
			Cmn.TrkAct(trkObj, CLS_NM);
		};

		//-------------------------------------------------------
		// Summary: Gets the container width for the content behind
		//			the presentation we're pre-fetching.
		//-------------------------------------------------------
		var getFetchAheadCntnrWidth = function(cntnrWdth){
            var secondaryCntrCollapsedInd = Cmn.HasCls(Cmn.GetObj(SECONDARY_CONTENT_CNTNR_NM),
                                                         SECONDARY_CONTENT_CNTNR_COLLAPSED_NM);
            var specSrchInd = Cmn.GetObj(SPECSRCH_CLS_NM) ? true : false;
			var viewportWidth = Cmn.GetViewportWidth();

            cntnrWdth = viewportWidth - CONTENT_CNTNR_PADDING - CONTENT_CNTNR_ADDITIONAL;
            if (specSrchInd && secondaryCntrCollapsedInd) {
                cntnrWdth = cntnrWdth - SPEC_SRCH_CNTNR_WIDTH;
            } else if(specSrchInd && secondaryCntrCollapsedInd === false) {
                cntnrWdth = cntnrWdth - SPEC_SRCH_CNTNR_WIDTH - SRCH_RSLTS_CNTNR_WIDTH;
            } else if(specSrchInd === false) {
                cntnrWdth = cntnrWdth - SRCH_RSLTS_CNTNR_WIDTH;
            }

            return cntnrWdth;
		};

		//-------------------------------------------------------
		// Summary: Returns the total number of selections made
		// 			across all types of inputs (image, spec,
		//			presentation, etc.)
		//-------------------------------------------------------
		var getSelectionCnt = function(msgObj) {
			var cnt = 0,
			payload = msgObj.MsgPayload();

			cnt += payload.PrsnttnUsrInp.GetSelectionCnt();
			cnt += payload.ImgUsrInp.GetSelectionCnt();
			cnt += payload.SpecSrchInp.GetSelectionCnt();

			return cnt;
		};

        //-------------------------------------------------------
        // Summary: Gets the metadata associated with FetchAhead
        //          requests, used for webReports tracking
        //-------------------------------------------------------
        var getFetchAheadMetaDat = function(req, msgPayload) {

            var fetchAheadMetaDat = { Status: req
                                    , VstrKnown: msgPayload.VstrKnownInd != null ? msgPayload.VstrKnownInd : ""
                                    , PrsnttnRank: msgPayload.PrsnttnRankSeq > 0 ? msgPayload.PrsnttnRankSeq : "default"
                                    };

            return fetchAheadMetaDat;
        }

    };
}

if(this.DisplVstrBMsLoader){}else{DisplVstrBMsLoader=new function(){var b="/DisplVstrBms/DisplVstrBms.aspx";var a=function(c){DisplVstrBMsLoader.Load(c);};McMaster.MsgMgr.AddSubscriber(McMaster.MsgMgrMsgs.BMLoginLoaded,a);this.Load=function(c){McMasterCom.LoadMgr.LoadResultsIFrame(b);};};}

this.DynamicContentCoordinator||(this.DynamicContentCoordinator=new function(){var d=new McMaster.MsgMgr.Hdr(McMaster.MsgMgr.CntxtNms.DYNAMIC_CONTENT_COORDINATOR);mSlctdSrchRsltTxt="";var b=function(a){a=Cmn.GetViewportWidth();var e=!1,c=Cmn.GetObj("ShellLayout_SecondaryContent_Cntnr");Cmn.HasCls(c,"ShellLayout_SecondaryContent_Cntnr_SecondaryContent_Collapsed")&&(e=!0);var c=215,b=190;McMaster.SesnMgr.GetStVal(McMaster.SesnMgr.StValDefs.SpecsSrchSuppressInd.KyTxt())&&(c=0);e&&(b=0);a=a-25-15-c-b;
McMaster.SesnMgr.SetStVal(McMaster.SesnMgr.StValDefs.ContentCntnrWdth.KyTxt(),a);a=new McMaster.MsgMgrMsgs.DynamicPageSlctd(d);McMaster.MsgMgr.PubMsg(a)};McMaster.MsgMgr.AddSubscriber(McMaster.MsgMgrMsgs.DynamicContentSlctd,function(a){a=McMasterCom.Nav.GetTopFrame();var b=new a.PerfTracker.EvntPayload,c=McMaster.SesnMgr.GetStVal(McMaster.SesnMgr.StValDefs.SlctdSrchRsltId.KyTxt()),f=McMaster.SesnMgr.GetStVal(McMaster.SesnMgr.StValDefs.SlctdSrchRsltTxt.KyTxt());ContentHistMgr.Reset_Snapshot();a=McMasterCom.Nav.GetTopFrame();
b.Add("Action","DCPerf");b.Add("slctdSrchRsltId",c);b.Add("slctdSrchRsltTxt",f);new a.PerfTracker.Evnt(a.PerfTracker.EvntNms.DynCntntSlctd,a.PerfTracker.PgCntxtNms.DynCntnt,b);McMaster.SesnMgr.GetStVal(McMaster.SesnMgr.StValDefs.SlctdSrchRsltId.KyTxt());mSlctdSrchRsltTxt=McMaster.SesnMgr.GetStVal(McMaster.SesnMgr.StValDefs.SlctdSrchRsltTxt.KyTxt());a=McMasterCom.Nav.GetTopFrame();new a.PerfTracker.Evnt(a.PerfTracker.EvntNms.DynCoordBgn,a.PerfTracker.PgCntxtNms.DynCntnt);McMaster.SesnMgr.RemStVal(McMaster.SesnMgr.StValDefs.DynamicPagePrsnttnStats.KyTxt());
a=new McMaster.MsgMgrMsgs.ProdPageSlctd(d);McMaster.MsgMgr.PubMsg(a)});McMaster.MsgMgr.AddSubscriber(McMaster.MsgMgrMsgs.SpecSlctd,b);McMaster.MsgMgr.AddSubscriber(McMaster.MsgMgrMsgs.ImgClicked,b);McMaster.MsgMgr.AddSubscriber(McMaster.MsgMgrMsgs.AbbrPrsnttnClicked,b);McMaster.MsgMgr.AddSubscriber(McMaster.MsgMgrMsgs.PrsnttnNmClicked,b)});


if(this.PrsnttnWebPartLoader){}else{PrsnttnWebPartLoader=new function(){var h=new McMaster.MsgMgr.Hdr(McMaster.MsgMgr.CntxtNms.PRSNTTN),l="/WebParts/Content/PrsnttnWebPart/PrsnttnWebPart.aspx",n="SelectionSeqNbr",i="scrnwdth",k="srchid",j="prsnttnid",e="specinfoattrid",a="displtyp",d="expandedprsnttns",g="listind",c="cpyind",b="prsnttncntr",o="colcnt",m="viewporthgt";MIN_CNTNR_WDTH=800,mCntnrWidth=false,mPrsnttnId=false,mAttrId=0,mSpecUsrInps=false,mSrchRsltId=false,mPrevCnxn=false,mSesnSt=false;this.Load=function(r,q,p,t,s){mPrsnttnId=r;mSpecUsrInps=t||SpecSrchInp.Get();mCntnrWidth=s||f();McMaster.SesnMgr.SetStVal(McMaster.SesnMgr.StValDefs.ContentCntnrWdth.KyTxt(),mCntnrWidth);mSrchRsltId=McMaster.SesnMgr.GetStVal(McMaster.SesnMgr.StValDefs.DynamicPageSrchRsltId.KyTxt());if(mSrchRsltId){this.CrteAjaxCnxn(q,p);}};this.LoadSpecInfo=function(r,q,p,u,t,s){mAttrId=s;this.Load(r,q,p,u,t);};this.LoadFrmSesn=function(){};this.CrteAjaxCnxn=function(s,p){var r=0;var u="";if(s==="full"){u=mPrsnttnId;r=McMaster.SesnMgr.GetStVal(McMaster.SesnMgr.StValDefs.MainContentCntnrHeight.KyTxt());}var q="";if(DynamicPageWebPart.PrsnttnSeqDictionary&&DynamicPageWebPart.PrsnttnSeqDictionary[mPrsnttnId]){q=DynamicPageWebPart.PrsnttnSeqDictionary[mPrsnttnId];}var t=l+"?"+k+"="+mSrchRsltId+"&"+j+"="+mPrsnttnId+"&"+i+"="+mCntnrWidth+"&"+a+"="+s+"&"+g+"="+DynamicPageWebPart.AbbrPrsnttnListInd+"&"+c+"="+DynamicPageWebPart.AbbrPrsnttnCpyInd+"&"+b+"="+q+"&"+o+"="+DynamicPageWebPart.ColCnt+"&"+d+"="+u+"&"+e+"="+mAttrId;t=mSpecUsrInps.AddSpecUsrInpQS(t);if(s==="full"){t=Cmn.AddQSNmVal(t,m,r);}var v={success:function(w,x){if(w){if(typeof p==="function"){w.CallbackFunc=p;}McMaster.LoadMgr.LoadAssocWebPartFiles(w);}else{}mAttrId=0;},abort:function(){var w="Action=timeoutcontent&url="+escape(t);Cmn.TrkAct(w,"PrsnttnWebPart");},cnxnParm:{respTyp:McMaster.CnxnMgr.WEB_PART_RESP_TYP_TXT},sendTouch:true};mPrevCnxn=McMaster.CnxnMgr.PerformAjaxCnxn(t,v);};var f=function(){return Cmn.GetWidth(Cmn.GetObj("ProdPageContent"))-parseInt(Cmn.GetStyle("ProdPageContent","padding-left"))-parseInt(Cmn.GetStyle("ProdPageContent","padding-right"));};};}

this.FetchAheadLoader||(FetchAheadLoader=new function(){var d=!0;this.HndlWebPart=function(a){if(McMaster.SesnMgr.GetStVal(McMaster.SesnMgr.StValDefs.FetchAheadInd.KyTxt())&&a){var b;b=!1;0===Cmn.GetElementsByClsNm("AbbrPrsnttn").length&&(b=!0);switch(!0){case a.FetchAheadDatObj&&"IntermediatePageWebPart"==a.ClsNm:FetchAhead.HndlLandingPgFetchAhead(a.FetchAheadDatObj);break;case d:if(a.PrsnttnIdList&&!1===b)0<a.PrsnttnIdList.length&&e(a);else if(a.LoadChldWebPartsInd){b=a.ChldWebParts.length;a=a.ChldWebParts;
for(var c=0;c<b;c++)this.HndlWebPart(a[c])}}}};var e=function(a){a=f(a);McMaster.CnxnMgr.PerformAjaxCnxn(a,{success:function(a){for(var c in a)a[c]?FetchAhead.HndlFetchAhead(a):"false"==c.toLowerCase().Trim()?d=!1:"true"==c.toLowerCase().Trim()&&FetchAhead.TrkPredictions(FetchAhead.PREDICT_STATES.NO_PREDICT,"ContentWebPart")},cnxnParm:{respTyp:McMaster.CnxnMgr.WEB_PART_RESP_TYP_TXT}})},f=function(a){var b="/WebParts/Relevance/FetchAhead/FetchAhead.aspx",c=a.PrsnttnIdList.toString(),d;d=McMaster.SesnMgr.GetStVal(McMaster.SesnMgr.StValDefs.SlctdSrchRsltId.KyTxt())||
McMaster.SesnMgr.GetStVal(McMaster.SesnMgr.StValDefs.DynamicPageSrchRsltId.KyTxt());b=Cmn.AddQSNmVal(b,"prsnttnids",c);b=Cmn.AddQSNmVal(b,"srchrsltid",d);return b=Cmn.AddQSNmVal(b,"webpartid",a.IDTxt)}});


if(this.FndAgainPlcdOrds){}else{FndAgainPlcdOrds=new function(){var b="/HTTPHandlers/FndAgainPlcdOrds.aspx";var a="ordid";var c=function(){var e=0,d=0,k,g;try{var j=McMaster.SesnMgr.GetStVal(McMaster.SesnMgr.StValDefs.CurrOrdId.KyTxt());var h={success:function(n){d=(new Date()).getTime();k=(d-e);g="FndAgainUpdtStatus=success&MSecs="+k.toFixed(0);Cmn.TrkAct(g,"FndAgainUpdt");var m=new McMaster.MsgMgr.Hdr(McMaster.MsgMgr.CntxtNms.FND_AGAIN);var l=new McMaster.MsgMgrMsgs.FndAgainPlcdOrdsCmplt(m);McMaster.MsgMgr.PubMsg(l);},failure:function(l){d=(new Date()).getTime();k=(d-e);g="FndAgainUpdtStatus=failure&MSecs="+k.toFixed(0);Cmn.TrkAct(g,"FndAgainUpdt");},cnxnParm:{respTyp:""}};var f=b+"?"+a+"="+j;e=(new Date()).getTime();McMaster.CnxnMgr.PerformAjaxCnxn(f,h);}catch(i){d=(new Date()).getTime();k=(d-e);g="FndAgainUpdtStatus=failure&MSecs="+k.toFixed(0);Cmn.TrkAct(g,"FndAgainUpdt");}};McMaster.MsgMgr.AddSubscriber(McMaster.MsgMgrMsgs.OrdPlcd,c,McMaster.MsgMgr.PRIORITY.LOW);McMaster.MsgMgr.AddSubscriber(McMaster.MsgMgrMsgs.OrdForwarded,c,McMaster.MsgMgr.PRIORITY.LOW);};}

(function(){		

if (this.GrpUsrInp){
		//do nothing, already exists
} else {
		//*******************************************************************************
		//GrpUsrInps is an array of grp id's that were selected by the user
		//
		//Each entry in the array is a grp id.
		//
		//Format of GrpUsrInp =>
		//           {"GrpEID" : "123123,123232,1151515"
		//				"FamilyID": "2304938432"}
		//
		//This array is stringified and added to a query string that will be passed to the 
		//server.
		//*******************************************************************************


		//***************************************************************************
		// PRIVATE constants and declarations
		//***************************************************************************
		
		// ----------------------------------------------------------------------
		// Summary: Shorthand defs for getting and setting StValDefs.
		// ----------------------------------------------------------------------
		var StValDefs = McMaster.SesnMgr.StValDefs,
			  GetStVal = McMaster.SesnMgr.GetStVal,
			  SetStVal= McMaster.SesnMgr.SetStVal;
		
		//Add subscription to spec search clear all link
		McMaster.MsgMgr.AddSubscriber(McMaster.MsgMgrMsgs.ChooseSpecsClearAllClick, function(msgObj) {
										GrpUsrInp.DealWithClearAll();
									  }, McMaster.MsgMgr.PRIORITY.HIGH);
		
		//***********************************************************************
		// PUBLIC FUNCTIONS (accessible to all objects)
		//***********************************************************************

		// -----------------------------------------------------------
		// Constructor
		// -----------------------------------------------------------
		GrpUsrInp = function() {
			//collection of user inputs 
			this.mGrpUsrInps = [];			
		};

		// -----------------------------------------------------------
		// Summary: Factory method. Call this to create a fully
		//					instantiated UsrInps object.
		// Input:   usrInps: An object that contains 
		//					group user input metadata
		// -----------------------------------------------------------
		GrpUsrInp.Crte = function(usrInps){
			var usrInpsObj = new GrpUsrInp();
			if (usrInps){
				usrInpsObj.mGrpUsrInps = usrInps;
			}
			return usrInpsObj;
		};
		
		// -----------------------------------------------------------
		// Summary:  Returns the latest group user inputs.
		//					 Will be null if not created yet.
		// -----------------------------------------------------------
		GrpUsrInp.Get = function(){
			var usrInps = GetStVal(StValDefs.GrpUsrInps.KyTxt()) || null;
			return GrpUsrInp.Crte(usrInps);
		};
				
		// -----------------------------------------------------------
		// Summary:  Reinitializes the group user inputs session data.
		// -----------------------------------------------------------
		GrpUsrInp.Unload = function() {
			// This is a little weird -- to call a Getter from a shared method,
			// then update session.
			var currInp = GrpUsrInp.Get();
			currInp.mGrpUsrInps = [];
			currInp.UpdateSession();
		};
		
		// -----------------------------------------------------------
		// Summary: Remove all but the "snapshot" group user input.
		// -----------------------------------------------------------
		GrpUsrInp.DealWithClearAll = function() {

			//this is stored separated from normal group user inputs. This snapshot is for spec search only.
			var snapshotGrpUsrInp = McMaster.SesnMgr.GetStVal(McMaster.SesnMgr.StValDefs.GrpUsrInpsWhenSpecSrchLoads.KyTxt());
			var newGrpUsrInp = new GrpUsrInp();
			if (snapshotGrpUsrInp) {
				newGrpUsrInp.mGrpUsrInps = snapshotGrpUsrInp;
			}
			newGrpUsrInp.UpdateSession();
		};
		
		//***************************************************************************
		// "PROTECTED" FUNCTIONS (accessible to all objects of type GrpUsrInp)
		//***************************************************************************
				
		// ----------------------------------------------------------------------
		// Summary: Checks if group user input already exists
		// ----------------------------------------------------------------------
		GrpUsrInp.prototype.UsrInpExists = function(grpEID) {
			var grpUsrInps = this.mGrpUsrInps;
			var existInd = false;
			
			for (var idx=0;idx < grpUsrInps.length;idx++) {
				if (grpUsrInps[idx]["GrpEID"] === grpEID) {
					existInd = true;	
					break;
				}; 
			};
			return existInd;
		};
		
		// ----------------------------------------------------------------------
		// Summary: Adds presetntation user input information.
		// ----------------------------------------------------------------------
		GrpUsrInp.prototype.AddUsrInp = function(grpEID, familyId) {
			var len = this.mGrpUsrInps.length,
			addInd = true;
			
			for (var i=0; i<len; i++) {
				if (this.mGrpUsrInps[i]["GrpEID"] === grpEID) {
					addInd = false;
					break;
				}
			}
		
			if (addInd) {
				//first create a new presentation object	
				var prsnttnInp = {"GrpEID":grpEID, "FamilyId": familyId};
				//add it to the presentation user input object array
				this.mGrpUsrInps.push(prsnttnInp);	
			}		
			
			return this; 
		};

		// -----------------------------------------------------------
		// Summary: Removes a presentation entry 
		// -----------------------------------------------------------
		GrpUsrInp.prototype.RemUsrInp = function(grpEID) {
			var grpUsrInps = this.mGrpUsrInps;
			for (var idx=0;idx < grpUsrInps.length;idx++) {
					if (grpUsrInps[idx]["GrpEID"] === grpEID) {
							grpUsrInps.splice(idx,1);  
							break;
					}; 
			};	
			return this; 
		};
		
		// ---------------------------------------------------------------
		// Summary: Adds GrpUsrInp to query string
		// ---------------------------------------------------------------
		GrpUsrInp.prototype.AddGrpUsrInpQS = function(url) {
			if (url && !Cmn.IsEmpty(this.GrpUsrInps())) {
					url = Cmn.AddQSNmVal(url, "GrpUsrInps", 
									YAHOO.lang.JSON.stringify(this.GrpUsrInps()));	
			};
			return url;
		};

		// ---------------------------------------------------------------
		// Summary: Clones this instance and returns the clone.
		// Remarks: Right now, the Get() method already returns a new
		//          object, so for now, we'll just call that. In the future,
		//          we might have to do "real" cloning.
		// ---------------------------------------------------------------
		// GrpUsrInp.prototype.Clone = function() {
			// return GrpUsrInp.Get();
		// };		
		
        // --------------------------------------------------------------
        // Summary: Returns number of selections that have been made.
        // --------------------------------------------------------------		
        GrpUsrInp.prototype.GetSelectionCnt = function() {
			return Cmn.Utilities.Keys(this.mGrpUsrInps).length;
        };			
		
		// ---------------------------------------------------------------
		// Summary: Updates session
		// ---------------------------------------------------------------
		GrpUsrInp.prototype.UpdateSession = function() {
			McMaster.SesnMgr.SetStVal(StValDefs.GrpUsrInps.KyTxt(), this.mGrpUsrInps);
			return this;
		};
						
		
		//***************************************************************************
		//"PROTECTED" PROPERTIES (accessible to all objects of type GrpUsrInp)
		//***************************************************************************
		
		// --------------------------------------------------------
		// Property: GrpUsrInps
		// Summary:  An array of presentation ids 
		// --------------------------------------------------------
		GrpUsrInp.prototype.GrpUsrInps = function() {
			return this.mGrpUsrInps;
		};
		
};		

})();


this.GuidedNavRtrvr||(GuidedNavRtrvr=new function(){var k=0,q=0,c=null,t=null,r,u=!0,f=function(){var a=2E4,e=McMaster.SesnMgr.GetStVal(McMaster.SesnMgr.StValDefs.FndAgainSlsWrkStObj.KyTxt()),d=!1,n,s,g;c||(c="prtnbr");if(0<e.length||"object"==typeof e)d=!0;if(0<k||Cmn.IsIE6()||Cmn.IsIE7())a=15E3;if(!((Cmn.IsIE6()||Cmn.IsIE7())&&0<k)){!d||"NONE"==e?t="NONE;":(0<e.length&&"prtnbr"==c&&(t=v(e)),a=6E4);e="procRtrvAct="+c+"&partNbrs="+t;a={httpMthd:"POST",postDat:e,success:function(a){switch(c){case "prtnbr":u=
1<a.length?!0:!1;q=0;p(a);c="locprtnbr";setTimeout(function(){f()},0);return;case "locprtnbr":p(a);c=u?"srchTerm":"prsnttnId";setTimeout(function(){f()},0);return;case "srchTerm":p(a);c="prsnttnId";setTimeout(function(){f()},0);return;case "prsnttnId":p(a);c=u?"srchIdPartNbrs":"specIdValPartNbrs";setTimeout(function(){f()},0);return;case "srchIdPartNbrs":p(a);c="specIdValPartNbrs";setTimeout(function(){f()},0);return;case "specIdValPartNbrs":p(a),c="prtnbr"}n=(new Date).getTime();s=n-r;g="GuidedNavRetrievalStatus=success&MSecs="+
s.toFixed(0)+"&NbrOfAttempts="+(k+1)+"&NbrOfOrderedPrtNbrs="+q;Cmn.TrkAct(g,"GuidedNav")},failure:function(a){k+=1;1==k?(c="prtnbr",setTimeout(function(){f()},5E3)):(n=(new Date).getTime(),s=n-r,g="GuidedNavRetrievalStatus=failure&MSecs="+s.toFixed(0)+"&NbrOfAttempts="+k+"&NbrOfOrderedPrtNbrs="+q,Cmn.TrkAct(g,"GuidedNav"))},cnxnParm:{respTyp:"JSON"},timeout:a,maxRetry:0};if("prtnbr"==c||!r)r=(new Date).getTime();McMaster.CnxnMgr.PerformAjaxCnxn("/HTTPHandlers/GuidedNavRtrvr.aspx",a)}},v=function(a){var e=
{},d=[],n;a=a.replace(/%/g,'"');var d=a.replace(/\\/g,"-"),d=Cmn.ParseJSON(d),c=d.length;for(a=0;a<c;a++){var g={},l=d[a].split(";"),f=l[0],l=l[1].split("|"),k=l[0],m=l[2];g.lastOrdTs=l[1];g.PO=k;g.qty=m;e[f]=g}a=0;var d=[],b;for(b in e)e.hasOwnProperty(b)&&(0!==a&&d.push(n),d.push(b),d.push(";"),a=1);n=d.join("");0==n.length?n="NONE;":McMaster.SesnMgr.SetStVal(McMaster.SesnMgr.StValDefs.FndAgainSlsWrkStObj.KyTxt(),e);return n},p=function(a){var e={},d={},c={},f={},g={},l={},k=a.length;if(0==k)q=
0,McMaster.SesnMgr.SetStVal(McMaster.SesnMgr.StValDefs.FndAgainPrtNbrsToHighlight.KyTxt(),d),McMaster.SesnMgr.SetStVal(McMaster.SesnMgr.StValDefs.FndAgainLocPrtNbrsToHighlight.KyTxt(),c),McMaster.SesnMgr.SetStVal(McMaster.SesnMgr.StValDefs.FndAgainPrsnttnIdsToHighlight.KyTxt(),e),McMaster.SesnMgr.SetStVal(McMaster.SesnMgr.StValDefs.FndAgainSearchTermsToHighlight.KyTxt(),l),McMaster.SesnMgr.SetStVal(McMaster.SesnMgr.StValDefs.FndAgainSearchIdsToParts.KyTxt(),g),McMaster.SesnMgr.SetStVal(McMaster.SesnMgr.StValDefs.FndAgainSpecIdValsToParts.KyTxt(),
f);else{for(var p=a[0],m=1;m<k;m++)switch(p){case "prtnbr":var b=a[m].split("%"),h=b[0],b=b[1];d[h]||(d[h]=b,q++);break;case "locprtnbr":b=a[m].split("%");h=b[0];b=b[1];c[h]||(c[h]=b,q++);break;case "prsnttnId":b=a[m].split("%");h=b[0];b=b[1];e[h]||(e[h]=b);break;case "srchTerm":l[a[m]]||(l[a[m]]="0");break;case "srchIdPartNbrs":b=a[m].split("%");h=b[0];b=b[1];g[h]||(g[h]=b);break;case "specIdValPartNbrs":b=a[m].split("%"),h=b[0],b=b[1],f[h]||(f[h]=b)}switch(p){case "prtnbr":McMaster.SesnMgr.SetStVal(McMaster.SesnMgr.StValDefs.FndAgainPrtNbrsToHighlight.KyTxt(),
d);break;case "locprtnbr":McMaster.SesnMgr.SetStVal(McMaster.SesnMgr.StValDefs.FndAgainLocPrtNbrsToHighlight.KyTxt(),c);break;case "prsnttnId":McMaster.SesnMgr.SetStVal(McMaster.SesnMgr.StValDefs.FndAgainPrsnttnIdsToHighlight.KyTxt(),e);break;case "srchTerm":McMaster.SesnMgr.SetStVal(McMaster.SesnMgr.StValDefs.FndAgainSearchTermsToHighlight.KyTxt(),l);break;case "srchIdPartNbrs":McMaster.SesnMgr.SetStVal(McMaster.SesnMgr.StValDefs.FndAgainSearchIdsToParts.KyTxt(),g);break;case "specIdValPartNbrs":McMaster.SesnMgr.SetStVal(McMaster.SesnMgr.StValDefs.FndAgainSpecIdValsToParts.KyTxt(),
f)}}};McMaster.MsgMgr.AddSubscriber(McMaster.MsgMgrMsgs.ShellInitContentLoaded,f,McMaster.MsgMgr.PRIORITY.LOW);McMaster.MsgMgr.AddSubscriber(McMaster.MsgMgrMsgs.SgnInChged,f);McMaster.MsgMgr.AddSubscriber(McMaster.MsgMgrMsgs.LoginChged,f);McMaster.MsgMgr.AddSubscriber(McMaster.MsgMgrMsgs.FndAgainPlcdOrdsCmplt,f)});


if (this.HelpLoader) {
} else {
HelpLoader = new function() {
var LOAD_FUNC = function(msgObj) { HelpLoader.Load(msgObj); };
McMaster.MsgMgr.AddSubscriber(McMaster.MsgMgrMsgs.HelpSlctd, LOAD_FUNC);
this.Load = function (msgObj) {
var payload = msgObj.MsgPayload();
McMasterCom.Nav.LoadHelp(payload.HelpTopic);
}
}
}


if(this.HomePageNavWebPartLoader){}else{HomePageNavWebPartLoader=new function(){var c=new McMaster.MsgMgr.Hdr(McMaster.MsgMgr.CntxtNms.HOME_PAGE_NAV),f=false,e="/WebParts/HomePageNavWebPart/HomePageNavWebPartHTTPHandler.aspx",d=McMaster.SesnMgr.GetStVal(McMaster.SesnMgr.StValDefs.HomePageNavWebPartVerKy.KyTxt()),b=Cmn.AddQSNmVal(e,"cntnrIDtxt","SecondaryContent");b=Cmn.AddQSNmVal(b,"ver",d);this.LoadFrmSesn=function(){a();};var a=function(){if(f){}else{var g={success:function(h){McMaster.LoadMgr.LoadAssocWebPartFiles(h);},strt:function(){f=true;},cmpl:function(){f=false;},cnxnParm:{respTyp:McMaster.CnxnMgr.WEB_PART_RESP_TYP_TXT}};McMaster.CnxnMgr.PerformAjaxCnxn(b,g);}};McMaster.MsgMgr.AddSubscriber(McMaster.MsgMgrMsgs.HomeSlctd,function(g){McMaster.SesnMgr.SetStVal(McMaster.SesnMgr.StValDefs.HomePageSlctdCatgTxt.KyTxt(),"");McMaster.SesnMgr.SetStVal(McMaster.SesnMgr.StValDefs.HomePageSlctdCatgID.KyTxt(),null);McMaster.MsgMgr.PubMsg(new McMaster.MsgMgrMsgs.HomePageCatgSlctd(c));var i=Cmn.GetObj("ShellLayout_Cntnr"),h=window.innerWidth||document.documentElement.clientWidth;if(h<800){var j=new McMaster.MsgMgrMsgs.CollapseSecondaryContent(c);McMaster.MsgMgr.PubMsg(j);}else{Shell.ExpandSecondaryContent();}},McMaster.MsgMgr.PRIORITY.HIGH);McMaster.MsgMgr.AddSubscriber(McMaster.MsgMgrMsgs.HomePageCatgSlctd,a);};}

if(this.HomePageWebPartLoader){}else{HomePageWebPartLoader=new function(){var f=this,b=new McMaster.MsgMgr.Hdr(McMaster.MsgMgr.CntxtNms.HOME_PAGE),e=false,g="MainContent",a="cntnrIDtxt",d=McMaster.SesnMgr.GetStVal(McMaster.SesnMgr.StValDefs.HomePageWebPartVerKy.KyTxt()),c="/VersionedWebParts/HomePageWebPart/HomePageWebPartHTTPHandler.aspx";c=Cmn.AddQSNmVal(c,a,g);c=Cmn.AddQSNmVal(c,"ver",d);f.LoadFrmSesn=function(){f.RtrvHomePageWebPart();};f.RtrvHomePageWebPart=function(){if(e){}else{var h={start:function(){e=true;},cmpl:function(){e=false;},success:function(i){McMaster.LoadMgr.LoadAssocWebPartFiles(i);},cnxnParm:{respTyp:McMaster.CnxnMgr.WEB_PART_RESP_TYP_TXT}};McMaster.CnxnMgr.PerformAjaxCnxn(c,h);}};McMaster.MsgMgr.AddSubscriber(McMaster.MsgMgrMsgs.HomePageCatgSlctd,f.RtrvHomePageWebPart);};}

this.IntermediatePageWebPartLoader||(IntermediatePageWebPartLoader=new function(){new McMaster.MsgMgr.Hdr(McMaster.MsgMgr.CntxtNms.INTERMEDIATE_PAGE);McMaster.MsgMgr.AddSubscriber(McMaster.MsgMgrMsgs.IntermediatePageSlctd,function(a){IntermediatePageWebPartLoader.Load(a)});var b=null;this.mStartTm=null;this.AbortStaleReq=function(){b&&McMaster.CnxnMgr.AbortAjaxCnxn(b)};this.Load=function(a){a=a.MsgPayload().SrchTxt;McMasterCom.Nav.GetTopFrame().GrpUsrInp.Unload();this.mStartTm=(new Date).getTime();
McMaster.SesnMgr.RemStVal(McMaster.SesnMgr.StValDefs.IntermediatePageLoadFrmSesnInd.KyTxt());this.CrteAjaxCnxn(encodeURIComponent(a))};this.LoadFrmSesn=function(){var a=McMaster.SesnMgr.GetStVal(McMaster.SesnMgr.StValDefs.IntermediatePageSrchTxt.KyTxt());IntermediatePageWebPart.mSrchTxt=a;this.mStartTm=(new Date).getTime();McMaster.SesnMgr.SetStVal(McMaster.SesnMgr.StValDefs.IntermediatePageLoadFrmSesnInd.KyTxt(),!0);this.CrteAjaxCnxn(a)};this.CrteAjaxCnxn=function(a){var c={success:function(a,c){b=
null;McMaster.LoadMgr.LoadAssocWebPartFiles(a)},failure:function(a,c){b=null},cnxnParm:{respTyp:McMaster.CnxnMgr.WEB_PART_RESP_TYP_TXT}};a="/WebParts/Content/IntermediatePageWebPart/IntermediatePageWebPart.aspx?cntnrid=MainContent&pageid="+a+"&cntnrwdth="+d();this.AbortStaleReq();McMaster.LoadMgr.UnloadCntnr("MainContent");McMaster.LoadMgr.ShowCntnr("MainContent");McMaster.LoadMgr.DisplWaitIcon("MainContent");b=McMaster.CnxnMgr.PerformAjaxCnxn(a,c)};var d=function(){var a=Cmn.GetViewportWidth();switch(!0){case 788<=
a&&800>=a:a=788;break;case 1012<=a&&1019>=a:a=1012;break;case 1268<=a&&1280>=a:a=1268;break;case 1428<=a&&1440>=a:a=1428;break;case 1668<=a&&1680>=a:a=1668;break;case 1908<=a&&1920>=a:a=1908;break;case 2548<=a&&2560>=a:a=2548;break;default:a=10*Math.floor(a/10)}return a}});


if(this.IncmplOrdsWebPartLoader){}else{IncmplOrdsWebPartLoader=new function(){var a="ShellLayout_IncmplOrds_Cntnr";var d="/HTTPHandlers/IncmplOrdsWebPart.aspx";var c="cntnrIDtxt";var g=0;var e=0;var b=function(h,i){h.SesnStSnapshotInd=false;McMaster.LoadMgr.LoadWebPart(h);if(g==h.CurrOrdId){if(e==h.CurrOrdLnCnt){}else{}}g=h.CurrOrdId;e=h.CurrOrdLnCnt;};var f=function(){var h={success:b,cnxnParm:{respTyp:McMaster.CnxnMgr.WEB_PART_RESP_TYP_TXT}};var i=d+"?"+c+"="+a;McMaster.CnxnMgr.PerformAjaxCnxn(i,h);};McMaster.MsgMgr.AddSubscriber(McMaster.MsgMgrMsgs.ShellInitContentLoaded,f,McMaster.MsgMgr.PRIORITY.MEDIUM);McMaster.MsgMgr.AddSubscriber(McMaster.MsgMgrMsgs.IncmplOrdsChged,f,McMaster.MsgMgr.PRIORITY.LOW);McMaster.MsgMgr.AddSubscriber(McMaster.MsgMgrMsgs.OrdDeleted,f,McMaster.MsgMgr.PRIORITY.HIGH);McMaster.MsgMgr.AddSubscriber(McMaster.MsgMgrMsgs.OrdForwarded,f,McMaster.MsgMgr.PRIORITY.HIGH);McMaster.MsgMgr.AddSubscriber(McMaster.MsgMgrMsgs.OrdLnsUpdated,f,McMaster.MsgMgr.PRIORITY.HIGH);McMaster.MsgMgr.AddSubscriber(McMaster.MsgMgrMsgs.OrdPlcd,f,McMaster.MsgMgr.PRIORITY.LOW);McMaster.MsgMgr.AddSubscriber(McMaster.MsgMgrMsgs.OrdSaved,f,McMaster.MsgMgr.PRIORITY.HIGH);McMaster.MsgMgr.AddSubscriber(McMaster.MsgMgrMsgs.SgnInChged,f,McMaster.MsgMgr.PRIORITY.HIGH);McMaster.MsgMgr.AddSubscriber(McMaster.MsgMgrMsgs.LoginChged,f,McMaster.MsgMgr.PRIORITY.HIGH);McMaster.MsgMgr.AddSubscriber(McMaster.MsgMgrMsgs.SavedOrdSlctd,f,McMaster.MsgMgr.PRIORITY.HIGH);McMaster.MsgMgr.AddSubscriber(McMaster.MsgMgrMsgs.POTxtChged,f,McMaster.MsgMgr.PRIORITY.HIGH);};}

this.InLnOrdWebPartLoader||(InLnOrdWebPartLoader=new function(){var h=this,t=null,q=!0,x=[],B=0,z={},C=function(a){InLnOrdWebPartLoader.Load(a)},D=function(a){InLnOrdWebPartLoader.LoadAfterFilterChng(a)},w=function(a){InLnOrdWebPartLoader.DynPgLoaded(a)},E=function(a){InLnOrdWebPartLoader.LoadBxsAfterFilterChng(a)};McMaster.MsgMgr.AddSubscriber(McMaster.MsgMgrMsgs.PartNbrSlctd,C,McMaster.MsgMgr.PRIORITY.HIGH);McMaster.MsgMgr.AddSubscriber(McMaster.MsgMgrMsgs.DiscntndPartNbrSlctd,C,McMaster.MsgMgr.PRIORITY.HIGH);
McMaster.MsgMgr.AddSubscriber(McMaster.MsgMgrMsgs.SpecSlctd,D,McMaster.MsgMgr.PRIORITY.LOW);McMaster.MsgMgr.AddSubscriber(McMaster.MsgMgrMsgs.ImgClicked,D,McMaster.MsgMgr.PRIORITY.LOW);McMaster.MsgMgr.AddSubscriber(McMaster.MsgMgrMsgs.WebPartLoaded,w);McMaster.MsgMgr.AddSubscriber(McMaster.MsgMgrMsgs.WebPartUnloaded,function(a){InLnOrdWebPartLoader.SpecPgUnloaded(a)});McMaster.MsgMgr.AddSubscriber(McMaster.MsgMgrMsgs.BrowserNavSlctd,function(a){InLnOrdWebPartLoader.BackBtnLoaded(a)});McMaster.MsgMgr.AddSubscriber(McMaster.MsgMgrMsgs.SpecChoiceLnkSlctd,
function(a){InLnOrdWebPartLoader.SpecChoiceLnkSlctd(a)});h.BackBtnLoaded=function(a){McMaster.MsgMgr.AddSubscriber(McMaster.MsgMgrMsgs.WebPartLoaded,function(a){b(a)});McMaster.MsgMgr.AddSubscriber(McMaster.MsgMgrMsgs.CtlgPageLoaded,function(a){c(a)});var b=function(a){var d=a.MsgHdr().CntxtNm,c=a.MsgPayload().CntnrNm;if("ProductPage"==d&&"MainContent"==c||"DynamicPage"==d&&"ProdPageContent_Inner"==c)q=!0,h.LoadFrmSesn(a);McMaster.MsgMgr.RemSubscriber(McMaster.MsgMgrMsgs.WebPartLoaded,function(a){b(a)})},
c=function(a){a.MsgHdr();a.MsgPayload();q=!0;h.LoadAfterCtlgPgReload(a);McMaster.MsgMgr.RemSubscriber(McMaster.MsgMgrMsgs.CtlgPageLoaded,function(a){c(a)})}};h.LoadAfterCtlgPgReload=function(a){a.MsgHdr();a=McMaster.SesnMgr.GetStVal(McMaster.SesnMgr.StValDefs.InLnOrdBxsCrtd.KyTxt());var b=window.MainIFrame.Catalog.Cmn.GetElementsByClsNm("PartNbrLnk","a"),c=[];if("object"==typeof a){for(var f=0,d=[];a[f];)d.push(a[f]),f++;a=d}for(f=0;f<a.length;f++){d=a[f].mWebPartObj.PartNbrLnk;prsnttnId=a[f].mWebPartObj.PrsnttnId;
partNbr=a[f].PartNbrTxt;partNbrOnPageInd=!1;try{if(!Cmn.HasCls(d,"AddToOrdBxCreated"+a[f].Id))continue}catch(e){}for(var k=0;k<b.length;k++)if(b[k].innerHTML==a[f].PartNbrTxt){d=b[k];partNbrOnPageInd=!0;break}A(d)?partNbrOnPageInd?(FullPrsnttnWebPart.PartNbr_Click(d),c.push(a[f])):(d=McMaster.SesnMgr.GetStVal(McMaster.SesnMgr.StValDefs.InLnSpecUsrInps.KyTxt()),d[a[f].mWebPartObj.MetaDat.PartNbrTxt+"_"+prsnttnId]&&(d[a[f].mWebPartObj.MetaDat.PartNbrTxt+"_"+prsnttnId].RemAll(),u(d)),InLnOrdWebPart.RemFrmCache(partNbr)):
partNbrOnPageInd?(FullPrsnttnWebPart.PartNbr_Click(d),c.push(a[f])):InLnOrdWebPart.RemFrmCache(partNbr)}McMaster.SesnMgr.SetStVal(McMaster.SesnMgr.StValDefs.InLnOrdBxsCrtd.KyTxt(),c)};h.LoadFrmSesn=function(a){a=McMaster.SesnMgr.GetStVal(McMaster.SesnMgr.StValDefs.InLnOrdBxsCrtd.KyTxt());if(null!=a)if(r()){if("object"==typeof a){for(var b=0,c=[];a[b];)c.push(a[b]),b++;a=c}0<a.length&&(b=a.length-1,!1==a[b].VisibilityInd?(a[b].VisibilityInd=!0,McMaster.SesnMgr.SetStVal(McMaster.SesnMgr.StValDefs.InLnOrdBxsCrtd.KyTxt(),
a),InLnOrdWebPart.SetJSBxObjProperties(a[b]),InLnOrdWebPart.InsertMarkup(a[b],b,a.length,a,!1)):0<a[b].PrimaryPartNbrTxts.length?!0==a[b].VisibilityInd&&InLnOrdWebPart.WebPart_Unload(a[b].mWebPartObj):(c=McMaster.SesnMgr.GetStVal(McMaster.SesnMgr.StValDefs.ActvInLnOrdBx.KyTxt()))&&(Cmn.HasCls(c.PartNbrLnk,"AddToOrdBxCreated")||InLnOrdWebPart.InsertMarkup(a[b],b,a.length,a,!1)))}else for(b=0;b<a.length;b++)if(a[b].PartNbrLnk&&Cmn.HasCls(a[b].PartNbrLnk,"AddToOrdBxCreated")){var c=McMaster.SesnMgr.GetStVal(McMaster.SesnMgr.StValDefs.InLnSpecUsrInps.KyTxt()),
f=a[b].PartNbrLnk.getAttribute("data-mcm-partnbr-seqnbr"),d=a[b].mWebPartObj.MetaDat.PartNbrTxt+"_"+prsnttnId;f&&(d=d+"_"+f);c&&c[d]&&(c[d].RemAll(),u(c));InLnOrdWebPart.InsertMarkup(a[b],b,a.length,a,!1)}};h.LoadAfterFilterChng=function(a){var b=McMaster.SesnMgr.GetStVal(McMaster.SesnMgr.StValDefs.InLnOrdBxsCrtd.KyTxt());a.MsgHdr();null!=b&&(McMaster.MsgMgr.RemSubscriber(McMaster.MsgMgrMsgs.WebPartLoaded,w),McMaster.MsgMgr.AddSubscriber(McMaster.MsgMgrMsgs.WebPartLoaded,E))};h.LoadBxsAfterFilterChng=
function(a){var b=a.MsgHdr().CntxtNm;a=McMaster.SesnMgr.GetStVal(McMaster.SesnMgr.StValDefs.InLnOrdBxsCrtd.KyTxt());if(b==McMaster.MsgMgr.CntxtNms.DYNAMIC_PAGE){q=!0;for(var b=Cmn.GetElementsByClsNm("PartNbrLnk","a"),c=[],f=0;f<a.length;f++){var d=a[f].mWebPartObj.PartNbrLnk;prsnttnId=a[f].mWebPartObj.PrsnttnId;partNbr=a[f].PartNbrTxt;partNbrOnPageInd=!1;for(var e=0;e<b.length;e++)if(b[e].innerHTML==a[f].PartNbrTxt){partNbrOnPageInd=!0;break}A(d)?partNbrOnPageInd&&1<b.length?(FullPrsnttnWebPart.PartNbr_Click(d),
c.push(a[f])):(d=McMaster.SesnMgr.GetStVal(McMaster.SesnMgr.StValDefs.InLnSpecUsrInps.KyTxt()),d[a[f].mWebPartObj.MetaDat.PartNbrTxt+"_"+prsnttnId]&&(d[a[f].mWebPartObj.MetaDat.PartNbrTxt+"_"+prsnttnId].RemAll(),u(d)),InLnOrdWebPart.RemFrmCache(partNbr)):partNbrOnPageInd?(InLnOrdWebPart.InsertMarkup(a[f],f,a.length,a,!0),c.push(a[f])):InLnOrdWebPart.RemFrmCache(partNbr)}McMaster.SesnMgr.SetStVal(McMaster.SesnMgr.StValDefs.InLnOrdBxsCrtd.KyTxt(),c);McMaster.MsgMgr.RemSubscriber(McMaster.MsgMgrMsgs.WebPartLoaded,
E);McMaster.MsgMgr.AddSubscriber(McMaster.MsgMgrMsgs.WebPartLoaded,w)}};h.Load=function(a){var b=Cmn.Get("ResultsIFrame"),c=Cmn.Get("SecondaryContent");"Product Detail"==Cmn.Get("SecondaryContentTitl").innerHTML&&(b&&McMaster.LoadMgr.UnloadCntnr("ResultsIFrame","iframe",!1),c&&(McMaster.LoadMgr.UnloadCntnr("SecondaryContent","webpart",!1),McMaster.LoadMgr.UnloadCntnr("SecondaryContentTitl","webpart",!1)));var f=a.MsgHdr().CntxtNm,b=a.MsgPayload().PartNbr.toUpperCase(),c=a.MsgPayload().AutoSlctdInd,
d;a.MsgPayload().RefPartNbr&&(d=a.MsgPayload().RefPartNbr);var e;if(y()){var k=r();(a=F(b,"PartNbrSlctd",k,d))&&(e=!1)}else a=v(b,"PartNbrSlctd",a.MsgPayload().SeqNbr),e=Cmn.GetAncestorByTagNm(a,"td"),e=!0;if(!a&&f==McMaster.MsgMgr.CntxtNms.FULL_PRSNTTN)for(var m=Cmn.GetElementsByClsNm("PartNbrLnk","a"),l,g=0;g<m.length;g++)if(partNbrInItmTblInd=!1,(l=m[g].parentNode)&&"TD"==l.nodeName&&(partNbrInItmTblInd=!0),m[g].innerHTML==b.toUpperCase()&&!0===partNbrInItmTblInd){Cmn.AddCls(m[g],"PartNbrSlctd");
a=m[g];e=!0;break}m=!1;if(f==McMaster.MsgMgr.CntxtNms.FULL_PRSNTTN){d=Cmn.GetTSOfActInclMS();Cmn.TrkAct("InLnOrdLoadFuncAftrPartNbrClick&partnbr="+b+"&tm="+d,"InLnOrd");d=McMaster.SesnMgr.GetStVal(McMaster.SesnMgr.StValDefs.InLnOrdBxsCrtd.KyTxt());null===d&&(d=[],McMaster.SesnMgr.SetStVal(McMaster.SesnMgr.StValDefs.InLnOrdBxsCrtd.KyTxt(),d));if(a)if(k=e?InLnOrdWebPart:k.contentWindow.InLnOrdWebPart,Cmn.HasCls(a,"AddToOrdBxCreated")){l=Cmn.GetAncestorByTagNm(a,"tr");var n="AddToOrdFlow_ItmBxFor"+G(a,
k),g=Cmn.GetNxtSiblingBy(l,function(a){return Cmn.HasCls(a,n)}),p=Cmn.GetNxtSibling(g);if(p&&g)l=Cmn.GetAncestorByTagNm(a,"tr"),e=Cmn.GetNxtSibling(Cmn.GetNxtSibling(l)),e=Cmn.GetElementsByClsNm("InLnOrdWebPart_CloseLnk","a",e),k.ResetBxObj(e,l),k.HideInLnBx(g,p,a.parentNode,!0),m=!0;else{e={chkForLnkInd:!1,dynPageInd:e,multiPartNbrInd:!1,partNbrSlctdMsgCntxtNm:f,partNbrLnk:a};h.CrteAjaxCnxn(b,e,c);for(e=0;e<d.length;e++)d[e].PartNbrTxt==b&&(d.splice(e,1),McMaster.SesnMgr.SetStVal(McMaster.SesnMgr.StValDefs.InLnOrdBxsCrtd.KyTxt(),
d))}}else if(Cmn.HasCls(a,"AddToOrdBxHidden")&&!Cmn.HasCls(a,"AddToOrdBxOrdered")){g=G(a,k);l=Cmn.GetAncestorByTagNm(a,"tr");n="AddToOrdFlow_ItmBxFor"+g;for(g=Cmn.GetNxtSiblingBy(l,function(a){return Cmn.HasCls(a,n)&&Cmn.HasCls(a,"Hide")});!Cmn.HasCls(g,"AddToOrdFlow_ItmBx");)g=Cmn.GetNxtSibling(g);for(p=Cmn.GetNxtSibling(g);!Cmn.HasCls(p,"AddToOrdFlow_ItmBx");)p=Cmn.GetNxtSibling(p);if(Cmn.HasCls(a,"HasInLnOrdSpec")){e={chkForLnkInd:!1,dynPageInd:e,multiPartNbrInd:!1,partNbrSlctdMsgCntxtNm:f,partNbrLnk:a};
h.CrteAjaxCnxn(b,e,c);for(e=0;e<d.length;e++)d[e].PartNbrTxt==b&&(d.splice(e,1),McMaster.SesnMgr.SetStVal(McMaster.SesnMgr.StValDefs.InLnOrdBxsCrtd.KyTxt(),d))}else if(p&&g)k.RegenerateJSBxObj(a),e=Cmn.GetAncestorByTagNm(a,"td"),k.ShowInLnBx(g,p,e),e=new McMaster.MsgMgr.Hdr(McMaster.MsgMgr.CntxtNms.FULL_PRSNTTN),e=new McMaster.MsgMgrMsgs.InlnOrdBxReopened(e),McMaster.MsgMgr.PubMsg(e);else{e={chkForLnkInd:!1,dynPageInd:e,multiPartNbrInd:!1,partNbrSlctdMsgCntxtNm:f,partNbrLnk:a};h.CrteAjaxCnxn(b,e,
c);for(e=0;e<d.length;e++)d[e].PartNbrTxt==b&&(d.splice(e,1),McMaster.SesnMgr.SetStVal(McMaster.SesnMgr.StValDefs.InLnOrdBxsCrtd.KyTxt(),d))}}else e={chkForLnkInd:!1,dynPageInd:e,multiPartNbrInd:!1,partNbrSlctdMsgCntxtNm:f,partNbrLnk:a},h.CrteAjaxCnxn(b,e,c),Cmn.RemCls(a,"AddToOrdBxOrdered");else H(b);!0===c?c=new SrchTrkr.SrchDat({usr:SrchTrkr.UsrActTyps.AUTOSLCT}):!0===m?c=new SrchTrkr.SrchDat({usr:SrchTrkr.UsrActTyps.DESLCT}):(c=new SrchTrkr.SrchDat({usr:SrchTrkr.UsrActTyps.SLCT}),a&&(c.usr.slctdElemXYPosn=
Cmn.GetXOffset(a)+","+Cmn.GetYOffset(a)));c.usr.srcNm="InLnOrdWebPartLoader";c.usr.elemTyp=SrchTrkr.ElemTyps.PART_NBR_LNK;c.usr.slctdNm=decodeURIComponent(b);c.Trk()}else(f==McMaster.MsgMgr.CntxtNms.URL_MGR||f==McMaster.MsgMgr.CntxtNms.SRCH_ENTRY_WEB_PART||f==McMaster.MsgMgr.CntxtNms.NEW_ORD_PAD||f==McMaster.MsgMgr.CntxtNms.BMS||f==McMaster.MsgMgr.CntxtNms.ORD_HIST||f==McMaster.MsgMgr.CntxtNms.PSRCH||f==McMaster.MsgMgr.CntxtNms.ORD_CONFIRMATION||f==McMaster.MsgMgr.CntxtNms.PDF_CTLG_PAGE)&&I(b,f,null,
d)};h.CrteAjaxCnxn=function(a,b,c){b.partNbrLnk&&(x[B]=b.partNbrLnk,B++);var f={success:InLnOrdWebPartLoader.LoadWebPart,failure:function(a,b){t=null},cnxnParm:{respTyp:McMaster.CnxnMgr.WEB_PART_RESP_TYP_TXT,loadParmObj:b,partNbrTxt:a,partNbrLnk:b.partNbrLnk}},d=b.partNbrLnk,e=null,k=null,m=!1,h=null,g=null,n=null;null==d&&(d=v(a,"PartNbrSlctd")||v(a,"AddToOrdBxCreated"));d&&(m=A(d),k=J(d),e=b.prsnttnId?b.prsnttnId:K(b.partNbrLnk),g=L(b.partNbrLnk),h=d.getAttribute("data-mcm-attr-comp-itm-ids"),n=
d.getAttribute("data-mcm-partnbr-seqnbr"));n||(n=1);var p=[],q=[],r="",w="",s=Cmn.GetAncestorByTagNm(d,"tr"),s=Cmn.GetNxtSibling(Cmn.GetNxtSibling(s));if(A(d)&&(d=Cmn.GetElementsByClsNm("InLnOrdWebPartLayout_OtherInpBx","input",s)))for(s=0;s<d.length;s++){q[q.length]=d[s].value;var y=Cmn.GetAncestorByClsNm(d[s],"SpecSrch_Attribute").id.split("_");p[p.length]=y[3]}p&&q&&(r=p.join(String.fromCharCode(2029)),w=q.join(String.fromCharCode(2029)));b="/WebParts/Ordering/InLnOrdWebPart/InLnOrdWebPart.aspx?cntnridtxt=InLnOrd_ItmBxRw_"+
n+"_"+a+"&partnbrtxt="+encodeURIComponent(a)+"&multipartnbrind="+b.multiPartNbrInd+"&partnbrslctdmsgcntxtnm="+b.partNbrSlctdMsgCntxtNm+"&autoslctdind="+c;m&&(b=b+"&prsnttnid="+e+"&fullprsnttnid="+g+"&inlnspecwidth="+k+"&isInLnSpec="+m+"&attrCompIds="+h+"&attrnm="+encodeURIComponent(r)+"&attrval="+encodeURIComponent(w),a=a+"_"+e,n&&(a=a+"_"+n),null==McMaster.SesnMgr.GetStVal(McMaster.SesnMgr.StValDefs.InLnSpecUsrInps.KyTxt())&&(z[a]=SpecSrchInp.Get().RemAll(),u(z)),n=McMaster.SesnMgr.GetStVal(McMaster.SesnMgr.StValDefs.InLnSpecUsrInps.KyTxt()),
a in n||(n[a]=SpecSrchInp.Get().RemAll(),u(n)),b=n[a].AddSpecUsrInpQS(b));t=McMaster.CnxnMgr.PerformAjaxCnxn(b,f)};h.DynPgLoaded=function(a){var b=a.MsgHdr().CntxtNm;a=a.MsgPayload().CntnrNm;if((b==McMaster.MsgMgr.CntxtNms.DYNAMIC_PAGE||b==McMaster.MsgMgr.CntxtNms.CTLG_PAGE)&&!(b==McMaster.MsgMgr.CntxtNms.CTLG_PAGE&&"Catalog"==a))q=!0};h.SpecPgUnloaded=function(a){a.MsgHdr()};h.SpecChoiceLnkSlctd=function(a){var b=a.MsgHdr().CntxtNm,c=a.MsgPayload().SpecAttrId,f=a.MsgPayload().PartNbr,d=a.MsgPayload().SeqNbr,
e=a.MsgPayload().PrsnttnId,k=c.split("_")[2],m=c.split("_")[3],l=c.split("_")[5],c=c.split("_")[6],k=k.split(","),m=m.split(","),l=l.split(","),c=c.split(","),e=f+"_"+e;d&&(e=e+"_"+d);null==McMaster.SesnMgr.GetStVal(McMaster.SesnMgr.StValDefs.InLnSpecUsrInps.KyTxt())&&(z[e]=SpecSrchInp.Get().RemAll(),u(z));d=McMaster.SesnMgr.GetStVal(McMaster.SesnMgr.StValDefs.InLnSpecUsrInps.KyTxt());if(e in d){d[e].RemAll();var g=0}else d[e]=SpecSrchInp.Get().RemAll(),g=0;for(;g<m.length;g++)d[e].ToggleVal(k[g],
m[g],l[g],c[g],b);u(d);a=v(f.toUpperCase(),"PartNbrSlctd",a.MsgPayload().SeqNbr)||v(f.toUpperCase(),"AddToOrdBxCreated",a.MsgPayload().SeqNbr)||v(f.toUpperCase(),"PartNbrLnk",a.MsgPayload().SeqNbr);Cmn.HasCls(a,"PartNbrVisited")&&h.CrteAjaxCnxn(f,{chkForLnkInd:!1,dynPageInd:!1,multiPartNbrInd:!1,partNbrSlctdMsgCntxtNm:b,partNbrLnk:a})};h.ReqInFlight=function(){return!!t};h.AbortStaleReq=function(){t&&(McMaster.CnxnMgr.AbortAjaxCnxn(t),t=null);InLnOrdWebPart.PrevCntxtSrchCnxn&&(McMaster.CnxnMgr.AbortAjaxCnxn(InLnOrdWebPart.PrevCntxtSrchCnxn),
InLnOrdWebPart.PrevCntxtSrchCnxn=null)};h.LoadWebPart=function(a,b){t=null;if(q){a.PartNbrLnk=b.partNbrLnk;var c;b.partNbrLnk&&(c=b.partNbrLnk.getAttribute("data-mcm-partnbr-seqnbr"),a.CntnrIDTxt="InLnOrd_ItmBxRw_"+c+"_"+b.partNbrLnk.innerHTML);if("FULLPRSNTTN"==a.PartNbrSlctdMsgCntxtNm)y()?(c=r(),McMaster.LoadMgr.LoadAssocWebPartFiles(a,c.contentWindow)):McMaster.LoadMgr.LoadAssocWebPartFiles(a);else if(b.loadParmObj.chkForLnkInd){var f=v(b.partNbrTxt,"PartNbrLnk",c);c=r();f||(f=F(b.partNbrTxt,"PartNbrLnk",
c));f?(a.PartNbrLnk=f,McMaster.LoadMgr.LoadAssocWebPartFiles(a,c.contentWindow)):H(b.partNbrTxt)}else{var d=new CmnColls.HashTable(a.MetaDatDict);partNbrsTxt=d.Keys();for(var e=0;e<partNbrsTxt.length;e++){f=a;f.MetaDatDict=null;f.MetaDat=d.Itm(partNbrsTxt[e]);f.CntnrIDTxt="InLnOrd_ItmBxRw"+partNbrsTxt[e];f.IDTxt=a.IdLst[e];for(c=0;c<x.length;c++)if(x[c].innerHTML==partNbrsTxt[e]){f.PartNbrLnk=x[c];break}if(f.PartNbrLnk&&(c=f.partNbrLnk.getAttribute("data-mcm-partnbr-seqnbr")))f.CntnrIDTxt="InLnOrd_ItmBxRw_"+
c+"_"+f.partNbrLnk.innerHTML;(c=r())?McMaster.LoadMgr.LoadAssocWebPartFiles(f,c.contentWindow):McMaster.LoadMgr.LoadAssocWebPartFiles(f)}x=[];B=0}}else setTimeout(function(){h.LoadWebPart(a,b)},500)};var G=function(a,b){for(var c=a.getAttribute("data-mcm-itm-id"),f=McMaster.SesnMgr.GetStVal(McMaster.SesnMgr.StValDefs.InLnOrdBxsCrtd.KyTxt()),d=0;d<f.length;d++)if(f[d].Id==c){b.SetJSBxObjProperties(f[d]);break}return c},F=function(a,b,c,f){var d;try{if(c){var e;e=null==c.contentDocument?c.contentWindow.document.getElementsByTagName("a"):
c.contentDocument.getElementsByTagName("a")}}catch(k){}var h,l,g;if(e){if(f){for(c=0;c<e.length;c++)if(e[c].innerHTML==f){h=e[c];break}"TR"==h.parentNode.parentNode.tagName&&(l=h.parentNode.parentNode);for(b=0;b<l.childNodes.length;b++)if(l.childNodes[b].childNodes[0].innerHTML==a){g=l.childNodes[b].childNodes[0];break}return g?g:h}for(c=0;c<e.length;c++)if(e[c].innerHTML==a&&Cmn.HasCls(e[c],b)&&"TD"==e[c].parentNode.tagName){d=c;break}return e[d]}},v=function(a,b,c){var f,d=Cmn.GetElementsByClsNm(b,
"a");if(0==d.length&&y()){var e;e=document.getElementById("MainIFrame");var h=null;e&&(e.contentDocument?h=e.contentDocument.getElementById("Catalog"):e.contentWindow&&(h=e.contentWindow.document.getElementById("Catalog")));(e=h)||(e=r());e&&(d=e,e=null,d&&(d.contentDocument?d.contentDocument.getElementsByClassName?e=d.contentDocument.getElementsByClassName(b):d.contentDocument.querySelectorAll&&(e=d.contentDocument.querySelectorAll("."+b)):d.contentWindow&&(e=d.contentWindow.Cmn.GetElementsByClsNm(b))),
d=e)}for(b=0;b<d.length;b++)if(d[b].innerHTML==a&&"TD"==d[b].parentNode.tagName){c?c==d[b].getAttribute("data-mcm-partnbr-seqnbr")&&(f=b):f=b;break}return d[f]},I=function(a,b,c,f){b=McMaster.SesnMgr.GetStVal(McMaster.SesnMgr.StValDefs.CurrCtlgPgNbr.KyTxt());c=new McMaster.MsgMgr.Hdr(McMaster.MsgMgr.CntxtNms.SRCH_ENTRY_WEB_PART);a=new McMaster.MsgMgrMsgs.CtlgPageSlctd(c,b,null,null,a,null,f);McMaster.MsgMgr.PubMsg(a);q=!1},H=function(a){var b=new McMaster.MsgMgr.Hdr(McMaster.MsgMgr.CntxtNms.INLN_ORD);
partNbrNotFoundMsg=new McMaster.MsgMgrMsgs.PartNbrNotFoundOnPg(b,a);McMaster.MsgMgr.PubMsg(partNbrNotFoundMsg)},r=function(){var a=document.getElementById("MainIFrame"),b;try{a.contentDocument?b=a.contentDocument.getElementById("Catalog"):a.contentWindow&&(b=a.contentWindow.document.getElementById("Catalog"))}catch(c){}return b},y=function(){var a=!1;Cmn.GetObj("ProdPageContent")||(a=!0);return a},L=function(a){for(a=a.parentNode;-1==a.className.indexOf("FullPrsnttn");)a=a.parentNode;return a.id.split("_")[1]},
K=function(a){a=a.parentNode;for(var b=!1;!1==b;){for(var c=a.className.split(" "),f=0;f<c.length;f++)if(0<=c[f].search(/PrsnttnStructure/i)){b=!0;break}!1==b&&(a=a.parentNode)}a&&(prsnttnId=a.id.split("_")[1]);return prsnttnId},J=function(a){Cmn.GetAncestorByTagNm(a,"tr");for(var b=Cmn.GetElementsBy(function(a){return a},"td",this.ParentRow),c=0;c<b.length;c++)if(!Cmn.HasCls(b[c],"ItmTblImgCell")&&!Cmn.HasCls(b[c],"ItmTblPivotImgCell")){frstCntntCell=b[c];break}partNbrInfoWidth=Cmn.GetAncestorByTagNm(a,
"td").offsetLeft-frstCntntCell.offsetLeft;return 175},A=function(a){var b=!1;a&&a.getAttribute("data-mcm-attr-comp-itm-ids")&&(b=!0);return b},u=function(a){McMaster.SesnMgr.SetStVal(McMaster.SesnMgr.StValDefs.InLnSpecUsrInps.KyTxt(),a)}});


if(this.ItmLookupLoader){}else{ItmLookupLoader=new function(){var d=this;var f=function(g){c(g);};var b="/itmLookup/itmLookup.aspx";McMaster.MsgMgr.AddSubscriber(McMaster.MsgMgrMsgs.NonCtlgPartNbrSlctd,f);McMaster.MsgMgr.AddSubscriber(McMaster.MsgMgrMsgs.UnknownParentSlctd,f);McMaster.MsgMgr.AddSubscriber(McMaster.MsgMgrMsgs.UnknownPartNbrSlctd,f);McMaster.MsgMgr.AddSubscriber(McMaster.MsgMgrMsgs.DiscntndPartNbrWthDelParentSlctd,f);McMaster.MsgMgr.AddSubscriber(McMaster.MsgMgrMsgs.DelPartNbrSlctd,f);McMaster.MsgMgr.AddSubscriber(McMaster.MsgMgrMsgs.DelParentSlctd,f);McMaster.MsgMgr.AddSubscriber(McMaster.MsgMgrMsgs.PartNbrNotFoundOnPg,f);McMaster.MsgMgr.AddSubscriber(McMaster.MsgMgrMsgs.ParentSlctd,f);McMaster.MsgMgr.AddSubscriber(McMaster.MsgMgrMsgs.UnPubPartNbrSlctd,f);McMaster.MsgMgr.AddSubscriber(McMaster.MsgMgrMsgs.UnPubParentSlctd,f);McMaster.MsgMgr.AddSubscriber(McMaster.MsgMgrMsgs.PartNbrFastTrk,f);d.LoadFrmSesn=function(){var g=McMaster.SesnMgr.GetIFrameDatByCntnrId("ResultsIFrame");if(g){McMasterCom.LoadMgr.LoadResultsIFrame(g.URLTxt);}};var c=function(h,j){var i;var g;if(h.MsgPayload().PartNbr){i=h.MsgPayload().PartNbr;}else{if(h.MsgPayload().FmlyTxt){i=h.MsgPayload().FmlyTxt;}}if(i){if(j){g=b+"?searchstring="+i+"&tab=find&FastTrack=True&ftctlgpg=&newfrmwk=true";}else{g=b+"?searchstring="+i+"&tab=find&FastTrack=False&ftctlgpg=&newfrmwk=true";}}McMasterCom.LoadMgr.LoadResultsIFrame(g,h);};function a(g){if(typeof McMasterCom!="undefined"){McMasterCom.LoadMgr.LoadMainIFrame(g);var h=new McMaster.MsgMgr.Hdr(McMaster.MsgMgr.CntxtNms.ITM_INFO,"1.0");var i=new McMaster.MsgMgrMsgs.CollapseSecondaryContent(h);McMaster.MsgMgr.PubMsg(i);}return;}function e(i){if(typeof McMasterCom!="undefined"&&i.length>0&&i.length<=4){var h=new McMaster.MsgMgr.Hdr(McMaster.MsgMgr.CntxtNms.PSRCH);var g=new McMaster.MsgMgrMsgs.CtlgPageSlctd(h,i);McMaster.SesnMgr.SetStVal(McMaster.SesnMgr.StValDefs.CurrCtlgPgNbr.KyTxt(),i);McMaster.MsgMgr.PubMsg(g);}return;}};}

if (this.ItmPrsnttnWebPart) {
	// Continue
} else {
	
    //-------------------------------------------------------------------------
    // Class:   ItmPrsnttnWebPart
    //-------------------------------------------------------------------------
	ItmPrsnttnWebPart = new function () {
	
		/// #Region "Declarations"
		var ITM_PRSNTTN_UPDT_HTTP_HANDLER_URL = "/WebParts/Content/ItmPrsnttnDynamicDat.aspx"
		  , ACT_TXT = "acttxt"
		  , ADD_ITM_CURR_ORD_QS_KY_TXT = "additmcurrord"
		  , DYNAMIC_DAT_QS_KY_TXT = "dynamicdat"
		  , QTY_TXT_QS_KY_TXT = "qtytxt"
		  , PART_NBR_QS_KY_TXT = "partnbrtxt"
		  , ATTR_VAL_QS_KY_TXT = "attrval"
		  , ATTR_NM_QS_KY_TXT = "attrnm"
		  , QTY_ERR_SHOWING_IND = "qtyerrshowingind"
		  , ATTR_ERR_SHOWING_IND = "attrerrshowingind"
		  , IS_INLNSPEC = "isinlnspec"
		  , ATTR_COMP_IDS = "attrCompIds"
		  , mReadyNxtAjaxCallInd = true
		  , mImgTimer = null
		  , PUB_ATTR_ID_IDX = 3
		  , PROD_ATTR_ID_IDX = 2
		  , PROD_VAL_ID_IDX = 5
		  , PUB_VAL_ID_IDX = 6  
		  , ENT_KY_CD = 13
		  , TOOLSET_HGT
		  , MASTHEAD_HGT
		  , FEEDBACK_FORM_TXT = "WebToolsetToolWebPart_is-this-page-helpful"
		  
		 var CONTENT_WEB_PART_CNTNR_DIV_NM = "MainContent";
		 
		//Environment constants
		var DEV = "DEV",
			QUAL = "QUAL",
			PROD = "PROD",
			PUB_DEV = "PUBDEV",
			PUB_QUAL = "PUBQUAL",
			PUB = "PUB";
			
		// Ensure compatibility of code below with IE<9 browsers, support Array.indexOf
        if (!('indexOf' in Array.prototype)) {
            Array.prototype.indexOf = function (find, i /*opt*/) {
                if (i === undefined) i = 0;
                if (i < 0) i += this.length;
                if (i < 0) i = 0;
                for (var n = this.length; i < n; i++)
                    if (i in this && this[i] === find)
                        return i;
                return -1;
            }
        };
		
		//-------------------------------------------------------------------------
		// Array Remove - By John Resig (MIT Licensed)
		//-------------------------------------------------------------------------
		if (!('remove' in Array.prototype)) {
			Array.prototype.remove = function(from, to) {
				var rest = this.slice((to || from) + 1 || this.length);
				this.length = from < 0 ? this.length + from : from;
				return this.push.apply(this, rest);
			}
		};


		/// Region "Public Methods"
		// --------------------------------------------------------
		// Summary: Method so we can modifiy the markup prior to it
		//          being inserted into the DOM.
		// --------------------------------------------------------
		this.WebPart_LoadCmpl = function(webPartObj){

			var mainContentCntnr = Cmn.GetObj("ItmPrsnttnWebPart")
			  , qtyInpBx = Cmn.GetElementsByClsNm("InLnOrdWebPartLayout_InpBx", "input", mainContentCntnr)[0]
			  , inpBxs = Cmn.GetElementsByClsNm("OtherValInpBx", "input", mainContentCntnr)
			  , partNbrLnk = getPartNbrLnk()
			  , isInLnSpecInd = isInLnSpec(partNbrLnk)
			  , cntxtSrchBx = Cmn.GetElementsByClsNm("SpecSrch_CntxtSrchBx", "input", mainContentCntnr)[0]
			  , customSpecBx = Cmn.GetElementsByClsNm("InLnOrdWebPartLayout_ItmSpecTxtBx", "textarea", mainContentCntnr)[0]
			  , focusSetInd = false;

			// update session with user spec selections
			if (webPartObj.SpecSrchInp) {
				webPartObj.SpecSrchInp.UpdateSession();
			}
			
			// don't apply focus when user clicked a CAD link
			if (webPartObj.ScrollToCadImgInd) {
				focusSetInd = true;
			}
			
			// attach listeners
			window.onafterprint = trkBrowserPrint;
            Cmn.AddEvntListener(mainContentCntnr, "click", hndlClickEvnt);
			Cmn.AddEvntListener(mainContentCntnr, "mouseover", hndlMouseoverEvnt);
			Cmn.AddEvntListener(mainContentCntnr, "mouseout", hndlMouseoutEvnt);
			Cmn.AddEvntListener(qtyInpBx, "keyup", hndlKeyUpEvnt);
			for (var i = 0; i < inpBxs.length; i++) {
				Cmn.AddEvntListener(inpBxs[i], "blur", function (e) {
					hndlBlurEvnt(e);
				});
			}
			
			// set up spec interactions
			SpecInteractions.AddAttrIdToNmDefs(webPartObj);
			SpecInteractions.AttachEvntListeners(webPartObj, McMaster.MsgMgr.CntxtNms.ITM_PRSNTTN, ItmPrsnttnWebPartLoader, true);
			
			// add image event listeners
			crteImgEvntHndlrs(webPartObj);
			
			// set relevant catalog page
			setCtlgPage(webPartObj.CtlgPgNbrs, partNbrLnk.innerHTML);
			
			// set last searched part number in session
			McMaster.SesnMgr.SetStVal(McMaster.SesnMgr.StValDefs.DynamicContentSiteTitleText.KyTxt(), webPartObj.TitleTxt);
			McMaster.SesnMgr.SetStVal(McMaster.SesnMgr.StValDefs.SrchdPartNbrTxt.KyTxt(), webPartObj.PartNbrTxt);
			
			// set attribute name and value text for old style specs in session
			McMaster.SesnMgr.SetStVal(McMaster.SesnMgr.StValDefs.OldStylAttrNms.KyTxt(), webPartObj.AttrNmsTxt);
			McMaster.SesnMgr.SetStVal(McMaster.SesnMgr.StValDefs.OldStylValTxts.KyTxt(), webPartObj.AttrValsTxt);			
			
			// populate input boxes
			if (webPartObj.AttrNmsTxt && webPartObj.AttrValsTxt) {
				populateInpBoxes(webPartObj);
			}
			
			// populate quantity box
			if (webPartObj.QtyInpBxVal) {
				qtyInpBx.value = webPartObj.QtyInpBxVal;
			}
			
			// apply focus to the appropriate input box.
			if (focusSetInd) {
				// do nothing
			} else if (cntxtSrchBx) {
				focusElem(cntxtSrchBx);
			} else if (inpBxs.length > 0) {
				for (var i = 0; i < inpBxs.length; i++) {
					if (!inpBxs[i].value) {
						focusElem(inpBxs[i]);
						break;
					} else {
						focusElem(qtyInpBx);
					}
				} 
			} else if (customSpecBx && !customSpecBx.value) {
				focusElem(customSpecBx)
			} else {
				focusElem(qtyInpBx);
			}
			
			// highlight previously ordered specs 
			highlightOrderedSpecs();
			
			// scroll to the cad image;
			if (webPartObj.ScrollToCadImgInd) {
				scrollToCadImg();
			}

			// take a snapshot
			var loadFrmSesnInd = McMaster.SesnMgr.GetStVal(McMaster.SesnMgr.StValDefs.ContentLoadFrmSesnInd.KyTxt());
            if (!loadFrmSesnInd) {
                ContentHistMgr.Take_Snapshot(ContentHistMgr.TYP.ITM_PRSNTTN_LOAD);
            }
			
			// create and publish a web part loaded message
			var msgHdr = new McMaster.MsgMgr.Hdr(McMaster.MsgMgr.CntxtNms.ITM_PRSNTTN);
			var msg = new McMaster.MsgMgrMsgs.WebPartLoaded(msgHdr, webPartObj.CntnrIDTxt);
			McMaster.MsgMgr.PubMsg(msg);
			
			//if cad exists, fire off 204 request so that webreports view is updated correctly
			var cad = Cmn.GetElementsByClsNm("CadWebPartLayout_DwnldOptsCntnr")[0];
			if (cad){
				Cmn.TrkAct("InLnOrdCADLnkClck&partnbr=" + webPartObj.PartNbrTxt, "InLnOrd");
			}
			
			// Item presentation specific "Is this page helpful?" feedback form 
			var feedbackFormTxt = Cmn.GetElementsByClsNm(FEEDBACK_FORM_TXT, "div");
			var feedbackForm;
			if (feedbackFormTxt && feedbackFormTxt.length > 0) {
				feedbackForm = Cmn.GetElementsByClsNm(FEEDBACK_FORM_TXT, "div")[0];
			}
			var viewportwidth = Cmn.GetViewportWidth();
			// Get the visitor ID specific feedback form auto open indicator
			var feedbackAutoOpenDisabled = false;
			feedbackAutoOpenDisabled = webPartObj.custDisableFdbkFrmAutoOpenPref;
			// Get environment - only consider auto-opening form in external environments
			// i.e., do not auto-open in internal environments
			var envr = Cmn.GetEnvrNm();
			if ((envr) && (envr == DEV || envr == QUAL || envr == PROD)) {
				if ((feedbackAutoOpenDisabled != null) && (feedbackAutoOpenDisabled == false)) {
					// Do not auto-open the form if auto-open is disabled
					if (feedbackForm && viewportwidth > 1279) {
						if (webPartObj.SpecSlctdInd && webPartObj.ItmPrsnttnFeedbackFormOpened){
							WebToolsetWebPart.HelpfulFeedbackTool_Open();
						} else if (webPartObj.SpecSlctdInd == false) {
							WebToolsetWebPart.HelpfulFeedbackTool_onLoad();
						}
					};
				};
			};
			
		};
		
		// --------------------------------------------------------
		// Summary: PreUnload
		// --------------------------------------------------------
		this.WebPart_PreUnload = function(webPartObj) {
			
			var mainContentCntnr = Cmn.GetObj("ItmPrsnttnWebPart");
			var qtyInpBx = Cmn.GetElementsByClsNm("InLnOrdWebPartLayout_InpBx", "input", mainContentCntnr)[0];
			var inpBxs = Cmn.GetElementsByClsNm("OtherValInpBx", "input", mainContentCntnr);
		
			//Remove spec interactions event listeners
			SpecInteractions.RemoveEvntListeners(webPartObj); 
			
			//remove image event listeners
			unloadImgEvntHndlrs(webPartObj);
			
			//Remove event listeners
			if (mainContentCntnr) {
				Cmn.RemEvntListener(mainContentCntnr, "click", hndlClickEvnt);
				Cmn.RemEvntListener(mainContentCntnr, "mouseover", hndlMouseoverEvnt);
				Cmn.RemEvntListener(mainContentCntnr, "mouseout", hndlMouseoutEvnt);
				Cmn.RemEvntListener(qtyInpBx, "keyup", hndlKeyUpEvnt);
				window.onbeforeprint = null;
			}

			for (var i = 0; i < inpBxs.length; i++) {
				Cmn.RemEvntListeners(inpBxs[i]);
			}
			
		};
		
		// --------------------------------------------------------
		// Summary: Unload
		// --------------------------------------------------------
		this.WebPart_Unload = function (webPartObj) {
		
			// remove site title text
			McMaster.SesnMgr.RemStVal(McMaster.SesnMgr.StValDefs.DynamicContentSiteTitleText.KyTxt());
		};
		
		/// End Region
		
		/// Region "Event Handlers"
		//-------------------------------------------------------------------------
		// <summary>
        // Handles the clicking event in the box
        // </summary>
        // <param name="e">The element clicked.</param>
        // </param>
		//-------------------------------------------------------------------------		
		var hndlClickEvnt = function (e) {
			
			if (e) {
				var targetElem = Cmn.GetEvntTarget(e);
				
				if (Cmn.HasCls(targetElem.parentNode, "InLnOrdWebPartLayout_AddtoOrd")) {
					hndlAddToOrdClick();
					
				} else if (Cmn.HasCls(targetElem, "RelItmLnk")) {
					hndlRelItmLnkClick(targetElem);
				
				} else if (isCadIndCntnr(targetElem)) {
					scrollToCadImg();
				
				} else if (Cmn.HasCls(targetElem, "AddtnlCntntLnk") || Cmn.HasCls(targetElem, "PrintLnk")) {
					hndlAddtnlCntntLnkClick(targetElem);
					
				} else if (Cmn.HasCls(targetElem, "AddnlInfoLnk")) {
					hndlAddnlInfoLnkClick(targetElem);
					
				} else if (Cmn.HasCls(targetElem, "DropDown")) {
					var attrCntnr = Cmn.GetAncestorByClsNm(targetElem, "AttrCntnr");
					var drpDwnMenuCntnr = Cmn.GetElementsByClsNm("Choices", "div", attrCntnr)[0];
					
					// toggle the drop down list
					if (Cmn.HasCls(drpDwnMenuCntnr, "Hide")) {
						Cmn.RemCls(drpDwnMenuCntnr, "Hide");
					} else {
						Cmn.AddCls(drpDwnMenuCntnr, "Hide");
					}
										
				} else if (Cmn.HasCls(targetElem, "AttrLstItm")) {
					hndlAttrLstItmClick(targetElem);

				} else {
					hideAttrMenus();
				}
			}
		};
		
		// --------------------------------------------------------
		// <summary>
		// Adds the selected product to the user's order. 
		// </summary>
		// <param name="btn">The click event on the add to order button.</param>
		// --------------------------------------------------------	
		var hndlAddToOrdClick = function () {
		
			var mainCntnr = Cmn.GetObj("ItmPrsnttnWebPart")
			  , partNbrLnk = getPartNbrLnk()
			  , attrWarningCntnr = Cmn.GetElementsByClsNm("InLnOrdWebPartLayout_WarningAlert", "div", mainCntnr)[0]
			  , qtyErrCntnr = Cmn.GetElementsByClsNm("InLnOrdWebPartLayout_QtyErr", "div", mainCntnr)[0]
			  , specCntnr = Cmn.GetElementsByClsNm("ItmPrsnttnWebPart_SpecCntnr", "div", mainCntnr)[0] 
			  , specItm = Cmn.GetElementsByClsNm("InLnOrdWebPartLayout_ItmSpecTxtBx", "textarea", mainCntnr)[0]
			  , qtyInpBx = Cmn.GetElementsByClsNm("InLnOrdWebPartLayout_InpBx", "input", Cmn.GetObj("InLnOrdWebPartLayout_QtyInp"))[0]
			  , qtyErrIsShowing = false
			  , attrErrIsShowing = false
			  , isInLnSpecInd = isInLnSpec(partNbrLnk)
			  , attrnms = []
			  , attrvals = []
			  , attrCompItmIds
			  , attrNmsQSTxt
			  , attrValsQSTxt
			  , specUsrInp
			  , qtyTxt;
			  
			// get quantity if the customer has typed it in
			if (qtyInpBx && qtyInpBx.value.length > 0) {
				qtyTxt = qtyInpBx.value;
				if (parseFloat(qtyTxt) == 0) {
					qtyTxt = "";
				}
			} else {
				qtyTxt = "";
			}
			
			if (partNbrLnk) {
				attrCompItmIds = partNbrLnk.getAttribute("data-mcm-attr-comp-itm-ids"); 
			}
			
			// If the quantity error is showing, set the qtyErrIsShowing indicator to true.
			// Pauses the add to order flow on the server side.
			if (qtyErrCntnr && qtyErrCntnr.innerHTML.length > 0) {
				qtyErrIsShowing = true;
			}
			
			// Attribute warning message flow should be the same for old and new stuff. Server should sort out the rest.
			// We consider the existence of warning message text as a suggestion.
			// When the customer clicks add to order, it becomes bold and we then consider it a warning.
			// This is when the attrErr is considered to be showing, which pauses the add to order flow.
			// Bolded class application is consistent with InLnOrder warning message flow.
			if (attrWarningCntnr && attrWarningCntnr.innerHTML.length > 0) {
				if (Cmn.HasCls(attrWarningCntnr, "bold")) { 
					attrErrIsShowing = true;
				}
			}
			
			if (isInLnSpecInd) {
				// Store values in "other" box in attrnms and attrvals
				var otherInpBxs = Cmn.GetElementsByClsNm("OtherValInpBx", "input", mainCntnr);
				
				if (otherInpBxs) {
					for (var i = 0; i < otherInpBxs.length; i++) {
						attrvals[attrvals.length] = otherInpBxs[i].value;
						var divId = Cmn.GetAncestorByClsNm(otherInpBxs[i], "SpecSrch_Attribute").id;
						var attrIdArray = divId.split("_");
						attrnms[attrnms.length] = attrIdArray[PUB_ATTR_ID_IDX];
					}
				}
				
				if (attrnms && attrvals) {
					attrNmsQSTxt = attrnms.join(String.fromCharCode(2029));
					attrValsQSTxt = attrvals.join(String.fromCharCode(2029));
				}
				
				specUsrInp = SpecSrchInp.Get();
				
			} else if (specCntnr) {
			
				var attrNms = Cmn.GetElementsByClsNm("AttrNm", "div", specCntnr)
				  , attrNmsData = []
				  , attrValsData = [];
				 
				// get all selected values
				for (var i = 0; i < attrNms.length; i++) {
					if (attrNms[i].getAttribute("data-mcm-slctd-val")) {
						attrNmsData[i] = attrNms[i].getAttribute("data-mcm-slctd-nm");
						attrValsData[i] = attrNms[i].getAttribute("data-mcm-slctd-val");
						if (attrValsData[i] == "Other") {
							var inpBx = Cmn.GetElementsByClsNm("OtherValInpBx", "input", specCntnr)[0];
							if (inpBx) {
								attrValsData[i] = inpBx.value;
							}
						}
					}
				}
			
				// get value from a custom specification box
				if (specItm) {
					attrNmsData[attrNmsData.length] = "Custom"
					attrValsData[attrValsData.length] = specItm.value;
				}
				
				if (attrNmsData && attrNmsData.length > 0) {
					attrNmsQSTxt = attrNmsData.join(String.fromCharCode(2029));
					attrValsQSTxt = attrValsData.join(String.fromCharCode(2029));
				}
			}
			
			if (mReadyNxtAjaxCallInd) {
			
				// Indicator to determine if an ajax call has already been made; will become
				// true once the success method has been executed. Prevents an item from being 
				// added multiple times if the add to order button is clicked quickly.
				mReadyNxtAjaxCallInd = false;
				
				var cnxnObj = {
					success: hndlAddToOrdAJAXResp,
					
					failure: function() {
						mReadyNxtAjaxCallInd = true;
					},
					
					abort: function() {
						mReadyNxtAjaxCallInd = true;
					},
					
					cnxnParm: {
						respTyp: McMaster.CnxnMgr.WEB_PART_RESP_TYP_TXT,
						PartNbrTxt: partNbrLnk.innerHTML,
						mainCntnr: mainCntnr,
						isInLnSpecInd: isInLnSpecInd
					}
				};
				
				var url = ITM_PRSNTTN_UPDT_HTTP_HANDLER_URL;
				url = Cmn.AddQSNmVal(url, ACT_TXT, ADD_ITM_CURR_ORD_QS_KY_TXT);
				url = Cmn.AddQSNmVal(url, PART_NBR_QS_KY_TXT, partNbrLnk.innerHTML);
				url = Cmn.AddQSNmVal(url, QTY_TXT_QS_KY_TXT, encodeURIComponent(qtyTxt));
				url = Cmn.AddQSNmVal(url, ATTR_NM_QS_KY_TXT, encodeURIComponent(attrNmsQSTxt));
				url = Cmn.AddQSNmVal(url, ATTR_VAL_QS_KY_TXT, encodeURIComponent(attrValsQSTxt));
				url = Cmn.AddQSNmVal(url, QTY_ERR_SHOWING_IND, qtyErrIsShowing);
				url = Cmn.AddQSNmVal(url, ATTR_ERR_SHOWING_IND, attrErrIsShowing);
				url = Cmn.AddQSNmVal(url, IS_INLNSPEC, isInLnSpecInd);
				url = Cmn.AddQSNmVal(url, ATTR_COMP_IDS, attrCompItmIds);
				
				if (specUsrInp) {
					url = specUsrInp.AddSpecUsrInpQS(url);
				}
				
				// Use Connection Manager to call the web part's HTTP handler.
				McMaster.CnxnMgr.PerformAjaxCnxn(url, cnxnObj);
				
				Cmn.AddCls(partNbrLnk, "AddToOrdBxOrdered");
				
				// search tracker
				var srchTrkInfo = new SrchTrkr.SrchDat({usr: SrchTrkr.UsrActTyps.SLCT});
				srchTrkInfo.usr.srcNm = "ItmPrsnttnWebPart";
				srchTrkInfo.usr.elemTyp = SrchTrkr.ElemTyps.ADD_TO_ORD_BTN;
				srchTrkInfo.usr.slctdNm = (partNbrLnk ? partNbrLnk.textContent : null) ? partNbrLnk.textContent : null;
				srchTrkInfo.usr.entryTxt = decodeURIComponent(qtyTxt);
				srchTrkInfo.Trk();
			
				// webreports tracking
				Cmn.TrkAct("ItmPrsnttnAddtoOrdClick&partnbr=" + partNbrLnk.innerHTML + "&qty=" + encodeURIComponent(qtyTxt), "ItmPrsnttn");	
			}
		};
		
		//-------------------------------------------------------------------------
		// <summary>
        // Handles related item link click
        // </summary>
        // <param name="targetElem">related item link that has been clicked</param>
        // </param>
		//-------------------------------------------------------------------------		
		var hndlRelItmLnkClick = function(targetElem){

			var relItmPartNbr = targetElem.getAttribute("data-mcm-part-nbr");

			if (relItmPartNbr){
				var partNbrLnk = getPartNbrLnk();
				var refPartNbr;
				if (partNbrLnk) {
					refPartNbr = partNbrLnk.innerHTML;
				}

				Cmn.TrkAct("ItmPrsnttnRelatedItmClick&reltditmpartnbr=" + relItmPartNbr + "&refpartnbr=" + refPartNbr, "ItmPrsnttn");
				
				var msgHdr = new McMaster.MsgMgr.Hdr(McMaster.MsgMgr.CntxtNms.ITM_PRSNTTN);
				var msg = new McMaster.MsgMgrMsgs.PartNbrSrchd(msgHdr, relItmPartNbr, refPartNbr);
				McMaster.MsgMgr.PubMsg(msg);
			}	
		};
				
		//-------------------------------------------------------------------------		
		// <summary>
		// Redirects the customer to additional content such as MSDS pages or CAD for printing
		// or product specification sheets depending on what content is available. 
		// </summary>
        // <param name="targetElem">additional content or print link that has been clicked</param>
        // </param>
		//-------------------------------------------------------------------------	
		var hndlAddtnlCntntLnkClick = function(targetElem){
			var partNbr = targetElem.getAttribute("data-mcm-part-nbr");
			var typ = targetElem.getAttribute("data-mcm-doc-typ");
			var docId = targetElem.getAttribute("data-mcm-doc-id");
			
			// Webreports tracking for Additional Content document click in Item Presentation
			if (Cmn.HasCls(targetElem, "AddtnlCntntLnk")) {
				Cmn.TrkAct("ItmPrsnttnAddnlCntntClick&partnbr=" + partNbr + "&docTyp=" + typ + "&docId=" + docId, "ItmPrsnttn");
			}else if(Cmn.HasCls(targetElem, "PrintLnk")) {
				Cmn.TrkAct("ItmPrsnttnCadPrintClick&partnbr=" + partNbr + "&docTyp=" + typ + "&docId=" + docId, "ItmPrsnttn");
			}
			
			if (partNbr && typ && docId){
				// Create url
				var url = "/addlcontent/loadaddcontent.asp?ID=" + docId + "&Type=" + typ;
				// Load url into MainIFrame
				McMasterCom.LoadMgr.LoadMainIFrame(url);	
			}	
		};
		
		//---------------------------------------------------------------------
		// Summary: Handles clicks on links. Gets the portion of the selected
		//          link after the hash symbol (#) and passes it along with 
		//          the context to a method that will publish the message.
		//
		// Input:   The element on the page that was clicked.
		//---------------------------------------------------------------------
		var hndlAddnlInfoLnkClick = function (targetElem) {
		
			// Get the portion of the selected link after the hash symbol #
			var selectedLink = decodeURIComponent(targetElem.hash.substring(1));
			
			var msgHdr = new McMaster.MsgMgr.Hdr(McMaster.MsgMgr.CntxtNms.FULL_PRSNTTN);
			var msg = new McMaster.MsgMgrMsgs.UsrInpTxtSubmitted(msgHdr, selectedLink, SrchTrkr.UsrActTyps.SLCT);
			McMaster.MsgMgr.PubMsg(msg);
		};
		
		//-------------------------------------------------------------------------
		// <summary>
        // Handles clicking on an old-style drop down element
        // </summary>
        // <param name="e">The element hovered over.</param>
        // </param>
		//-------------------------------------------------------------------------		
		var hndlAttrLstItmClick = function(targetElem) {
		
			var specCntnr = Cmn.GetObj("ItmPrsnttnWebPart_SpecCntnr")
			  , attrNms = Cmn.GetElementsByClsNm("AttrNm", "div", specCntnr)
			  , qtyInpBx = Cmn.GetElementsByClsNm("InLnOrdWebPartLayout_InpBx", "input", Cmn.GetObj("InLnOrdWebPartLayout_QtyInp"))[0]
			  , specItm = Cmn.GetElementsByClsNm("InLnOrdWebPartLayout_ItmSpecTxtBx", "textarea", specCntnr)[0]
			  , attrNmsData = []
			  , attrValsData = []
			  , attrNmsTxt = ""
			  , attrValsTxt = ""
			  , inpBxVal
			  , qtyBxVal;
			
			// get all selected values
			for (var i = 0; i < attrNms.length; i++) {
				if (attrNms[i].getAttribute("data-mcm-slctd-val")) {
					attrNmsData[i] = attrNms[i].getAttribute("data-mcm-slctd-nm");
					attrValsData[i] = attrNms[i].getAttribute("data-mcm-slctd-val");
					if (attrValsData[i] == "Other") {
						var inpBx = Cmn.GetElementsByClsNm("OtherValInpBx", "input", specCntnr)[0];
						if (inpBx) {
							inpBxVal = inpBx.value;
						}
					}
				}
			}
			
			// get value from a custom specification box
			if (specItm) {
				attrNmsData[attrNmsData.length] = "Custom"
				attrValsData[attrValsData.length] = specItm.value;
			}
			
			// get selected value
			var attrNmSlctd = targetElem.getAttribute("attrnm");
			var attrValSlctd = targetElem.innerHTML;
			var attrNmIndex = attrNmsData.indexOf(attrNmSlctd);
			var attrValIndex = attrValsData.indexOf(attrValSlctd);
											
			if (attrNmIndex == -1 && attrValIndex == -1) {
				// user selected a value, no current value selected
				attrNmsData = attrNmsData.concat(attrNmSlctd);
				attrValsData = attrValsData.concat(attrValSlctd);
				
			} else if (attrValIndex == -1) {
				// user selected a different value than the one currently selected
				attrNmsData.remove(attrNmIndex);
				attrValsData.remove(attrNmIndex); //remove the same thing from attrnms and attrvals
				attrNmsData = attrNmsData.concat(attrNmSlctd);
				attrValsData = attrValsData.concat(attrValSlctd);
				
			} else {
				// user selected a value already selected, deselect that value
				attrNmsData.remove(attrNmIndex);
				attrValsData.remove(attrNmIndex);
			}
								
			if (attrNmsData && attrNmsData.length > 0) {
				attrNmsTxt = attrNmsData.join(String.fromCharCode(2029));
				attrValsTxt = attrValsData.join(String.fromCharCode(2029));
			}
			
			//save quantity if the customer has typed it in
			if (qtyInpBx && qtyInpBx.value.length > 0) {
				qtyBxVal = qtyInpBx.value;
			}
			
			var msgHdr = new McMaster.MsgMgr.Hdr(McMaster.MsgMgr.CntxtNms.ITM_PRSNTTN);
			var msg = new McMaster.MsgMgrMsgs.ItmPrsnttnSpecSlctd(msgHdr, attrNmsTxt, attrValsTxt, inpBxVal, qtyBxVal, false);
			McMaster.MsgMgr.PubMsg(msg);		
		};
		
		//-------------------------------------------------------------------------
		// <summary>
        // Handles mousing over an element
        // </summary>
        // <param name="e">The element hovered over.</param>
        // </param>
		//-------------------------------------------------------------------------		
		var hndlMouseoverEvnt = function (e) {
						
			if (e) {
				var hoveredElem = Cmn.GetEvntTarget(e);
				if (Cmn.HasCls(hoveredElem, "AttrLstItm")) {
					Cmn.AddCls(hoveredElem,"InLnOrdWebPartLayout_AttrHighlight");
					
				} else if (Cmn.HasCls(hoveredElem, "InLnOrdWebPartLayout_AddToOrdIconGreyImg")) {
					Cmn.ReplaceCls(hoveredElem, "InLnOrdWebPartLayout_AddToOrdIconGreyImg", "InLnOrdWebPartLayout_AddToOrdIconBlackImg");
					
				} else if (Cmn.HasCls(hoveredElem, "specTblRow")) {
					Cmn.AddCls(hoveredElem, "SpecSrch_Value_Hover");
					
				} else if (Cmn.HasCls(hoveredElem, "SpecTblAttrCell") || Cmn.HasCls(hoveredElem, "SpecTblValCell")) {
					var tblRow = hoveredElem.parentNode;
					if (tblRow) {
						Cmn.AddCls(tblRow, "SpecSrch_Value_Hover");
					}
				} else if (Cmn.HasCls(hoveredElem, "AddtnlCntntLnk")){
					var tblRow = hoveredElem.parentNode.parentNode;
					if (tblRow) {
						Cmn.AddCls(tblRow, "SpecSrch_Value_Hover");
					}
					
				} else if (Cmn.HasCls(hoveredElem, "SpecChoiceFraction")) {
					var specFrc = hoveredElem.parentNode.parentNode;
					if (specFrc) {		
						Cmn.AddCls(specFrc, "SpecSrch_Value_Hover");
					}
					
				} else if (Cmn.HasCls(hoveredElem, "ItmTblCellSpec")) {
					var itmTblRow = hoveredElem.parentNode;
					if (itmTblRow) {
						Cmn.AddCls(itmTblRow, "SpecSrch_Value_Hover");
					}
				}
			}
		};
		
		//-------------------------------------------------------------------------
		// <summary>
        // Handles mousing out of an element
        // </summary>
        // <param name="e">The element hovered over.</param>
        // </param>
		//-------------------------------------------------------------------------
		var hndlMouseoutEvnt = function (e) {
						
			if (e) {
				var hoveredElem = Cmn.GetEvntTarget(e);
				if (Cmn.HasCls(hoveredElem, "AttrLstItm")) {
					Cmn.RemCls(hoveredElem,"InLnOrdWebPartLayout_AttrHighlight");
					
				} else if (Cmn.HasCls(hoveredElem, "InLnOrdWebPartLayout_AddToOrdIconBlackImg")) {
					Cmn.ReplaceCls(hoveredElem, "InLnOrdWebPartLayout_AddToOrdIconBlackImg", "InLnOrdWebPartLayout_AddToOrdIconGreyImg");
					
				} else if (Cmn.HasCls(hoveredElem, "specTblRow")) {
					Cmn.RemCls(hoveredElem, "SpecSrch_Value_Hover");
					
				} else if (Cmn.HasCls(hoveredElem, "SpecTblAttrCell") || Cmn.HasCls(hoveredElem, "SpecTblValCell")) {
					var tblRow = hoveredElem.parentNode;
					if (tblRow) {
						Cmn.RemCls(tblRow, "SpecSrch_Value_Hover");
					}
				
				} else if (Cmn.HasCls(hoveredElem, "AddtnlCntntLnk")){
					var tblRow = hoveredElem.parentNode.parentNode;
					if (tblRow) {
						Cmn.RemCls(tblRow, "SpecSrch_Value_Hover");
					}
					
				} else if (Cmn.HasCls(hoveredElem, "SpecChoiceFraction")) {
					var specFrc = hoveredElem.parentNode.parentNode;
					if (specFrc) {		
						Cmn.RemCls(specFrc, "SpecSrch_Value_Hover");
					}
					
				} else if (Cmn.HasCls(hoveredElem, "ItmTblCellSpec")) {
					var itmTblRow = hoveredElem.parentNode;
					if (itmTblRow) {
						Cmn.RemCls(itmTblRow, "SpecSrch_Value_Hover");
					}
				}
			}
		};
		
		//-------------------------------------------------------------------------
		// <summary>
        // Checks the key press from the input box for enters and 
        // calls the add to order function if so.
        // </summary>
        // <param name="e"> The key up event on the input quantity box. </param>
        //-------------------------------------------------------------------
		var hndlKeyUpEvnt = function (e) {
		
			if (e) {
				var targetElem = Cmn.GetEvntTarget(e);
				if (e.keyCode == ENT_KY_CD) {
					hndlAddToOrdClick();
				} else {
					var mainContentCntnr = Cmn.GetObj("ItmPrsnttnWebPart");
					var qtyErrCntnr = Cmn.GetElementsByClsNm("InLnOrdWebPartLayout_QtyErr", "div", mainContentCntnr)[0];
					qtyErrCntnr.innerHTML = "";
				}
			}
		};
			
		// -------------------------------------------------
		// Summary: Handle blur event 
		// Input: event
		// --------------------------------------------------
		var hndlBlurEvnt = function (e) {
		
			if (e) {
				var blurElem = Cmn.GetEvntTarget(e);
				
				if (Cmn.HasCls(blurElem, "OtherValInpBx")) {
					var mainCntnr = Cmn.GetObj("ItmPrsnttnWebPart")
					  , qtyInpBx = Cmn.GetElementsByClsNm("InLnOrdWebPartLayout_InpBx", "input", Cmn.GetObj("InLnOrdWebPartLayout_QtyInp"))[0]
					  , specAttrCntnr = Cmn.GetAncestorByClsNm(blurElem, "SpecSrch_Attribute")
					  , specValCntnr = Cmn.GetElementsByClsNm("SpecSrch_Value", "td", specAttrCntnr)[0]
					  , attrnmsTxt = McMaster.SesnMgr.GetStVal(McMaster.SesnMgr.StValDefs.OldStylAttrNms.KyTxt())
					  , attrvalsTxt = McMaster.SesnMgr.GetStVal(McMaster.SesnMgr.StValDefs.OldStylValTxts.KyTxt())
					  , attrnms = []
					  , attrvals = []
					  , attrcompitmids = getPartNbrLnk().getAttribute("data-mcm-attr-comp-itm-ids")
					  , isInLnSpecInd = isInLnSpecInd = isInLnSpec(getPartNbrLnk())
					  , attrNmSlctd
					  , attrValSlctd;
					
					var specUsrInp = SpecSrchInp.Get();
					
					if (attrnmsTxt && attrvalsTxt) {
						attrnms = attrnmsTxt.split(String.fromCharCode(2029));
						attrvals = attrvalsTxt.split(String.fromCharCode(2029));
					}
					
					//for title input boxes
					if (specValCntnr && specValCntnr.innerHTML.lastIndexOf("Other") > -1) { 
						var attrIdArray = specValCntnr.id.split("_")
						var pubAttrId = attrIdArray[PUB_ATTR_ID_IDX];
						var prodAttrId = attrIdArray[PROD_ATTR_ID_IDX];
						var prodValId = attrIdArray[PROD_VAL_ID_IDX];
						var pubValId = attrIdArray[PUB_VAL_ID_IDX];

						//specusrinp
						var cntxtNm = McMaster.MsgMgr.CntxtNms.ITM_PRSNTTN;
						specUsrInp.AddVal(prodAttrId, pubAttrId, prodValId, pubValId, cntxtNm);
						specUsrInp.UpdateSession();
					}
				
				
					if (isInLnSpecInd) {
						attrNmSlctd = Cmn.GetAncestorByClsNm(blurElem, "SpecSrch_Attribute").id.split("_")[PUB_ATTR_ID_IDX];
					} else {
						var attrCntnr = Cmn.GetAncestorByClsNm(blurElem, "AttrCntnr")[0];
						attrNmSlctd = Cmn.GetElementsByClsNm("AttrNm", "div", attrCntnr)[0].getAttribute("data-mcm-slctd-nm");
					}
					attrValSlctd = blurElem.value
					
					var attrNmIndex = attrnms.indexOf(attrNmSlctd);
					
					if (attrNmIndex == -1) {
						// user selected a value, no current value selected
						attrnms = attrnms.concat(attrNmSlctd);
						attrvals = attrvals.concat(attrValSlctd);
						
					} else if (attrNmIndex > -1 && attrvals[attrNmIndex] != attrValSlctd){
						// user selected a different value than the one currently selected
						attrnms.remove(attrNmIndex);
						attrvals.remove(attrNmIndex); 
						attrnms = attrnms.concat(attrNmSlctd);
						attrvals = attrvals.concat(attrValSlctd);
				
					} 
					
					attrNmsTxt = attrnms.join(String.fromCharCode(2029));
					attrValsTxt = attrvals.join(String.fromCharCode(2029));
					
					McMaster.SesnMgr.SetStVal(McMaster.SesnMgr.StValDefs.OldStylAttrNms.KyTxt(), attrNmsTxt);
					McMaster.SesnMgr.SetStVal(McMaster.SesnMgr.StValDefs.OldStylValTxts.KyTxt(), attrValsTxt);	
					
					var cnxnObj = {
						success: function (webPartObj, reqArgs) {
							ItmPrsnttnWebPartLoader.loadDynamicDat(webPartObj);
						},
					
						cnxnParm: {
							respTyp: McMaster.CnxnMgr.WEB_PART_RESP_TYP_TXT,
							PartNbrTxt: getPartNbrLnk().innerHTML,
							mainCntnr: mainCntnr,
							isInLnSpecInd: isInLnSpecInd
						}
					};
					
					var url = ITM_PRSNTTN_UPDT_HTTP_HANDLER_URL;
					url = Cmn.AddQSNmVal(url, ACT_TXT, DYNAMIC_DAT_QS_KY_TXT);
					url = Cmn.AddQSNmVal(url, PART_NBR_QS_KY_TXT, getPartNbrLnk().innerHTML);
					url = Cmn.AddQSNmVal(url, QTY_TXT_QS_KY_TXT, encodeURIComponent(qtyInpBx.value));
					url = Cmn.AddQSNmVal(url, ATTR_NM_QS_KY_TXT, encodeURIComponent(attrNmsTxt));
					url = Cmn.AddQSNmVal(url, ATTR_VAL_QS_KY_TXT, encodeURIComponent(attrValsTxt));
					url = Cmn.AddQSNmVal(url, IS_INLNSPEC, isInLnSpecInd);
					url = Cmn.AddQSNmVal(url, ATTR_COMP_IDS, attrcompitmids);
				
					if (specUsrInp) {
						url = specUsrInp.AddSpecUsrInpQS(url);
					}
				
					// Use Connection Manager to call the web part's HTTP handler.
					McMaster.CnxnMgr.PerformAjaxCnxn(url, cnxnObj);
				}
			}
		};
		
		/// End Region
		
		/// Region "Private Methods"
		//-------------------------------------------------------------------------
		// <summary>
		// Checks if this is new easy to order stuff.
		// </summary>
		//-------------------------------------------------------------------------
		var isInLnSpec = function (partNbrLnk) {
			var rtnVal = false;
			if (partNbrLnk) {
				var attrCompIdsTxt = partNbrLnk.getAttribute("data-mcm-attr-comp-itm-ids");
				if (attrCompIdsTxt) {
					rtnVal = true;
				}
			}
			return rtnVal;
		};
		
		//-------------------------------------------------------------------------
		// <summary>
		// Get normal part number link not the print version
		// </summary>
		//-------------------------------------------------------------------------
		var getPartNbrLnk = function() {
			var partNbrLnks = Cmn.GetElementsByClsNm("PartNbr");	
			var partNbrLnk;
			if (partNbrLnks.length > 0){
				for (var i=0; i<partNbrLnks.length; i++){
					if (!Cmn.HasCls(partNbrLnks[i], "printver")){
						partNbrLnk = partNbrLnks[i];
						break;
					}
				}
			}		
			return partNbrLnk;
		};
		
		//-------------------------------------------------------------------------
		// <summary>
		// Populate titled input and "other" boxes
		// </summary>
		//-------------------------------------------------------------------------
		var populateInpBoxes = function(webPartObj) {
			
			var mainContentCntnr = Cmn.GetObj("ItmPrsnttnWebPart")
			  , inpBxs = Cmn.GetElementsByClsNm("OtherValInpBx", "input", mainContentCntnr)
			  , customSpecBx = Cmn.GetElementsByClsNm("InLnOrdWebPartLayout_ItmSpecTxtBx", "textarea", mainContentCntnr)[0]
			  , attrNms = webPartObj.AttrNmsTxt.split(String.fromCharCode(2029))
			  , attrVals = webPartObj.AttrValsTxt.split(String.fromCharCode(2029))
			  , isInLnSpecInd = isInLnSpec(getPartNbrLnk())
			  , attrNm
			  , attrVal;
			
			for (var i = 0; i < inpBxs.length; i++) {
				if (isInLnSpecInd) {
						attrNm = Cmn.GetAncestorByClsNm(inpBxs[i], "SpecSrch_Attribute").id.split("_")[PUB_ATTR_ID_IDX];
					} else {
						var attrCntnr = Cmn.GetAncestorByClsNm(inpBxs[i], "AttrCntnr")[0];
						attrNm = Cmn.GetElementsByClsNm("AttrNm", "div", attrCntnr)[0].getAttribute("data-mcm-slctd-nm");
				}
				
				var idx = attrNms.indexOf(attrNm);
				
				if (!isInLnSpecInd && attrVals[idx] == "Other") {
					if (webPartObj.InpBxVal) {
						inpBxs[i].value = webPartObj.InpBxVal;
					} else {
						inpBxs[i].value = ""
					}
				} else {
					inpBxs[i].value = attrVals[idx];
				}
			}
			
			if (customSpecBx) {
				var idx = attrNms.indexOf("Custom");
				if (idx > -1) {
					customSpecBx.value = attrVals[idx];
				}
			}
		};
		
		//--------------------------------------------------------------------------
		// <summary>
		// Set catalog page numbers
		// </summary>
		// <param name="webPartObj">
		// web part object
		// </param>
		//--------------------------------------------------------------------------
		var setCtlgPage = function(ctlgPageNbrs, partNbr) {			

			if (ctlgPageNbrs && ctlgPageNbrs.length > 0) {
				McMaster.SesnMgr.SetStVal(McMaster.SesnMgr.StValDefs.CurrCtlgPgNbr.KyTxt(), ctlgPageNbrs[0]);
				McMaster.SesnMgr.SetStVal(McMaster.SesnMgr.StValDefs.CurrRelatedCtlgPgsTxt.KyTxt(), ctlgPageNbrs.toString());
			} else {
				// Clear session state
				McMaster.SesnMgr.RemStVal(McMaster.SesnMgr.StValDefs.CurrCtlgPgNbr.KyTxt());
				McMaster.SesnMgr.RemStVal(McMaster.SesnMgr.StValDefs.CurrRelatedCtlgPgsTxt.KyTxt());
			}
			
			// set catalog page opt out url
			var ctlgPgOptOutLnk = Cmn.GetElementsByClsNm("WebToolsetWebPart_Icon_CtlgOptOut", "a")[0];
			var rltdPagesSesnValTxt = McMaster.SesnMgr.GetStVal(McMaster.SesnMgr.StValDefs.CurrRelatedCtlgPgsTxt.KyTxt());
			if (ctlgPgOptOutLnk && rltdPagesSesnValTxt) {
				if (rltdPagesSesnValTxt.split(",").length > 1) {
					ctlgPgOptOutLnk.setAttribute('href', '#catalog/' + rltdPagesSesnValTxt.split(",")[0] + "/" + partNbr);
				} else {
					ctlgPgOptOutLnk.setAttribute('href', '#catalog/' + rltdPagesSesnValTxt + "/" + partNbr);
				}
			}
		};
		
		//-------------------------------------------------------------------------
		// <summary>
		// Highlights previously ordered specs (color, length, size)
		// </summary>
		//-------------------------------------------------------------------------
		var highlightOrderedSpecs = function() {
			var prtNbrsToHighlight = McMaster.SesnMgr.GetStVal(McMaster.SesnMgr.StValDefs.FndAgainPrtNbrsToHighlight.KyTxt());
			var locPrtNbrsToHighlight = McMaster.SesnMgr.GetStVal(McMaster.SesnMgr.StValDefs.FndAgainLocPrtNbrsToHighlight.KyTxt());

			// Ensure compatibility of code below with IE<9 browsers, support Array.indexOf
            if (!('indexOf' in Array.prototype)) {
                Array.prototype.indexOf = function (find, i /*opt*/) {
                    if (i === undefined) i = 0;
                    if (i < 0) i += this.length;
                    if (i < 0) i = 0;
                    for (var n = this.length; i < n; i++)
                        if (i in this && this[i] === find)
                            return i;
                    return -1;
                }
            };
			
            // Highlight specs for visitor's part numbers
            if (prtNbrsToHighlight) {
				var orderedSpecIdVals = McMaster.SesnMgr.GetStVal(McMaster.SesnMgr.StValDefs.FndAgainSpecIdValsToParts.KyTxt()); 
				var specValLnks = Cmn.GetElementsByClsNm("SpecSrch_Value", "td");
				var partNbrElem = getPartNbrLnk();
				var len = specValLnks.length; 
				if (len > 0) {
					for (var i = 0; i < len; i++) {
						var partNbrMatchInd = false;
						var currPartNbr = partNbrElem.innerHTML; 
						var partNbrAttrId = partNbrElem.getAttribute("data-mcm-attr-comp-itm-ids");
						if (partNbrAttrId){
							var partNbrAttrIdList = partNbrAttrId.split(",");
							if (partNbrAttrIdList.length > 0){
							    if (currPartNbr && prtNbrsToHighlight[currPartNbr]) {
								    var specValIdArray = specValLnks[i].id.split('_');
								    var currSpecProdId = specValIdArray[2];
								    var currSpecProdValId = specValIdArray[5];
								    var prodValIdPair = currSpecProdId + ";" + currSpecProdValId;
					        	}
								if (orderedSpecIdVals[prodValIdPair]) {
									var specPartNbrArray = orderedSpecIdVals[prodValIdPair].split("|");
									for (var j = 0; j < specPartNbrArray.length; j++) {
									    if (specPartNbrArray[j] === currPartNbr ||
											(partNbrAttrIdList && (partNbrAttrIdList.indexOf(prtNbrsToHighlight[specPartNbrArray[j]]) >= 0))) {
											partNbrMatchInd = true;
											break;
										}
									}
									if (partNbrMatchInd) {
										Cmn.AddCls(specValLnks[i], "SpecSrch_Value_OrdrdLnk");
									}
								}
							}
						}
					}
				}
            }

            // Highlight specs for parts ordered by others at visitor's location
            if (locPrtNbrsToHighlight) {
                var orderedSpecIdVals = McMaster.SesnMgr.GetStVal(McMaster.SesnMgr.StValDefs.FndAgainSpecIdValsToParts.KyTxt());
                var specValLnks = Cmn.GetElementsByClsNm("SpecSrch_Value", "td");
                var partNbrElem = getPartNbrLnk();
                var len = specValLnks.length;
                if (len > 0) {
                    for (var i = 0; i < len; i++) {
                        var partNbrMatchInd = false;
                        var currPartNbr = partNbrElem.innerHTML;
                        var partNbrAttrId = partNbrElem.getAttribute("data-mcm-attr-comp-itm-ids");
                        if (partNbrAttrId) {
                            var partNbrAttrIdList = partNbrAttrId.split(",");
                            if (partNbrAttrIdList.length > 0) {
                                if (currPartNbr && locPrtNbrsToHighlight[currPartNbr]) {
                                    var specValIdArray = specValLnks[i].id.split('_');
                                    var currSpecProdId = specValIdArray[2];
                                    var currSpecProdValId = specValIdArray[5];
                                    var prodValIdPair = currSpecProdId + ";" + currSpecProdValId;
                                }
                                if (orderedSpecIdVals[prodValIdPair]) {
                                    var specPartNbrArray = orderedSpecIdVals[prodValIdPair].split("|");
                                    for (var j = 0; j < specPartNbrArray.length; j++) {
                                        if (specPartNbrArray[j] === currPartNbr ||
											(partNbrAttrIdList && (partNbrAttrIdList.indexOf(locPrtNbrsToHighlight[specPartNbrArray[j]]) >= 0))) {
                                            partNbrMatchInd = true;
                                            break;
                                        }
                                    }
                                    if (partNbrMatchInd) {
                                        Cmn.AddCls(specValLnks[i], "SpecSrch_Value_OrdrdLnk");
                                    }
                                }
                            }
                        }
                    }
                }
            }
		}
		
		//-------------------------------------------------------------------------
		// <summary>
        // track print if browser's native print was used
        // </summary>
        // <param name="e">The element clicked.</param>
        // </param>
		//-------------------------------------------------------------------------	
		var trkBrowserPrint = function() {
			Cmn.TrkAct("ItmPrsnttnBrowserPrintForIEandFireFox", "ItmPrsnttn");
		};
		
		//-------------------------------------------------------------------------
		// <summary>
        // Hides old style attribute menus
        // </summary>
      	//-------------------------------------------------------------------------		
		var hideAttrMenus = function () {
			var drpDwnMenuCntnrs = Cmn.GetElementsByClsNm("Choices");
			
			for(loopIdx = 0; loopIdx < drpDwnMenuCntnrs.length; loopIdx++) {
				Cmn.AddCls(drpDwnMenuCntnrs[loopIdx], "Hide");
			}
		};	
		
		//-------------------------------------------------------------------------
		// <summary>
        // figure out if the target element belongs to cad indicator cntnr
        // </summary>
        // <param name="clickedElem">clicked element</param>
        // </param>
		//-------------------------------------------------------------------------	
		var isCadIndCntnr = function(clickedElem){
			var rtnInd = false;
		
            var testMthd = function(elem) {
				var successInd = false;
				if (Cmn.HasCls(elem, "CadIndCntnr")) {
					successInd = true;
				}
				return successInd;
			}
			
			if (Cmn.HasCls(clickedElem, "CadIndCntnr") || Cmn.GetAncestorBy(clickedElem, testMthd)){
				rtnInd = true;
			}
			
			return rtnInd;
		};
		
		//---------------------------------------------------------------------
		// Summary: Scroll to the cad image
		//---------------------------------------------------------------------
		var scrollToCadImg = function() {
			var cadCntnr = Cmn.GetObj("CadWebPart_cadDatCntnr");
			var scrollCntnr = getScrollableCntnr();
			
			var toolSetCntnr = Cmn.GetElementBy(function (elem) { return Cmn.HasCls(elem, "WebToolsetWebPart_Cntnr"); }, "div", scrollCntnr);
			if (toolSetCntnr) {
				TOOLSET_HGT = Cmn.GetHeight(toolSetCntnr);
			} else {
				TOOLSET_HGT = 0;
			}
			var headerCntnr = Cmn.GetObj("ShellLayout_Header_Cntnr")
			if (headerCntnr) {
				MASTHEAD_HGT = Cmn.GetHeight(headerCntnr);
			} else {
				MASTHEAD_HGT = 0;
			}
			
			if (cadCntnr && scrollCntnr){
				var cadCntnrPosn = Cmn.GetY(cadCntnr) - TOOLSET_HGT - MASTHEAD_HGT;
				var origScrollPosn = Cmn.GetVerticalScrollPosn(scrollCntnr);
				var newScrollPosn = origScrollPosn + cadCntnrPosn;
				Cmn.SetVerticalScrollPosn(scrollCntnr, newScrollPosn);
			}
		};
		
		//-------------------------------------------------------------------------
		// <summary>
        // The success function that gets executed when the call to 
        // add to order comes back from the server.
        // </summary>
        // <param name="webPartObj">The web part object.</param>
        // <param name="respArgs"></param>
		//-------------------------------------------------------------------------
		var hndlAddToOrdAJAXResp = function(webPartObj, respArgs){
			
			// The indicator is set to true once the success method has completed. Needs to be
			// set to false in order to execute another AJAX call.
			mReadyNxtAjaxCallInd = true;
			
			if (webPartObj) {
				// Get the main container. 
				var itmPrsnttnMainCntnr = respArgs.mainCntnr;
				var partNbrTxt = respArgs.PartNbrTxt;
				var isInLnSpecInd = respArgs.isInLnSpecInd;

				if (itmPrsnttnMainCntnr) {
					var inpBx = Cmn.GetElementsByClsNm("InLnOrdWebPartLayout_InpBx", "input", itmPrsnttnMainCntnr)[0];
					var warningMsgCntnr = Cmn.GetElementsByClsNm("InLnOrdWebPartLayout_WarningAlert", "div", itmPrsnttnMainCntnr)[0];
					var qtyErrCntnr = Cmn.GetElementsByClsNm("InLnOrdWebPartLayout_QtyErr", "div", itmPrsnttnMainCntnr)[0];
					
					if (webPartObj.WarningMsg.length > 0) {
						// display warning text
						if (warningMsgCntnr) {
							Cmn.AddCls(warningMsgCntnr, "bold");
							warningMsgCntnr.innerHTML = webPartObj.WarningMsg;
						}
						Cmn.TrkAct("ItmPrsnttnAttrErr&partnbr=" + partNbrTxt, "ItmPrsnttn");
						
					} else if (webPartObj.QtyErrMsg.length > 0) {
						// display qty warning text
						qtyErrCntnr.innerHTML = webPartObj.QtyErrMsg;
						inpBx.select();
						Cmn.TrkAct("ItmPrsnttnQtyPck&partnbr=" + partNbrTxt, "ItmPrsnttn");
						
					} else {
						// Replace the content of the ordcnfmsgcntnr with the confirmation message. 
						var ordConfMsgCntnr = Cmn.GetElementsByClsNm("InLnOrdWebPartLayout_OrdConfMsgCntnr", "div", itmPrsnttnMainCntnr)[0];
						if (ordConfMsgCntnr) {
							ordConfMsgCntnr.innerHTML = webPartObj.MarkupTxt;
							Cmn.AddCls(ordConfMsgCntnr, "InLnOrdWebPartLayout_ItmAddedMsg");
							if (webPartObj.MarkupTxt.length > 0){
								var qtyBx = Cmn.GetElementsByClsNm("InLnOrdWebPartLayout_InpBx", "input", itmPrsnttnMainCntnr)[0];
								if (qtyBx) {
									qtyBx.value = "";
								}
							}
						}
						
						//Hide the qtyErr and warningMsg inner HTMLs. This is not ideal, but necessary.
						qtyErrCntnr.innerHTML = "";
						if (warningMsgCntnr) {
							warningMsgCntnr.innerHTML = "";
						}
						
						// Publish the order lines updated message. 
						var msgHdr = new McMaster.MsgMgr.Hdr(McMaster.MsgMgr.CntxtNms.INLN_ORD);
						var msg = new McMaster.MsgMgrMsgs.OrdLnsUpdated(msgHdr);
						McMaster.MsgMgr.PubMsg(msg);
					}
				}
			}
		};
		
		//-------------------------------------------------------------------------
		// Summary: set focus on the input element
		//-------------------------------------------------------------------------
		var focusElem = function(elem) {
			if (elem.setSelectionRange) {
				elem.focus();
				elem.setSelectionRange(elem.value.length, elem.value.length);
			} else if (elem.createTextRange) {
				// IE
				var range = elem.createTextRange();
				range.collapse(true);
				range.moveEnd('character', elem.value.length);
				range.moveStart('character', elem.value.length);
				range.select();
			}
		};
		
		/// End Region
		
		/// Region "Image Mouseover Methods"
		//---------------------------------------------------------------------
		// Summary: Create all event handlers for the images
		//---------------------------------------------------------------------
		var crteImgEvntHndlrs = function (webPartObj) {

			// add mouseover event for image Overlay
			var testMthd = function (elem) {
				var rtnInd = false;
				if (Cmn.GetAncestorByClsNm(elem, "CADImgCaptionCntnr")) {
					rtnInd = true;
				}
				return rtnInd;
			};

			var imgs = Cmn.GetElementsBy(testMthd, "img", Cmn.GetObj(webPartObj.CntnrIDTxt));
			for (var idx = 0; idx < imgs.length; idx++) {

				var elemToAddEvnt = imgs[idx].parentNode;

				Cmn.AddEvntListener(elemToAddEvnt, "mouseover", function (e) {
					hndlImgMouseOverEvnt(e);
				});
				Cmn.AddEvntListener(elemToAddEvnt, "mouseout", function () {
					hndlImgMouseOutEvnt();
				});

				Cmn.AddEvntListener(elemToAddEvnt, "mousedown", function () {
					hndlImgMouseDownEvnt();
				});

				Cmn.AddEvntListener(elemToAddEvnt, "click", function (e) {
					var clickedElem = Cmn.GetEvntTarget(e);
					hndlCADImgClick(clickedElem);
				});
			}
		}

		//---------------------------------------------------------------------
		// Summary: Unload all image event handlers
		//---------------------------------------------------------------------
		var unloadImgEvntHndlrs = function (webPartObj) {

			var testMthd = function (elem) {
				var rtnInd = false;
				if (Cmn.GetAncestorByClsNm(elem, "CADImgCaptionCntnr")) {
					rtnInd = true;
				}
				return rtnInd;
			};

			var outerDiv = Cmn.GetObj(webPartObj.CntnrIDTxt + "OverlayImgID"),
					imgs = Cmn.GetElementsBy(testMthd, "img", Cmn.GetObj(webPartObj.CntnrIDTxt)),
					imgCaptionsCntnrs = Cmn.GetElementsByClsNm("CADImgCaptionCntnr");

			for (var idx = 0; idx < imgCaptionsCntnrs.length; idx++) {
				Cmn.RemEvntListener(imgCaptionsCntnrs[idx], "mouseover", hndlImgMouseOverEvnt);
				Cmn.RemEvntListener(imgCaptionsCntnrs[idx], "mouseout", hndlImgMouseOutEvnt);
				Cmn.RemEvntListener(imgCaptionsCntnrs[idx], "mousedown", hndlImgMouseDownEvnt);
				Cmn.RemEvntListener(imgCaptionsCntnrs[idx], "click", hndlCADImgClick);
			}

			if (outerDiv) {
				var testImgMthd = function (elem) {
					return true;
				},
					largeImgs = Cmn.GetElementsBy(testImgMthd, "img", outerDiv),
					largeImg = null;

				// handle long captions with small images so the captions will wrap
				if (largeImgs && largeImgs.length > 0) {
					largeImg = largeImgs[0];
				}
				if (largeImg) {
					Cmn.RemEvntListener(largeImg, "load");
				}
				Cmn.RemEvntListener(outerDiv, "mouseout");
				Cmn.RemEvntListener(outerDiv, "click");
				Cmn.RemElem(outerDiv);
			}

		};
		
		//---------------------------------------------------------------------
		// Summary: This method is called whenever the user mouses over an image
		// Input:   e - The event argument, used to determine what was moused over.
		//			cntnrIDTxt - container for the element
		//---------------------------------------------------------------------
		var hndlImgMouseOverEvnt = function (e) {
			if (e) {
				var targetElem = Cmn.GetEvntTarget(e)
				var img = getImgFromImgCaptionCompElem(targetElem);
				
				if (img && targetElem.tagName.toLowerCase() == "img") {
					chgimg(img);
				}
			}
		};
		
	    //---------------------------------------------------------------------
		// Summary: This method is called whenever the user mouses down on an image
		//---------------------------------------------------------------------
		var hndlImgMouseDownEvnt = function () {
			if (mImgTimer) {
				clearTimeout(mImgTimer);
			}
		};

		//---------------------------------------------------------------------
		// Summary: This method is called whenever the user mouses over an image
		// Input:   e - The event argument, used to determine what was moused out of.
		//---------------------------------------------------------------------
		var hndlImgMouseOutEvnt = function () {
			if (mImgTimer) {
				clearTimeout(mImgTimer);
			}
		};

		//---------------------------------------------------------------------
		// Summary: This method is called whenever there is a 
		//               a mouseout event on the image Overlay.
		// Input:   e - The event argument, used to determine what was clicked.
		//---------------------------------------------------------------------
		var hndlImgOverlayMouseOutEvnt = function (e, cntnrIDTxt, imgBox) {
			var hoveredCell = null,
					targetTyp = "";
			if (e) {
				var targetElem = Cmn.GetEvntTarget(e),
									pageX = Cmn.GetEvntPageX(e),
									pageY = Cmn.GetEvntPageY(e),
									imgBoxX = Cmn.GetX(imgBox),
									imgBoxY = Cmn.GetY(imgBox),
									imgBoxHgtPxCnt = Cmn.GetHeight(imgBox),
									imgBoxWdthPxCnt = Cmn.GetWidth(imgBox);

				//mouseout event to hide image overlay---last condition is a fix for
				//Safari, which passes a strange number for mouse position when using 
				//right click menu to copy text. 
				if ((pageX <= imgBoxX || pageX >= imgBoxX + imgBoxWdthPxCnt
						|| pageY < imgBoxY || pageY > imgBoxY + imgBoxHgtPxCnt)
						&& (pageX > -32000 && pageY > -32000)) {
					hideImgOverlay(targetElem, cntnrIDTxt);
				}

			}
		};
		
		//-------------------------------------------------------------------------		
		// <summary>
		// Handle cad image click
		// </summary>
        	// <param name="targetElem">CAD image that has been clicked</param>
        	// </param>
		//-------------------------------------------------------------------------	
		var hndlCADImgClick = function(targetElem) {
		
			var qtyInpBx = Cmn.GetElementsByClsNm("InLnOrdWebPartLayout_InpBx", "input", Cmn.GetObj("InLnOrdWebPartLayout_QtyInp"))[0]
			  , attrcompitmids = getPartNbrLnk().getAttribute("data-mcm-attr-comp-itm-ids")
			  , CADImgCaptionCntnr;
			
			
			if (Cmn.HasCls(targetElem, "CADImgCaptionCntnr")) {
				CADImgCaptionCntnr = targetElem;
			} else {
				CADImgCaptionCntnr = Cmn.GetAncestorByClsNm(targetElem, "CADImgCaptionCntnr");
			}
			
			var chkBoxCntnr = Cmn.GetFrstChld(Cmn.GetElementsByClsNm("CADImgCaption", "div", CADImgCaptionCntnr)[0]);
			
			if (Cmn.HasCls(chkBoxCntnr, "SpecSrch_SlctdVal")) {
				Cmn.RemCls(chkBoxCntnr, "SpecSrch_SlctdVal");
				
				var msgHdr = new McMaster.MsgMgr.Hdr(McMaster.MsgMgr.CntxtNms.ITM_PRSNTTN);
				var cadImg = Cmn.GetElementBy(function(x){return true;}, "img", CADImgCaptionCntnr);
				var specAttrId = cadImg.id;
				
				if (specAttrId.length == 0){
					var attrNmsTxt = "";
					var attrValsTxt = "";
					McMaster.MsgMgr.PubMsg(new McMaster.MsgMgrMsgs.ItmPrsnttnSpecSlctd(msgHdr, attrNmsTxt, attrValsTxt, null, qtyInpBx.value, true, attrcompitmids));				
				}
			} else {
				if (Cmn.HasCls(chkBoxCntnr, "SpecSrch_SlctdVal")) {
					Cmn.RemCls(chkBoxCntnr, "SpecSrch_SlctdVal")
				} else {
					Cmn.AddCls(chkBoxCntnr, "SpecSrch_SlctdVal")
				}
				
				var msgHdr = new McMaster.MsgMgr.Hdr(McMaster.MsgMgr.CntxtNms.ITM_PRSNTTN);
				var cadImg = Cmn.GetElementBy(function(x){return true;}, "img", CADImgCaptionCntnr);
				var specAttrId = cadImg.id;
				
				if (specAttrId.length > 0){
					var prodAttrId = specAttrId.split("_")[2];
					var pubAttrId = specAttrId.split("_")[3];
					var prodValId = specAttrId.split("_")[5];
					var pubValId = specAttrId.split("_")[6];
					var prodAttrIds = prodAttrId.split(",");
					var pubAttrIds = pubAttrId.split(",");
					var prodValIds = prodValId.split(",");
					var pubValIds = pubValId.split(",");
				
					for (var i = 0; i < prodAttrIds.length; i++) {
						SpecSrchInp.Get().ToggleVal(prodAttrIds[i], pubAttrIds[i], prodValIds[i], pubValIds[i], McMaster.MsgMgr.CntxtNms.ITM_PRSNTTN).UpdateSession();
					}
					McMaster.MsgMgr.PubMsg(new McMaster.MsgMgrMsgs.ItmPrsnttnSpecSlctd(msgHdr, null, null, null, qtyInpBx.value, true, attrcompitmids));    
				}else{
					var attrNmsTxt = cadImg.getAttribute("mcm-attr-nms");
					var attrValsTxt = cadImg.getAttribute("mcm-attr-vals");
					McMaster.MsgMgr.PubMsg(new McMaster.MsgMgrMsgs.ItmPrsnttnSpecSlctd(msgHdr, attrNmsTxt, attrValsTxt, null, qtyInpBx.value, true, attrcompitmids));				
				}
			};
		};
		
		//---------------------------------------------------------------------
		// Summary: Get image element from image caption container or 
		//          any element within the image caption container
		//---------------------------------------------------------------------
		var getImgFromImgCaptionCompElem = function (elem) {
			var imgCaptionCntnr;
			
			testMthd = function (elem) {
				var rtnInd = false;
				if (elem.tagName.toLowerCase() == "img") {
				    rtnInd = true;
				}
				return rtnInd;
			};
			
			if (Cmn.HasCls(elem, "CADImgCaptionCntnr")) {
				imgCaptionCntnr = elem;
			} else {
				imgCaptionCntnr = Cmn.GetAncestorByClsNm(elem, "CADImgCaptionCntnr");
			}
		
			return Cmn.GetChldrnBy(testMthd, imgCaptionCntnr)[0];
		};
		
		//---------------------------------------------------------------------
		// Summary: hides all image overlays in document
		//
		// Input:   targetElem - target element
		//---------------------------------------------------------------------
		var hideAllImgOverlays = function (targetElem) {
			var imgOverlays = Cmn.GetElementsByClsNm("FullPrsnttnWebPart_OverlayImgCntnr", "div"),
					anyAncestorInd = false;

			if (imgOverlays && imgOverlays.length > 0) {
				for (var idx = 0; idx < imgOverlays.length; idx++) {
					var imageOverlayCntnr = imgOverlays[idx];
					if (imageOverlayCntnr) {
						if (Cmn.IsAncestor(imageOverlayCntnr, targetElem)) {
							anyAncestorInd = true;
							break;
						}
					}
				}
				if (anyAncestorInd) {
					//continue
				} else {
					for (var idx = 0; idx < imgOverlays.length; idx++) {
						var imageOverlayCntnr = imgOverlays[idx];
						if (imageOverlayCntnr) {
							var innerDiv = imageOverlayCntnr.firstChild;
							hideSingleImgOverlay(imageOverlayCntnr, innerDiv);

						}
					}
				}
			}
		}

		//---------------------------------------------------------------------
		// Summary: hides a single image overlay. 
		//
		// Input:   outerDiv - The outer div of the image overlay
		//          innerDiv - The inner div of the image overlay
		//---------------------------------------------------------------------
		var hideSingleImgOverlay = function (outerDiv, innerDiv) {
			if (innerDiv && innerDiv.innerHTML != '') {
				var testMthd = function (elem) {
					return true;
				},
						largeImgs = Cmn.GetElementsBy(testMthd, "img", innerDiv),
						largeImg = null;

				// handle long captions with small images so the captions will wrap
				if (largeImgs && largeImgs.length > 0) {
					largeImg = largeImgs[0];
				}
				if (largeImg) {
					Cmn.RemEvntListener(largeImg, "load");
				}
				innerDiv.innerHTML = '';
				Cmn.SetX(outerDiv, -4000);
				Cmn.SetY(outerDiv, -4000);
			}
		}

		//---------------------------------------------------------------------
		// Summary: hides the image overlay
		// Input:   e - the event
		//          cntnrIDTxt - the container ID
		//---------------------------------------------------------------------
		var hideImgOverlay = function (e, cntnrIDTxt) {
			var outerId = cntnrIDTxt + "OverlayImgID",
				 innerId = cntnrIDTxt + "ImgID",
				 outerDiv = Cmn.GetObj(outerId),
				 innerDiv = Cmn.GetObj(innerId);
			hideSingleImgOverlay(outerDiv, innerDiv);
		}
		
		//---------------------------------------------------------------------
		// Summary: Toggles between large and small images
		// Remarks: Opens a new window for the image for some browsers
		// Input: imgObj - The image object to change
		//		  cntnrIDTxt - The container ID for the image
		//---------------------------------------------------------------------
		var chgimg = function (imgObj) {

			var fullName = imgObj.src;
			var cntnrIDTxt = Cmn.GetAncestorByClsNm(imgObj, "ItmPrsnttnWebPart").id;
			
			//find where the image name starts so we can use string manipulation to 
			//retrieve whether its the small or large image, its path, etc.
			var imageName = fullName.replace(/^.*[\\\/]/, '')
			var imagePath = fullName.substring(0, fullName.length - imageName.length);
			var imageExt = imageName.split('.').pop();
			
			//shorthand to check what we should toggle to--if the current image is small then we switch
			//to the large image, otherwise use the small one
			var pattern = new RegExp("/"+ "s." + imageExt + "/i")
			var newImageName = imageName.replace(pattern, "l." + imageExt);
			var newImagePath = imagePath + newImageName;

			loadImgOverlay(imgObj, newImagePath, cntnrIDTxt);
			return;

		};
		
		//---------------------------------------------------------------------
		// Summary: loads the image Overlay
		//
		// Input:   imgObj - the image
		//          fullName - the source of the large image
		//--------------------------------------------------------------------
		var loadImgOverlay = function (imgObj, fullName, cntnrIDTxt) {
			
			//do stuff to get all this stuff to pass in...
			var outerId = cntnrIDTxt + "OverlayImgID",
					innerId = cntnrIDTxt + "ImgID",
					outerDiv = Cmn.GetObj(outerId),
					innerDiv = Cmn.GetObj(innerId),
					overlayCntnrs,
					overlayCntnr,
					prodPage = getScrollableCntnr();

			if (!innerDiv) {
				var outmostDiv = Cmn.CrteElement('div');
				outmostDiv.innerHTML =
						'<div class="FullPrsnttnWebPart_OverlayImgCntnr OverlayImg" id="' + outerId + '">'
						 + '<div class="FullPrsnttnWebPart_OverlayImgPadding" id="' + innerId + '" ></div>'
						 + '</div>';

				//IE6 & 7. Due to pinned content, we want to put overlay image outside maintcontent 
				//this is to solve z-index issue. Z-index is relative in IE6 and 7.
				if (Cmn.IsIE6Below() || Cmn.IsIE7()) {
					overlayCntnrs = document.getElementsByTagName("BODY");
					if (overlayCntnrs.length > 0) {
						overlayCntnr = overlayCntnrs[0];
					}
				} else {
					overlayCntnr = Cmn.GetObj(cntnrIDTxt);
				}

				overlayCntnr.appendChild(outmostDiv);
				outerDiv = Cmn.GetObj(outerId);

				//Add the ImgCaptionCntnrHover class only on the first load of the overlay outerDiv for the current presentation. 
				Cmn.AddCls(outerDiv, 'ImgCaptionCntnrHover');

				innerDiv = Cmn.GetObj(innerId);
				Cmn.AddDropShadow(outerDiv);

				Cmn.AddEvntListener(outerDiv, "mouseout", function (e) {
					hndlImgOverlayMouseOutEvnt(e, cntnrIDTxt, outerDiv);
				});

				Cmn.AddEvntListener(outerDiv, "click", function (e) {
					var clickedElem = Cmn.GetEvntTarget(e);
					hndlCADImgClick(clickedElem)
				});

			};

			Cmn.SetX(outerDiv, -4000);
			Cmn.SetY(outerDiv, -4000);

			//removes event handler for previous large image
			var testMthd = function (elem) { return true; },
					largeImgs = Cmn.GetElementsBy(testMthd, "img", innerDiv),
					largeImg = null;

			// gets previous large image
			if (largeImgs && largeImgs.length > 0) {
				largeImg = largeImgs[0];
			}

			if (largeImg) {
				Cmn.RemEvntListener(largeImg, "load");
			}
			innerDiv.innerHTML = '';
			
			var imgCaptionNode = null,
					captionDiv = null,
					sibling = Cmn.GetPrevSibling(imgObj),
					siblingWdthPxCnt = null;

			var attrNms = imgObj.getAttribute("mcm-attr-nms");
			var attrVals = imgObj.getAttribute("mcm-attr-vals");
			
			if (attrNms && attrVals) {
				innerDiv.innerHTML = '<div class="CADImgCaptionCntnr" style="display: inline-block;">' + 
									 '<img id="' + imgObj.id + '" src="' + fullName + '" mcm-attr-nms="' + attrNms + '" mcm-attr-vals="' + attrVals + '">' +
									 '</div>';
			} else {
				innerDiv.innerHTML = '<div class="CADImgCaptionCntnr" style="display: inline-block;"><img id="' + imgObj.id + '" src="' + fullName + '"></div>';
			}
			
			imgCaptionNode = Cmn.GetFrstChld(innerDiv);
				
			if (sibling && imgCaptionNode) {
				imgCaptionNode.insertBefore(sibling.cloneNode(true), imgCaptionNode.firstChild);
				siblingWdthPxCnt = Cmn.GetWidth(sibling);
			}
			sibling = Cmn.GetNxtSibling(imgObj);
			if (sibling && imgCaptionNode) {
				captionDiv = imgCaptionNode.appendChild(sibling.cloneNode(true));
				siblingWdthPxCnt = Cmn.GetWidth(sibling);
			}
			
			mImgTimer = setTimeout(function () {
				continueLoadImgOverlay(imgObj, innerDiv, outerDiv, imgCaptionNode, siblingWdthPxCnt);
			}, 500);
		};
		
		//---------------------------------------------------------------------
		// Summary: continues loading the image overlay after the delay
		// Input:   imgObj - the image
		//          innerDiv - the inner div of the image overlay
		//          outerDiv - the outer div of the image overlay
		//          captionDiv - the div that contains the caption of the image overlay
		//          smallCaptionDivWdth - the size of the caption on the original image.
		//---------------------------------------------------------------------
		var continueLoadImgOverlay = function (imgObj, innerDiv, outerDiv, captionDiv, smallCaptionDivWdth) {

			var testMthd = function (elem) {
				return true;
			},
					largeImgs = Cmn.GetElementsBy(testMthd, "img", innerDiv),
					largeImg = null;

			// get large image if it exists
			if (largeImgs && largeImgs.length > 0) {
				largeImg = largeImgs[0];
			}
			//if image is loaded, continue loading overlay
			if (largeImg && largeImg.complete) {
				cmpltLoadImgOverlay(imgObj, innerDiv, outerDiv, captionDiv, smallCaptionDivWdth, largeImg);
			} else {
				//set onload event to load overlay
				if (largeImg) {
					Cmn.AddEvntListener(largeImg, "load", function (e) {
						cmpltLoadImgOverlay(imgObj, innerDiv, outerDiv, captionDiv, smallCaptionDivWdth, largeImg);
					});
					if (largeImg.complete) {
						Cmn.RemEvntListener(largeImg, "load");
						cmpltLoadImgOverlay(imgObj, innerDiv, outerDiv, captionDiv, smallCaptionDivWdth, largeImg);
					}
				}
			}
		}

		//---------------------------------------------------------------------
		// Summary: completes the loading of the image overlay after the delay
		// Input:   imgObj - the image
		//          innerDiv - the inner div of the image overlay
		//          outerDiv - the outer div of the image overlay
		//          captionDiv - the div that contains the caption of the image overlay
		//          smallCaptionDivWdth - the size of the caption on the original image.
		//          largeImg - the large image
		//---------------------------------------------------------------------
		var cmpltLoadImgOverlay = function (imgObj, innerDiv, outerDiv, captionDiv, smallCaptionDivWdth, largeImg) {
			var imgHgtPxCnt = Cmn.GetHeight(imgObj),
							imgWdthPxCnt = Cmn.GetWidth(imgObj),
							largeImgHgtPxCnt = 0,
							largeImgWdthPxCnt = 0;

			if (largeImg) {
				largeImgHgtPxCnt = Cmn.GetHeight(largeImg);
				largeImgWdthPxCnt = Cmn.GetWidth(largeImg);
			}

			if (largeImg && captionDiv && imgObj && largeImgWdthPxCnt && imgWdthPxCnt && smallCaptionDivWdth) {
				if (largeImgWdthPxCnt < smallCaptionDivWdth) {
					captionDiv.style.width = smallCaptionDivWdth + "px";
				}
			}
			var imgPos = calcImgBoxPos(imgObj, outerDiv, imgHgtPxCnt, imgWdthPxCnt);

			//do not display large image unless it is "large enough"
			if (((largeImgHgtPxCnt * largeImgWdthPxCnt) > (1.05 * imgHgtPxCnt * imgWdthPxCnt)) && getImgLoadedInd(largeImg) === true) {

				Cmn.SetX(outerDiv, imgPos.x);
				Cmn.SetY(outerDiv, imgPos.y);

				//Add or remove the Image Selected class from the outer div
				if (Cmn.HasCls(imgObj, 'ImgSlctd')) {
					//for images in tables
					Cmn.AddCls(outerDiv, 'ImgSlctd');
				} else {
					//for grid images
					var captionCntnr = Cmn.GetAncestorByClsNm(imgObj, 'ImgCaptionCntnr');
					if (captionCntnr && Cmn.HasCls(captionCntnr, 'ImgSlctd')) {
						Cmn.AddCls(outerDiv, 'ImgSlctd');
					} else {
						Cmn.RemCls(outerDiv, 'ImgSlctd');
					}
				}
				mLastOverlayImg = imgObj;

			} else {
				//do nothing
			}
		}
		
		//---------------------------------------------------------------------
		// Summary: calculates the position of the image Overlay
		//
		// Input:   imgObj - the image
		//          largeImgBox - the Overlay image box
		//          imgHgtPxCnt - height of the orignal image
		//          imgWdthPxCnt  - width of the original image
		//---------------------------------------------------------------------
		var calcImgBoxPos = function (imgObj, largeImgBox, imgHgtPxCnt, imgWdthPxCnt) {
			var imgPosX = Cmn.GetX(imgObj),
				  imgPosY = Cmn.GetY(imgObj),
				  largeImgHgtPxCnt = Cmn.GetHeight(largeImgBox),
				  largeImgWdthPxCnt = Cmn.GetWidth(largeImgBox),
				  prsnttnPar = Cmn.GetObj(largeImgBox.id.substr(0, largeImgBox.id.indexOf("OverlayImgID", 0))),
				  offsetParObj = getScrollableCntnr(),
				  mainContent = Cmn.GetObj("MainContent"),
				  toolSetDivs = Cmn.GetElementsByClsNm("WebToolsetWebPart_Cntnr"),
				  toolSetDiv,
				  toolSetPosX,
				  toolSetPosY,
				  toolSetHgtPxCnt,
				  toolSetWdthPxCnt,
				  rtnX = imgPosX - ((largeImgWdthPxCnt - imgWdthPxCnt) / 2),
				  rtnY = imgPosY - ((largeImgHgtPxCnt - imgHgtPxCnt) / 2),
				  cntnrTop,
				  cntnrLeft,
				  cntnrWdthPxCnt,
				  cntnrHgtPxCnt, 
				  viewPortHgtPxCnt;

			if (offsetParObj) {
				//get bounds of container
				cntnrTop = Cmn.GetY(offsetParObj);
				cntnrLeft = Cmn.GetX(offsetParObj);
				cntnrWdthPxCnt = Cmn.GetWidth(offsetParObj);
				cntnrHgtPxCnt = Cmn.GetHeight(offsetParObj);
				viewPortHgtPxCnt = Cmn.GetViewportHeight();
				
				//if presentation is in a frame
				if (offsetParObj.tagName.toLowerCase() == "body") {
					cntnrHgtPxCnt = Cmn.GetViewportHeight();
					cntnrWdthPxCnt = Cmn.GetViewportWidth();
					cntnrTop = Math.max(Math.max(cntnrTop, document.documentElement.scrollTop), offsetParObj.scrollTop);
					cntnrLeft = Math.max(Math.max(cntnrLeft, document.documentElement.scrollLeft), offsetParObj.scrollLeft);
				}

				//account for toolset in container area
				if (toolSetDivs && toolSetDivs.length >= 1) {
					toolSetDiv = toolSetDivs[0];
					toolSetPosX = Cmn.GetX(toolSetDiv);
					toolSetPosY = toolSetDiv.offsetTop;
					toolSetHgtPxCnt = Cmn.GetHeight(toolSetDiv);
					toolSetWdthPxCnt = Cmn.GetWidth(toolSetDiv);
				}
				if (toolSetDiv) {
					if (toolSetPosY) {
						cntnrTop = toolSetPosY + toolSetHgtPxCnt;
					} else {
						cntnrTop = cntnrTop + toolSetHgtPxCnt;
					}
					if (toolSetWdthPxCnt) {
						cntnrWdthPxCnt = toolSetWdthPxCnt;
					}
					cntnrHgtPxCnt = cntnrHgtPxCnt - toolSetHgtPxCnt;
				}

				//overlay past bottom of container
				if ((rtnY + largeImgHgtPxCnt) > viewPortHgtPxCnt) {
					rtnY = viewPortHgtPxCnt - largeImgHgtPxCnt;
				}

				//overlay past right of container
				if (rtnX + largeImgWdthPxCnt > cntnrLeft + cntnrWdthPxCnt) {
					rtnX = cntnrLeft + cntnrWdthPxCnt - largeImgWdthPxCnt;
				}

				//overlay past left of container
				if (rtnX < cntnrLeft) {
					rtnX = cntnrLeft;
				}

				//overlay past top of container
				if (rtnY < cntnrTop) {
					rtnY = cntnrTop;
				}
			}

			return {
				'x': rtnX,
				'y': rtnY
			};
		};
		
		//---------------------------------------------------------------------
		// Summary: Scroll to the cad image
		//---------------------------------------------------------------------
		var scrollToCadImg = function(){
			var cadCntnr = Cmn.GetObj("CadWebPart_cadDatCntnr");
			var scrollCntnr = getScrollableCntnr();
			
			// Webreports tracking for scroll to CAD in Item Presentation
			Cmn.TrkAct("ItmPrsnttnScrollToCAD&partnbr=" + scrollCntnr.lastChild.attributes[0].nodeValue, "ItmPrsnttn");
			
			var toolSetCntnr = Cmn.GetElementBy(function (elem) { return Cmn.HasCls(elem, "WebToolsetWebPart_Cntnr"); }, "div", scrollCntnr);
			if (toolSetCntnr) {
				TOOLSET_HGT = Cmn.GetHeight(toolSetCntnr);
			} else {
				TOOLSET_HGT = 0;
			}
			var headerCntnr = Cmn.GetObj("ShellLayout_Header_Cntnr")
			if (headerCntnr) {
				MASTHEAD_HGT = Cmn.GetHeight(headerCntnr);
			} else {
				MASTHEAD_HGT = 0;
			}
			
			if (cadCntnr && scrollCntnr){
				var cadCntnrPosn = Cmn.GetY(cadCntnr) - TOOLSET_HGT - MASTHEAD_HGT;
				var origScrollPosn = Cmn.GetVerticalScrollPosn(scrollCntnr);
				var newScrollPosn = origScrollPosn + cadCntnrPosn;
				Cmn.SetVerticalScrollPosn(scrollCntnr, newScrollPosn);
			}
		}
		
	    //---------------------------------------------------------------------
		// Summary: Get scrollable container (catalog page vs. normal page)
		//---------------------------------------------------------------------
		var getScrollableCntnr = function () {
			var scrollCntnr;
			scrollCntnr = Cmn.GetObj("MainContent");
			
			return scrollCntnr;
		};
		
	    //---------------------------------------------------------------------
		// Summary: This gets the current time in the correct format (used for 
		//            tracking actions) 
		//---------------------------------------------------------------------
		var getCurrTm = function () {
			var d = new Date();
			var hour = d.getHours() + 1;
			var min = d.getMinutes();
			var sec = d.getSeconds();
			var totTm = '' + hour + min + sec;

			return totTm;
		};
		
	    //---------------------------------------------------------------------
		// Summary: returns whether the image has loaded or not
		// Input:   imgObj - the image
		//---------------------------------------------------------------------
		var getImgLoadedInd = function (imgObj) {
			var rtnInd = false;
			if (imgObj) {
				rtnInd = true;
				if (Cmn.IsIE() === false && imgObj.complete === false) {
					rtnInd = false;
				}
				if (imgObj.naturalWidth === 0 || imgObj.naturalHeight === 0) {
					rtnInd = false;
				}
			}
			return rtnInd;
		}
		
		/// End Region
	}
}

this.ItmPrsnttnWebPartLoader||(ItmPrsnttnWebPartLoader=new function(){var r=function(b){ItmPrsnttnWebPartLoader.Load(b)},k=null,s=null,m=null,t=null,n,p=new CmnColls.HashTable;McMaster.MsgMgr.AddSubscriber(McMaster.MsgMgrMsgs.PartNbrSrchd,r);McMaster.MsgMgr.AddSubscriber(McMaster.MsgMgrMsgs.ItmPrsnttnSpecSlctd,r);McMaster.MsgMgr.AddSubscriber(McMaster.MsgMgrMsgs.ProdDtlLnkClicked,r);McMaster.MsgMgr.AddSubscriber(McMaster.MsgMgrMsgs.ItmPrsnttnFetchAhead,function(b){ItmPrsnttnWebPartLoader.FetchAhead(b)});
this.AbortStaleReq=function(){n&&clearTimeout(n);k&&(McMaster.CnxnMgr.AbortAjaxCnxn(k),k=null);s&&(McMaster.CnxnMgr.AbortAjaxCnxn(s),s=null);t=m=null;ContentHistMgr.Abort_Snapshot(ContentHistMgr.TYP.CONTENT_LOAD)};this.ReqInFlight=function(){return!!this.mStaticCnxn||!!this.mDynamicCnxn};this.LoadFrmSesn=function(){ContentHistMgr.ShouldILoadFrmSesn(ContentHistMgr.TYP.ITM_PRSNTTN_LOAD)&&(McMaster.LoadMgr.UnloadCntnr("MainContent"),McMaster.LoadMgr.ShowCntnr("MainContent"),McMaster.LoadMgr.DisplWaitIcon("MainContent"),
this.Load(null,!0))};this.Load=function(b,e){ItmPrsnttnWebPartLoader.AbortStaleReq();if(!e&&b.NM==McMaster.MsgMgrMsgs.ProdDtlLnkClicked.NM){Cmn.TrkAct("ItmPrsnttnProdDtlLinkClck&partnbr="+b.MsgPayload().PartNbr,"InLnOrd");Cmn.TrkAct("ItmPrsnttnPageLoad&partnbr="+b.MsgPayload().PartNbr,"ItmPrsnttn");var c=new SrchTrkr.SrchDat({usr:SrchTrkr.UsrActTyps.SLCT});c.usr.srcNm="ItmPrsnttnWebPartLoader";c.usr.elemTyp=SrchTrkr.ElemTyps.PROD_DTL_LNK;b.MsgPayload().PartNbr&&(c.usr.slctdNm=decodeURIComponent(b.MsgPayload().PartNbr));
c.Trk()}c=McMasterCom.Nav.GetTopFrame();new c.PerfTracker.Evnt(c.PerfTracker.EvntNms.ItmPrsnttnBgn,c.PerfTracker.PgCntxtNms.DynCntnt);e||ContentHistMgr.Init_Snapshot(ContentHistMgr.TYP.ITM_PRSNTTN_LOAD);McMaster.SesnMgr.SetStVal(McMaster.SesnMgr.StValDefs.ContentLoadFrmSesnInd.KyTxt(),!1);var g=null,a=!1,h="",l="",c=null,d=!1,w=!1,u=0,r,x,q=SpecSrchInp.Get();if(e)g=McMaster.SesnMgr.GetStVal(McMaster.SesnMgr.StValDefs.SrchdPartNbrTxt.KyTxt()),h=McMaster.SesnMgr.GetStVal(McMaster.SesnMgr.StValDefs.OldStylAttrNms.KyTxt()),
l=McMaster.SesnMgr.GetStVal(McMaster.SesnMgr.StValDefs.OldStylValTxts.KyTxt());else if(g=b.MsgPayload().PartNbr,h=b.MsgPayload().AttrNmsTxt,l=b.MsgPayload().AttrValsTxt,r=b.MsgPayload().InpBxVal,b.NM==McMaster.MsgMgrMsgs.ProdDtlLnkClicked.NM&&(d=!0,c=b.MsgPayload().AttrCompIds,u=b.MsgPayload().QtyInpBxVal),b.NM==McMaster.MsgMgrMsgs.PartNbrSrchd.NM&&(SpecSrchInp.Get().RemAll().UpdateSession(),x=b.MsgPayload().RefPartNbr),b.NM==McMaster.MsgMgrMsgs.ItmPrsnttnSpecSlctd.NM&&(d=!0,g=McMaster.SesnMgr.GetStVal(McMaster.SesnMgr.StValDefs.SrchdPartNbrTxt.KyTxt()),
a=b.MsgPayload().CadImgSlctdInd,c=b.MsgPayload().AttrCompIds,u=b.MsgPayload().QtyInpBxVal),b.NM==McMaster.MsgMgrMsgs.ProdDtlLnkClicked.NM||b.NM==McMaster.MsgMgrMsgs.PartNbrSrchd.NM)McMaster.SesnMgr.SetStVal(McMaster.SesnMgr.StValDefs.LastSlctdSrchRsltTxt.KyTxt(),g),McMaster.LoadMgr.UnloadCntnr("MainContent"),McMaster.LoadMgr.ShowCntnr("MainContent"),McMaster.LoadMgr.DisplWaitIcon("MainContent");null==h&&(h="");null==l&&(l="");null==c&&(c="");0<c.length&&(w=!0);if(h&&l&&q&&q.mUsrInps.LastDeselectedPubAttr){var f=
h.split(String.fromCharCode(2029)),v=l.split(String.fromCharCode(2029)),y=f.indexOf(q.mUsrInps.LastDeselectedPubAttr.toString());-1<y&&(f.remove(y),v.remove(y),h=f.join(String.fromCharCode(2029)),l=v.join(String.fromCharCode(2029)))}f=Cmn.AddQSNmVal("/WebParts/Content/ItmPrsnttnWebPart.aspx","partnbrtxt",g);f=Cmn.AddQSNmVal(f,"attrcompitmids",c);f=Cmn.AddQSNmVal(f,"attrnm",encodeURIComponent(h));f=Cmn.AddQSNmVal(f,"attrval",encodeURIComponent(l));f=Cmn.AddQSNmVal(f,"cntnridtxt","MainContent");f=Cmn.AddQSNmVal(f,
"proddtllnkclickedInd",d);f=Cmn.AddQSNmVal(f,"cntnrWdth",A(Cmn.GetViewportWidth()));d=Cmn.AddQSNmVal("/WebParts/Content/ItmPrsnttnDynamicDat.aspx","acttxt","dynamicdat");d=Cmn.AddQSNmVal(d,"partnbrtxt",g);d=Cmn.AddQSNmVal(d,"isinlnspec",w);d=Cmn.AddQSNmVal(d,"attrCompIds",c);d=Cmn.AddQSNmVal(d,"attrnm",encodeURIComponent(h));d=Cmn.AddQSNmVal(d,"attrval",encodeURIComponent(l));q&&(f=q.AddSpecUsrInpQS(f),d=q.AddSpecUsrInpQS(d));0<u&&(d=Cmn.AddQSNmVal(d,"qtytxt",u));c={success:function(c,e){k=null;if(c.OptToCtlgPgInd){ItmPrsnttnWebPartLoader.AbortStaleReq();
var d=c.CtlgPgNbrs;d&&0<d.length&&(McMaster.SesnMgr.SetStVal(McMaster.SesnMgr.StValDefs.CurrCtlgPgNbr.KyTxt(),d[0]),McMaster.SesnMgr.SetStVal(McMaster.SesnMgr.StValDefs.CurrRelatedCtlgPgsTxt.KyTxt(),d.toString()));d=new McMaster.MsgMgr.Hdr(McMaster.MsgMgr.CntxtNms.SRCH_ENTRY_WEB_PART);d=new McMaster.MsgMgrMsgs.PartNbrSlctd(d,c.PartNbrTxt,null,x);McMaster.MsgMgr.PubMsg(d)}else c.SpecSrchInp=q,c.ScrollToCadImgInd=a,c.InpBxVal=r,c.QtyInpBxVal=u,c.AttrNmsTxt=h,c.AttrValsTxt=l,m=c,c.SpecSlctdInd=b&&b.NM==
McMaster.MsgMgrMsgs.ItmPrsnttnSpecSlctd.NM?!0:!1,McMaster.SesnMgr.GetStVal(McMaster.SesnMgr.StValDefs.ItmPrsnttnFeedbackFormOpened.KyTxt())&&(d=!1,d=McMaster.SesnMgr.GetStVal(McMaster.SesnMgr.StValDefs.ItmPrsnttnFeedbackFormOpened.KyTxt()),c.ItmPrsnttnFeedbackFormOpened=d)},failure:function(b,c){k=null;ItmPrsnttnWebPartLoader.AbortStaleReq();if("transaction aborted"!=b.statusText){var a=new McMaster.MsgMgr.Hdr(McMaster.MsgMgr.CntxtNms.SRCH_ENTRY_WEB_PART),a=new McMaster.MsgMgrMsgs.PartNbrSlctd(a,
g);McMaster.MsgMgr.PubMsg(a)}},abort:function(a,b){k=null;ItmPrsnttnWebPartLoader.AbortStaleReq()},cnxnParm:{respTyp:McMaster.CnxnMgr.WEB_PART_RESP_TYP_TXT,maxRetry:1,refPartNbr:x},timeout:45E3};w={success:function(a,b){s=null;t=a},failure:function(){clearTimeout(n);s=null;n=setTimeout(z,25)},abort:function(){clearTimeout(n);s=null;n=setTimeout(z,25)},cnxnParm:{respTyp:McMaster.CnxnMgr.WEB_PART_RESP_TYP_TXT,maxRetry:1}};n=setTimeout(B,25);p.ContainsKy(f)?(v=p.Itm(f),!0===v?k=McMaster.CnxnMgr.PerformAjaxCnxn(f,
c):(k=McMaster.CnxnMgr.ModifyCnxn(v,c),p.Replace(f,!0))):k=McMaster.CnxnMgr.PerformAjaxCnxn(f,c);mDynamicAjaxCnxn=McMaster.CnxnMgr.PerformAjaxCnxn(d,w)};this.FetchAhead=function(b){var e,c=!0,g=SpecSrchInp.Get();e=b.MsgPayload().PartNbr;b=b.MsgPayload().AttrCompIds;c=!0;null==b&&(b="");var a="/WebParts/Content/ItmPrsnttnWebPart.aspx",a=Cmn.AddQSNmVal(a,"partnbrtxt",e),a=Cmn.AddQSNmVal(a,"attrcompitmids",b),a=Cmn.AddQSNmVal(a,"attrnm",encodeURIComponent("")),a=Cmn.AddQSNmVal(a,"attrval",encodeURIComponent("")),
a=Cmn.AddQSNmVal(a,"cntnridtxt","MainContent"),a=Cmn.AddQSNmVal(a,"proddtllnkclickedInd",c),a=Cmn.AddQSNmVal(a,"cntnrWdth",A(Cmn.GetViewportWidth()));g&&(a=g.AddSpecUsrInpQS(a));p.ContainsKy(a)||(e=McMaster.CnxnMgr.PerformAjaxCnxn(a,{success:function(){p.Replace(a,!0)},failure:function(){p.Rem(a)},cnxnParm:{respTyp:McMaster.CnxnMgr.WEB_PART_RESP_TYP_TXT,maxRetry:1}}),p.Add(a,e))};var B=function(){m&&t?(clearTimeout(n),McMaster.LoadMgr.LoadWebPart(m),ItmPrsnttnWebPartLoader.loadDynamicDat(t),C(m)):
setTimeout(B,25)},z=function(){m?(clearTimeout(n),McMaster.LoadMgr.LoadWebPart(m),C(m)):setTimeout(z,25)};this.loadDynamicDat=function(b){var e=Cmn.GetObj("ItmPrsnttnWebPart"),c=Cmn.GetElementsByClsNm("InLnOrdWebPartLayout_StkMsg","div",e);c||(c=Cmn.GetElementsByClsNm("InLnOrdWebPartLayout_StkMsgPacks","div",e));var g=b.StkMsgTxt,a=Cmn.GetElementsByClsNm("InLnOrdWebPartLayout_WarningAlert","div",e)[0];if(a)if(Cmn.RemCls(a,"bold"),a.innerHTML=b.WarningMsg,0<a.innerHTML.length)for(a=0;a<c.length;a++)c[a].innerHTML=
"";else{for(a=0;a<c.length;a++)c[a].innerHTML=g;e=Cmn.GetElementsByClsNm("PrceTxt","div",e);for(a=0;a<e.length;a++)e[a].innerHTML=b.PrceTxt;D(b.PrceTiers)}else{for(a=0;a<c.length;a++)c[a].innerHTML=g;e=Cmn.GetElementsByClsNm("PrceTxt","div",e);for(a=0;a<e.length;a++)e[a].innerHTML=b.PrceTxt;D(b.PrceTiers)}if((e=Cmn.GetObj("OrdHistMsg"))&&b.OrdHistMarkUpTxt&&0<b.OrdHistMarkUpTxt.length)e.innerHTML=b.OrdHistMarkUpTxt+"."};var C=function(b){t=m=null;var e=new McMaster.MsgMgr.Hdr(McMaster.MsgMgr.CntxtNms.ITM_PRSNTTN),
e=new McMaster.MsgMgrMsgs.CollapseSecondaryContent(e);McMaster.MsgMgr.PubMsg(e);var e=McMasterCom.Nav.GetTopFrame(),c=new e.PerfTracker.EvntPayload;c.Add("partNbr",b.PartNbrTxt);new e.PerfTracker.Evnt(e.PerfTracker.EvntNms.ItmPrsnttnEnd,e.PerfTracker.PgCntxtNms.DynCntnt,c)},A=function(b){return b-35},D=function(b){var e=Cmn.GetElementsByClsNm("PrceTierTbl");if(e&&b)for(var c=0;c<e.length;c++)for(var g=Cmn.GetElementsByClsNm("PrceTierQtyCol","td",e[c]),a=Cmn.GetElementsByClsNm("PrceTierPrceCol","td",
e[c]),h=0;h<b.length;h++){for(var l=b[h].PrceLvl,d=0;d<g.length;d++){var k=g[d].getAttribute("data-mcm-prce-lvl");if(k==l){g[d].innerHTML=b[h].PrceTierQtyTxt;break}}for(d=0;d<a.length;d++)if(k=a[d].getAttribute("data-mcm-prce-lvl"),k==l){a[d].innerHTML=b[h].PrceTierPrceTxt;break}}}});


if(this.NeedHelpWebPartLoader){}else{NeedHelpWebPartLoader=new function(){var c="/HTTPHandlers/NeedHelpWebPart.aspx";var d="ShellLayout_NeedHelp_Cntnr";var b="cntnridtxt";var a="sesnextrep";var e=function(f){NeedHelpWebPartLoader.Load(f);};if(Cmn.IsAppMode()){}else{McMaster.MsgMgr.AddSubscriber(McMaster.MsgMgrMsgs.ShellInitContentLoaded,e);}this.AbortStaleReq=function(){if(mPrevCnxn){McMaster.CnxnMgr.AbortAjaxCnxn(mPrevCnxn);}};this.Load=function(f){this.CrteAjaxCnxn(true);};this.CrteAjaxCnxn=function(){this.AbortStaleReq();var g=c+"?"+b+"="+d+"&"+a+"="+Cmn.GetSesnExtRep();var f={success:function(h){mPrevCnxn=null;McMaster.LoadMgr.LoadWebPart(h);},failure:function(h){mPrevCnxn=null;},cnxnParm:{respTyp:McMaster.CnxnMgr.WEB_PART_RESP_TYP_TXT}};mPrevCnxn=McMaster.CnxnMgr.PerformAjaxCnxn(g,f);};};}

if(this.OrdDtlLoader){}else{OrdDtlLoader=new function(){var a="/OrdHist/OrdDtl.aspx";var b=function(c){OrdDtlLoader.Load(c);};McMaster.MsgMgr.AddSubscriber(McMaster.MsgMgrMsgs.RecentOrdSlctd,b);this.Load=function(d){var c=d.MsgPayload().OrdID;var f=d.MsgPayload().PO;var e=a+"?custordid="+c+"&poeid="+encodeURIComponent(f);McMasterCom.LoadMgr.LoadMainIFrame(e);};};}

if(this.OrdHistLoader){}else{OrdHistLoader=new function(){var c="/OrdHist/OrdHist.aspx?reloaddefltresults=true";var g="/OrdHist/OrdHistMainLoader.aspx";var h=function(i){OrdHistLoader.Load();};var b=function(i){OrdHistLoader.ClearCache();};var f="OrdHist_OrdDat";var e="OrdHist_OrdLnDat";var a="OrdHist_DtRngDat";var d="idxdat";McMaster.MsgMgr.AddSubscriber(McMaster.MsgMgrMsgs.OrdHistLoginLoaded,h);McMaster.MsgMgr.AddSubscriber(McMaster.MsgMgrMsgs.RecentOrdsChged,b);this.Load=function(){var j=McMaster.SesnMgr.GetStVal("friendlyUrlPOReqTxt");if(j){var i=g+"?"+d+"="+encodeURIComponent(j);McMasterCom.LoadMgr.LoadMainIFrame(i);McMaster.SesnMgr.RemStVal("friendlyUrlPOReqTxt");}else{McMaster.SesnMgr.RemStVal(McMaster.SesnMgr.StValDefs.SlctdOrdHistPOTxt.KyTxt());McMasterCom.LoadMgr.LoadMainIFrame(c);}};this.ClearCache=function(){McMasterCom.DatCache.Remove(f);McMasterCom.DatCache.Remove(e);McMasterCom.DatCache.Remove(a);};};}

if(this.OrdHistLoginWebPartLoader){}else{OrdHistLoginWebPartLoader=new function(){var i=this;var b="cntnridtxt";var g=function(j){i.RtrvOrdHistLoginWebPart(f,false,j);};var h=function(j){OrdHistLoginWebPartLoader.ReloadOrdHistLoginWebPart(j);};var d=i.loadWebPart;var c="MainContent";var e="/WebParts/OrdHistLoginWebPart/OrdHistLoginWebPart.aspx";var a="OrdHistLoginWebPart";i.RtrvOrdHistLoginWebPart=function(n,m,k){var l={success:n,cnxnParm:{respTyp:McMaster.CnxnMgr.WEB_PART_RESP_TYP_TXT}};var j=e+"?"+b+"="+c;McMaster.CnxnMgr.PerformAjaxCnxn(j,l);};i.ReloadOrdHistLoginWebPart=function(j){var k=Cmn.Get("ShellLayout_OrdHist_Btn");if(McMaster.SesnMgr.IsWebPartLoaded(a,c)){if(j.NM==McMaster.MsgMgrMsgs.LoginChged.NM||j.NM==McMaster.MsgMgrMsgs.LoginCanceled.NM){i.RtrvOrdHistLoginWebPart(f,false,j);}}};var f=function(j,n){var m;m=j.LoadWebPartInd;if(m===true){McMaster.SesnMgr.RemStVal(McMaster.SesnMgr.StValDefs.SlctdOrdHistPOTxt.KyTxt());McMaster.LoadMgr.LoadWebPart(j);McMasterCom.Nav.LoadDefltResults();}else{var k=new McMaster.MsgMgr.Hdr(McMaster.MsgMgr.CntxtNms.ORD_HIST);var l=new McMaster.MsgMgrMsgs.OrdHistLoginLoaded(k);McMaster.MsgMgr.PubMsg(l);}};McMaster.MsgMgr.AddSubscriber(McMaster.MsgMgrMsgs.OrdHistSlctd,g);McMaster.MsgMgr.AddSubscriber(McMaster.MsgMgrMsgs.LoginCanceled,h);McMaster.MsgMgr.AddSubscriber(McMaster.MsgMgrMsgs.LoginChged,h);};}

this.PerfTracker||(PerfTracker=new function(){"Opera"!=McMaster.SesnMgr.GetStVal(McMaster.SesnMgr.StValDefs.BrowserNm.KyTxt())&&(Cmn.AddEvntListener(window,"unload",function(){PerfTracker.FlushTrackingEvnts()}),Cmn.AddEvntListener(window,"beforeunload",function(){PerfTracker.FlushTrackingEvnts()}));this.FlushTrackingEvnts=function(){var a=McMaster.SesnMgr.GetStVal(McMaster.SesnMgr.StValDefs.PerfTrackingEvntsQs.KyTxt());McMaster.SesnMgr.GetStVal(McMaster.SesnMgr.StValDefs.BrowserNm.KyTxt());if(a&&
0<a.length){var b=McMaster.SesnMgr.GetStVal(McMaster.SesnMgr.StValDefs.PerfTrackingEvntCntxt.KyTxt()),d="&BrowserNm="+McMaster.SesnMgr.GetStVal(McMaster.SesnMgr.StValDefs.BrowserNm.KyTxt());b||(b="PerfTracker");Cmn.TrkAct("WebTransPerfTrkr&"+a+d,b);McMaster.SesnMgr.SetStVal(McMaster.SesnMgr.StValDefs.PerfTrackingEvntsQs.KyTxt(),"")}};this.EvntNms=new function(){this.AbbrPrsnttnClick="AP-CLICK";this.CtlgPgOptOutLnkClick="CTLG-PG-OPT";this.CtlgPgLoadEnd="CTLG-PG-LD-END";this.CtlgPgFlip="CTLG-PG-FLIP";
this.CntntLdrAjaxCnxnBgn="CNTNTLDR-AJCXN-BGN";this.CntntLdrAjaxCnxnEnd="CNTNTLDR-AJCXN-END";this.CntntLdrAjaxSuccess="CNTNTLDR_AJCXN-S";this.DynCoordBgn="DC-BGN";this.DynCntntSlctd="DC-SLCTD";this.DynPgLdFullPrsnttn="DP-LD-FP";this.DynPgLdCmplBgn="DP-LDCMPL-BGN";this.DynPgLdCmplEnd="DP-LDCMPL-END";this.DynPgLdCmplErr="DP-LDCMPL-ERR";this.DynPgLdrAjaxCnxnBgn="DPLDR-AJCXN-BGN";this.DynPgLdrAjaxCnxnEnd="DPLDR-AJCXN-END";this.DynPgLdrAjaxRespSuccess="DPLDR-AJCXN-S";this.FastTrkBgn="FAST-TRK-BGN";this.FullPrsnttnLdCmpl=
"FP-LD-CMPL";this.GenInfoAbbrPrsnttnClick="GEN-INFO-SLCT";this.GenInfoPrsnttnLdEnd="GEN-INFO-LD-END";this.GrpPrsnttnClick="GRP-CLICK";this.HomePgLdCmplEnd="HP-LDCMPL-END";this.HomePgImgClick="HP-IMG-CLICK";this.IntlCnxnBgn="INTL-CNXN-BGN";this.IntlCnxnEnd="INTL-CNXN-END";this.ShellIntractvBgn="SHELL-INTRACTV-BGN";this.ShellIntractvEnd="SHELL-INTRACTV-END";this.ShellLdcmplBgn="SHELL-LDCMPL-BGN";this.InLnOrdClick="INLNORD-CLICK";this.InLnOrdLdEnd="INLNORD-LD-END";this.IntPgClick="IP-CLICK";this.IntLayoutCmpl=
"IP-LAYOUT-CMPL";this.ImgDeslctClick="IMGD-CLICK";this.ImgSlctClick="IMGS-CLICK";this.ItmPrsnttnBgn="ITM-PRSNTTN-BGN";this.ItmPrsnttnEnd="ITM-PRSNTTN-END";this.LandingPgLdrAjaxCnxnBgn="LPLDR-AJCXN-BGN";this.LandingPgLdrAjaxCnxnBgn="LPLDR-AJCXN-END";this.LandingPgLdrAjaxSuccessBgn="LPLDR_AJCXN-S-BGN";this.LandingPgLdrAjaxSuccessEnd="LPLDR-AJCXN-S-END";this.LandingPgLdrLdBgn="LPLDR-LD-BGN";this.LandingPgLdrLdEnd="LPLDR-LD-END";this.LandingPgLdCmplBgn="LP-LDCMPL-BGN";this.LandingPgLdCmplEnd="LP-LDCMPL-END";
this.LoadFrmSesn="BACK-BTN-CLICK";this.OrdPadUsrReq="ORD-PAD-USR-REQ";this.OrdPadLdcmplEnd="ORD-PAD-LDCMPL-END";this.OrdPadPlcOrdClick="ORD-PAD-PLC-ORD-CLICK";this.OrdPadCnfrmLdEnd="ORD-PAD-CNFRM-LD-END";this.ProdPageCrteAjaxCnxnBgn="PP-AJCXN-BGN";this.ProdPageCrteAjaxCnxnEnd="PP-AJCXN-END";this.ProdPageAjaxCnxnSuccess="PP-AJCXN-S";this.ProdPageLoadCmplBgn="PP-LDCMPL-BGN";this.ProdPageLoadCmplEnd="PP-LDCMPL-END";this.ProdPageLdrLoadBgn="PPLDR-LD-BGN";this.ProdPageLdrLoadEnd="PPLDR-LD-END";this.ProdPageLdrLoadFrmSesn=
"PPLDR-LDFRMSESN";this.SpecB4FiltersChgMsg="SPEC-B4-FILTERS-CHG-MSG";this.SpecPrcsAttrGrpsEnd="SPEC-PRCS-ATTR-GRPS-END";this.SpecUpdtAutoBgn="SPEC-UPDT-AUTO-BGN";this.SpecUpdtAutoEnd="SPEC-UPDT-AUTO-END";this.SpecUpdtBgn="SPEC-UPDT-BGN";this.SpecUpdtEnd="SPEC-UPDT-END";this.SpecUpdtSesnBgn="SPEC-UPDT-SESN-BGN";this.SpecUpdtSesnEnd="SPEC-UPDT-SESN-END";this.SpecInfoPrsnttnClick="SPEC-INFO-SLCT";this.SpecIntCntxtSrch="SI-CNTXT-SRCH";this.SpecIntClrAll="SI-CLR-ALL";this.SpecIntValClick="SI-VAL-CLICK";
this.SpecSrchLdCmplBgn="SS-LDCMPL-BGN";this.SpecSrchLdCmplEnd="SS-LDCMPL-END";this.SpecSrchLdrAjaxCnxnBgn="SSLDR-AJCXN-BGN";this.SpecSrchLdrAjaxCnxnEnd="SSLDR-AJCXN-END";this.SpecSrchLdrAjaxRespSuccessBgn="SSLDR-AJCXN-S-BGN";this.SpecSrchLdrAjaxRespSuccessEnd="SSLDR-AJCXN-S-END";this.SpecSrchLdrLoadBgn="SSLDR-LD-BGN";this.SpecSrchLdrLoadEnd="SSLDR-LD-END";this.SrchRsltLdrLd="SRCHRSLTLDR-LD";this.SrchRsltLnkClick="SRCHRSLT-LNK-CLICK";this.SrchEntryUsrSubmit="SRCHENTRY-USR_SUB";this.UrlUsrChg="URL-USR-CHG"};
this.PgCntxtNms=new function(){this.DynCntnt="dynamic content"};this.EvntPayload=function(){this.mList=[]};this.EvntPayload.prototype.Add=function(a,b){this.mList.push({Nm:a,Val:b})};this.Evnt=function(a,b,d,c){if(a===PerfTracker.EvntNms.IntlCnxnBgn||a===PerfTracker.EvntNms.IntlCnxnEnd)c-=6E5;else if(a===PerfTracker.EvntNms.ShellIntractvBgn||a===PerfTracker.EvntNms.ShellIntractvEnd)c-=3E5;var f;f=null==c?g((new Date).getTime()):g(c);c=McMaster.SesnMgr.GetStVal(McMaster.SesnMgr.StValDefs.PerfTrackingEvntsQs.KyTxt());
var k=h(),e=McMaster.SesnMgr.GetStVal(McMaster.SesnMgr.StValDefs.PerfTrackingEvntCntxt.KyTxt());a=l(d)+a+"="+f+"&seq="+h();d="&BrowserNm="+McMaster.SesnMgr.GetStVal(McMaster.SesnMgr.StValDefs.BrowserNm.KyTxt())+" "+McMaster.SesnMgr.GetStVal(McMaster.SesnMgr.StValDefs.BrowserVer.KyTxt());c||(c="");null==e||e==b?400<(c+"&"+a).length?(McMaster.SesnMgr.SetStVal(McMaster.SesnMgr.StValDefs.PerfTrackingEvntCntxt.KyTxt(),b),Cmn.TrkAct("WebTransPerfTrkr&"+c+d,b),c=a):c=0==c.length?a:c+"&"+a:(Cmn.TrkAct("WebTransPerfTrkr&"+
c+d,e),McMaster.SesnMgr.SetStVal(McMaster.SesnMgr.StValDefs.PerfTrackingEvntCntxt.KyTxt(),b),c=a);McMaster.SesnMgr.SetStVal(McMaster.SesnMgr.StValDefs.PerfTrackingEvntsQs.KyTxt(),c);McMaster.SesnMgr.SetStVal(McMaster.SesnMgr.StValDefs.PerfTrackingTransSeq.KyTxt(),k+1)};var h=function(){var a=McMaster.SesnMgr.GetStVal(McMaster.SesnMgr.StValDefs.PerfTrackingTransSeq.KyTxt());null==a&&(a=0,McMaster.SesnMgr.SetStVal(McMaster.SesnMgr.StValDefs.PerfTrackingTransSeq.KyTxt(),a));return a},g=function(a){a=
new Date(a);for(var b=a.getMilliseconds()+"";3>b.length;)b="0"+b;return a.getHours()+":"+a.getMinutes()+":"+a.getSeconds()+"."+b},l=function(a){var b="";if("undefined"!==typeof a&&a.mList){for(var d=0;d<a.mList.length;d++)"string"==typeof a.mList[d].Val&&0<a.mList[d].Val.length&&(a.mList[d].Val=a.mList[d].Val.replace(" ","")),b=b+a.mList[d].Nm+"="+a.mList[d].Val+"&";this.EvntPayload=[]}return encodeURIComponent(b)}});


if(this.ProdDatProtectionWebPartLoader){}else{ProdDatProtectionWebPartLoader=new function(){var f=this;var a="cntnridtxt";var c=f.loadWebPart;var e="MainContent";var d="/WebParts/ProdDatProtectionWebPart/prodDatProtection.aspx";f.RtrvWebPart=function(k,j,h){McMaster.LoadMgr.DisplWaitIcon(e);var i={success:k,cnxnParm:{respTyp:McMaster.CnxnMgr.WEB_PART_RESP_TYP_TXT}};var g=d+"?"+a+"="+e;McMaster.CnxnMgr.PerformAjaxCnxn(g,i);};var b=function(g,h){McMaster.LoadMgr.LoadWebPart(g);};McMaster.MsgMgr.AddSubscriber(McMaster.MsgMgrMsgs.CtlgPageBlocked,function(g){f.RtrvWebPart(b,false,g);},McMaster.MsgMgr.PRIORITY.HIGH);};}

if (this.ProdPageWebPartLoader) {
}else{
	//-------------------------------------------------------------------------
    // Class:   ProdPageWebPartLoader
    // Summary: Loads product page
    //-------------------------------------------------------------------------

ProdPageWebPartLoader = new function() {
    //Constants
    var PROD_PAGE_WEB_PART_HTTP_HANDLER_URL = "/webparts/content/ProdPageWebPart/ProdPageWebPart.aspx"
       , PROD_PAGE_WEB_PART_CNTNR_DIV_NM = "MainContent"
       , SECONDARY_CONTENT_CNTNR_NM = "ShellLayout_SecondaryContent_Cntnr"
       , SECONDARY_CONTENT_EXPANDED_CLS_NM = "ShellLayout_SecondaryContent_Cntnr_SecondaryContent_Expanded"
       , SECONDARY_CONTENT_COLLAPSED_CLS_NM = "ShellLayout_SecondaryContent_Cntnr_SecondaryContent_Collapsed"
	   , CLS_NM = "ProdPageWebPartLoader"
	   , TIMEOUT_MS = 45000

    // Message to display to the customer if there is an error returned from the HTTP handler
       , ERR_MSG_TXT = "<div class=\"WarningTxt\">We were unable to display products for your search.  Please try again or contact us.</div>"

	   , SRCH_RSLTS_CNTNR_WIDTH_FULL = 215 // container
	   , SRCH_RSLTS_CNTNR_WIDTH_COLLAPSED = 5
	   , CONTENT_CNTNR_PADDING = 25 // TODO: change 15 left+10 right is no longer true!!!
	// The correct padding will be applied to main content at loading
	// New padding: 10 px on the left, 0 px on the right of the main content container

	   , CONTENT_CNTNR_ADDITIONAL = 2 // will be shifted to productpage container.
	   , SPEC_SRCH_CNTNR_WIDTH = 215 // 205 pand + 10px for side bar 215 in future. 10 left px will move to mainContent container
	// private
	   , mHdr = new McMaster.MsgMgr.Hdr(McMaster.MsgMgr.CntxtNms.PROD_PAGE)

       , mSlctdSrchRsltId = -1
       , mAbortInd = false
       , me = this
       , mPrevCnxn = null
       , mReqNbr = -1
       , mLandingPageSuppressedInd = false
	   , mFetchAheadCnxnDict = new CmnColls.HashTable() // key-value pairs of URL to connection object
	   , mFetchAheadLastHndldGrpId; // the last Fetch Ahead group identifier this web part has seen



    var DTMN_LANDING_PAGE_SUPPRESS_IND_FUNC = function(msgObj) {ProdPageWebPartLoader.dtmnLandingPageSupressInd(msgObj); };
    var LOAD_FUNC = function(msgObj) { ProdPageWebPartLoader.Load(msgObj); };
    var UNLOAD_FUNC = function(msgObj) { ProdPageWebPartLoader.UnLoadWebPart(msgObj); }; // pass in true to remove spec search filters.

    /******************************************************************/
    //PUBLIC METHODS

    // -------------------------------------------------------------
    // Summary:
    // -------------------------------------------------------------
    this.Load = function(msgObj, loadFromSessionInd) {

		var trkEvnt;

        // get tracking information for the current request
        mSlctdSrchRsltId = McMaster.SesnMgr.GetStVal(McMaster.SesnMgr.StValDefs.SlctdSrchRsltId.KyTxt());

        // start new request tracking
		var top = McMasterCom.Nav.GetTopFrame();
		trkEvnt = new top.PerfTracker.Evnt(top.PerfTracker.EvntNms.ProdPageLdrLoadBgn, top.PerfTracker.PgCntxtNms.DynCntnt);

        //Initialize the choose specs snapshot
        if (!loadFromSessionInd) {

            ContentHistMgr.Init_Snapshot(ContentHistMgr.TYP.PROD_PAGE_LOAD);

            //initialize the load from session indicator
            McMaster.SesnMgr.SetStVal(McMaster.SesnMgr.StValDefs.ProdPageLoadFrmSesnInd.KyTxt(), false);

            // Also set its potential children
            // TODO: May be this is not the place where those indicators should be set, maybe no indicators needed.
            McMaster.SesnMgr.SetStVal(McMaster.SesnMgr.StValDefs.ChooseSpecsLoadFrmSesnInd.KyTxt(), false);
            McMaster.SesnMgr.SetStVal(McMaster.SesnMgr.StValDefs.ContentLoadFrmSesnInd.KyTxt(), false);

            //Initialize session variables.
            initSesnStVals(Cmn.GetViewportWidth());

			//unload presentation image user input
			McMasterCom.Nav.GetTopFrame().PrsnttnUsrInp.Unload();
			McMasterCom.Nav.GetTopFrame().ImgUsrInp.Unload();
			McMasterCom.Nav.GetTopFrame().GrpUsrInp.Unload();

			//unload temporary variable
			McMasterCom.Nav.GetTopFrame().FullPrsnttnWebPart.ClearPrsnttnIdSeenCntVar();

        }
		
		//If we have a grpUsrInp attached to the payload, this is coming from a summarized group view and we need to use it 
		//in order for the right spec search to show up. 
		if (msgObj) {
			var payload = msgObj.MsgPayload();
			if (payload) {
				grpUsrInp = payload.GrpUsrInp;
			}
			if (grpUsrInp) {
				grpUsrInp.UpdateSession();
			}
		}

        //Performance timer - Track the end of the load event
		var top = McMasterCom.Nav.GetTopFrame();
		trkEvnt = new top.PerfTracker.Evnt(top.PerfTracker.EvntNms.ProdPageLdrLoadEnd, top.PerfTracker.PgCntxtNms.DynCntnt);

        //Create the ajax connection
        me.CrteAjaxCnxn();

    };


    //------------------------------------------------------------------
    // Summary: Function is called by load manager,
    //          when web part is ready to load from session
    // Input:   webPartObj - Web part
    //------------------------------------------------------------------
    this.LoadFrmSesn = function() {

		var top = McMasterCom.Nav.GetTopFrame();
		var trkEvnt = new top.PerfTracker.Evnt(top.PerfTracker.EvntNms.ProdPageLdrLoadFrmSesn, top.PerfTracker.PgCntxtNms.DynCntnt);

        // Set the load from session indicator
        McMaster.SesnMgr.SetStVal(McMaster.SesnMgr.StValDefs.ProdPageLoadFrmSesnInd.KyTxt(), true);


        // TODO: May be this is not the place where those indicators should be set, maybe no indicators needed.
        McMaster.SesnMgr.SetStVal(McMaster.SesnMgr.StValDefs.ChooseSpecsLoadFrmSesnInd.KyTxt(), true);
        McMaster.SesnMgr.SetStVal(McMaster.SesnMgr.StValDefs.ContentLoadFrmSesnInd.KyTxt(), true);

        // Call the normal "load" method to load the web part
		if (ContentHistMgr.ShouldILoadFrmSesn(ContentHistMgr.TYP.PROD_PAGE_LOAD)) {
			this.Load(null, true); // pass true to indicate that we're loading from session
		} else {
			// Because this method, ProdPageWebPartLoader.LoadFrmSesn, is being called, we KNOW
			// that the ProdPageWebPart was present on the page at this history point.
			// However, the Content History Manager tells us that the Product Page didn't
			// initiate the loading of dynamic content at this step.
			//
			// This means we aren't responsible for loading content, but we MAY need to add back
			// in some skeleton HTML containers for Spec Search and Content.
			if (Cmn.GetObj("ProductPage")) {
				// markup already present
			} else {
				var div = document.createElement("div"),
				html = [];
				html.push("<div id='ProductPage'>");

                // only insert markup for spec search if it was loaded earlier
                if (ContentHistMgr.ShouldILoadFrmSesn(ContentHistMgr.TYP.CHOOSE_SPECS_LOAD)) {
    				html.push("<div class='SpecSrch_Cntnr SpecSrch_Cntnr_Display' id='SpecSrch_Cntnr'>");
    				html.push("<div class='SpecSrch_Inner' id='SpecSrch_Inner'></div>");
    				html.push("<div class='clearDiv'></div>");
    				html.push("</div>");
                }

				html.push("<div class='ProdPageContent' id='ProdPageContent'></div>");
				html.push("</div>");
				div.innerHTML = html.join("");
				var mainContent = Cmn.GetObj("MainContent");
				Cmn.AddCls(mainContent, "ShellLayout_MainContent_ProdPage_Loaded");
				mainContent.innerHTML = ""; // clear it out
				mainContent.appendChild(div);

				// Set indicator that we're reloading the Product Page. Child web parts may have different
				// behaviors depending on whether it's the initial load of Product Page or a subsequent load.
				McMaster.SesnMgr.SetStVal(McMaster.SesnMgr.StValDefs.ProdPageReloadingInd.KyTxt(), true);
				ProdPageWebPart.PostWebPartLoad();
            }
		}
    };


    // -------------------------------------------------------------
    // Summary: WebPart will be unloaded fully
    // -------------------------------------------------------------
    this.UnLoadWebPart = function(msgObj) {


        //Abort any stale AJAX requests
        me.AbortStaleReq();
       McMaster.SesnMgr.SetStVal(McMaster.SesnMgr.StValDefs.ProdPageReloadingInd.KyTxt(), false);
        mSlctdSrchRsltId = -1;
        me = this;
        mPrevCnxn = null;
        mReqNbr = -1;
    };

    // -------------------------------------------------------------
    // Summary: Performs the AJAX connection to the HTTPHandler
    // Args:	None
    // DEV Notes: This function may need to be shuffled to a loader class. See ChooseSpecsWebPartLoader for performance timers
    // -------------------------------------------------------------
    this.CrteAjaxCnxn = function() {
		var trkEvnt;

        // Begin performance tracking for this method
		var top = McMasterCom.Nav.GetTopFrame();
		trkEvnt = new top.PerfTracker.Evnt(top.PerfTracker.EvntNms.ProdPageCrteAjaxCnxnBgn, top.PerfTracker.PgCntxtNms.DynCntnt);

        //Abort any stale AJAX requests
        me.AbortStaleReq();

        mReqNbr = mReqNbr + 1;

        //perform the AJAX connection

        McMaster.SesnMgr.SetStVal(McMaster.SesnMgr.StValDefs.ProdPageReloadingInd.KyTxt(), true);

        McMaster.LoadMgr.UnloadCntnr(PROD_PAGE_WEB_PART_CNTNR_DIV_NM);
        McMaster.LoadMgr.ShowCntnr(PROD_PAGE_WEB_PART_CNTNR_DIV_NM);
        McMaster.LoadMgr.DisplWaitIcon(PROD_PAGE_WEB_PART_CNTNR_DIV_NM);

        // Create connection object
		var cnxnObj = {
            success: function(webPartObj, reqArgs) {
                var srchRsltId = McMaster.SesnMgr.GetStVal(McMaster.SesnMgr.StValDefs.SlctdSrchRsltId.KyTxt());
                if (srchRsltId && mSlctdSrchRsltId != srchRsltId) {
                    // Stale response
                } else if (reqArgs && typeof(reqArgs.reqNbr) === "number" && reqArgs.reqNbr !== mReqNbr) {
					// do nothing
                } else {
					var top = McMasterCom.Nav.GetTopFrame();	
					var trkEvnt;
                    var payload = new top.PerfTracker.EvntPayload();
					payload.Add("ServerTm", webPartObj.ServerTm);
					payload.Add("ServerNm", webPartObj.ServerNm);

					//performance timer
					trkEvnt = new top.PerfTracker.Evnt(top.PerfTracker.EvntNms.ProdPageAjaxCnxnSuccess, top.PerfTracker.PgCntxtNms.DynCntnt, payload);

                    //reset the previous connection
                    mPrevCnxn = null;

                    //load the web part without first inserting the HTML
                    McMaster.LoadMgr.LoadAssocWebPartFiles(webPartObj);
                }

            },
            abort: function() {

            },
            failure: function(failureObj, reqArgs) {

               if (mAbortInd) {
                    mAbortInd = false; // reset indicator
               } else {
					mPrevCnxn = null;

					//Abort the snapshot
					ContentHistMgr.Abort_Snapshot(ContentHistMgr.TYP.PROD_PAGE_LOAD);

					if (failureObj.authErr === true) {
						// this failure was due to an authentication error
						// it is NOT a web part-related error, and therefore
						// we should not publish that message.
					} else {
						// Publish a Web Part Fatal Error Occurred message
						Shell.ExpandSecondaryContent();
						var msg = new McMaster.MsgMgrMsgs.WebPartFatalErrOccurred(mHdr);
						McMaster.MsgMgr.PubMsg(msg);
					}
				}
            },
            cnxnParm: {
                respTyp: McMaster.CnxnMgr.WEB_PART_RESP_TYP_TXT
                , reqNbr: mReqNbr
            },
			sendTouch: true,
			timeout: TIMEOUT_MS
        };

		var url = getURL()
		, srchRsltId = McMaster.SesnMgr.GetStVal(McMaster.SesnMgr.StValDefs.SlctdSrchRsltId.KyTxt())
		, srchRsltTxt = McMaster.SesnMgr.GetStVal(McMaster.SesnMgr.StValDefs.SlctdSrchRsltTxt.KyTxt());

		switch(true) {
			case (mFetchAheadCnxnDict.ContainsKy(url)):

				var req = mFetchAheadCnxnDict.Itm(url);
				if (req === true) {
					// Retrieve content from the HTTPHandler
					mPrevCnxn = McMaster.CnxnMgr.PerformAjaxCnxn(url, cnxnObj);

					// track complete request
					trkFetchAhead(FetchAhead.CACHE_STATES.HIT_COMPLETE, srchRsltTxt, srchRsltId);
				} else {
					mPrevCnxn = McMaster.CnxnMgr.ModifyCnxn(req, cnxnObj);

					// The value in the dictionary is updated to the boolean true.
					// Changing the cache entry value ensures that the request won't
					// be cancelled in cnclInFlightFetchAheadRequests().
					// This is a little weird, but oh well. Might be worth changing in the future.
					mFetchAheadCnxnDict.Replace(url, true);

					// track in-flight request
					trkFetchAhead(FetchAhead.CACHE_STATES.HIT_INFLIGHT, srchRsltTxt, srchRsltId);
				}

				break;

			default:
				// Retrieve content from the HTTPHandler
				mPrevCnxn = McMaster.CnxnMgr.PerformAjaxCnxn(url, cnxnObj);

				// track cache miss - don't do this anymore [t2aes 1/30/13]
				//trkFetchAhead(FetchAhead.CACHE_STATES.MISS, srchRsltTxt, srchRsltId);
				break;
		}

		// Cancel any in-flight Fetch Ahead requests so they
		// don't eat up domain connections to www.
		cnclInFlightFetchAheadRequests();

        //TODO: Remove?
        // clears choosespec filters.
        // If the system pre-selected spec filters or we're loading from session,
        var sysSlctdSpecFiltersInd = McMaster.SesnMgr.GetStVal(McMaster.SesnMgr.StValDefs.SysSlctdSpecFiltersInd.KyTxt());
        if (sysSlctdSpecFiltersInd == true) {
            // Clear the system-selected filters state value from session.
            McMaster.SesnMgr.RemStVal(McMaster.SesnMgr.StValDefs.SysSlctdSpecFiltersInd.KyTxt());
        }


        // Finish performance tracking for this method
		var top = McMasterCom.Nav.GetTopFrame();
		trkEvnt = new top.PerfTracker.Evnt(top.PerfTracker.EvntNms.ProdPageCrteAjaxCnxnEnd, top.PerfTracker.PgCntxtNms.DynCntnt);
    };
	
    // -------------------------------------------------------------
    // Summary: Aborts requests in flight
    // -------------------------------------------------------------
    this.AbortStaleReq = function() {

        // copied over from spec search web part loader.
        // hopefully they put some thought into mReqNbr + 3 thing
        // reason why separate sequence number needed, is because it turned out that relying on yui only to cancel
        // requests might not be reliable enough. Additional request order keeping serves as a safeguard
        // as well as to make sure that we load the last valid request.
        mReqNbr = mReqNbr + 3;

        if (mPrevCnxn) {
            mAbortInd = true;

            //Abort the ajax connection
            McMaster.CnxnMgr.AbortAjaxCnxn(mPrevCnxn);

            //Clear the previous connection
            mPrevCnxn = null;

            //Abort the snapshot
            ContentHistMgr.Abort_Snapshot(ContentHistMgr.TYP.PROD_PAGE_LOAD);
            //            McMaster.SesnMgr.SetStVal(McMaster.SesnMgr.StValDefs.ProdPageUpdatingInd.KyTxt(), false);

        } else {
            mAbortInd = false;
        }
    };

    // -------------------------------------------------------------
    // Summary: Determines whether to show or suppress landing pages.
    //
    // We want to suppress landing pages when customers select the
    // opt-out link that takes them to dynamic content.
    // -------------------------------------------------------------
    this.dtmnLandingPageSupressInd = function(msgObj) {
        if (msgObj.MsgHdr().CntxtNm == "LandingPage") {
            mLandingPageSuppressedInd = true;
        } else {
            mLandingPageSuppressedInd = false;
        }
    };

    // -------------------------------------------------------------
    // Summary: Cancels any "live" in-flight Fetch Ahead requests.
    // -------------------------------------------------------------
	var cnclInFlightFetchAheadRequests = function() {
		var urls = mFetchAheadCnxnDict.Keys(),
		len = urls.length;

		// Cancel any "live" in-flight requests, unless they match
		// the passed-in request.
		for (var i=0; i<len; i++) {
			var url = urls[i];
			var req = mFetchAheadCnxnDict.Itm(url);

			// If the request is valid and not completed (i.e. boolean true value)
			// cancel it and remove it from the dictionary.
			if (req && req !== true) {
				// Abort the in-flight connection
				McMaster.CnxnMgr.AbortAjaxCnxn(req);

				// Remove aborted connected from cache so that it can be
				// fetched again, if necessary.
				mFetchAheadCnxnDict.Rem(url);
			}
		}
	};


    // -------------------------------------------------------------
    // Summary: Initialize session state values
    //
    // Inputs: width of the viewport
    // -------------------------------------------------------------
    var initSesnStVals = function(viewportWidth) {

//        McMaster.SesnMgr.SetStVal(McMaster.SesnMgr.StValDefs.ProdPageUnloadingInd.KyTxt(), false);

        //clear the presentation filter
        McMaster.SesnMgr.RemStVal(McMaster.SesnMgr.StValDefs.DynamicPagePrsnttnStats.KyTxt());

		//reset the active presentation id to null so we use the default scroll position of zero (top of the page)
		McMaster.SesnMgr.SetStVal(McMaster.SesnMgr.StValDefs.DynamicPageActvPrsnttnId.KyTxt(),null);

        //set the search result ID in session
        var srchRsltId = McMaster.SesnMgr.GetStVal(McMaster.SesnMgr.StValDefs.SlctdSrchRsltId.KyTxt());
        McMaster.SesnMgr.SetStVal(McMaster.SesnMgr.StValDefs.DynamicPageSrchRsltId.KyTxt(), srchRsltId);

        //set the Main container width in session
        var cntnrWdth = getCntnrWdth(viewportWidth);
        McMaster.SesnMgr.SetStVal(McMaster.SesnMgr.StValDefs.ContentCntnrWdth.KyTxt(), cntnrWdth);


    };

    // -------------------------------------------------------------
    // Returns the URL to make an Ajax request to get new spec search content
    // -------------------------------------------------------------
    var getURL = function(msgObj) {

         var viewPortHgt = 0;
		 var specSrchInp;

        //determine if the search results pane is collapsed
        // TODO: white list based.
        var srchRsltDisplInd = isSrchRsltDisplOvrdInd();

        // If Merchandising has provided an override to show the specs search pane, then do so.
        // hex nuts?
        var specSrchhexnutsOvrdInd = McMaster.SesnMgr.GetStVal(
                    McMaster.SesnMgr.StValDefs.ChooseSpecsRsltnOvrdInd.KyTxt());
		if (specSrchhexnutsOvrdInd === null){
			specSrchhexnutsOvrdInd = false;
		}

		if (msgObj){
			//Get the spec search user inputs
			var payload = msgObj.MsgPayload();
			specSrchInp = payload.SpecSrchInp;
			// If we're pre-fetching content, set the srchRsltDisplInd a bit differently.
			if (msgObj.NM === McMaster.MsgMgrMsgs.FetchAheadDatRcvd.NM){
				if(SrchRsltWebPartOvrd.IsAutoExpandSrchRslt(msgObj.MsgPayload().SrchTxt.replace("-", " "))){
					srchRsltDisplInd = true;
				}else{
					srchRsltDisplInd = false;

			}}
		} else{
			specSrchInp = SpecSrchInp.Get();
		}


        var rtnQS = PROD_PAGE_WEB_PART_HTTP_HANDLER_URL;

        rtnQS = Cmn.AddQSNmVal(rtnQS, "cntnridtxt", encodeURIComponent(PROD_PAGE_WEB_PART_CNTNR_DIV_NM));
        rtnQS = Cmn.AddQSNmVal(rtnQS, "srchidtxt", encodeURIComponent(getSrchId(msgObj)));
        // assume that search is collapsed by default.
        var cntnrWdth = getCntnrWdth(Cmn.GetViewportWidth());
        rtnQS = Cmn.AddQSNmVal(rtnQS, "cntnrwdth", encodeURIComponent(cntnrWdth));
        rtnQS = Cmn.AddQSNmVal(rtnQS, "srchrsltdisplovrdind", encodeURIComponent(srchRsltDisplInd));
        rtnQS = Cmn.AddQSNmVal(rtnQS, "specsrchhexnutsovrdind", encodeURIComponent(specSrchhexnutsOvrdInd));
        rtnQS = Cmn.AddQSNmVal(rtnQS, "landingpagesuppressedind", encodeURIComponent(mLandingPageSuppressedInd));
		rtnQS = Cmn.AddQSNmVal(rtnQS, "srchrslttxt", encodeURIComponent(McMaster.SesnMgr.GetStVal(McMaster.SesnMgr.StValDefs.SlctdSrchRsltTxt.KyTxt())));

        rtnQS = specSrchInp.AddSpecUsrInpQS(rtnQS);

		//if we're pre-fetching content, don't include prsnttnUsrInps.
        // if we're pre-fetching content, we grab the srchRsltTxt from the msgObj and not fron session 
        // as session holds current srchRsltTxt and for fetchAhead we need the next srchRsltTxt.
		if (msgObj && msgObj.NM === McMaster.MsgMgrMsgs.FetchAheadDatRcvd.NM) {
			rtnQS = Cmn.AddQSNmVal(rtnQS, "srchrslttxt", encodeURIComponent(msgObj.MsgPayload().SrchTxt.replace(/-/g, " ")));
		} else {
            rtnQS = Cmn.AddQSNmVal(rtnQS, "srchrslttxt", encodeURIComponent(McMaster.SesnMgr.GetStVal(McMaster.SesnMgr.StValDefs.SlctdSrchRsltTxt.KyTxt())));
			rtnQS = PrsnttnUsrInp.Get().AddPrsnttnUsrInpQS(rtnQS);
		}
		rtnQS = ImgUsrInp.Get().AddImgUsrInpQS(rtnQS);
		rtnQS = GrpUsrInp.Get().AddGrpUsrInpQS(rtnQS);

        // When loading from session, this is passed through to dynamic page
        rtnQS = Cmn.AddQSNmVal(rtnQS, "expandedprsnttns",
             encodeURIComponent(ContentWebPartLoader.GetExpandedPrsnttnQSVal()));

        //Add a query string parm so Akamai will return the proper cached IE6 specific markup (no sprites)
		if (Cmn.IsSpriteEnabled()) {
			//do nothing
		} else {
		    //tell the server not to generate the sprite
		    //this query string argument is used by inlineImg.vb
			rtnQS = Cmn.AddQSNmVal(rtnQS, "spriteind", encodeURIComponent(false));
		}

        //return the landing page suppression indicator to it's default.
        mLandingPageSuppressedInd = false;

        //add viewport height to the query string
        viewPortHgt = McMaster.SesnMgr.GetStVal(McMaster.SesnMgr.StValDefs.MainContentCntnrHeight.KyTxt());
      	rtnQS = Cmn.AddQSNmVal(rtnQS, "viewporthgt", viewPortHgt);

        return rtnQS;
    };


    // -------------------------------------------------------------
    // Summary: Compute the container width for search & content, assumes search is collapsed.
    //          This function adjust for everything that is outside of product page
    //          , except it makes assumption that search container is collapsed.
    //          The reason for that that the decision on weather search needs to be displayed is made on server.
    // Inputs:  viewport width
    //          indicator of whether srch pane is collapsed
    // -------------------------------------------------------------
    var getCntnrWdth = function(viewportWidth) {

        var cntnrWdth = 0
           , srchCntnrWdth = SRCH_RSLTS_CNTNR_WIDTH_COLLAPSED;

        // CONTENT_CNTNR_ADDITIONAL (15 left padding + 10 right padding) is substracted just as a beefup factor (correct if wrong)
        //        cntnrWdth = viewportWidth
        //					- CONTENT_CNTNR_PADDING - CONTENT_CNTNR_ADDITIONAL
        //				    - srchCntnrWdth;
        cntnrWdth = viewportWidth - srchCntnrWdth;


        return cntnrWdth;
    };


    // -------------------------------------------------------------
    // Returns the search result ID.
    // Remarks: The SlctdSrchRsltId might be null, i.e. if the customer
    // 			has selected a part number causing the search result
    //			web part to unload.  Accordingly, we check both that
    //			session value and the DynamicPageSrchRsltId, which is
    //			initialized by the DynamicContentCoordinator.
    // -------------------------------------------------------------
    var getSrchId = function(msgObj) {
        var srchRsltId;
		if (msgObj && msgObj.NM === McMaster.MsgMgrMsgs.FetchAheadDatRcvd.NM){
			srchRsltId = msgObj.MsgPayload().FetchAheadSrchRsltID;
		}else{
			srchRsltId = McMaster.SesnMgr.GetStVal(McMaster.SesnMgr.StValDefs.SlctdSrchRsltId.KyTxt())
				|| McMaster.SesnMgr.GetStVal(McMaster.SesnMgr.StValDefs.DynamicPageSrchRsltId.KyTxt())
		}
		return srchRsltId
    };


    // Checks if search result text is on search display override list
    var isSrchRsltDisplOvrdInd = function(srchRsltTxt) {
        // search when loads checks against the list to find out if it needs to open.
        // it will collapse otherwise. Logic here checks if search is collapsed
        var srchDisplOvrdInd = false;

        var secondaryContentCntnr = Cmn.GetObj(SECONDARY_CONTENT_CNTNR_NM);
        if (Cmn.HasCls(secondaryContentCntnr, SECONDARY_CONTENT_EXPANDED_CLS_NM)) {
            srchDisplOvrdInd = true;
        }

        return srchDisplOvrdInd;
    };

    // checks if hex nuts for which we always show choosespec.
    var isSpecSrchHexNutsOvrdInd = function() {
        var specSrchHexNutsOvrdInd = McMaster.SesnMgr.GetStVal(McMaster.SesnMgr.StValDefs.ChooseSpecsRsltnOvrdInd.KyTxt());

        return false;
    };

	//----------------------------------------------------------
	// Summary: Handles the reception of fetch ahead data by
	//			creating an ajax connection to retrieve content.
	//		msgObj (optional) - A message containing data that is used in
	// 							the creation of the AJAX connection. Absent
	//							the presence of data in the message, this
	//							method will retrieve current information
	//							from Session.
	//----------------------------------------------------------
	var hndlFetchAheadDatRcvd = function(msgObj){

		//Only make a request for prod page if the data is
		//intermediate page-relevant.
		var payload = msgObj.MsgPayload();
		var fetchAheadDatTyp = payload.FetchAheadDatTyp;
		if (fetchAheadDatTyp === "LANDING_PAGE"){

			// If the first request of a group, track the fact that we've chosen to make a Fetch Ahead prediction.
			if (!(mFetchAheadLastHndldGrpId) || mFetchAheadLastHndldGrpId !== payload.FetchAheadGrpId) {
				FetchAhead.TrkPredictions(FetchAhead.PREDICT_STATES.PREDICT, payload.CurrWebPartIdTxt, 'ProdPageWebPart');
				mFetchAheadLastHndldGrpId = payload.FetchAheadGrpId; // update "last handled" group ID
			}

			//just pass in the URL. we don't handle the response
			//other than by caching it.
			var cnxnUrl = getURL(msgObj);

			// if appropriate, fetch ahead
			switch(true) {
				case (mFetchAheadCnxnDict.ContainsKy(cnxnUrl)):
					// already fetched this URL
					break;

				default:

					// Track each Fetch Ahead request.
					var srchRsltId; if (payload.FetchAheadSrchRsltID) { srchRsltId = payload.FetchAheadSrchRsltID; } else { srchRsltId = 0; }
					var srchTxt; if (payload.SrchTxt) { srchTxt = payload.SrchTxt; } else { srchTxt = 'unknown'; }
					trkFetchAhead(FetchAhead.CACHE_STATES.REQUEST, srchTxt, srchRsltId);

					// Make request.
					var cnxnObj = {
						success: function(webPartObj, reqArgs) {
							// update fetch ahead dictionary to indicate
							// connection success
							//
							// The value in the dictionary is updated to the boolean true.
							// This is a little weird, but oh well. Might be worth changing in the future.
							if (mFetchAheadCnxnDict.ContainsKy(cnxnUrl)) mFetchAheadCnxnDict.Replace(cnxnUrl, true);
						},
						failure: function() {
							// remove entry
							mFetchAheadCnxnDict.Rem(cnxnUrl);
						},
						abort: function() {
							// remove entry
							mFetchAheadCnxnDict.Rem(cnxnUrl);
						},
						cnxnParm: {
							respTyp: McMaster.CnxnMgr.WEB_PART_RESP_TYP_TXT
						},
						sendTouch: true,
						timeout: TIMEOUT_MS
					};

					// fetch ahead and store in dictionary
					var req = McMaster.CnxnMgr.PerformAjaxCnxn(cnxnUrl, cnxnObj);
					mFetchAheadCnxnDict.Add(cnxnUrl, req);

					break;
			}
		}
	}

	//----------------------------------------------------------
	// Summary: Tracks successes or failures of Fetch Ahead.
	// Inputs:
	//		srchRsltId - search result ID of the content fetched ahead
	//		cacheStEnum - hit/miss/in-flight enumeration (FetchAhead.CACHE_STATES)
	//----------------------------------------------------------
	var trkFetchAhead = function(cacheStEnum, srchTxt, srchId) {
		// track in webreports
		var trkObj = {};
		trkObj.FetchAheadCacheSt = cacheStEnum;
		trkObj.SrchTxt = srchTxt;
		trkObj.SrchRsltId = srchId;

		Cmn.TrkAct(trkObj, CLS_NM);
	};

    /*************************************************************/
    // SUBSCRIPTIONS

    // Subscribe to messages.

    //unload messages
    // Subscribe to the messages
    // web part will load in responce to dynamic page selected
    McMaster.MsgMgr.AddSubscriber(McMaster.MsgMgrMsgs.DynamicContentSlctd, DTMN_LANDING_PAGE_SUPPRESS_IND_FUNC, McMaster.MsgMgr.PRIORITY.HIGH);
    McMaster.MsgMgr.AddSubscriber(McMaster.MsgMgrMsgs.ProdPageSlctd, LOAD_FUNC, McMaster.MsgMgr.PRIORITY.HIGH);
    McMaster.MsgMgr.AddSubscriber(McMaster.MsgMgrMsgs.AddnlContentSlctd, UNLOAD_FUNC, McMaster.MsgMgr.PRIORITY.HIGH);
    McMaster.MsgMgr.AddSubscriber(McMaster.MsgMgrMsgs.Cad3dSlctd, UNLOAD_FUNC, McMaster.MsgMgr.PRIORITY.HIGH);
    McMaster.MsgMgr.AddSubscriber(McMaster.MsgMgrMsgs.Cad2dSlctd, UNLOAD_FUNC, McMaster.MsgMgr.PRIORITY.HIGH);
    McMaster.MsgMgr.AddSubscriber(McMaster.MsgMgrMsgs.CareersSlctd, UNLOAD_FUNC, McMaster.MsgMgr.PRIORITY.HIGH);
    McMaster.MsgMgr.AddSubscriber(McMaster.MsgMgrMsgs.CntctUsSlctd, UNLOAD_FUNC, McMaster.MsgMgr.PRIORITY.HIGH);
    McMaster.MsgMgr.AddSubscriber(McMaster.MsgMgrMsgs.NeedHelpSlctd, UNLOAD_FUNC, McMaster.MsgMgr.PRIORITY.HIGH);
    McMaster.MsgMgr.AddSubscriber(McMaster.MsgMgrMsgs.CtlgPageSlctd, UNLOAD_FUNC, McMaster.MsgMgr.PRIORITY.HIGH);
    McMaster.MsgMgr.AddSubscriber(McMaster.MsgMgrMsgs.CurrOrdSlctd, UNLOAD_FUNC, McMaster.MsgMgr.PRIORITY.HIGH);
    McMaster.MsgMgr.AddSubscriber(McMaster.MsgMgrMsgs.SavedOrdsSlctd, UNLOAD_FUNC, McMaster.MsgMgr.PRIORITY.HIGH);
    McMaster.MsgMgr.AddSubscriber(McMaster.MsgMgrMsgs.HomeSlctd, UNLOAD_FUNC, McMaster.MsgMgr.PRIORITY.HIGH);
    McMaster.MsgMgr.AddSubscriber(McMaster.MsgMgrMsgs.HomePageCatgSlctd, UNLOAD_FUNC, McMaster.MsgMgr.PRIORITY.HIGH);
    McMaster.MsgMgr.AddSubscriber(McMaster.MsgMgrMsgs.IntermediatePageSlctd, UNLOAD_FUNC, McMaster.MsgMgr.PRIORITY.HIGH);
    McMaster.MsgMgr.AddSubscriber(McMaster.MsgMgrMsgs.RecentOrdSlctd, UNLOAD_FUNC, McMaster.MsgMgr.PRIORITY.HIGH);
    McMaster.MsgMgr.AddSubscriber(McMaster.MsgMgrMsgs.OrdHistSlctd, UNLOAD_FUNC, McMaster.MsgMgr.PRIORITY.HIGH);
    McMaster.MsgMgr.AddSubscriber(McMaster.MsgMgrMsgs.SecrSlctd, UNLOAD_FUNC, McMaster.MsgMgr.PRIORITY.HIGH);
	McMaster.MsgMgr.AddSubscriber(McMaster.MsgMgrMsgs.FetchAheadDatRcvd, hndlFetchAheadDatRcvd);

};                              // end definition

}; // end check

if(this.PinnedPrsnttns){}else{this.PinnedPrsnttns=new function(){var T=[],B=[],F,aj,U=this,l=70,E=null,Z=45,S=false,h=false,g=false,a=[],p=false,ak=0,x=0,n,w,ad=Cmn.IsIE6Below(),ai=Cmn.IsIE7(),af=Cmn.IsIE8(),ae=Cmn.IsIE9(),am=Cmn.IsIE10(),G=[],y=0,t=0,ac=0,ag=0,j=0,b=0,O=true,R=true,D=true,i=true,X=30;McMaster.MsgMgr.AddSubscriber(McMaster.MsgMgrMsgs.MultiPageNavExpanded,function(an){var m=N();if(!m){}else{if(m.id=="ProdPageContent"){}else{if(ad){}else{mainIFrame=this.document.getElementById("MainIFrame");ctlgFrame=V(mainIFrame,"Catalog");ctlgFrame.contentWindow.CtlgPageWebPart.SetCtlgPageCntnrHgt();ctlgFrame.contentWindow.PinnedPrsnttns.Reposition();}}}});McMaster.MsgMgr.AddSubscriber(McMaster.MsgMgrMsgs.MultiPageNavCollapsed,function(an){var m=N();if(!m){}else{if(m.id=="ProdPageContent"){}else{if(ad){}else{mainIFrame=this.document.getElementById("MainIFrame");ctlgFrame=V(mainIFrame,"Catalog");ctlgFrame.contentWindow.CtlgPageWebPart.SetCtlgPageCntnrHgt();ctlgFrame.contentWindow.PinnedPrsnttns.Reposition();}}}});McMaster.MsgMgr.AddSubscriber(McMaster.MsgMgrMsgs.WebPartLoaded,function(an){if(an.MsgHdr().CntxtNm===McMaster.MsgMgr.CntxtNms.INLN_ORD||an.MsgHdr().CntxtNm===McMaster.MsgMgr.CntxtNms.MULTI_PAGE_NAV_TOOL){var m=N();if(!m){}else{if(m.id=="ProdPageContent"){U.Reposition();}else{if(ad){}else{mainIFrame=this.document.getElementById("MainIFrame");ctlgFrame=V(mainIFrame,"Catalog");ctlgFrame.contentWindow.CtlgPageWebPart.SetCtlgPageCntnrHgt();ctlgFrame.contentWindow.PinnedPrsnttns.Reposition();}}}}});McMaster.MsgMgr.AddSubscriber(McMaster.MsgMgrMsgs.InlnOrdBxClosed,function(an){var m=N();if(!m){}else{if(m.id=="ProdPageContent"){U.Reposition();}else{if(ad){}else{mainIFrame=this.document.getElementById("MainIFrame");ctlgFrame=V(mainIFrame,"Catalog");ctlgFrame.contentWindow.PinnedPrsnttns.Reposition();}}}});McMaster.MsgMgr.AddSubscriber(McMaster.MsgMgrMsgs.InlnOrdBxReopened,function(an){var m=N();if(!m){}else{if(m.id=="ProdPageContent"){U.Reposition();}else{if(ad){}else{mainIFrame=this.document.getElementById("MainIFrame");ctlgFrame=V(mainIFrame,"Catalog");ctlgFrame.contentWindow.PinnedPrsnttns.Reposition();}}}});McMaster.MsgMgr.AddSubscriber(McMaster.MsgMgrMsgs.OrdLnsUpdated,function(an){if(an.MsgHdr().CntxtNm===McMaster.MsgMgr.CntxtNms.INLN_ORD){var m=N();if(!m){}else{if(m.id=="ProdPageContent"){U.Reposition();}else{if(ad){}else{mainIFrame=this.document.getElementById("MainIFrame");ctlgFrame=V(mainIFrame,"Catalog");ctlgFrame.contentWindow.PinnedPrsnttns.Reposition();}}}}});McMaster.MsgMgr.AddSubscriber(McMaster.MsgMgrMsgs.MainContentCntnrResized,function(ap){var m=N();if(!m){}else{var ao=window.outerWidth,an;if(ao==undefined){ao=document.body.offsetWidth;}if(p){an=m.offsetHeight;}switch(true){case (an!==aj&&p):case (ao<F):case (ai||ad):if(m.id=="ProdPageContent"){U.Unload(true);}else{mainIFrame=this.document.getElementById("MainIFrame");ctlgFrame=V(mainIFrame,"Catalog");ctlgFrame.contentWindow.PinnedPrsnttns.Unload();ctlgFrame.contentWindow.CtlgPageWebPart.SetCtlgPageCntnrHgt();}break;default:break;}F=ao;aj=an;}});McMaster.MsgMgr.AddSubscriber(McMaster.MsgMgrMsgs.SecondaryContentCollapsed,function(an){var m=N();if(!m){}else{if(m.id=="ProdPageContent"){U.Unload(true);}else{if(ad){}else{mainIFrame=this.document.getElementById("MainIFrame");ctlgFrame=V(mainIFrame,"Catalog");ctlgFrame.contentWindow.PinnedPrsnttns.Unload();}}}});McMaster.MsgMgr.AddSubscriber(McMaster.MsgMgrMsgs.SecondaryContentExpanded,function(an){var m=N();if(!m){}else{if(m.id=="ProdPageContent"){U.Unload(true);}else{if(ad){}else{mainIFrame=this.document.getElementById("MainIFrame");ctlgFrame=V(mainIFrame,"Catalog");ctlgFrame.contentWindow.PinnedPrsnttns.Unload();}}}});McMaster.MsgMgr.AddSubscriber(McMaster.MsgMgrMsgs.ChooseSpecsStatChg,function(an){var m=N();if(!m){}else{if(m.id=="ProdPageContent"){U.Unload(true);}else{if(ad){}else{mainIFrame=this.document.getElementById("MainIFrame");ctlgFrame=V(mainIFrame,"Catalog");ctlgFrame.contentWindow.PinnedPrsnttns.Unload();}}}});this.FindPinnedElem=function(ao){var m=null;for(var an=0;an<G.length;an++){if(G[an][0]==ao){m=G[an][1];}}return m;};this.Hide=function(aq){for(var an=0;an<B.length;an++){var ap=B[an].id;if(aq==ap){var au=B[an].obj.childNodes,at=au.length,ao;for(ao=0;ao<at;ao++){Cmn.SetStyle(au[ao],"top","-5000px");}for(var m=0;m<T.length;m++){var ar=T[m];if(ar.mPrsnttnId==aq){ar.mFullPrsnttnCollapsedInd=true;ar.ResetPinState();break;}}}}U.Reposition();};this.Show=function(ap){for(var an=0;an<B.length;an++){var ao=B[an].id;if(ap==ao){for(var m=0;m<T.length;m++){var aq=T[m];if(aq.mPrsnttnId==ap){aq.mFullPrsnttnCollapsedInd=false;break;}}}}U.Reposition();};this.Reposition=function(){var an,m=T.length;for(var an=0;an<m;an++){if(T[an].mFullPrsnttnCollapsedInd==false){T[an].Reposition();var ao=N();T[an].HandleScroll(ao.scrollTop);}}s(8900);};this.Unload=function(aq){for(var ap=0;ap<a.length;ap++){Cmn.RemEvntListeners(a[ap][0],a[ap][1]);}for(var ap=0;ap<B.length;ap++){var at=document.getElementById(B[ap].id);if(at){document.body.removeChild(at);}}if(ai){var m;if(w){m=Cmn.GetElementsByClsNm("WebToolsetWebPart_Cntnr");if(m.length>0){if(aq){w.appendChild(m[0]);var ao=ProdPageWebPart.GetSpecSrchWdth();var an=Shell.GetMainContentWidth();var ar=an-ao-35;Cmn.SetStyle(m[0],"width",ar+"px");}else{Cmn.RemElem(m[0]);w=null;}}}}B=[];T=[];G=[];a=[];h=false;g=false;y=0;t=0;ac=0;ag=0;j=0;b=0;O=true;R=true;D=true;i=true;n=null;};this.Load=function(aq){var ap=N();if(ap){var an=ap.scrollWidth;E=r();var ao=false;if(ap.scrollWidth>ap.clientWidth){ao=true;}if(E&&ao==false){F=window.outerWidth;if(F==undefined){F=document.body.offsetWidth;}this.Reposition();if(!aq||!ap){}else{k(aq);if(ai||ad){if(b>X){switch(true){case b-ac<X:R=false;break;case b-ac-t<X:R=false;O=false;break;case b-ac-t-y<X:R=false;O=false;D=false;break;case b-ac-t-y-j<X:O=false;R=false;D=false;i=false;break;default:O=false;R=false;D=false;i=false;}}}Y(aq,ap);var ar=T.length;for(var m=0;m<ar;m++){if(T[m].mFullPrsnttnCollapsedInd==false){T[m].HandleScroll(ap.scrollTop);}}if(ar>0){v(ap);f(ap);}}}}};var r=function(){var at=E;var ap=McMaster.SesnMgr.GetStVal(McMaster.SesnMgr.StValDefs.EnvrMgrCharSetInd.KyTxt());if(ap=="99"){at=false;}if(at==null){var m=McMaster.SesnMgr.GetStVal(McMaster.SesnMgr.StValDefs.BrowserProcSpeed.KyTxt()),an=Cmn.GetBrowserInfo(),ao=an.browserNm,ar=q(),aq;switch(true){case m=="SLOW":case ar=="7":case ar=="Compat":case (p&&ad):at=false;break;default:if(m="FAST"){X=30;}at=true;break;}if(at){aq="enabled";}else{aq="disabled";}Cmn.TrkAct("PinnedContent="+aq+"&browser="+ao+an.browserVer+"&browserSpeed="+m+"&envrMgrCharSetInd="+ap,"PinnedContent");}return at;};var q=function(){var m="NA",ao="NA",an;if(/msie/i.test(navigator.userAgent)&&(!window.opera)){if(window.attachEvent&&window.ActiveXObject){m=(navigator.userAgent.match(/.+ie\s([\d.]+)/i)||[])[1];an=parseInt(m);switch(an){case 7:if(document.documentMode){if(/trident\/\d/i.test(navigator.userAgent)){ao="Compat";}else{ao="7";}}break;case 8:if(document.documentMode){ao="8";}break;case 9:if(document.documentMode){ao="9";}break;default:break;}}}return ao;};var I=function(){if(!n){var m=Cmn.GetElementsByClsNm("WebToolsetWebPart_Cntnr");if(m.length>0){n=m[0];}}return n;};var s=function(m){var an=I();if(an&&x==m){}else{Cmn.SetStyle(an,"z-index",m);x=m;}};var N=function(){var an=null,ao=Cmn.GetObj("ProdPageContent"),m;if(ao){an=ao;p=false;}else{an=M();p=true;}return an;};var M=function(){var m=Cmn.GetObj("CtlgPageShell_CtlgPage_Cntnr"),an,ao;if(!m){if(this.document){an=this.document.getElementById("MainIFrame");ao=V(an,"Catalog");if(ao){m=V(ao,"CtlgPageShell_CtlgPage_Cntnr");}}}return m;};var V=function(an,ao){var m=null;if(an){if(an.contentDocument){m=an.contentDocument.getElementById(ao);}else{if(an.contentWindow){m=an.contentWindow.document.getElementById(ao);}}}return m;};var v=function(m){var an=function(ap){if(S==false){for(var ao=0;ao<T.length;ao++){if(T[ao].mFullPrsnttnCollapsedInd==false){T[ao].HandleScroll(m.scrollTop);}}}S=false;ak=m.scrollTop;s(8900);};if(h===false){Cmn.AddEvntListener(m,"scroll",an);m.scroll=an;h=true;a.push([m,"scroll"]);}};var f=function(m){var an=function(at){var au=0;at=at?at:window.event;au=at.detail?-at.detail/3:at.wheelDelta/120;S=true;Cmn.PreventDeflt(at);at.returnValue=false;at.cancelBubble=true;if(p){au=-au;}var aq=false;if(m.offsetHeight+m.scrollTop>=m.scrollHeight){if(p){if(au>0){aq=true;}}else{if(au<0){aq=true;}}}if(aq){}else{var ar=0;if(p){au=-au;}if(((m.offsetHeight+m.scrollTop)+(-au*Z))>=m.scrollHeight){ar=m.scrollHeight-(m.offsetHeight+m.scrollTop);}else{ar=-au*Z;}var ap=m.scrollTop+ar;for(var ao=0;ao<T.length;ao++){if(T[ao].mFullPrsnttnCollapsedInd==false){T[ao].HandleScroll(ap);}}m.scrollTop=ap;}ak=m.scrollTop;s(8900);};if(g===false){if(m.addEventListener){Cmn.RemEvntListeners(m,"DOMMouseScroll",an);Cmn.AddEvntListener(m,"DOMMouseScroll",an);a.push([m,"DOMMouseScroll"]);}m.onmousewheel=an;a.push([m,"onmousewheel"]);g=true;}};var k=function(an){if(an.PinnedColls.length>0){for(var m=0;m<an.PinnedColls.length;m++){if(an.PinnedColls[m].PinnedColls.length>0){k(an.PinnedColls[m]);}else{var ao=an.PinnedColls[m].PinnedElems[0];if(ao&&ao.ElemTyp==J.Typs.HDR){ab(ao.ElemTyp);if(ao.PinnedColls.length>0){d(ao.PinnedColls,ao.ElemTyp);}if(ao.PinnedCntnrs.length>0){e(ao.PinnedCntnrs,ao.ElemTyp);}}}}}else{if(an.PinnedCntnrs){for(var m=0;m<an.PinnedCntnrs.length;m++){if(an.PinnedCntnrs[m].PinnedColls.length>0){k(an.PinnedCntnrs[m]);}else{var ao=an.PinnedCntnrs[m].PinnedElems[0];if(ao&&ao.ElemTyp==J.Typs.HDR){ab(ao.ElemTyp);if(ao.PinnedColls.length>0){d(ao.PinnedColls,ao.ElemTyp);}if(ao.PinnedCntnrs.length>0){e(ao.PinnedCntnrs,ao.ElemTyp);}}}}}}};var d=function(ao,aq){var an=ao.length,ap,m;for(m=0;m<an;m++){ap=ao[m];switch(true){case (ap.PinnedElems.length>0):A(ap.PinnedElems,aq);break;case (ap.PinnedCntnrs.length>0):e(ap.PinnedCntnrs,aq);break;case (ap.PinnedColls.length>0):d(ap.PinnedColls,aq);break;}}};var e=function(an,ar){if(an.length>0){var ap=[],aq=an.length;for(var m=0;m<aq;m++){var ao=an[m];switch(true){case (ao.PinnedColls.length>0):d(ao.PinnedColls,ar);break;case (ao.PinnedElems.length>0):A(ao.PinnedElems,ar);break;default:break;}}}};var A=function(ar,ao){var aq=[],an=ar.length;for(var m=0;m<an;m++){var ap=ar[m];ab(ap.ElemTyp,ao);switch(true){case (ap.PinnedCntnrs.length>0):e(ap.PinnedCntnrs,ap.ElemTyp);break;case (ap.PinnedColls.length>0):d(ap.PinnedColls,ap.ElemTyp);break;default:break;}}};var ab=function(an,m){switch(an){case J.Typs.PIVOT:if(m==J.Typs.PIVOT){ac+=1;}else{t+=1;}b+=1;break;case J.Typs.IMG:case J.Typs.INLN_IMG:y+=1;b+=1;break;case J.Typs.COL_HDR:j+=1;b+=1;break;case J.Typs.HDR:ag+=1;b+=1;break;}};var Y=function(ao,an){if(ao.PinnedColls.length>0){for(var m=0;m<ao.PinnedColls.length;m++){if(ao.PinnedColls[m].PinnedColls.length>0){Y(ao.PinnedColls[m],an);}else{aa(ao.PinnedColls[m].PinnedElems[0],an);}}}else{if(ao.PinnedCntnrs){for(var m=0;m<ao.PinnedCntnrs.length;m++){if(ao.PinnedCntnrs[m].PinnedColls.length>0){Y(ao.PinnedCntnrs[m],an);}else{if(ao.PinnedCntnrs[m].pinnedElems){aa(ao.PinnedCntnrs[m].PinnedElems[0],an);}}}}}};var aa=function(ay,ap){var aH=Cmn.GetObj(ay.IDTxt,ap);var aM=Cmn.GetObj("Full_"+ay.PrsnttnId,ap);if(!aH||!aM){}else{var aA=L(ay);var aK=new H(aH,ap,aM,l,K(),ay.ElemTyp,aA,ay.PrsnttnId);var aG=document.createDocumentFragment(),aq=Cmn.CrteElement("div"),ao;if(p){ao="CtlgPage_PinnedElem";}else{ao="DynamicPage_PinnedElem";}aq.className+=ao;aq.id=ay.PrsnttnId;aq.appendChild(aK.mElem);var aC=[],au=ay.BufferElemIdTxts,aF,aD;for(var an=0;an<au.length;an++){aF=Cmn.GetObj(au[an],ap);aD=new ah(aF,aK);aC.push(aD);}if(aC.length>0){aK.AddNextStackElemColl(aC);}Q(ay,aK,aq,ap);var az={id:aq.id,obj:aq};B.push(az);aG.appendChild(aq);document.body.appendChild(aG);T.push(aK);G.push(["PinnedElem_"+aK.srcElem().id,aK]);if(ai&&p==false){var ax=I();var aI=ax.parentNode;var aL=document.createDocumentFragment();aL.appendChild(ax);document.body.appendChild(aL);w=aI;}var aE=Cmn.GetElementsBy(al,"img",aq);var aB=Cmn.GetElementsBy(u,"img",ap);for(var aw=0;aw<aE.length;aw++){for(var ar=0;ar<aB.length;ar++){if(aE[aw].id==aB[ar].id){var av=aE[aw];var m=aB[ar];var aJ=av.parentNode,at=null;if(aJ&&Cmn.HasCls(aJ,"ImgCaptionCntnr")){at=aJ;}else{at=av;}P(at,m);break;}}}}};var L=function(m){var an=true,ao=m.PinnedCntnrs[m.PinnedCntnrs.length-1];if(!ao){}else{if(ao.PinnedColls.length===0||ao.PinnedElems.length===0){an=false;}}return an;};var al=function(an){var m=false;if(an.id.length>0){m=true;}return m;};var u=function(an){var m=false;if(Cmn.GetAncestorByClsNm(an,"FullPrsnttn")&&an.id.length>0){m=true;}return m;};var P=function(m,an){var ap=true;var aq=an.className.split(" ");for(var ao=0;ao<aq.length;ao++){if(aq[ao]=="GenInfoImg"||aq[ao]=="ItmTblLnkImg"||aq[ao]=="Prsnttn_CADImg"||aq[ao]=="SecondaryDatTblImg"){ap=false;break;}}if(ap){Cmn.AddEvntListener(m,"mouseover",function(ar){FullPrsnttnWebPart.HndlImgMouseOverEvnt(ar,"",true,an);});Cmn.AddEvntListener(m,"mouseout",function(ar){FullPrsnttnWebPart.HndlImgMouseOutEvnt(ar,"");});Cmn.AddEvntListener(m,"mousedown",function(){FullPrsnttnWebPart.HndlImgMouseDownEvnt();});Cmn.AddEvntListener(m,"click",function(au){var at=Cmn.GetEvntTarget(au);if(Cmn.HasCls(at,"PartNbrLnk")){}else{var ar=FullPrsnttnWebPart.GetImgFromImgCaptionCompElem(at);if(ar){FullPrsnttnWebPart.HndlImgClickEvnt(au,"small",an.src,an);}}});a.push([m,"mouseover"]);a.push([m,"mouseout"]);a.push([m,"mousedown"]);a.push([m,"click"]);}};var K=function(){var an=0;if(p==false){if(Cmn.DetectBrowser()=="IE 6.0"||Cmn.IsTouchAware()){}else{var m=I();an=an+m.offsetHeight;}}return an;};var Q=function(ap,m,ao,an){if(ap.PinnedColls.length>0){c(ap.PinnedColls,m,ao,an);}if(ap.PinnedCntnrs.length>0){C(ap.PinnedCntnrs,m,ao,an);}};var c=function(av,m,aq,aw){var ar=av.length,at,ay;for(ay=0;ay<ar;ay++){at=av[ay];var az=[],ax=at.BufferElemIdTxts,ao,ap;for(var au=0;au<ax.length;au++){ao=Cmn.GetObj(ax[au],aw);ap=new ah(ao,m);az.push(ap);}var an;switch(true){case (at.PinnedElems.length>0):an=z(at.PinnedElems,m,aq,aw);break;case (at.PinnedCntnrs.length>0):C(at.PinnedCntnrs,m,aq,aw);break;case (at.PinnedColls.length>0):c(at.PinnedColls,m,aq,aw);break;}if(an){for(var au=0;au<an.length;au++){ao=Cmn.GetObj(an[au],aw);ap=new ah(ao,m);az.push(ap);}}if(az.length>0){m.AddNextStackElemColl(az);}}};var C=function(ay,an,au,az){if(ay.length>0){var m=[],ax=ay.length;an.AddNextStackElemColl(m);for(var aB=0;aB<ax;aB++){var ao=ay[aB],at=Cmn.GetObj(ao.IDTxt,az),aw=new o(at,an,ao),aC=[],aA=ao.BufferElemIdTxts,aq,ar;for(var av=0;av<aA.length;av++){aq=Cmn.GetObj(aA[av],az);ar=new ah(aq,aw);aC.push(ar);}var ap;switch(true){case (ao.PinnedColls.length>0):c(ao.PinnedColls,aw,au,az);break;case (ao.PinnedElems.length>0):ap=z(ao.PinnedElems,aw,au,az);break;default:break;}if(ap){for(var av=0;av<ap.length;av++){aq=Cmn.GetObj(ap[av],az);ar=new ah(aq,aw);aC.push(ar);}}if(aC.length>0){aw.AddNextStackElemColl(aC);}m.push(aw);}}};var z=function(au,m,av,ay){var aC=[],ao=au.length,an=[];m.AddNextStackElemColl(aC);for(var aA=0;aA<ao;aA++){var ax=au[aA];if((ax.ElemTyp==J.Typs.PIVOT&&m.mTyp==J.Typs.PIVOT&&R==false)||(ax.ElemTyp==J.Typs.PIVOT&&O==false)||(ax.ElemTyp==J.Typs.IMG&&D==false)||(ax.ElemTyp==J.Typs.COL_HDR&&i==false)){if(ax.BufferElemIdTxts.length>0){an.push(ax.BufferElemIdTxts);}}else{var at=Cmn.GetObj(ax.IDTxt,ay),ar=J.Create(at,m,ax,ay),aB=[],az=ax.BufferElemIdTxts,ap,aq;av.appendChild(ar.mElem);aC.push(ar);G.push(["PinnedElem_"+at.id,ar]);for(var aw=0;aw<az.length;aw++){ap=Cmn.GetObj(az[aw],ay);aq=new ah(ap,ar);aB.push(aq);}if(aB.length>0){ar.AddNextStackElemColl(aB);}switch(true){case (ax.PinnedCntnrs.length>0):C(ax.PinnedCntnrs,ar,av,ay);break;case (ax.PinnedColls.length>0):c(ax.PinnedColls,ar,av,ay);break;default:break;}}}return an;};var J=function(ao,m,ap,an){if(!m){throw new Error("no previous stack element");}if(!ao){throw new Error("no source element");}if(!ap){throw new Error("no server side element");}this.mLastBufferElemPinPos=-1;this.mElemTyp="PINNED_ELEM";this.mSrcElem=ao;this.mTyp=ap.ElemTyp;this.mContainerElems=this.getCntnrElems(this.mSrcElem,ap,an);this.mSrcElemHeight=ao.offsetHeight;this.mSrcElemWidth=this.getElemOffsetWdth(ao);this.mZIndex=m.ZIndex()-2;this.mElemHgt=0;this.mElem=this.crteCloneElem(ao,this.mTyp);this.mInnerTopMargin=this.getPivotTopMarginPxCnt();this.mRelXY=this.getRelXY();this.mPrevStackElem=m;this.mNextStackElemColls=[];this.mPinState=J.PinStates.UNINITIALIZED;this.mSlideOutAmt=0;this.mScrollOffInd=this.getScrollOffInd(ao,this.mTyp);this.mTblShowHideState=J.TblShowHideStates.SHOWN;this.mPrsnttnStructNbr=this.getPrsnttnStructNbr(ao);};J.PinStates={UNINITIALIZED:0,IN_FLOW_VISIBLE:1,IN_FLOW_HIDDEN:2,PINNED:3};J.TblShowHideStates={SHOWN:1,HIDDEN:2};J.Styles={VISIBLE:1,HIDDEN:2};J.Typs={HDR:1,IMG:2,TBL_LBL:3,COL_HDR:4,PIVOT:5,UNDEFINED:6,INLN_IMG:7};J.Create=function(ap,m,aq,an){var ao=new J(ap,m,aq,an);ao.init();return ao;};J.prototype.Elem=function(){return this.mElem;};J.prototype.ZIndex=function(){return this.mZIndex;};J.prototype.AddNextStackElemColl=function(m){this.nextStackElemColls().push(m);};J.prototype.GetNextStackHeight=function(){var ap=0,ar=this.nextStackElemColls(),an=ar.length;for(var ao=0;ao<an;ao++){var aq=ar[ao],m=aq.length,at=0;if(m===0){}else{at=aq[m-1].GetNextStackHeight();}if(at>ap){ap=at;}}ap+=this.clonedElemHgtPxCnt();return ap;};J.prototype.GetPrevStackHeight=function(){return this.clonedElemHgtPxCnt()+this.prevStackElem().GetPrevStackHeight();};J.prototype.HandleScroll=function(ap){var ao=this.getPinStartingPos();var an=this.getSlideOutPos(ap);var m=an+this.GetPrevStackHeight();switch(true){case (ap<ao):this.unpinAndShow(ap);break;case (ap>=ao&&ap<=an):this.pin(0,ap);break;case (ap>an&&ap<m):this.pin(ap-an,ap);break;case (ap>=m):this.unpinAndHide(ap);break;default:break;}};J.prototype.InitAll=function(){this.init();this.initChildren();};J.prototype.GetChldPinPos=function(at,av,aw){var aq,m,ao=this.nextStackElemColls(),au=ao.length;if(typeof aw==="undefined"){aw={AccumulatedHeight:0,NextSlideElemPinStartPos:0,IsLogicalGrpSlideout:false,BufferRowExists:false};}aq=this.walkDown(at,aw,av);if(aq.BufferRowExists==false){for(var ar=0;ar<au;ar++){var an=ao[ar],ax=an.length-2;for(var ap=0;ap<=ax;ap++){if(an[ap]===at){m=an[ap+1];}}}if(m!==undefined){aq=aw;if(at.mElemTyp=="PINNED_ROW"){m=this.getPinnedChld(m);}if(m!==undefined){aw.NextSlideElemPinStartPos=m.getPinStartingPos()-m.innerTopMargin();}}else{aq=this.walkUp(aw,av);}}return aq;};J.prototype.Reposition=function(){this.mLastBufferElemPinPos=-1;this.performReposition();this.performChildrenReposition();};J.prototype.ResetPinState=function(){this.setPinState(J.PinStates.UNINITIALIZED);this.resetChildrenPinState();};J.prototype.GetScrollableCntnrXY=function(){return this.prevStackElem().GetScrollableCntnrXY();};J.prototype.getPrsnttnStructNbr=function(ao){var an=ao,ap=0,m;while(an.parentNode){m=an.parentNode;if(Cmn.HasCls(m,"PrsnttnStructure2")){ap=2;break;}else{an=m;}}return ap;};J.prototype.getScrollOffInd=function(ar,m){var aq=true;switch(m){case 4:var ap=Cmn.GetAncestorByClsNm(ar,"ItmTbl");var ao=Cmn.GetPrevSibling(ap);if(ao&&ao.tagName=="TABLE"){var an=ao.offsetHeight-ap.offsetHeight;if(an>0){aq=false;}}break;default:break;}return aq;};J.prototype.showOrHideNextStackElems=function(aq){var ap="visibility",ax="";switch(true){case (aq===J.Styles.VISIBLE):propertyValTxt="visible";ax=J.TblShowHideStates.SHOWN;break;case (aq===J.Styles.HIDDEN):propertyValTxt="hidden";ax=J.TblShowHideStates.HIDDEN;break;default:break;}Cmn.SetStyle(this.Elem(),ap,propertyValTxt);if(ax===J.TblShowHideStates.HIDDEN){this.setPinState(J.PinStates.IN_FLOW_HIDDEN);}var aD=this.nextStackElemColls(),aB=aD.length;for(var av=0;av<aB;av++){var ar=aD[av],ay=ar.length;for(var az=0;az<ay;az++){Cmn.SetStyle(ar[az].Elem(),ap,propertyValTxt);ar[az].mTblShowHideState=ax;if(ar[az].mElemTyp==="PINNED_ELEM"){ar[az].showOrHideNextStackElems(aq);}}}if(this.mScrollOffInd===false){var at;switch(this.mTyp){case 4:at=Cmn.GetAncestorByClsNm(this.srcElem(),"ItmTbl");break;case 1:at=Cmn.GetAncestorByClsNm(this.srcElem(),"PrsnttnStructure\d");var ao=Cmn.GetNxtSibling(this.srcElem());if(ao){var an=Cmn.GetChildrenByClsNm(ao,"ItmTblCntnr");if(an.length>0){var au=Cmn.GetFrstChld(an[0]);if(au){var aC=au.childNodes;for(var aA=0;aA<aC.length;aA++){var m=function(aG){var aF=false;if(aG.tagName=="TBODY"){aF=true;}return aF;};var aw=Cmn.GetChldrnBy(m,aC[aA]);if(aw.length>0){var aE=Cmn.GetChildrenByClsNm(aw[0],"InLnOrdWebPartLayout_HdrRw");if(aE.length>0){if(aE[0].className.search(/Hide/)<0){at=null;break;}}}}}}}break;default:break;}if(at!==undefined){Cmn.SetStyle(at,ap,propertyValTxt);}}};J.prototype.crteCloneElem=function(m,ao){var an=undefined;switch(ao){case J.Typs.COL_HDR:an=this.crteColHdrDomElem(m,this.srcElemWidth(),this.ZIndex());break;case J.Typs.HDR:an=this.crteHdrDomElem(m,this.srcElemWidth(),this.ZIndex());break;case J.Typs.PIVOT:an=this.crtePivotDomElem(m,this.srcElemWidth(),this.ZIndex());break;case J.Typs.IMG:case J.Typs.INLN_IMG:an=this.crteImgDomElem(m,this.srcElemWidth(),this.ZIndex());break;default:an=m.cloneNode(true);}return an;};J.prototype.setInlineStyle=function(an,m){if(ad||ai){an.style.setAttribute("cssText",m);}else{an.setAttribute("style",m);}};J.prototype.chkNum=function(an){var m=an;if(isNaN(an)){an=0;}return an;};J.prototype.crteHdrDomElem=function(aw,ao,an){var ar,ap=" ",av,ay=aw.cloneNode(true),aq=parseInt(Cmn.GetStyle(aw,"marginBottom"))+parseInt(Cmn.GetStyle(aw,"paddingBottom")),m=parseInt(Cmn.GetStyle(aw,"paddingLeft"))+parseInt(Cmn.GetStyle(aw,"marginLeft"));aq=this.chkNum(aq);m=this.chkNum(m);if(ad||ai){if(Cmn.HasCls(aw,"SuperLbl")){ar="#EEEEEE";ap=ap+"background-color: "+ar+"; height: "+aw.scrollHeight+"px; margin-bottom: 0px; ";}else{if(ad){var au=ay.childNodes.length;for(var at=0;at<au;at++){if(ay.childNodes[at].tagName=="DIV"){ay.removeChild(ay.childNodes[at]);}}}this.mElemHgt=aw.scrollHeight;ar="#FFF";var ax=aw.scrollHeight-aq;ap=ap+"background-color: "+ar+"; height: "+ax+"px; margin-bottom: 0px; ";}this.setInlineStyle(ay,ap);av=Cmn.CrteElement("div");ap="padding-bottom: "+aq+"px; width: "+ao+"px; background-color: #FFF; z-index: "+an+"; ";this.setInlineStyle(av,ap);av.appendChild(ay);}else{if(Cmn.HasCls(aw,"SuperLbl")){ar="#EEEEEE";ap=ap+"height: "+aw.scrollHeight+"px; ";}else{ar="#FFF";this.mElemHgt=aw.offsetHeight+aq;}ao-=m;ap=ap+"background-color:"+ar+"; width: "+ao+"px; padding-left: "+m+"px; margin-bottom: 0px; ";this.setInlineStyle(ay,ap);av=Cmn.CrteElement("div");ap="padding-bottom: "+aq+"px; background-color: #FFF; z-index: "+an;this.setInlineStyle(av,ap);av.appendChild(ay);}return av;};J.prototype.crteImgDomElem=function(aJ,ao,aI){var aK,aW=aJ.cloneNode(true),aY=parseInt(Cmn.GetStyle(aJ,"marginBottom"))+parseInt(Cmn.GetStyle(aJ,"paddingBottom")),aA,au,aE,aN,aP=0;if(aJ.tagName=="IMG"){aN=aW.offsetHeight;var ar=aJ.parentNode;if(ar.tagName=="TD"){aP=this.chkNum(parseInt(Cmn.GetStyle(ar,"paddingTop")));}}else{var ax,m;if(aJ.childNodes[0].tagName=="DIV"){imgGridBody=aJ.childNodes[0];m=aW.childNodes[0];}else{imgGridBody=aJ.childNodes[0].childNodes[0];m=aW.childNodes[0].childNodes[0];}var an=imgGridBody.childNodes,aL=m.childNodes,aG,ay,az,aH,ap,aC,av,at,au,aU,aq,aX,aM,aE,aO,aN,aV,aF,aD,aw;for(var aS=0;aS<an.length;aS++){aG=an[aS];aH=aL[aS];ay=aG.childNodes;ap=aH.childNodes;for(var aR=0;aR<ay.length;aR++){az=ay[aR];aC=ap[aR];av=parseInt(Cmn.GetStyle(az,"paddingLeft"));at=parseInt(Cmn.GetStyle(az,"paddingRight"));au=parseInt(Cmn.GetStyle(az,"paddingBottom"));aU=parseInt(Cmn.GetStyle(az,"paddingTop"));aq=parseInt(Cmn.GetStyle(az,"marginLeft"));aX=parseInt(Cmn.GetStyle(az,"marginRight"));aM=parseInt(Cmn.GetStyle(az,"marginTop"));aE=parseInt(Cmn.GetStyle(az,"marginBottom"));av=this.chkNum(av);at=this.chkNum(at);au=this.chkNum(au);aU=this.chkNum(aU);aq=this.chkNum(aq);aX=this.chkNum(aX);aM=this.chkNum(aM);aE=this.chkNum(aE);aN=az.offsetHeight-aU-au-aM-aE;if(ae||am){aO=parseFloat(Cmn.GetStyle(az,"width")).toFixed(2)-aq-aX;}else{aO=az.offsetWidth-av-at-aq-aX;}aA="width: "+aO+"px; height: "+aN+"px; padding-left: "+av+"px; padding-right: "+at+"px; padding-top: "+aU+"px; padding-bottom: "+au+"px; ";this.setInlineStyle(aC,aA);for(var aQ=0;aQ<az.childNodes.length;aQ++){if(Cmn.HasCls(az.childNodes[aQ],"ImgCaption")){aV=az.childNodes[aQ];aF=aC.childNodes[aQ];if(ae||am){aA="width: "+parseFloat(Cmn.GetStyle(aV,"width")).toFixed(2)+"px; height: "+aV.offsetHeight+"px; ";}else{aA="width: "+aV.offsetWidth+"px; height: "+aV.offsetHeight+"px; ";}this.setInlineStyle(aF,aA);}else{if(Cmn.HasCls(az.childNodes[aQ],"ImgCaptionCntnr")){aD=az.childNodes[aQ];aw=aC.childNodes[aQ];for(var aT=0;aT<aD.childNodes.length;aT++){if(Cmn.HasCls(aD.childNodes[aT],"ImgCaption")){aV=aD.childNodes[aT];aF=aw.childNodes[aT];if(ae||am){aA=parseFloat(Cmn.GetStyle(aV,"width")).toFixed(2)+"px; height: "+aV.offsetHeight+"px; line-height: 14px";}else{aA="width: "+aV.offsetWidth+"px; height: "+aV.offsetHeight+"px; line-height: 14px;";}this.setInlineStyle(aF,aA);}}}}}}}}this.mElemHgt=aJ.scrollHeight+aY;if(ad||ai){var aB=Cmn.GetElementsByClsNm("ImgCaptionCntnr","div",aW);for(aS=0;aS<=aB.length-1;aS++){this.setInlineStyle(aB[aS],"background-color: #FFF;");}aA="width: "+ao+"px; margin-bottom: 0px; z-index: "+aI+"; background-color: #FFF; padding-top: "+aP+"px;";this.setInlineStyle(aW,aA);aK=aW;}else{aK=Cmn.CrteElement("div");aA="padding-bottom: "+aY+"px;background-color: #FFF; z-index: "+aI+"; padding-top: "+aP+"px;";this.setInlineStyle(aK,aA);aA="background-color: #FFF; width: "+ao+"px; margin-bottom: 0px";this.setInlineStyle(aW,aA);aK.appendChild(aW);}return aK;};J.prototype.crteColHdrDomElem=function(aE,aC,ao){var at=Cmn.GetAncestorByClsNm(aE,"ItmTbl"),az=at.parentNode,an,aK=aE.cloneNode(true),av=aE.childNodes.length,aG=0,au,aq,ap,aB,aJ,m,ay,aI,aD,aw,ar,ax,aA;for(var aH=0;aH<av;aH++){au=aE.childNodes[aH].childNodes.length;for(var aF=0;aF<au;aF++){aq=aE.childNodes[aH].childNodes[aF];aJ=parseInt(Cmn.GetStyle(aq,"paddingLeft"));m=parseInt(Cmn.GetStyle(aq,"paddingRight"));ay=parseInt(Cmn.GetStyle(aq,"paddingBottom"));aI=parseInt(Cmn.GetStyle(aq,"paddingTop"));aD=parseInt(Cmn.GetStyle(aq,"marginLeft"));aw=parseInt(Cmn.GetStyle(aq,"marginRight"));ar=parseInt(Cmn.GetStyle(aq,"marginTop"));ax=parseInt(Cmn.GetStyle(aq,"marginBottom"));aJ=this.chkNum(aJ);m=this.chkNum(m);ay=this.chkNum(ay);aI=this.chkNum(aI);aD=this.chkNum(aD);aw=this.chkNum(aw);ar=this.chkNum(ar);ax=this.chkNum(ax);ap=aq.offsetWidth-aJ-m-aD-aw;aB=aq.offsetHeight-aI-ay-ar-ax;aA="min-width: "+ap+"px; height: "+aB+"px; padding-left: "+aJ+"px; padding-right: "+m+"px; padding-top: "+aI+"px; padding-bottom: "+ay+"px; ";this.setInlineStyle(aK.childNodes[aH].childNodes[aF],aA);}}if(at!==undefined){aG=parseInt(Cmn.GetStyle(at,"paddingRight"))+parseInt(Cmn.GetStyle(at,"marginRight"));aG=this.chkNum(aG);}if(az.childNodes.length==1){aG=az.offsetWidth-at.offsetWidth;}this.mElemHgt=aE.scrollHeight;if(ad||ai){an=Cmn.CrteElement("table");}else{an=Cmn.CrteElement("div");}aA="padding-right: "+aG+"px;background-color: #FFF; height: "+aE.offsetHeight+"; z-index: "+ao+"; margin-top: 0px; ";this.setInlineStyle(an,aA);aA="background-color:#FFF; width: "+aC+"px; margin-top: 0px; ";this.setInlineStyle(aK,aA);an.appendChild(aK);return an;};J.prototype.crtePivotDomElem=function(aA,az,m){var ar=Cmn.GetAncestorByClsNm(aA,"ItmTbl"),av=ar.parentNode,aw,aI=aA.cloneNode(true),aH=aI.getElementsByTagName("th"),at=aA.getElementsByTagName("th"),an,aG=aH.length,aE,au,aJ,ap,aC,ax,ay,aq,ao=aA.scrollHeight,aF;for(var aD=0;aD<aG;aD++){aE=aH[aD];an=at[aD];au=aE.childNodes.length;ax="width: "+az+"px;";this.setInlineStyle(aE,ax);for(var aB=0;aB<au;aB++){aJ=aE.childNodes[aB];ap=an.childNodes[aB];ax="margin-top: 0px;";this.setInlineStyle(aJ,ax);}}if(ar!==undefined){aC=parseInt(Cmn.GetStyle(ar,"paddingRight"))+parseInt(Cmn.GetStyle(ar,"marginRight"));aC=this.chkNum(aC);}if(av.childNodes.length==1){aC=av.offsetWidth-ar.offsetWidth;}if(ad||ai){aw=Cmn.CrteElement("table");ay=Cmn.CrteElement("tbody");ay.appendChild(aI);aw.appendChild(ay);}else{aw=Cmn.CrteElement("div");aw.appendChild(aI);}ax="padding-right: "+aC+"px; background-color: #FFF; z-index: "+m+"; ";this.setInlineStyle(aw,ax);ax="width: "+az+"px; ";this.setInlineStyle(aI,ax);return aw;};J.prototype.addMouseWheelListener=function(){var m=N(),an=function(at){var au=0;at=at?at:window.event;au=at.detail?-at.detail/3:at.wheelDelta/120;S=true;Cmn.PreventDeflt(at);at.returnValue=false;at.cancelBubble=true;if(p){au=-au;}var aq=false;if(m.offsetHeight+m.scrollTop>=m.scrollHeight){if(p){if(au>0){aq=true;}}else{if(au<0){aq=true;}}}if(aq){}else{var ar=0;if(p){au=-au;}if(((m.offsetHeight+m.scrollTop)+(-au*Z))>=m.scrollHeight){ar=m.scrollHeight-(m.offsetHeight+m.scrollTop);}else{ar=-au*Z;}var ap=m.scrollTop+ar;for(var ao=0;ao<T.length;ao++){if(T[ao].mFullPrsnttnCollapsedInd==false){T[ao].HandleScroll(ap);}}m.scrollTop=ap;}ak=m.scrollTop;s(8900);};if(this.Elem().addEventListener){Cmn.RemEvntListeners(this.Elem(),"DOMMouseScroll",an);Cmn.AddEvntListener(this.Elem(),"DOMMouseScroll",an);a.push([this.Elem(),"DOMMouseScroll"]);}this.Elem().onmousewheel=an;a.push([this.Elem(),"onmousewheel"]);};J.prototype.getCntnrElems=function(ar,at,aq){var ao=[];if(at.TblCntnrIdTxts.length>0){for(var an=0;an<at.TblCntnrIdTxts.length;an++){var m=Cmn.GetObj(at.TblCntnrIdTxts[an],aq);ao.push(m);if(an>0){var ap=this.getTDElems(m);ao.push(ap);}}if(ar.tagName=="THEAD"||ar.tagName=="TR"){}else{var ap=this.getTDElems(ar);if(ap==undefined){}else{ao.push(ap);}}}return ao;};J.prototype.getTDElems=function(m){if(m==undefined){return m;}else{if(m.tagName=="TD"){return m;}else{return this.getTDElems(m.parentNode);}}};J.prototype.getElemOffsetWdth=function(m){var an=0;if(ae||am){an=parseFloat(Cmn.GetStyle(m,"width")).toFixed(2);}else{an=m.offsetWidth;}return an;};J.prototype.getRelXY=function(){var aq=0,ap=0,m=0,at=0,ar=false;if(ad||ai){aq=m+this.srcElem().offsetLeft;ap=at+this.srcElem().offsetTop+this.innerTopMargin();var ao=this.srcElem();while(ao.offsetParent){aq+=ao.offsetParent.offsetLeft;ap+=ao.offsetParent.offsetTop;if(ao.offsetParent.id=="PageCntnr"){break;}ao=ao.offsetParent;}}else{for(var an=0;an<this.containerElems().length;an++){if(this.containerElems()[an]==undefined){}else{if(Cmn.HasCls(this.containerElems()[an],"SideBySideTbl")){ar=true;}m=m+this.containerElems()[an].offsetLeft;at=at+this.containerElems()[an].offsetTop;}}if(am&&ar){aq=this.srcElem().offsetLeft;ap=this.srcElem().offsetTop+this.innerTopMargin();}else{aq=this.getElemXPos(this.srcElem());ap=this.getElemYPos(this.srcElem())+this.innerTopMargin();}}return[aq,ap];};J.prototype.getTopGridXPos=function(m){if(m.className=="PrsnttnGrid"){return m.offsetLeft;}else{return this.getTopGridXPos(m.offsetParent);}};J.prototype.getElemXPos=function(an){var m=0;if(an){m=an.offsetLeft;if(an.className=="PrsnttnGrid"){}else{if(an.className=="ProdPageContent"){m=0;}else{m+=this.getElemXPos(an.offsetParent);}}}return m;};J.prototype.getTopGridYPos=function(m){if(m.className=="PrsnttnGrid"){return m.offsetTop;}else{return this.getTopGridYPos(m.offsetParent);}};J.prototype.getElemYPos=function(an){var m=0;if(an){m=an.offsetTop;if(an.className=="PrsnttnGrid"){}else{if(an.className=="ProdPageContent"){m=0;}else{m+=this.getElemYPos(an.offsetParent);}}}return m;};J.prototype.getElemYPosIfNeeded=function(ap){var m=0;var ao=ap;var an=false;while(ao){if(ao.className=="PrsnttnGrid"){an=true;break;}ao=ao.offsetParent;}if(an){m=this.getElemYPos(ap);}return m;};J.prototype.getPivotTopMarginPxCnt=function(){var au=0;if(this.mTyp===J.Typs.PIVOT){var at=this.srcElem().getElementsByTagName("th"),ao=at.length,an=this.Elem().getElementsByTagName("th"),ar=function(aw){if(aw.tagName==="DIV"){return true;}else{return false;}};for(var aq=0;aq<ao;aq++){Cmn.SetStyle(an[aq],"width",at[aq].offsetWidth+"px");var ap=Cmn.GetChldrnBy(ar,at[aq]),m=Cmn.GetChldrnBy(ar,an[aq]),av=0;if(ap.length===0){}else{av=parseInt(Cmn.GetStyle(ap[0],"margin-top"));if(av>au){au=av;}}}}return au;};J.prototype.getSlideOutPos=function(at){var aq=0;var ao=this.getAnchorElem(this);var m=ao.getSlideOutPos(at);var ar=m+ao.clonedElemHgtPxCnt();var an=this.getHasNextStackedPinnedElemsInd();if((this.mTyp==J.Typs.IMG||this.mTyp==J.Typs.INLN_IMG)&&an===false){aq=this.getImgSlideOutPos(at,ao,m);}else{var ap={AccumulatedHeight:0,NextSlideElemPinStartPos:0,IsLogicalGrpSlideout:false,BufferRowExists:false};ap=this.walkDown(this,ap,at);if(ap.NextSlideElemPinStartPos===0){ap=this.prevStackElem().GetChldPinPos(this,at);}aq=ap.NextSlideElemPinStartPos-ap.AccumulatedHeight;if(aq==0){aq=this.getLogicalGrpSlideOutPos(at,ao,m);}else{if(ap.BufferRowExists==false){aq=aq-this.clonedElemHgtPxCnt()-this.getMaxChldHeight();}if((at>m&&at<ar)||at>=ar){if((this.mPinState==J.PinStates.PINNED||this.mPinState==J.PinStates.IN_FLOW_VISIBLE)&&this.slideOutAmt()>=0){if(aq==0||aq>m){aq=m;}}}}}return aq;};J.prototype.getImgSlideOutPos=function(aq,ao,an){var ap,m=this.srcElem().parentNode;if(this.mTyp==J.Typs.IMG&&this.mPrsnttnStructNbr==2&&m.nextSibling){ap=this.srcElem().parentNode.nextSibling.offsetTop-this.addnlTopOffsetPx();}else{ap=this.getLogicalGrpSlideOutPos(aq,ao,an);}return ap;};J.prototype.getLogicalGrpSlideOutPos=function(ar,aw,at){var ao=this.getParentsNextSibling(),an=this.addnlTopOffsetPx(),au=20,aq=this.clonedElemHgtPxCnt(),m;if(ao!==undefined&&ao.mTyp==this.prevStackElem().mTyp){m=ao.getPinStartingPos()-aq-au;var ap=this.prevStackElem().getSlideOutPos(ar);if(m>ap){m=ap;}}else{if(this.prevStackElem().mTyp==5&&this.mTyp===J.Typs.INLN_IMG){m=this.prevStackElem().getSlideOutPos(ar)-aq;}else{var av=this.getRowCntnr();if(av!==undefined){m=this.findCntnrBottomPx()-this.GetPrevStackHeight()-an;var ap=this.prevStackElem().getSlideOutPos(ar);if(m>ap){if(this.mTyp===J.Typs.INLN_IMG){m=ap-aq;}else{m=ap;}}}else{if(at+this.GetPrevStackHeight()>aw.logicalGrpBottomPx()-an-au){m=aw.logicalGrpBottomPx()-this.GetPrevStackHeight()-an;}else{m=at;}}}}return m;};J.prototype.findCntnrBottomPx=function(){var ao=this.srcElem().offsetHeight,ap,an=0;if(this.srcElem().children.length>0){ap=this.srcElem().parentNode;}else{return ao;}while(an<7){if(ap.className.match(/^(.*?)(\bPrsnttnStructure\d\b)(.*)$/)){ao=ap.offsetHeight;break;}else{if(ap.parentNode){ap=ap.parentNode;an+=1;}else{break;}}}var m=this.getElemYPos(this.srcElem())+ao;return m;};J.prototype.getParentsNextSibling=function(){var at=this.prevStackElem();var ao;var aq=at.prevStackElem();if(aq!==undefined){var m=aq.nextStackElemColls();var au=m.length;for(var ar=0;ar<au;ar++){var an=m[ar],av=an.length-2;for(var ap=0;ap<=av;ap++){if(an[ap]===at){ao=an[ap+1];break;}}}if(ao==undefined){ao=at.getParentsNextSibling();}}return ao;};J.prototype.getRowCntnr=function(){var an,m=this.prevStackElem();if(m!==undefined){if(m.mElemTyp=="PINNED_ROW"){an=m;}else{an=m.getRowCntnr();}}return an;};J.prototype.getHasNextStackedPinnedElemsInd=function(){var ar=false,an=this.nextStackElemColls();for(var ap=0;ap<an.length;ap++){var aq=an[ap],m;for(var ao=0;ao<=aq.length;ao++){m=aq[ao];if(m!==undefined){switch(true){case m.mElemTyp==="PINNED_ELEM":case m.mElemTyp==="PINNED_ANCHOR_ELEM":ar=true;break;case m.mElemTyp==="PINNED_ROW":m=m.getPinnedChld(m);if(m!==undefined){ar=m.getHasNextStackedPinnedElemsInd();}break;default:break;}}}}return ar;};J.prototype.getMaxChldHeight=function(){var ar=this.nextStackElemColls(),an=ar.length,ap=0;for(var ao=0;ao<an;ao++){var aq=ar[ao],m=aq.length,at=0;if(m===0){}else{at=aq[m-1].GetNextStackHeight();}if(at>ap){ap=at;}}return ap;};J.prototype.getPinnedChld=function(ap){var ao=undefined;for(var an=0;an<ap.nextStackElemColls().length;an++){var aq=ap.nextStackElemColls()[an];for(var m=0;m<aq.length;m++){if(aq[m].mElemTyp=="BUFFER_ROW"){if(ao==undefined){ao=aq[m];}else{if(ao.getPinStartingPos()>=aq[m].getPinStartingPos()){ao=aq[m];}}}}}return ao;};J.prototype.walkUp=function(m,an){m.AccumulatedHeight+=this.clonedElemHgtPxCnt();return this.prevStackElem().GetChldPinPos(this,an,m);};J.prototype.walkDown=function(an,m,ao){if(this.mLastBufferElemPinPos===-1){this.mLastBufferElemPinPos=an.findLastBufferElem(an,0);}if(this.mLastBufferElemPinPos>0){m.BufferRowExists=true;m.NextSlideElemPinStartPos=this.mLastBufferElemPinPos;}return m;};J.prototype.findLastBufferElem=function(ap,m){var an=ap.nextStackElemColls(),at=an.length;if(at===0){if(ap.mElemTyp==="BUFFER_ROW"){var au=ap.getPinStartingPos();if(m<=au+14){m=au;}}}else{for(var ar=0;ar<at;ar++){var ao=an[ar],av=ao.length;for(var aq=0;aq<av;aq++){m=ao[aq].findLastBufferElem(ao[aq],m);}}}return m;};J.prototype.getAnchorElem=function(m){if(m.prevStackElem()==undefined){return m;}else{return m.getAnchorElem(m.prevStackElem());}};J.prototype.handleScrollOnNextElems=function(aq){var at=this.nextStackElemColls(),an=at.length;for(var ap=0;ap<an;ap++){var ar=at[ap],m=ar.length;for(var ao=0;ao<m;ao++){ar[ao].HandleScroll(aq);}}};J.prototype.getPinStartingPos=function(){return this.relXY()[1]-this.prevStackElem().GetPrevStackHeight()-this.addnlTopOffsetPx();};J.prototype.pin=function(an,ao){var m=this.pinState();if(m!==J.PinStates.PINNED||(m===J.PinStates.PINNED&&this.slideOutAmt()!==an)){if(this.mScrollOffInd===false&&an==0){this.showOrHideNextStackElems(J.Styles.VISIBLE);this.pinTheElem(an,ao);this.setPinState(J.PinStates.PINNED);}else{if(this.mScrollOffInd===false&&an>0){this.setPinState(J.PinStates.IN_FLOW_HIDDEN);this.showOrHideNextStackElems(J.Styles.HIDDEN);}else{if(this.mTblShowHideState!==J.TblShowHideStates.HIDDEN){this.pinTheElem(an,ao);this.setPinState(J.PinStates.PINNED);}}}}if(this.mTblShowHideState!==J.TblShowHideStates.HIDDEN){this.handleScrollOnNextElems(ao);}};J.prototype.pinTheElem=function(ao,aq){this.setSlideOutAmt(ao);var m=0,ap=0;if(p){m=this.GetPrevStackHeight()-this.clonedElemHgtPxCnt()-ao;newleft=this.relXY()[0];}else{var an=this.GetScrollableCntnrXY();m=an[1]+this.GetPrevStackHeight()-this.clonedElemHgtPxCnt()-ao;if((ai||ad)&&this.mElemTyp==="PINNED_ANCHOR_ELEM"){newleft=an[0]+this.relXY()[0];}else{newleft=an[0]+this.relXY()[0]-15;}}Cmn.SetStyle(this.Elem(),{position:"absolute",left:newleft+"px",top:m+"px",visibility:"visible"});if(ao>0){Cmn.SetStyle(this.Elem(),"z-index",this.ZIndex()-1);}if(aq<ak){s(8900);}else{if(this.mTyp==J.Typs.IMG||this.mTyp==J.Typs.INLN_IMG){if(this.pinState()==J.PinStates.PINNED){s(8900);}else{s(10);}}else{s(8900);}}};J.prototype.performReposition=function(){this.mRelXY=this.getRelXY();if(this.mElemTyp=="PINNED_ROW"){this.mLogicalCntnrBottomPx=this.dtrmnLogicalCntnrBottomPxCnt();}};J.prototype.performChildrenReposition=function(){var ap=this.nextStackElemColls();for(var an=0;an<ap.length;an++){var ao=ap[an];for(var m=0;m<ao.length;m++){ao[m].Reposition();}}};J.prototype.resetChildrenPinState=function(){var ap=this.nextStackElemColls();for(var an=0;an<ap.length;an++){var ao=ap[an];for(var m=0;m<ao.length;m++){ao[m].ResetPinState();}}};J.prototype.init=function(){this.unpinAndShow();this.addMouseWheelListener();};J.prototype.initChildren=function(){var ap=this.nextStackElemColls();for(var an=0;an<ap.length;an++){var ao=ap[an];for(var m=0;m<ao.length;m++){ao[m].InitAll();}}};J.prototype.resetElemStyle=function(){Cmn.SetStyle(this.Elem(),{visibility:"hidden",top:"-5000px"});};J.prototype.resetSlideOutAmt=function(){this.mSlideOutAmt=0;};J.prototype.setPinState=function(m){this.mPinState=m;};J.prototype.setSlideOutAmt=function(m){this.mSlideOutAmt=m;};J.prototype.unpinAndHide=function(m){if(this.pinState()!==J.PinStates.IN_FLOW_HIDDEN){this.resetElemStyle();this.setPinState(J.PinStates.IN_FLOW_HIDDEN);this.resetSlideOutAmt();}if(this.mTblShowHideState===J.TblShowHideStates.SHOWN){if(this.mScrollOffInd===false&&Cmn.GetStyle(this.Elem(),"visibility")==="hidden"){this.showOrHideNextStackElems(J.Styles.HIDDEN);}}this.handleScrollOnNextElems(m);};J.prototype.unpinAndShow=function(m){if(this.pinState()!==J.PinStates.IN_FLOW_VISIBLE){this.resetElemStyle();this.setPinState(J.PinStates.IN_FLOW_VISIBLE);this.resetSlideOutAmt();}if(this.mTblShowHideState===J.TblShowHideStates.SHOWN){if(this.mScrollOffInd===false&&Cmn.GetStyle(this.Elem(),"visibility")==="hidden"){this.showOrHideNextStackElems(J.Styles.VISIBLE);}}this.handleScrollOnNextElems(m);};J.prototype.slideOutAmt=function(){return this.mSlideOutAmt;};J.prototype.addnlTopOffsetPx=function(){return this.prevStackElem().addnlTopOffsetPx();};J.prototype.containerElems=function(){return this.mContainerElems;};J.prototype.innerTopMargin=function(){return this.mInnerTopMargin;};J.prototype.isPinned=function(){return(this.mPinState===J.PinStates.PINNED);};J.prototype.nextStackElemColls=function(){return this.mNextStackElemColls;};J.prototype.pinState=function(){return this.mPinState;};J.prototype.prevStackElem=function(){return this.mPrevStackElem;};J.prototype.relXY=function(){return this.mRelXY;};J.prototype.srcElem=function(){return this.mSrcElem;};J.prototype.srcElemHeight=function(){return this.mSrcElemHeight;};J.prototype.clonedElemHgtPxCnt=function(){var m=0;if(this.mElemHgt===0){this.mElemHgt=m=this.mElem.offsetHeight;}else{m=this.mElemHgt;}if(m==0){this.mElemHgt=m=this.srcElemHeight();}return m;};J.prototype.srcElemWidth=function(){return this.mSrcElemWidth;};J.prototype.viewPortHgt=function(){return this.mViewPortHgt;};var H=function(at,ao,ar,au,an,ap,m,aq){if(!at){throw new Error("no source element");}if(!ao){throw new Error("no scrollable container");}if(!ar){throw new Error("invalid logical group element");}if(typeof au!=="number"){throw new Error("invalid z-index in anchor element");}if(typeof an!=="number"){an=0;}this.mLastBufferElemPinPos=-1;this.mFullPrsnttnCollapsedInd=false;this.mPrsnttnId=aq;this.mElemTyp="PINNED_ANCHOR_ELEM";this.mContainerElems=[];this.mTyp=ap;this.mNextStackElemColls=[];this.mLastSubPrsnttnPinInd=m;this.mLogicalGrpElem=ar;this.mLogicalGrpBottomPx=ar.offsetTop+ar.offsetHeight+this.getElemYPosIfNeeded(at);this.mSrcElem=at;this.mSrcElemHeight=at.offsetHeight;this.mSrcElemWidth=at.offsetWidth;this.mZIndex=au;this.mElemHgt=0;this.mElem=this.crteCloneElem(at,this.mTyp);this.mPinState=J.PinStates.UNINITIALIZED;this.mRelXY=this.getRelXY();this.mSlideOutAmt=0;this.mAddnlTopOffsetPx=an;this.mScrollableCntnr=ao;this.mScrollableCntnrXY=this.getScrollableCntnrXY(ao);this.init();this.mPrsnttnStructNbr=this.getPrsnttnStructNbr(at);};for(var W in J.prototype){if(J.prototype.hasOwnProperty(W)){H.prototype[W]=J.prototype[W];}}H.prototype.GetPrevStackHeight=function(){var m=0;if(this.mElemHgt===0){m=this.mElem.offsetHeight;}else{m=this.mElemHgt;}if(m==0){m=this.srcElemHeight();}return m;};H.prototype.GetScrollableCntnrXY=function(){var an=this.scrollableCntnrXY()[0],m=this.addnlTopOffsetPx()+this.scrollableCntnrXY()[1];return[an,m];};H.prototype.addnlTopOffsetPx=function(){return this.mAddnlTopOffsetPx;};H.prototype.logicalGrpBottomPx=function(){return this.mLogicalGrpBottomPx;};H.prototype.scrollableCntnrXY=function(m){return this.mScrollableCntnrXY;};H.prototype.getSlideOutPos=function(ap){var an=0,ao=0,ar=null;if(this.mLastBufferElemPinPos===-1){this.mLastBufferElemPinPos=this.findLastBufferElem(this,0);ar=this.findLastPinnedRowElem();if(ar&&this.mLastBufferElemPinPos<ar.getPinStartingPos()){an=ar.getPinStartingPos()+ar.mSrcElem.offsetHeight;this.mLastBufferElemPinPos=an;}}if(this.mLastBufferElemPinPos===0){var aq=this.logicalGrpBottomPx(),m=this.GetNextStackHeight();an=aq-m-this.addnlTopOffsetPx();}else{an=this.mLastBufferElemPinPos;}if(an==0){an=this.logicalGrpBottomPx()-45;}return an;};H.prototype.findLastPinnedRowElem=function(){var m=this.nextStackElemColls(),ar=m.length,au=null,ao=0;for(var aq=0;aq<ar;aq++){var an=m[aq],av=an.length;for(var ap=0;ap<av;ap++){if(an[ap].mElemTyp==="PINNED_ROW"){var at=an[ap].getPinStartingPos();if(ao<at){ao=at;au=an[ap];}}}}return au;};H.prototype.init=function(){this.addMouseWheelListener();this.unpinAndShow();};H.prototype.getPinStartingPos=function(){return this.relXY()[1]-this.addnlTopOffsetPx();};H.prototype.getRelXY=function(){var an=this.srcElem().offsetLeft;var m=this.srcElem().offsetTop;m=this.srcElem().offsetTop+this.srcElem().offsetParent.offsetTop+this.srcElem().offsetParent.offsetParent.offsetTop;an=this.getElemXPos(this.srcElem());if(ai||ad){m=this.srcElem().offsetTop+this.srcElem().offsetParent.offsetTop+this.srcElem().offsetParent.offsetParent.offsetTop+this.srcElem().offsetParent.offsetParent.offsetParent.offsetTop;if(p){an=this.srcElem().offsetLeft+this.srcElem().offsetParent.offsetLeft+this.srcElem().offsetParent.offsetParent.offsetLeft+this.srcElem().offsetParent.offsetParent.offsetParent.offsetLeft;}}return[an,m];};H.prototype.logicalGrpElem=function(){return this.mLogicalGrpElem;};H.prototype.walkUp=function(m,an){m.NextSlideElemPinStartPos=this.getSlideOutPos(an);m.AccumulatedHeight=0;m.IsLogicalGrpSlideout=true;return m;};H.prototype.performReposition=function(){this.mLogicalGrpBottomPx=this.logicalGrpElem().offsetTop+this.logicalGrpElem().offsetHeight+this.getElemYPosIfNeeded(this.mSrcElem);this.mRelXY=this.getRelXY();};H.prototype.getScrollableCntnrXY=function(aq){var ar,ap=0,ao=0,m=0,at=0,an=aq;if(ad||ai){m+=an.offsetLeft;at+=an.offsetTop;while(an.offsetParent){at+=an.offsetParent.offsetTop;m+=an.offsetParent.offsetLeft;an=an.offsetParent;}}else{ar=Cmn.GetXY(aq);m=ar[0];at=ar[1];}ap=parseInt(Cmn.GetStyle(aq,"padding-left"));ao=parseInt(Cmn.GetStyle(aq,"padding-top"));return[m+ap,at+ao];};var ah=function(an,m){if(!an){throw new Error("no source element");}if(!m){throw new Error("no previous stack element");}this.mLastBufferElemPinPos=-1;this.mElemTyp="BUFFER_ROW";this.mSrcElem=an;this.mInnerTopMargin=0;this.mPrevStackElem=m;this.mContainerElems=this.getContainerElems();this.mNextStackElemColls=[];this.mSrcElemHeight=0;this.mSrcElemWidth=0;this.mElem=undefined;this.mPinState=J.PinStates.UNINITIALIZED;this.mRelXY=this.getRelXY();this.mSlideOutAmt=0;this.mZIndex=m.ZIndex()-2;};for(var W in J.prototype){if(J.prototype.hasOwnProperty(W)){ah.prototype[W]=J.prototype[W];}}ah.prototype.HandleScroll=function(){};ah.prototype.getContainerElems=function(){var an=[],m=this.prevStackElem(),ao=this.srcElem(),ap;if(m){if(m.mTyp==J.Typs.COL_HDR){an=m.containerElems();}else{while(ao.parentNode){ap=ao.parentNode;if(Cmn.HasCls(ap,"FullPrsnttn")){break;}else{switch(true){case (ap.tagName=="TABLE"):an.push(ap);break;case (ap.tagName=="TD"):an.push(ap);break;default:break;}ao=ap;}}}}return an;};ah.prototype.clonedElemHgtPxCnt=function(){return 0;};var o=function(ao,m,ap,an){if(!m){throw new Error("no previous stack element");}if(!ao){throw new Error("no source element");}this.mLastBufferElemPinPos=-1;this.mElemTyp="PINNED_ROW";this.mSrcElem=ao;this.mElem=undefined;this.mTyp=ap.ElemTyp;this.mInnerTopMargin=0;this.mContainerElems=this.getCntnrElems(this.mSrcElem,ap,an);this.mSrcElemHeight=0;this.mSrcElemWidth=0;this.mRelXY=this.getRelXY();this.mPrevStackElem=m;this.mNextStackElemColls=[];this.mLogicalCntnrBottomPx=this.dtrmnLogicalCntnrBottomPxCnt();this.mPinState=J.PinStates.UNINITIALIZED;this.mSlideOutAmt=0;this.mZIndex=m.ZIndex()-2;};for(var W in J.prototype){if(J.prototype.hasOwnProperty(W)){o.prototype[W]=J.prototype[W];}}o.prototype.dtrmnLogicalCntnrBottomPxCnt=function(){var m=0;if(ai||ad){m=this.dtrmnIELogicalCntnrBottomPxCnt();}else{m=this.getElemYPos(this.srcElem())+this.dtrmnStrucOffsetHeight();}return m;};o.prototype.dtrmnStrucOffsetHeight=function(){var an=this.srcElem().offsetHeight,ao,m=0;if(this.srcElem().children.length>0){ao=this.srcElem().firstChild;}else{return an;}while(m<5){if(ao.className.match(/^(.*?)(\bPrsnttnStructure\d\b)(.*)$/)){an=ao.offsetHeight;break;}else{if(ao.children.length>0){ao=ao.firstChild;m+=1;}else{break;}}}return an;};o.prototype.dtrmnIELogicalCntnrBottomPxCnt=function(){var an=this.srcElem(),m=an.offsetTop+an.offsetHeight;while(an.offsetParent){m+=an.offsetParent.offsetTop;if(an.offsetParent.id==="PageCntnr"){break;}an=an.offsetParent;}return m;};o.prototype.HandleScroll=function(m){this.handleScrollOnNextElems(m);};o.prototype.clonedElemHgtPxCnt=function(){return 0;};o.prototype.logicalCntnrBottomPx=function(){return this.mLogicalCntnrBottomPx;};o.prototype.getTopGridYPos=function(m){if(m.className=="PrsnttnGrid"){return m.offsetTop;}else{return this.getTopGridYPos(m.offsetParent);}};};}

(function(){if(this.PrsnttnUsrInp){}else{var a=McMaster.SesnMgr.StValDefs,b=McMaster.SesnMgr.GetStVal,c=McMaster.SesnMgr.SetStVal;McMaster.MsgMgr.AddSubscriber(McMaster.MsgMgrMsgs.ChooseSpecsClearAllClick,function(d){PrsnttnUsrInp.Unload();},McMaster.MsgMgr.PRIORITY.HIGH);PrsnttnUsrInp=function(){this.mPrsnttnUsrInps=[];};PrsnttnUsrInp.Crte=function(e){var d=new PrsnttnUsrInp();if(e){d.mPrsnttnUsrInps=e;}return d;};PrsnttnUsrInp.Get=function(){var d=b(a.PrsnttnUsrInps.KyTxt())||null;return PrsnttnUsrInp.Crte(d);};PrsnttnUsrInp.Unload=function(){var d=PrsnttnUsrInp.Get();d.mPrsnttnUsrInps=[];d.UpdateSession();};PrsnttnUsrInp.prototype.UsrInpExists=function(g){var f=this.mPrsnttnUsrInps;var e=false;for(var d=0;d<f.length;d++){if(f[d]["PrsnttnId"]===g){e=true;break;}}return e;};PrsnttnUsrInp.prototype.AddUsrInp=function(f){var d=this.mPrsnttnUsrInps.length,h=true;for(var e=0;e<d;e++){if(this.mPrsnttnUsrInps[e]["PrsnttnId"]===f){h=false;break;}}if(h){var g={PrsnttnId:f};this.mPrsnttnUsrInps.push(g);}return this;};PrsnttnUsrInp.prototype.RemUsrInp=function(f){var e=this.mPrsnttnUsrInps;for(var d=0;d<e.length;d++){if(e[d]["PrsnttnId"]===f){e.splice(d,1);break;}}return this;};PrsnttnUsrInp.prototype.AddPrsnttnUsrInpQS=function(d){if(d&&!Cmn.IsEmpty(this.PrsnttnUsrInps())){d=Cmn.AddQSNmVal(d,"PrsnttnUsrInps",YAHOO.lang.JSON.stringify(this.PrsnttnUsrInps()));}return d;};PrsnttnUsrInp.prototype.Clone=function(){return PrsnttnUsrInp.Get();};PrsnttnUsrInp.prototype.GetSelectionCnt=function(){return Cmn.Utilities.Keys(this.mPrsnttnUsrInps).length;};PrsnttnUsrInp.prototype.UpdateSession=function(){McMaster.SesnMgr.SetStVal(a.PrsnttnUsrInps.KyTxt(),this.mPrsnttnUsrInps);return this;};PrsnttnUsrInp.prototype.PrsnttnUsrInps=function(){return this.mPrsnttnUsrInps;};}})();

(function(){if(this.ImgUsrInp){}else{var a=McMaster.SesnMgr.StValDefs,b=McMaster.SesnMgr.GetStVal,d=McMaster.SesnMgr.SetStVal;var c=1;McMaster.MsgMgr.AddSubscriber(McMaster.MsgMgrMsgs.ChooseSpecsClearAllClick,function(e){ImgUsrInp.Unload();},McMaster.MsgMgr.PRIORITY.HIGH);ImgUsrInp=function(){this.mImgUsrInps=[];};ImgUsrInp.Crte=function(f){var e=new ImgUsrInp();if(f){e.mImgUsrInps=f;}return e;};ImgUsrInp.Get=function(){var e=b(a.ImgUsrInps.KyTxt())||null;return ImgUsrInp.Crte(e);};ImgUsrInp.Unload=function(){var e=ImgUsrInp.Get();e.mImgUsrInps=[];e.UpdateSession();c=1;};ImgUsrInp.prototype.UpdtUsrInp=function(h,i){var f=this.mImgUsrInps;var g=false;for(var e=0;e<f.length;e++){if(f[e]["ImgSrcTxt"]===h){g=true;break;}}if(g){this.RemUsrInp(h);}else{this.AddUsrInp(h,i);}};ImgUsrInp.prototype.UsrInpExists=function(h,i){var f=this.mImgUsrInps;var g=false;for(var e=0;e<f.length;e++){if(f[e]["ImgSrcTxt"]===h&&f[e]["PrsnttnId"]===i){g=true;break;}}return g;};ImgUsrInp.prototype.ImgSrcExists=function(h){var f=this.mImgUsrInps;var g=false;for(var e=0;e<f.length;e++){if(f[e]["ImgSrcTxt"]===h){g=true;break;}}return g;};ImgUsrInp.prototype.GetPrsnttnId=function(h){var f=this.mImgUsrInps;var g=0;for(var e=0;e<f.length;e++){if(f[e]["ImgSrcTxt"]===h){g=f[e]["PrsnttnId"];break;}}return g;};ImgUsrInp.prototype.AddUsrInp=function(f,g){var e={ImgSrcTxt:f,ImgSeq:c++,PrsnttnId:g};this.mImgUsrInps.push(e);return this;};ImgUsrInp.prototype.RemUsrInp=function(g){var f=this.mImgUsrInps;for(var e=0;e<f.length;e++){if(f[e]["ImgSrcTxt"]===g){f.splice(e,1);break;}}return this;};ImgUsrInp.prototype.AddImgUsrInpQS=function(e){if(e&&!Cmn.IsEmpty(this.ImgUsrInps())){e=Cmn.AddQSNmVal(e,"ImgUsrInps",YAHOO.lang.JSON.stringify(this.ImgUsrInps()));}return e;};ImgUsrInp.prototype.Clone=function(){return ImgUsrInp.Get();};ImgUsrInp.prototype.GetSelectionCnt=function(){return this.mImgUsrInps.length;};ImgUsrInp.prototype.UpdateSession=function(){McMaster.SesnMgr.SetStVal(a.ImgUsrInps.KyTxt(),this.mImgUsrInps);return this;};ImgUsrInp.prototype.ImgUsrInps=function(){return this.mImgUsrInps;};}})();

if(this.PSrchLoader){}else{PSrchLoader=new function(){var b="/param/dsc/dsc.aspx";var d="/nav/framework.asp?reqtyp=parametric&act=psearch&idxdat=";var c="/nav/framework.asp?reqtyp=parametric&act=slctfmly&idxdat=";var a=function(f){var h=f.MsgPayload().PSrchDscIdsArr;var g=f.MsgPayload().SrchTxt;var e=b+"?dscIds="+h+"&term="+g;McMasterCom.LoadMgr.LoadMainIFrame(e);};McMaster.MsgMgr.AddSubscriber(McMaster.MsgMgrMsgs.PSrchSlctd,a);};}

if(this.RecentOrdsWebPartLoader){}else{RecentOrdsWebPartLoader=new function(){var c="ShellLayout_RecentOrds_Cntnr";var b="/HTTPHandlers/RecentOrdsWebPart.aspx";var a="cntnrIDtxt";var d=function(){var e={success:function(g,h){g.SesnStSnapshotInd=false;McMaster.LoadMgr.LoadWebPart(g);},cnxnParm:{respTyp:McMaster.CnxnMgr.WEB_PART_RESP_TYP_TXT}};var f=b+"?"+a+"="+c;McMaster.CnxnMgr.PerformAjaxCnxn(f,e);};McMaster.MsgMgr.AddSubscriber(McMaster.MsgMgrMsgs.ShellInitContentLoaded,d,McMaster.MsgMgr.PRIORITY.LOW);McMaster.MsgMgr.AddSubscriber(McMaster.MsgMgrMsgs.RecentOrdsChged,d,McMaster.MsgMgr.PRIORITY.LOW);McMaster.MsgMgr.AddSubscriber(McMaster.MsgMgrMsgs.OrdPlcd,d,McMaster.MsgMgr.PRIORITY.LOW);McMaster.MsgMgr.AddSubscriber(McMaster.MsgMgrMsgs.SgnInChged,d,McMaster.MsgMgr.PRIORITY.HIGH);McMaster.MsgMgr.AddSubscriber(McMaster.MsgMgrMsgs.LoginChged,d,McMaster.MsgMgr.PRIORITY.HIGH);};}

if(this.RecentOrdsWebPart){}else{RecentOrdsWebPart=new function(a){var b=new McMaster.MsgMgr.Hdr(McMaster.MsgMgr.CntxtNms.RECENT_ORDS,"1.0");this.WebPart_Load=function(d){var c=new McMaster.MsgMgrMsgs.WebPartLoaded(b,d.CntnrIDTxt);var f={};if(d.RecentOrdsInd){McMaster.SesnMgr.SetStVal(McMaster.SesnMgr.StValDefs.RecentOrdsInd.KyTxt(),true);f.act="displRcntOrds";}else{McMaster.SesnMgr.SetStVal(McMaster.SesnMgr.StValDefs.RecentOrdsInd.KyTxt(),false);f.act="displNoRcntOrds";}f.context="masthead";var e=McMaster.UrlMgr.GetSiteCntxt();Cmn.TrkAct(f,e);McMaster.MsgMgr.PubMsg(c);};this.WebPart_Unload=function(c){McMaster.MsgMgr.PubMsg(new McMaster.MsgMgrMsgs.WebPartUnloaded(b,c.CntnrIDTxt));};this.RecentOrdLnk_Click=function(c,d){McMaster.SesnMgr.SetStVal(McMaster.SesnMgr.StValDefs.SlctdOrdHistPOTxt.KyTxt(),d);var e=new McMaster.MsgMgrMsgs.RecentOrdSlctd(b,c,d);McMaster.MsgMgr.PubMsg(e);};};}

if(this.SecrLoader){}else{SecrLoader=new function(){var b="/ident/secrpref/DisplSecrPref.aspx";var c=function(d){SecrLoader.Load(d);};var a="sesnextrep";this.Load=function(d){var e=McMaster.SesnMgr.GetStVal(McMaster.SesnMgr.StValDefs.SesnExtRepKy.KyTxt());var f=Cmn.BldSecureURL(b,a+"="+e);McMasterCom.LoadMgr.LoadMainIFrame(f);McMaster.SesnMgr.SetStVal(McMaster.SesnMgr.StValDefs.MainIFrameWebPartNm.KyTxt(),McMaster.SesnMgr.StValDefs.MainIFrameWebPartNm.Vals.LEGACY_SECR_SETTINGS);};McMaster.MsgMgr.AddSubscriber(McMaster.MsgMgrMsgs.SecrSlctd,c);};}

(function(){if(this.SpecSrchInp){}else{var g="ContextualSrch",c="PubAttrId",i="PubValId",j="ArgTxt",d="SlctdVals",e="SelTyp",a="SeqNbr",f="LastExplicitlyExpandedAttrId";var b=McMaster.SesnMgr.GetStVal,h=McMaster.SesnMgr.StValDefs;SpecSrchInp=function(){this.mUsrInps={};this.mUsrInps.SpecSrchFilters={};this.mUsrInps.LandingPageFilters={};this.mUsrInps.ProdFilters={};this.mUsrInps.IntermediatePageFilters={};this.mUsrInps.Sequence=0;this.mUsrInps.LastDeselectedAttr=0;this.mUsrInps.LastDeselectedPubAttr=0;this.mUsrInps.LastDeselectedValId=0;this.mUsrInps.LastExplicitlyExpandedAttr=0;this.mUsrInps.PreSlctdAttrIds=new Array();this.mUsrInps.TopLevelLandingPageProdAttrIds=new Array();};SpecSrchInp.Create=function(l){var k=new SpecSrchInp();if(l==null){}else{k.mUsrInps=l;}return k;};SpecSrchInp.Get=function(){var k=b(h.SpecUsrInps.KyTxt())||null;return SpecSrchInp.Create(k);};SpecSrchInp.prototype.AttrExists=function(l,k){if(this.SpecSrchFilters()[l]&&k==McMaster.MsgMgr.CntxtNms.CHOOSE_SPECS||this.LandingPageFilters()[l]&&k==McMaster.MsgMgr.CntxtNms.LANDING_PAGE||this.SpecSrchFilters()[l]&&k==McMaster.MsgMgr.CntxtNms.INLN_ORD||this.SpecSrchFilters()[l]&&k==McMaster.MsgMgr.CntxtNms.ORD_PAD||this.SpecSrchFilters()[l]&&k==McMaster.MsgMgr.CntxtNms.ITM_PRSNTTN){return true;}else{return false;}};SpecSrchInp.prototype.AttrUsrInpEmptyInd=function(l,k){var m=this.GetAttr(l,k);if(Cmn.Utilities.Empty(m.SlctdVals)&&Cmn.Utilities.Empty(m.ContextualSrch)){return true;}else{return false;}};SpecSrchInp.prototype.ProdAttrExists=function(k){if(this.ProdFilters()[k]){return true;}else{return false;}};SpecSrchInp.prototype.PubAttrExists=function(k){if(this.IntermediatePageFilters()[k]){return true;}else{return false;}};SpecSrchInp.prototype.AddAttr=function(m,k){if(!this.AttrExists(m,k)){var l;if(k==McMaster.MsgMgr.CntxtNms.LANDING_PAGE){l=this.LandingPageFilters();}else{l=this.SpecSrchFilters();}l[m]={};l[m][g]=[];l[m][d]={};}return this;};SpecSrchInp.prototype.AddProdAttr=function(l){if(!this.ProdAttrExists(l)){var k=this.ProdFilters();k[l]={};k[l][g]=[];k[l][d]={};}return this;};SpecSrchInp.prototype.AddPubAttr=function(l){if(!this.PubAttrExists(l)){var k=this.IntermediatePageFilters();k[l]={};k[l][g]=[];k[l][d]={};}return this;};SpecSrchInp.prototype.GetAttr=function(l,k){this.AddAttr(l,k);if(k==McMaster.MsgMgr.CntxtNms.LANDING_PAGE){return this.LandingPageFilters()[l];}else{return this.SpecSrchFilters()[l];}};SpecSrchInp.prototype.GetPubAttr=function(k){this.AddPubAttr(k);return this.IntermediatePageFilters()[k];};SpecSrchInp.prototype.GetAttrSlctdVals=function(l,k){return this.GetAttr(l,k)[d];};SpecSrchInp.prototype.GetPubAttrSlctdVals=function(l,k){return this.GetPubAttr(l)[d];};SpecSrchInp.prototype.RemAttr=function(l,k){if(this.AttrExists(l,k)){if(k==McMaster.MsgMgr.CntxtNms.LANDING_PAGE){delete this.mUsrInps.LandingPageFilters[l];}else{delete this.mUsrInps.SpecSrchFilters[l];}}return this;};SpecSrchInp.prototype.RemProdAttr=function(k){if(this.ProdAttrExists(k)){delete this.mUsrInps.ProdFilters[k];}return this;};SpecSrchInp.prototype.RemPubAttr=function(k){if(this.PubAttrExists(k)){delete this.mUsrInps.IntermediatePageFilters[k];}return this;};SpecSrchInp.prototype.RemAttrs=function(m,l){for(var k in m){if(m.hasOwnProperty(k)){this.RemAttr(m[k],l);}}return this;};SpecSrchInp.prototype.RemPubAttrs=function(l){for(var k in l){if(l.hasOwnProperty(k)){this.RemPubAttr(l[k]);}}return this;};SpecSrchInp.prototype.Clone=function(){var k=new SpecSrchInp;k.mUsrInps=this.mUsrInps;k.mUsrInps.SpecSrchFilters=this.mUsrInps.SpecSrchFilters;k.mUsrInps.LandingPageFilters=this.mUsrInps.LandingPageFilters;k.mUsrInps.ProdFilters=this.mUsrInps.ProdFilters;k.mUsrInps.IntermediatePageFilters=this.mUsrInps.IntermediatePageFilters;k.mUsrInps.Sequence=this.mUsrInps.Sequence;k.mUsrInps.LastDeselectedAttr=this.mUsrInps.LastDeselectedAttr;k.mUsrInps.LastDeselectedPubAttr=this.mUsrInps.LastDeselectedPubAttr;k.mUsrInps.LastDeselectedValId=this.mUsrInps.LastDeselectedValId;k.mUsrInps.LastExplicitlyExpandedAttr=this.mUsrInps.LastExplicitlyExpandedAttr;k.mUsrInps.PreSlctdAttrIds=this.mUsrInps.PreSlctdAttrIds;k.mUsrInps.TopLevelLandingPageProdAttrIds=this.mUsrInps.TopLevelLandingPageProdAttrIds;return k;};SpecSrchInp.prototype.RemAll=function(){var k=this.SpecSrchFilters();for(var l in k){if(k.hasOwnProperty(l)){this.RemAttr(l,McMaster.MsgMgr.CntxtNms.CHOOSE_SPECS);}}k=this.LandingPageFilters();for(var l in k){if(k.hasOwnProperty(l)){this.RemAttr(l,McMaster.MsgMgr.CntxtNms.LANDING_PAGE);}}k=this.ProdFilters();for(var l in k){if(k.hasOwnProperty(l)){this.RemProdAttr(l);}}k=this.IntermediatePageFilters();for(var m in k){if(k.hasOwnProperty(m)){this.RemPubAttr(m);}}this.mUsrInps.Sequence=0;SpecSrchWebPart.MaintainFocus.Reset();this.mUsrInps.LastDeselectedAttr="";this.mUsrInps.LastDeselectedPubAttr="";this.mUsrInps.LastDeselectedValId="";this.mUsrInps.LastExplicitlyExpandedAttr=0;this.mUsrInps.TopLevelLandingPageProdAttrIds=new Array();return this;};SpecSrchInp.prototype.SyncWithServerUsrInp=function(l){this.RemAllSpecSrchFilters();this.RemAllLandingPageFilters();this.RemAllIntermediatePageFilters();this.RemAllProdFilters();this.mUsrInps.Sequence=0;var k=0;this.mUsrInps.TopLevelLandingPageProdAttrIds=new Array();this.SyncAttrInps(l.SpecSrchAttrInps,McMaster.MsgMgr.CntxtNms.CHOOSE_SPECS);this.SyncAttrInps(l.LandingPageAttrInps,McMaster.MsgMgr.CntxtNms.LANDING_PAGE);this.SyncAttrInps(l.IntermediatePageAttrInps,McMaster.MsgMgr.CntxtNms.LANDING_PAGE);this.SyncAttrInps(l.ProdAttrInps,McMaster.MsgMgr.CntxtNms.LANDING_PAGE);this.SetPreSlctdAttrList(l.PreSlctdAttrIds);this.SetTopLvlLandingPageAttrIds(l.TopLevelLandingPageProdAttrIds);return this;};SpecSrchInp.prototype.SyncAttrInps=function(l,k){for(var q in l){if(l.hasOwnProperty(q)){var p=l[q].ProdAttrId;if(l[q].HasSlctdVal||l[q].HasContextualSrch){this.AddAttr(l[q].ProdAttrId,k);for(var n in l[q].SlctdVals){if(l[q].SlctdVals.hasOwnProperty(n)){var m=l[q].SlctdVals[n];this.AddValWithSeqNbr(p,m.PubAttrId,m.ProdValId,m.PubValId,k,"Slctd",m.SeqNbr);if(m.SeqNbr>this.mUsrInps.Sequence){this.mUsrInps.Sequence=m.SeqNbr;}}}for(var o in l[q].ContextualSrchTimeline){if(l[q].ContextualSrchTimeline.hasOwnProperty(o)){var r=l[q].ContextualSrchTimeline[o];this.AddCntxtSrchWithSeqNbr(p,r.PubAttrId,r.ArgTxt,k,r.SeqNbr);if(r.SeqNbr>this.mUsrInps.Sequence){this.mUsrInps.Sequence=r.SeqNbr;}}}}}}return this;};SpecSrchInp.prototype.RemAllSpecSrchFilters=function(){var k=this.SpecSrchFilters();for(var l in k){if(k.hasOwnProperty(l)){this.RemAttr(l,McMaster.MsgMgr.CntxtNms.CHOOSE_SPECS);}}return this;};SpecSrchInp.prototype.RemAllLandingPageFilters=function(){var k=this.LandingPageFilters();for(var l in k){if(k.hasOwnProperty(l)){this.RemAttr(l,McMaster.MsgMgr.CntxtNms.LANDING_PAGE);}}return this;};SpecSrchInp.prototype.RemAllProdFilters=function(){var k=this.ProdFilters();for(var l in k){if(k.hasOwnProperty(l)){this.RemProdAttr(l);}}return this;};SpecSrchInp.prototype.RemAllIntermediatePageFilters=function(){var k=this.IntermediatePageFilters();for(var l in k){if(k.hasOwnProperty(l)){this.RemPubAttr(l);}}return this;};SpecSrchInp.prototype.SetExplicitlyExpandedAttr=function(k){this.mUsrInps.LastExplicitlyExpandedAttr=parseInt(k,10);return this;};SpecSrchInp.prototype.RemExplicitlyExpandedAttr=function(){this.mUsrInps.LastExplicitlyExpandedAttr=0;return this;};SpecSrchInp.prototype.SetPreSlctdAttrList=function(k){this.mUsrInps.PreSlctdAttrIds=k;return this;};SpecSrchInp.prototype.SetTopLvlLandingPageAttrIds=function(k){this.mUsrInps.TopLevelLandingPageProdAttrIds=k;return this;};SpecSrchInp.prototype.AddCntxtSrch=function(n,o,m,k){if(this.GetCntxtSrchChgd(n,m,k)){var l={};l[c]=parseInt(o,10);l[j]=m;l[a]=this.IncrementAndGetSequence();this.GetCntxtSrchArgs(n,k).push(l);this.mUsrInps.LastDeselectedAttr="";this.mUsrInps.LastDeselectedPubAttr="";this.mUsrInps.LastDeselectedValId="";}return this;};SpecSrchInp.prototype.AddCntxtSrchWithSeqNbr=function(o,p,n,l,k){if(this.GetCntxtSrchChgd(o,n,l)){var m={};m[c]=parseInt(p);m[j]=n;m[a]=k;this.GetCntxtSrchArgs(o,l).push(m);this.mUsrInps.LastDeselectedAttr="";this.mUsrInps.LastDeselectedPubAttr="";this.mUsrInps.LastDeselectedValId="";}return this;};SpecSrchInp.prototype.GetCntxtSrchArgs=function(l,k){return this.GetAttr(l,k)[g];};SpecSrchInp.prototype.GetCntxtSrchLastArg=function(m,l){var n=this.GetCntxtSrchArgs(m,l);var k=n.length-1;if(k>=0){return n[k][j];}else{return"";}};SpecSrchInp.prototype.GetCntxtSrchChgd=function(m,l,k){return(this.GetCntxtSrchLastArg(m,k)!=l);};SpecSrchInp.prototype.ValExists=function(n,k,m){var l=false;if(this.AttrExists(n,m)){if(m==McMaster.MsgMgr.CntxtNms.LANDING_PAGE&&this.LandingPageFilters()[n][d][k]){l=true;}else{if(m==McMaster.MsgMgr.CntxtNms.CHOOSE_SPECS&&this.SpecSrchFilters()[n][d][k]){l=true;}else{if(m==McMaster.MsgMgr.CntxtNms.INLN_ORD&&this.SpecSrchFilters()[n][d][k]){l=true;}else{if(m==McMaster.MsgMgr.CntxtNms.ORD_PAD&&this.SpecSrchFilters()[n][d][k]){l=true;}else{if(m==McMaster.MsgMgr.CntxtNms.ITM_PRSNTTN&&this.SpecSrchFilters()[n][d][k]){l=true;}}}}}}return l;};SpecSrchInp.prototype.ProdValExists=function(l,k){if(this.ProdAttrExists(l)&&this.ProdFilters()[l][d][k]){return true;}else{return false;}};SpecSrchInp.prototype.PubValExists=function(l,k){if(this.PubAttrExists(l)&&this.IntermediatePageFilters()[l][d][k]){return true;}else{return false;}};SpecSrchInp.prototype.AddVal=function(o,q,k,p,l,n){if(!this.ValExists(o,k,l)){var m=this.GetAttrSlctdVals(o,l);m[k]={};m[k][e]="Slctd";m[k][a]=this.IncrementAndGetSequence();m[k][c]=parseInt(q,10);m[k][i]=parseInt(p,10);}return this;};SpecSrchInp.prototype.AddProdVal=function(n,k,m){if(!this.ProdValExists(n,k)){var l=this.ProdFilters()[n][d];l[k]={};l[k][e]="Slctd";l[k][a]=0;}return this;};SpecSrchInp.prototype.AddPubVal=function(n,m,l){if(!this.PubValExists(n,m)){var k=this.IntermediatePageFilters()[n][d];k[m]={};k[m][e]="Slctd";k[m][a]=this.IncrementAndGetSequence();}return this;};SpecSrchInp.prototype.AddValWithSeqNbr=function(p,r,l,q,m,o,k){if(!this.ValExists(p,l,m)){var n=this.GetAttrSlctdVals(p,m);n[l]={};n[l][e]="Slctd";n[l][a]=k;n[l][c]=parseInt(r,10);n[l][i]=parseInt(q,10);}return this;};SpecSrchInp.prototype.GetVal=function(m,o,k,n,l){this.AddVal(m,o,k,n,l);return this.GetAttrSlctdVals(m,l)[k];};SpecSrchInp.prototype.RemVal=function(m,k,l){if(this.ValExists(m,k,l)){if(l==McMaster.MsgMgr.CntxtNms.LANDING_PAGE){delete this.LandingPageFilters()[m][d][k];}else{delete this.SpecSrchFilters()[m][d][k];}this.mUsrInps.Sequence+=1;}return this;};SpecSrchInp.prototype.RemProdVal=function(l,k){if(this.ProdValExists(l,k)){delete this.ProdFilters()[l][d][k];this.mUsrInps.Sequence+=1;}return this;};SpecSrchInp.prototype.RemPubVal=function(l,k){if(this.PubValExists(l,k)){delete this.IntermediatePageFilters()[l][d][k];this.mUsrInps.Sequence+=1;}return this;};SpecSrchInp.prototype.ToggleVal=function(m,o,k,n,l){if(m==null||k==null){}else{if(this.ValExists(m,k,l)){this.RemVal(m,k,l);this.mUsrInps.LastDeselectedAttr=m;this.mUsrInps.LastDeselectedPubAttr=parseInt(o,10);this.mUsrInps.LastDeselectedValId=k;if(this.AttrUsrInpEmptyInd(m,l)){this.RemAttr(m,l);}}else{this.AddVal(m,o,k,n,l);this.mUsrInps.LastDeselectedAttr="";this.mUsrInps.LastDeselectedPubAttr="";this.mUsrInps.LastDeselectedValId="";}}return this;};SpecSrchInp.prototype.SetContextualSrch=function(l,k){return this;};SpecSrchInp.prototype.UsrInps=function(){return this.mUsrInps;};SpecSrchInp.prototype.SpecSrchFilters=function(){return this.UsrInps().SpecSrchFilters;};SpecSrchInp.prototype.LandingPageFilters=function(){return this.UsrInps().LandingPageFilters;};SpecSrchInp.prototype.IntermediatePageFilters=function(){return this.UsrInps().IntermediatePageFilters;};SpecSrchInp.prototype.ProdFilters=function(){return this.UsrInps().ProdFilters;};SpecSrchInp.prototype.Sequence=function(){return this.UsrInps().Sequence;};SpecSrchInp.prototype.IncrementAndGetSequence=function(){this.mUsrInps.Sequence+=1;return this.Sequence();};SpecSrchInp.prototype.GetSelectionCnt=function(){var m=0,k=Cmn.Utilities,l=this.mUsrInps;m+=k.Keys(l.SpecSrchFilters).length;m+=k.Keys(l.LandingPageFilters).length;m+=k.Keys(l.ProdFilters).length;m+=k.Keys(l.IntermediatePageFilters).length;return m;};SpecSrchInp.prototype.AddSpecUsrInpQS=function(l){if(l!=null){if(!Cmn.IsEmpty(this.mUsrInps.SpecSrchFilters)){var k=YAHOO.lang.JSON.stringify(this.mUsrInps.SpecSrchFilters).replace(/[^\x00-\x7F]/gi,"");k=k.replace(/&/g,"%26");l=Cmn.AddQSNmVal(l,"SpecSrchAttrInps",k);}if(!Cmn.IsEmpty(this.mUsrInps.LandingPageFilters)){l=Cmn.AddQSNmVal(l,"LandingPageAttrInps",YAHOO.lang.JSON.stringify(this.mUsrInps.LandingPageFilters));}if(!Cmn.IsEmpty(this.mUsrInps.IntermediatePageFilters)){l=Cmn.AddQSNmVal(l,"IntermediatePageAttrInps",YAHOO.lang.JSON.stringify(this.mUsrInps.IntermediatePageFilters));}if(!Cmn.IsEmpty(this.mUsrInps.ProdFilters)){l=Cmn.AddQSNmVal(l,"ProdAttrInps",YAHOO.lang.JSON.stringify(this.mUsrInps.ProdFilters));}if(this.mUsrInps.LastDeselectedAttr){l=Cmn.AddQSNmVal(l,"AttrIdOfLastDeselectedVal",this.mUsrInps.LastDeselectedAttr);}if(this.mUsrInps.LastDeselectedPubAttr){l=Cmn.AddQSNmVal(l,"PubAttrIdOfLastDeselectedVal",this.mUsrInps.LastDeselectedPubAttr);}if(this.mUsrInps.LastDeselectedValId){l=Cmn.AddQSNmVal(l,"LastDeselectedValId",this.mUsrInps.LastDeselectedValId);}if(this.mUsrInps.LastExplicitlyExpandedAttr!==0){l=Cmn.AddQSNmVal(l,f,this.mUsrInps.LastExplicitlyExpandedAttr);}if(!Cmn.IsEmpty(this.mUsrInps.PreSlctdAttrIds)){l=Cmn.AddQSNmVal(l,"PreSlctdAttrIds",this.mUsrInps.PreSlctdAttrIds);}if(!Cmn.IsEmpty(this.mUsrInps.TopLevelLandingPageProdAttrIds)){l=Cmn.AddQSNmVal(l,"TopLevelLandingPageProdAttrIds",this.mUsrInps.TopLevelLandingPageProdAttrIds);}}return l;};SpecSrchInp.prototype.UpdateSession=function(){McMaster.SesnMgr.SetStVal(h.SpecUsrInps.KyTxt(),this.UsrInps());return this;};SpecSrchInp.prototype.PubMsg=function(k){var l=new McMaster.MsgMgr.Hdr(McMaster.MsgMgr.CntxtNms.SPEC);McMaster.MsgMgr.PubMsg(new McMaster.MsgMgrMsgs.SpecSlctd(l,k));return this;};}})();

if (this.SpecSrchWebPartLoader) {
}else{
	//-------------------------------------------------------------------------
    // Class:   SpecSrchWebPart
    // Summary: Contains behaviors for Specification Search
    // Remarks: Requires CnxnMgr.
    //-------------------------------------------------------------------------
	
	SpecSrchWebPartLoader = new function() {
		//DECLARATIONS
		//HACK - this will be eventually be moved into another location
		var SPEC_SRCH_WEB_PART_HTTP_HANDLER_URL = "/webparts/content/SpecSrchWebPart/SpecSrch.aspx";
		
		var CLS_NM = "SpecSrchWebPartLoader";
		
		//HACK - these should be renamed to refer to a specification search container.
		var CHOOSE_SPECS_WEB_PART_CNTNR_DIV_NM = "SpecSrch_Cntnr";
        var CHOOSE_SPECS_WEB_PART_INNER_DIV_NM = "SpecSrch_Inner";
        var CHOOSE_SPECS_CLS_HIDDEN = "SpecSrch_Cntnr_Hidden";
        var CHOOSE_SPECS_CLS_DISPL = "SpecSrch_Cntnr_Display";
		var MSG_HDR = new McMaster.MsgMgr.Hdr(McMaster.MsgMgr.CntxtNms.CHOOSE_SPECS);
		
		//different states for the entire spec search frame
        this.CHOOSE_SPECS_EXPND_STAT = {
            CLPSD: 'COLLAPSED',
            EXPND: 'EXPANDED',
            HIDDEN: 'HIDDEN'
        };
		
		var me = this;
		var mPrevCnxn = null;
		//var mMostRecentCnxnId = -1;
		var mReqNbr = -1;
		var mFrameStat = null;
		var mFetchAheadCnxnDict = new CmnColls.HashTable(); // key-value pairs of URL to connection object
		var mFetchAheadLastHndldGrpId; // the last Fetch Ahead group identifier this web part has seen

		var LOAD_FUNC = function(msgObj) { SpecSrchWebPartLoader.Load(msgObj); };
		var UNLOAD_FUNC = function(msgObj) { SpecSrchWebPartLoader.UnLoadWebPart(msgObj, true); }; // pass in true to remove filters
		
		// TODO: t2oak, remove. Nothing should be publishing that message
		//HACK
		// Should be a Specification Search Selected message.
		// Riding on Choose spec for now.
		//Subscribe to the "Choose Specs Selected" message
		//High priority so its ready when dynamic content responds
		McMaster.MsgMgr.AddSubscriber(McMaster.MsgMgrMsgs.ChooseSpecsSlctd, LOAD_FUNC);
				
		// Subscribe to the "Spec Selected" message
		McMaster.MsgMgr.AddSubscriber(McMaster.MsgMgrMsgs.SpecSlctd, LOAD_FUNC, McMaster.MsgMgr.PRIORITY.HIGH);
		// Unloads spec search when product page unloads
		McMaster.MsgMgr.AddSubscriber(McMaster.MsgMgrMsgs.ProdPageUnloaded, UNLOAD_FUNC, McMaster.MsgMgr.PRIORITY.HIGH);

		//Subscribe to ImgClicked message. 
		McMaster.MsgMgr.AddSubscriber(McMaster.MsgMgrMsgs.ImgClicked, LOAD_FUNC, McMaster.MsgMgr.PRIORITY.HIGH);
		
		//Subscribe to Abbreviated presentation clicked message
		McMaster.MsgMgr.AddSubscriber(McMaster.MsgMgrMsgs.AbbrPrsnttnClicked, LOAD_FUNC, McMaster.MsgMgr.PRIORITY.HIGH);
		
		//Subscribe to presentation name clicked message
		McMaster.MsgMgr.AddSubscriber(McMaster.MsgMgrMsgs.PrsnttnNmClicked, LOAD_FUNC, McMaster.MsgMgr.PRIORITY.HIGH);

		//PUBLIC METHODS
								
		// -------------------------------------------------------------
		// Summary: Method to retrieve information related to
		//			Specification Search from an HTTPHandler, display the
		//			returned markup.
		// Input:   msgObj - The message object
		// -------------------------------------------------------------
		this.Load = function(msgObj, loadFrmSesnInd) {
			//Only reload spec search after an image or abbr presentation click if a spec search
			//was previously present.
			var loadSpecSrchInd = true;
			var stat = McMaster.SesnMgr.GetStVal(McMaster.SesnMgr.StValDefs.ChooseSpecsStat.KyTxt());

        	var currSrchRsltId = McMaster.SesnMgr.GetStVal(McMaster.SesnMgr.StValDefs.DynamicPageSrchRsltId.KyTxt());
        	var newSrchRsltId = McMaster.SesnMgr.GetStVal(McMaster.SesnMgr.StValDefs.SrchRsltIdForSpecSrch.KyTxt());
        	if ( (newSrchRsltId == currSrchRsltId && (McMaster.SesnMgr.GetStVal(McMaster.SesnMgr.StValDefs.HasSpecSrchInd.KyTxt())) == true) ) {
				//reload spec search
			} else { 
				if (msgObj.NM && (msgObj.NM === McMaster.MsgMgrMsgs.ImgClicked.NM
							   || msgObj.NM === McMaster.MsgMgrMsgs.AbbrPrsnttnClicked.NM)) {
					if (stat === null || stat === me.CHOOSE_SPECS_EXPND_STAT.HIDDEN) {
						//Don't try to reload spec search
						loadSpecSrchInd = false;
					}
				}	
			}
			
			if (loadSpecSrchInd) {
				//Performance timer - Track the start of the load event
				var top = McMasterCom.Nav.GetTopFrame();
				var trkEvnt = new top.PerfTracker.Evnt(top.PerfTracker.EvntNms.SpecSrchLdrLoadBgn, top.PerfTracker.PgCntxtNms.DynCntnt); 
				
				McMaster.SesnMgr.SetStVal(McMaster.SesnMgr.StValDefs.ChooseSpecsLoadFrmSesnInd.KyTxt(), false);
				    
			    if (!loadFrmSesnInd) ContentHistMgr.Init_Snapshot(ContentHistMgr.TYP.CHOOSE_SPECS_LOAD);
					
					
				//Unload any previously loaded spec search web part so it
				//doesn't hang around with no content -- UNLESS a specification or image
				//was selected.  If a spec, image, or abbreviated presentation was selected, leave it around.
				if (msgObj && (msgObj.NM === McMaster.MsgMgrMsgs.SpecSlctd.NM 
							   || msgObj.NM === McMaster.MsgMgrMsgs.ImgClicked.NM
							   || msgObj.NM === McMaster.MsgMgrMsgs.AbbrPrsnttnClicked.NM
							   || msgObj.NM === McMaster.MsgMgrMsgs.PrsnttnNmClicked.NM)) {
						//Leave the spec web part
				} else {
						//Something else happened so unload the spec web part
				
					//Unload the previous web part 
					me.UnLoadWebPart(msgObj, false); // don't remove the filters
					
					//ANALYTICS: track the fact that a new spec search pane has loaded for the given search result
	                var srchTxt = McMaster.SesnMgr.GetStVal(McMaster.SesnMgr.StValDefs.SlctdSrchRsltTxt.KyTxt());
	                Cmn.TrkAct('Action=' + 'Viewed' + '&SrchTxt=' + srchTxt, 'ChooseSpec');
				}
	
				//Performance timer - Track the end of the load event
				var top = McMasterCom.Nav.GetTopFrame();
				trkEvnt = new top.PerfTracker.Evnt(top.PerfTracker.EvntNms.SpecSrchLdrLoadEnd, top.PerfTracker.PgCntxtNms.DynCntnt); 
					
				//Create the ajax connection
				me.CrteAjaxCnxn();
			}
		};
		
        // -------------------------------------------------------------
        // Summary: Called following back button clicks. 
		// Remarks: Because this web part can load itself OR be loaded
		//			as a child of another web part, it must ask the
		//			Content History Manager what to do.
        // -------------------------------------------------------------				
		this.LoadFrmSesn = function() {
			if (ContentHistMgr.ShouldILoadFrmSesn(ContentHistMgr.TYP.CHOOSE_SPECS_LOAD)) {
				this.Load(null, true);
			}
		};		
		
		// -------------------------------------------------------------
		// Summary: Unloads the specification search webpart
		// -------------------------------------------------------------
		this.UnLoadWebPart = function(msgObj, removeFiltersInd){
			//Abort any stale AJAX requests
			me.AbortStaleReq();
			
			//If an image was selected, we don't want to hide spec search
			if (msgObj && (msgObj.NM === McMaster.MsgMgrMsgs.ImgClicked.NM 
						  || msgObj.NM === McMaster.MsgMgrMsgs.AbbrPrsnttnClicked.NM
						  || msgObj.NM === McMaster.MsgMgrMsgs.PrsnttnNmClicked.NM)) {
				//An image was selected, do not hide.
			} else {
				//Hide the specification search frame
				me.Hide();			
			}

			
			//Remove filters
			if (removeFiltersInd) {
				SpecSrchInp.Get().RemAll().UpdateSession();
			}

			//Close all showing specification information boxes.
			if (typeof(SpecSrchWebPart) !== "undefined") {			
				SpecSrchWebPart.SpecInfo.Unload();
			}

			// t2oak: container will be destroyed when web part unloads.
			//Let the rest of the site know that the web part has been unloaded
            var thisWebPart = McMaster.SesnMgr.GetWebPartDatByCntnrId(CHOOSE_SPECS_WEB_PART_INNER_DIV_NM);
            if (thisWebPart) {
                McMaster.LoadMgr.UnloadCntnr(thisWebPart.CntnrIDTxt);
            }
		};

		
		// -------------------------------------------------------------
		// Summary: Performs the AJAX connection to the HTTPHandler
		// Args:	None
		// DEV Notes: This function may need to be shuffled to a loader class. See ChooseSpecsWebPartLoader for performance timers
		// Inputs: 
		//		msgObj (optional) - A message containing data that is used in 
		// 							the creation of the AJAX connection. Absent
		//							the presence of data in the message, this
		//							method will retrieve current information
		//							from Session.
		// -------------------------------------------------------------
		this.CrteAjaxCnxn = function(msgObj){
		    // Begin performance tracking for this method
			var top = McMasterCom.Nav.GetTopFrame();
		    var trkEvnt = new top.PerfTracker.Evnt(top.PerfTracker.EvntNms.SpecSrchLdrAjaxCnxnBgn, top.PerfTracker.PgCntxtNms.DynCntnt); 
			
			//Abort any stale AJAX requests
            me.AbortStaleReq();
			
			mReqNbr = mReqNbr + 1;
					
			//Perform the Ajax connection
			var cnxnObj = {
				cnxnParm: {
					//we expect the response to be formatted like a web part
					respTyp: McMaster.CnxnMgr.WEB_PART_RESP_TYP_TXT,
					reqNbr: mReqNbr
				},
				success: function(webPartObj, reqArgs) {		
					if (SpecSrchWebPart.MaintainFocus.CntxtSrchChgd()) {
						// do nothing
						// stale
					} else if (reqArgs.reqNbr !== mReqNbr) {					
						// stale ajax response
						// do not load
					} else {
						//reset the previous connection
						mPrevCnxn = null;
						var top = McMasterCom.Nav.GetTopFrame();
						var payload = new top.PerfTracker.EvntPayload();
						payload.Add("ServerTm", webPartObj.ServerTm);
						payload.Add("ServerNm", webPartObj.ServerNm);
						//performance timer
						var trkEvnt = new top.PerfTracker.Evnt(top.PerfTracker.EvntNms.SpecSrchLdrAjaxRespSuccessBgn, top.PerfTracker.PgCntxtNms.DynCntnt, payload); 
						
						//HACK: if there are no specs selected except a group user input that matches the snapshot group user input, hide the clear all link
						var specSrchInp = SpecSrchInp.Get();
						var prsnttnUsrInp = PrsnttnUsrInp.Get();
						var imgUsrInp = ImgUsrInp.Get();
						var snapshotGrpUsrInp = McMaster.SesnMgr.GetStVal(McMaster.SesnMgr.StValDefs.GrpUsrInpsWhenSpecSrchLoads.KyTxt());
						var currGrpUsrInp = GrpUsrInp.Get();
						if (specSrchInp.GetSelectionCnt() == 0 && prsnttnUsrInp.GetSelectionCnt() == 0 && imgUsrInp.GetSelectionCnt() == 0 && snapshotGrpUsrInp && currGrpUsrInp) {
							if (snapshotGrpUsrInp[0] && currGrpUsrInp.mGrpUsrInps[0]) {
								if (snapshotGrpUsrInp[0].GrpEID == currGrpUsrInp.mGrpUsrInps[0].GrpEID && snapshotGrpUsrInp[0].FamilyId == currGrpUsrInp.mGrpUsrInps[0].FamilyId) {
									var dom = document.createElement("div");
									dom.innerHTML = webPartObj.MarkupTxt;
									var clearAll = Cmn.GetElementsByClsNm("SpecSrch_ClearAllLnk", "div", dom);														
									if (clearAll) {
										Cmn.SetStyle(clearAll[0], "display", "none");
									}						
									webPartObj.MarkupTxt = dom.innerHTML;
								}
							}
						}
												
						//load the web part
						McMaster.LoadMgr.LoadWebPart(webPartObj);
						
						//performance timer
						var top = McMasterCom.Nav.GetTopFrame();
						trkEvnt = new top.PerfTracker.Evnt(top.PerfTracker.EvntNms.SpecSrchLdrAjaxRespSuccessEnd, top.PerfTracker.PgCntxtNms.DynCntnt); 
					}
					
				},
				failure: function(){
					//reset the previous connection
					mPrevCnxn = null;
				},
	            sendTouch: true,
	            timeout: McMaster.Globals.SPEC_SRCH_LOADER_TIMEOUT_MS_CNT
			};
			
			var url = getURL(),
			srchRsltId = getSrchId();

			switch(true) {
				case (mFetchAheadCnxnDict.ContainsKy(url)):
				
					var req = mFetchAheadCnxnDict.Itm(url);
					if (req === true) {							
						// Retrieve content from the HTTPHandler  
						mPrevCnxn = McMaster.CnxnMgr.PerformAjaxCnxn(url, cnxnObj);	
												
						// track complete request
						trkFetchAhead(srchRsltId, FetchAhead.CACHE_STATES.HIT_COMPLETE);																	
					} else {								
						mPrevCnxn = McMaster.CnxnMgr.ModifyCnxn(req, cnxnObj);
						
						// The value in the dictionary is updated to the boolean true.
						// Changing the cache entry value ensures that the request won't
						// be cancelled in cnclInFlightFetchAheadRequests().
						// This is a little weird, but oh well. Might be worth changing in the future.
						mFetchAheadCnxnDict.Replace(url, true);							
						
						// track in-flight request		
						trkFetchAhead(srchRsltId, FetchAhead.CACHE_STATES.HIT_INFLIGHT);												
					}
						
					break;
					
				default: 
					// Retrieve content from the HTTPHandler 					
					mPrevCnxn = McMaster.CnxnMgr.PerformAjaxCnxn(url, cnxnObj);			

					// track cache miss - don't do this anymore [t2aes, 1/30/13]
					//trkFetchAhead(srchRsltId, FetchAhead.CACHE_STATES.MISS);
					break;
			}
				
			// Cancel any in-flight Fetch Ahead requests so they
			// don't eat up domain connections to www.
			cnclInFlightFetchAheadRequests();				
				
			// If the system pre-selected spec filters or we're loading from session, 
            var sysSlctdSpecFiltersInd = McMaster.SesnMgr.GetStVal(McMaster.SesnMgr.StValDefs.SysSlctdSpecFiltersInd.KyTxt());
			if (sysSlctdSpecFiltersInd == true ) {
				// Clear the system-selected filters state value from session.
				McMaster.SesnMgr.RemStVal(McMaster.SesnMgr.StValDefs.SysSlctdSpecFiltersInd.KyTxt());
			}
			
			// Finish performance tracking for this method
			var top = McMasterCom.Nav.GetTopFrame();
			trkEvnt = new top.PerfTracker.Evnt(top.PerfTracker.EvntNms.SpecSrchLdrAjaxCnxnEnd, top.PerfTracker.PgCntxtNms.DynCntnt); 
		};
		
		//-------------------------------------------------------------
		// Summary: Handles detch ahead data received message. Basically,
		//			this function builds a URL and makes an AJAX connection.
		//-------------------------------------------------------------
		this.HndlFetchAheadDatRcvd = function(msgObj){
		/* TEMPORARILY DISABLED
		
			var payload = msgObj.MsgPayload();
			// If the first request of a group, track the fact that we've chosen to make a Fetch Ahead prediction.
			if (!(mFetchAheadLastHndldGrpId) || mFetchAheadLastHndldGrpId !== payload.FetchAheadGrpId) {
				FetchAhead.TrkPredictions(FetchAhead.PREDICT_STATES.PREDICT, payload.CurrWebPartIdTxt, 'SpecSrchWebPart');
				mFetchAheadLastHndldGrpId = payload.FetchAheadGrpId; // update "last handled" group ID
			}
			
			var cnxnUrl = getURL(msgObj);				
				
			// if appropriate, fetch ahead
			switch(true) {
				case (mFetchAheadCnxnDict.ContainsKy(cnxnUrl)): 
					// already fetched this URL						
					break;
					
				default: 
				
					// Track each Fetch Ahead request.
					trkFetchAhead(getSrchId(msgObj), FetchAhead.CACHE_STATES.REQUEST);
					
					// Make request.			
					var cnxnObj = {
						success: function(webPartObj, reqArgs) {
							// update fetch ahead dictionary to indicate
							// connection success
							if (mFetchAheadCnxnDict.ContainsKy(cnxnUrl)) mFetchAheadCnxnDict.Replace(cnxnUrl, true);		
						},
						failure: function() {
							// remove entry
							mFetchAheadCnxnDict.Rem(cnxnUrl);				
						},
						abort: function() {
							// remove entry
							mFetchAheadCnxnDict.Rem(cnxnUrl);					
						},
						cnxnParm: {
							respTyp: McMaster.CnxnMgr.WEB_PART_RESP_TYP_TXT
						},						
						sendTouch: true
					};
					
					// fetch ahead and store in dictionary
					var req = McMaster.CnxnMgr.PerformAjaxCnxn(cnxnUrl, cnxnObj);
					mFetchAheadCnxnDict.Add(cnxnUrl, req);
					
					break;		
			}	
		*/
		}
		
		// -------------------------------------------------------------
		// Summary: Returns true if a request is in flight.
		// -------------------------------------------------------------
		this.ReqInFlight = function() {
			return (!!mPrevCnxn);
		}
		
		
		// -------------------------------------------------------------
		// Summary: Aborts requests in flight
		// -------------------------------------------------------------
		this.AbortStaleReq = function() {
			// Incremement the request number in order to ENSURE that the "success" callback 
			// function of CrteAjaxCnxn above will properly meet this condition:
			//
			// if (reqArgs.reqNbr !== mReqNbr) {
			//		// do nothing
			// }
			//
			// Why do we have to do this?  The cancelling of the AJAX connection in the Connection
			// Manager seems not always to work synchronously.  This might be a YUI bug or a browser bug,
			// but in any case, it's a good failsafe to keep track of the request number in this singleton
			// Loader javascript and ignore stale responses this way.
			mReqNbr = mReqNbr + 3;
		
			if(mPrevCnxn){			
				//Abort the ajax connection
				McMaster.CnxnMgr.AbortAjaxCnxn(mPrevCnxn);
				
				//Clear the previous connection
                mPrevCnxn = null;
				
                //Abort the snapshot
                ContentHistMgr.Abort_Snapshot(ContentHistMgr.TYP.CHOOSE_SPECS_LOAD);
			}
		};
		
		
		// -----------------------------------------------------------------
        // Summary: Handles collapsing and expanding the choose specs frame
        //          when setting intial state or session state
        // Input: Desired state of choose spec: collapsed, expanded, hidden
        //          publish message indicator.  We don't want to publish
        //          the messasge when we unload the web part.
        // -----------------------------------------------------------------
        this.CollapseExpand = function(stat, pubMsgInd) {
            if (mFrameStat != stat) {
                //update the local state
                mFrameStat = stat;

                // Update the choose specs state
                var cntnr = Cmn.GetObj(CHOOSE_SPECS_WEB_PART_CNTNR_DIV_NM);
                var innerCntnr = Cmn.GetObj(CHOOSE_SPECS_WEB_PART_INNER_DIV_NM);

                if (cntnr && innerCntnr) {
                    switch (stat) {
                        case this.CHOOSE_SPECS_EXPND_STAT.EXPND:
                            //expand - show both containers
                            //cntnr.className = CHOOSE_SPECS_CLS_DISPL;
                            //test if contains, if does replace. 
                            Cmn.ReplaceCls(cntnr, CHOOSE_SPECS_CLS_HIDDEN, CHOOSE_SPECS_CLS_DISPL);
                            Cmn.SetStyle(innerCntnr, 'display', 'block');
                            Cmn.SetStyle(cntnr, 'display', 'block');
                            break;
                        case this.CHOOSE_SPECS_EXPND_STAT.CLPSD:
                            //collapsed - show outer container hide inner container
                            //cntnr.className = CHOOSE_SPECS_CLS_DISPL;
                            Cmn.ReplaceCls(cntnr, CHOOSE_SPECS_CLS_HIDDEN, CHOOSE_SPECS_CLS_DISPL);                            
                            Cmn.SetStyle(cntnr, 'display', 'block');
                            Cmn.SetStyle(innerCntnr, 'display', 'none');
                            break;
                        case this.CHOOSE_SPECS_EXPND_STAT.HIDDEN:
                            //hidden - hide outer container
                            //cntnr.className = CHOOSE_SPECS_CLS_HIDDEN;
                            Cmn.ReplaceCls(cntnr, CHOOSE_SPECS_CLS_DISPL, CHOOSE_SPECS_CLS_HIDDEN);                            
                            Cmn.SetStyle(cntnr, 'display', 'none');
                            Cmn.SetStyle(innerCntnr, 'display', 'block');
                            break;
                        default:
                            //error, only three states
                            break;
                    }

                    McMaster.SesnMgr.SetStVal(McMaster.SesnMgr.StValDefs.ChooseSpecsStat.KyTxt(), stat);

                    // publish a message to let other web parts know
                    // the current state of the choose spec pane so they can resize
                    if (pubMsgInd) {
                        var chooseSpecsStatMsg = new McMaster.MsgMgrMsgs.ChooseSpecsStatChg(MSG_HDR, stat, true);
                        McMaster.MsgMgr.PubMsg(chooseSpecsStatMsg);
                    }
                }
            }
        };

		// -----------------------------------------------------------------
        // Shortcuts: The following are shortcuts for the ExpandCollapse method
        // `````````````````````````````````````````````````````````````````
		this.Show = function() {
			me.CollapseExpand(me.CHOOSE_SPECS_EXPND_STAT.EXPND, true);
		}
		this.Hide = function() {
			me.CollapseExpand(me.CHOOSE_SPECS_EXPND_STAT.HIDDEN, true);
		}
		this.Collapse = function() {
			me.CollapseExpand(me.CHOOSE_SPECS_EXPND_STAT.CLPSD, true);
		}
		
        // `````````````````````````````````````````````````````````````````
        // End shortcuts
        // -----------------------------------------------------------------
		
		// -------------------------------------------------------------
		// Returns the URL to make an Ajax request to get new spec search content
		// Inputs: 
		//		msgObj (optional) - A message containing data that is used in 
		// 							the creation of the AJAX connection. Absent
		//							the presence of data in the message, this
		//							method will retrieve current information
		//							from Session.
		// -------------------------------------------------------------
		var getURL = function(msgObj){
			var rtnQS = SPEC_SRCH_WEB_PART_HTTP_HANDLER_URL;
			var specSrchInp, prsnttnUsrInp, imgUsrInp, grpUsrInp;
			
			// Retrieve user inputs, either from the message (in case of 
			// Fetch Ahead) or Session (in case of normal flow).
			if (msgObj) {
				var payload = msgObj.MsgPayload();
				
				// retrieve information from the message
				specSrchInp = payload.SpecSrchInp;
				prsnttnUsrInp = payload.PrsnttnUsrInp;
				imgUsrInp = payload.ImgUsrInp;
			} else {
				// default to session
				specSrchInp = SpecSrchInp.Get();
				prsnttnUsrInp = PrsnttnUsrInp.Get();
				grpUsrInp = GrpUsrInp.Get();
				imgUsrInp = ImgUsrInp.Get();
			}
			
			
			rtnQS = Cmn.AddQSNmVal(rtnQS, "cntnridtxt", encodeURIComponent("SpecSrch_Inner"));
			rtnQS = Cmn.AddQSNmVal(rtnQS, "srchidtxt", encodeURIComponent(getSrchId(msgObj)));
			rtnQS = Cmn.AddQSNmVal(rtnQS, "cntnrwdth", encodeURIComponent("204"));
			rtnQS = Cmn.AddQSNmVal(rtnQS, "cntnrhgt", encodeURIComponent("3000"));
			rtnQS = specSrchInp.AddSpecUsrInpQS(rtnQS);
			rtnQS = prsnttnUsrInp.AddPrsnttnUsrInpQS(rtnQS);
			rtnQS = grpUsrInp.AddGrpUsrInpQS(rtnQS);
			rtnQS = imgUsrInp.AddImgUsrInpQS(rtnQS);

			return rtnQS;
		};
		
		// -------------------------------------------------------------
		// Returns the search result ID.
		// Remarks: The SlctdSrchRsltId might be null, i.e. if the customer
		// 			has selected a part number causing the search result 
		//			web part to unload.  Accordingly, we check both that
		//			session value and the DynamicPageSrchRsltId, which is
		//			initialized by the DynamicContentCoordinator.
		// Inputs: 
		//		msgObj (optional) - A message containing data that is used in 
		// 							the creation of the AJAX connection. Absent
		//							the presence of data in the message, this
		//							method will retrieve current information
		//							from Session.		
		// -------------------------------------------------------------
		var getSrchId = function(msgObj) {
			if (msgObj && msgObj.MsgPayload().FetchAheadSrchRsltID) {
				// if information present in message object, use it rather than
				// data in Session
				return msgObj.MsgPayload().FetchAheadSrchRsltID;
			} else {
				return McMaster.SesnMgr.GetStVal(McMaster.SesnMgr.StValDefs.SlctdSrchRsltId.KyTxt())
					|| McMaster.SesnMgr.GetStVal(McMaster.SesnMgr.StValDefs.DynamicPageSrchRsltId.KyTxt())
			}
		}
		
		// -------------------------------------------------------------
		// Summary: Cancels any "live" in-flight Fetch Ahead requests.
		// -------------------------------------------------------------	
		var cnclInFlightFetchAheadRequests = function() {
			var urls = mFetchAheadCnxnDict.Keys(), 
			len = urls.length;

			// Cancel any "live" in-flight requests, unless they match
			// the passed-in request.
			for (var i=0; i<len; i++) {
				var url = urls[i];
				var req = mFetchAheadCnxnDict.Itm(url);
				
				// If the request is valid and not completed (i.e. boolean true value)
				// cancel it and remove it from the dictionary.
				if (req && req !== true) {			
					// Abort the in-flight connection
					McMaster.CnxnMgr.AbortAjaxCnxn(req);
					
					// Remove aborted connected from cache so that it can be
					// fetched again, if necessary.
					mFetchAheadCnxnDict.Rem(url);	
				}
			}				
		};			
		
		//----------------------------------------------------------
		// Summary: Tracks successes or failures of Fetch Ahead.
		// Inputs:
		//		srchRsltId - search result ID of the content fetched ahead
		//		cacheStEnum - hit/miss/in-flight enumeration (FetchAhead.CACHE_STATES)
		//----------------------------------------------------------	
		var trkFetchAhead = function(srchRsltId, cacheStEnum) {
			// track in webreports
			var trkObj = {};
			trkObj.FetchAheadCacheSt = cacheStEnum;
			trkObj.SrchRsltId = srchRsltId;
			
			Cmn.TrkAct(trkObj, CLS_NM);		
		};	
			
		
	};
}

this.SpclWrdLoader||(SpclWrdLoader=new function(){McMaster.MsgMgr.AddSubscriber(McMaster.MsgMgrMsgs.SpclWrdSlctd,function(a){SpclWrdLoader.Load(a)});this.Load=function(a){a=a.MsgPayload().SpclWrdJavascriptMthdNm;eval(a)};this.CareersLnk_Click=function(){var a=new McMaster.MsgMgr.Hdr(McMaster.MsgMgr.CntxtNms.SPCL_WRD_LOADER),a=new McMaster.MsgMgrMsgs.CareersSlctd(a);McMaster.MsgMgr.PubMsg(a)};this.CntctUsLnk_Click=function(){var a=new McMaster.MsgMgr.Hdr(McMaster.MsgMgr.CntxtNms.SPCL_WRD_LOADER),a=
new McMaster.MsgMgrMsgs.CntctUsSlctd(a);McMaster.MsgMgr.PubMsg(a)};this.CtlgInfoReqLnk_Click=function(){McMasterCom.Nav.LoadAboutUs("catalog")};this.HelpLnk_Click=function(){McMasterCom.Nav.LoadHelp("")};this.MSDSInfoReqLnk_Click=function(){McMasterCom.Nav.LoadHelp("msds")};this.OrdHistInfoReqLnk_Click=function(){McMasterCom.Nav.LoadOrdHistHelpPage()};this.OrdInfoReqLnk_Click=function(){McMasterCom.Nav.LoadHelp("ordering")};this.RtnsInfoReqLnk_Click=function(){McMasterCom.Nav.LoadHelp("return")};
this.ShpInfoReqLnk_Click=function(){McMasterCom.Nav.LoadHelp("shippinginformation")};this.SupplierInfoReqLnk_Click=function(){McMasterCom.Nav.LoadHelp("supplier")};this.TechDrawings3dModelsInfoReqLnk_Click=function(){McMasterCom.Nav.LoadHelp("drawingsandmodels")};this.MobileAppReqLnk_Click=function(){McMAsterCom.Nav.LoadiPadHelp("")}});


if(this.SrchSuggWebPartLoader){}else{SrchSuggWebPartLoader=new function(){};}

if (this.SrchSuggWebPart) {
    // Already defined
} else {
    
    
    /*
     * Search suggestion webpart consists of three main parts:
     * 
     * 1. Container widget
     * 2. Input widget
     * 3. Dropdown object
     * 
     * Container and input widgets are dependent on eachother. The dropdown object uses a container and input.
     * 
     * Container widget:
     * This contains all of the logic for events that happen on the container. It also
     * handles its own animation and publishes a message when a user selects an item
     * in the container.
     * 
     * Input widget:
     * This handles all of the keyboard and mouse events that happen in the input
     * box. It also maintains its input value as an instance variable.
     * 
     * Dropdown object:
     * This is the highest level object. The public functions on this object
     * represent a high level event model and control flow of the entire dropdown
     * webpart. It coordinates the input and widget containers and also adds
     * a few functions onto this widgets. 
     */
    
    SrchSuggWebPart = new function () {
	
	
	/*************************************************************
	 * Declarations
	 */
	
	var Dom = Cmn.Dom,
	Util = Cmn.Utilities,
	Assert = Util.Assert,
	Pluck = Util.Pluck,
	Head = Util.Head,
	ForEach = Util.ForEach,
	ReverseObj = Util.ReverseObj,
	Sift = Util.Sift,
	KeyCodes = Util.KeyCodes,
	Emitter = Util.Emitter,
	InArray = Util.InArray,
	CreateWidget = Util.Widget.CreateWidget,
	PerformAjax = McMaster.CnxnMgr.PerformAjaxCnxn,
	AbortAjax = McMaster.CnxnMgr.AbortAjaxCnxn,
	Log = Util.Log,
	mMsgHdr = new McMaster.MsgMgr.Hdr(McMaster.MsgMgr.CntxtNms.SRCH_SUGG),
	mInvalidInpCharsRegex = new RegExp("[^\u07ED|\u201C|\u201D|\u2019|\u0000-\u007F]+", "g");		
	mNumbersRe = /^[0-9]+$/,
	mLastSrchSuggLoadWasResortedDueToRecency = false, // indicator of whether recent selections affected the order of the suggestions
	LIGHT_YELLOW_CLS_NM = "ac-highlight",
	SLCTD_CLS_NM = "fastTrackedSrchSuggItm",
	CLOSE_DELAY = 4000,
	USER_SELECT_DELAY = 4000,
	MIN_SEARCH_LENGTH = 2,
	MIN_WIDTH = 200,
	MAX_WIDTH = 200,
	WEB_VER_NUM_KEY = "webversion",
	IMPLICITLY_SELECTED = true,
	
	//used to check if search suggestions should be enabled at all
	SRCH_SUGG_PREF_COOKIE_NM = "INSTNTFND",
	SRCH_SUGG_DISABLED_COOKIE_VAL_TXT = "FALSE",
	
	
	
	
	/*************************************************************
	 * private functions
	 */
	
	
	/*
	 * <summary>
	 * Return true if we should ignore
	 * the keycode.
	 * </summary>
	 * <param name="keycode">
	 * </param>
	 */
	shouldIgnore = 
	    (function(){
		 
		 var toIgnore = ["Tab", 
				 "Enter",
				 "Shift",
				 "Control",
				 "Alt",
				 "Caps",
				 "Escape",
				 "PageUp",
				 "PageDown",
				 "End",
				 "Home",
				 "LeftArrow",
				 "RightArrow",
				 "UpArrow",
				 "DownArrow",
				 "PrintScreen",
				 "Insert"],
		 
		 ignore = 
		     ReverseObj(
			 Sift(KeyCodes,
			      toIgnore));
		 
		 return function(keycode){
		     return !!ignore[keycode];
		 };
		 
	     })(),
	
	
	
	/*
	 * <summary>
	 * This creates the container element in the right place
	 * with the right classes.
	 * </summary>
	 * <param name="entry">
	 * The entry webpart container element
	 * </param>"
	 */
	createContainerElem = function(entry){
	    
	    var outer = Cmn.CrteElement("div"),
	    border = Cmn.CrteElement("div"),
	    ul = Cmn.CrteElement("ul");
	    
	    Dom.AppendChild(ul, border);
	    Dom.AppendChild(border, outer);
	    Dom.AppendChild(outer, entry);
	    
	    Cmn.AddCls(border, "ac-bd");
	    Cmn.AddCls(outer, "ac-content");
	    
	    return outer;
	    
	},
	
	
	getSuggPositionByLi = function(li, container){
	    
	    //			 lis = Cmn.collToArray(container.elem.children);			 
	    var position = -1,
	    lis = Cmn.collToArray(Cmn.GetElementsByClsNm("suggestion", "li", container.elem));
	    
	    for (var i = 0; i < lis.length; i++){
		var comparison = lis[i];
		if (comparison === li){
		    position = i;
		    return position;
		}
	    }
	    Assert(position > -1, "This LI was not found in the suggestions box.");
	    return null;
	},
	
	
	/*
	 * <summary>
	 * A canonical way to get the text from an LI.
	 * </summary>
	 * <param name="slctdItm">
	 * LI to get text from.
	 * </param>"
	 */
	textFromLI = function (slctdItm, container, position) {
	    if(position){
	     } else{
	        position = getSuggPositionByLi(slctdItm, container);
	    }
	    return container.Suggestions[position];
	},
	
	
	
	/*
	 * <summary>
	 * Creates an input widget.
	 * </summary>
	 * 
	 * NOTE: The input object is very simple by itself.
	 * The bulk of the input logic is created when
	 * we create the dropdown so it can use a reference
	 * to the container. The input and container
	 * are tightly coupled at that point.
	 * <param name="elem">
	 * Element to bind the input widget to.
	 * </param>"
	 */
	createInput = function(elem){
	    var input = CreateWidget(elem);
	    input.value = elem.value;
	    
	    /*
	     * <summary>
	     * Update the input value for every key stroke
	     * before doing anything else.
	     * </summary>
	     */
	    input.Input
		.Do(
		    function(){
			input.value = input.elem.value;
		    });
	    
	    
	    /*
	     * <summary>
	     * Update the input value. Should be a method on the input?
	     * </summary>
	     * <param name="text">
	     * New value in the input box.
	     * </param>"
	     */
	    
	    input.UpdateValue = function(text){
		input.elem.value = text;
		input.value = text;
	    };
	    
	    
	    input.Clear = function(){
		input.UpdateValue("");
	    };
	    
	    return input;
	},
	
	
	
	/*
	 * <summary>
	 * Creates a container widget.
	 * </summary>
	 * 
	 * The container widget contains event
	 * handlers and a few public methods. As with the
	 * input object, more logic is added once we create
	 * the dropdown object.
	 * 
	 * <param name="elem">
	 * The DOM element the auto-complete list is contained in,
	 * createContainerElem creates this element
	 * </param>
	 * <param name="input">
	 * The input box where search text is entered.
	 * </param>
	 */
	createContainer = function(outer, input){
	    
	    var border = outer.firstChild,
	    aclist = border.firstChild,
	    container = CreateWidget(aclist),
	    closed = true,
	    mFirstLI = null,
	    mLastLI = null,
	    mCloseButton = null,
	    mCloseTimeout = null,
	    mUserSelectTimeout = null,
	    mAnimateTimeout = null,
	    dimensions = {
		'width' : 0,
		'height': 0
	    },
	    
	    //markup stubs for list
	    header = '<li id="ac-hd"><div class="SrchSuggWebPart_CloseBtn_Cntnr">'
		+ '<a href="#" class="HomePageImage"> </a>'
		+ '</div></li>',
	    
	    footer = '<li id="ac-ft"></li>',
	    
	    heightSubject = new NumericalStyleSubject(outer, "height", 0, dimensions.height),
	    animator = new Animator(
		{
		    interval: 20,
		    duration: 200
		})
		.addSubject(heightSubject);
	    
	    
	    container.outerDiv = outer;
	    container.Suggestions = [];
	    container.SuggestionsDat = [];
	    container.FocusedLI = null;
	    
	    
	    /*
	     * <summary>
	     * Returns a highlighted LI in the container
	     * </summary>
	     */
	    container.GetHighlighted = function(){
		var highlighted = Head(Cmn.GetElementsByClsNm(LIGHT_YELLOW_CLS_NM));
		return highlighted;
	    },
	    
	    /*
	     * <summary>
	     * Highlight some text, default to a darker yellow,
	     * but color can be set as an optional second parameter, 
	     * (via a css class name)
	     * </summary>
	     */
	    container.Highlight = Emitter(
		function (term, clsNm) {
		    clsNm = clsNm || LIGHT_YELLOW_CLS_NM;
		    Assert(term, "You must provide a term to this function.");
		    
		    if (Cmn.Utilities.IsString(term)){
			term = term.toLowerCase();
			var li = getLI(term);
			Assert(li, "The term provided is not in the current suggestions.");
		    } else {
			var li = term;
		    }
		    
		    Cmn.AddCls(li, clsNm);
		    
		}, container);
	    
	    
	    /*
	     * <summary>
	     * Removes all highlights.
	     * </summary>
	     * <param name="">
	     * </param>
	     */
	    container.RemoveAllHighlights = function(){
		ForEach(aclist.childNodes, function(LI){
			    Cmn.RemCls(LI, LIGHT_YELLOW_CLS_NM);
			    Cmn.RemCls(LI, SLCTD_CLS_NM);
			});
	    };
	    
	    
	    
	    /*
	     * <summary>
	     * Highlights the selected LI that corresponds with the text
	     * and publishes a user input text submitted message.
	     * </summary>
	     * <param name="text">
	     * search suggestion text to select.
	     * </param>"
	     */
	    container.UserSelected = Emitter(
		function(text, position, slctnTyp, implicitInd, targetElem){
		    var inpTxt = input.value;
            var sugg = null,
		    dynamicInd = false;
		    if (position != "undefined" && position >=0){
		        sugg = container.SuggestionsDat[position];
		        if (sugg && sugg.IsDynamicInd){
		            dynamicInd = true;
		        }
		    }
			
		    if (dynamicInd && sugg.SrchRsltId &&  sugg.Nm != "undefined" && sugg.Specs != "undefined"){
				 // Create SrchTrkr object and 204 request	
				var srchTrkInfo = new SrchTrkr.SrchDat({ usr: getNavTyp(slctnTyp) });
				srchTrkInfo.usr.srcNm = "SrchSuggWebPart";
				srchTrkInfo.usr.elemTyp = SrchTrkr.ElemTyps.SRCH_SUGG;
				srchTrkInfo.usr.slctdNm = decodeURIComponent(text);
				srchTrkInfo.usr.slctdTxt = decodeURIComponent(text);
				srchTrkInfo.usr.entryTxt = decodeURIComponent(inpTxt);
				srchTrkInfo.usr.entryTxtLen = decodeURIComponent(inpTxt).length;
				srchTrkInfo.usr.slctdSuggIdx = position;			
				srchTrkInfo.usr.recencyResorting = McMaster.SesnMgr.GetStVal(McMaster.SesnMgr.StValDefs.SrchSuggRecencyReorderInd.KyTxt());
				srchTrkInfo.usr.recencyResortingChangedOrder = mLastSrchSuggLoadWasResortedDueToRecency;
				if (slctnTyp != "autoSlct" && targetElem) {
					srchTrkInfo.usr.slctdElemXYPosn = Cmn.GetXOffset(targetElem) + "," + Cmn.GetYOffset(targetElem);
				}
				srchTrkInfo.Trk();
				// End: Create SrchTrkr object and 204 request
				
		        container.Selected(text); 
		    
		        var fastTrackingInd = false; //this tells search result we are not autoselecting
		        if (implicitInd){
		            fastTrackingInd = true;
		        }
		        
		        SecondaryContentCoordinator.Init();
		        
		        var hasFastTrackResult = true, //this tells search result to wait to load until suggestions have collapsed
		        msgHdr = new McMaster.MsgMgr.Hdr(McMaster.MsgMgr.CntxtNms.SRCH_SUGG),
		        msg = new McMaster.MsgMgrMsgs.SrchTxtChged(msgHdr, 0, sugg.Nm, hasFastTrackResult, fastTrackingInd);
        		
		        SrchSuggWebPart.CancelRequests();
		        McMaster.MsgMgr.PubMsg(msg);

                msgHdr = new McMaster.MsgMgr.Hdr(McMaster.MsgMgr.CntxtNms.SRCH_SUGG);
		        msg = new McMaster.MsgMgrMsgs.SrchSuggSlctd(msgHdr, sugg.SrchRsltId, sugg.Nm, sugg.Specs);
                McMaster.MsgMgr.PubMsg(msg);

				// track the selection of the search suggestion by the user
				if (SrchSuggWebPart.Relevance && SrchSuggWebPart.Relevance.recordSelection) {
					SrchSuggWebPart.Relevance.recordSelection(srchTrkInfo.usr.slctdTxt, srchTrkInfo.usr.entryTxt);					
				}				
				
		    }else{
		        if (position != "undefined" && position >=0 && position !== true) {
		            //The customer explicitly selected a search suggestion, so update the contents
		            //of the search entry web part get updated with the search suggestion.
		            container.Selected(text); 
		        }
				// Create SrchTrkr object
				var srchTrkInfo = new SrchTrkr.SrchDat({usr: getNavTyp(slctnTyp), resp:"unknown"});
				srchTrkInfo.usr.srcNm = "SrchSuggWebPart";
				srchTrkInfo.usr.elemTyp = SrchTrkr.ElemTyps.SRCH_SUGG;
				srchTrkInfo.usr.slctdTxt = decodeURIComponent(text);
				srchTrkInfo.usr.entryTxt = decodeURIComponent(inpTxt);
				srchTrkInfo.usr.entryTxtLen = decodeURIComponent(inpTxt).length;
				srchTrkInfo.usr.slctdSuggIdx = position;
				srchTrkInfo.usr.recencyResorting = McMaster.SesnMgr.GetStVal(McMaster.SesnMgr.StValDefs.SrchSuggRecencyReorderInd.KyTxt());
				srchTrkInfo.usr.recencyResortingChangedOrder = mLastSrchSuggLoadWasResortedDueToRecency;				
				if (slctnTyp != "autoSlct") {
					srchTrkInfo.usr.slctdElemXYPosn = Cmn.GetXOffset(targetElem) + "," + Cmn.GetYOffset(targetElem);
				}
				// End: Create SrchTrkr object
				
		        var msgHdr = new McMaster.MsgMgr.Hdr(McMaster.MsgMgr.CntxtNms.SRCH_SUGG);
		        var msg = new McMaster.MsgMgrMsgs.UsrInpTxtSubmitted(msgHdr, text, srchTrkInfo);
		        McMaster.MsgMgr.PubMsg(msg);
				
				// track the selection of the search suggestion by the user
				if (SrchSuggWebPart.Relevance && SrchSuggWebPart.Relevance.recordSelection) {
					SrchSuggWebPart.Relevance.recordSelection(srchTrkInfo.usr.slctdTxt, srchTrkInfo.usr.entryTxt);					
				}						
		    }
		});
	    
	    
	    /*
	     * <summary>
	     * Gets the LI from the passed in text,
	     * highlights it and updates the input
	     * box text.
	     * </summary>
	     * 
	     * NOTE: TODO I think the input text should be updated by the input
	     * so, container.Selected.after(input.update)
	     * <param name="text">
	     * Suggestion to highlight and text to update.
	     * </param>"
	     */
	    container.Selected = Emitter(
		function(text, noUpdate){
		    text = text.toLowerCase(); //canonicalize the input text value because fasttrack names have caps.
		    var target = getLI(text);
		    Cmn.AddCls(target, SLCTD_CLS_NM);
		    
		    if (noUpdate){
			//do nothing
		    } else {
			input.UpdateValue(text);						 
		    }
		    
		}, container);
	        
	    
	    /*
	     * <summary>
	     * Always close the container on mouseup
	     * </summary>
	     */
	    container.Click
		.Do(
		    function(event){
			Cmn.PreventDeflt(event);
			container.Close();
		    }
		);
	    
	    
	    /*
	     * <summary>
	     * Mousedown event. Does dispatch to the right
	     * function:
	     * 1. Close button -- close
	     * 2. A suggestion -- user selected function.
	     * </summary>
	     * <param name="event">
	     * mouse down event object
	     * </param>"
	     */
	    container.MouseDown
		.Do(
		    function (event) {
				//Capture the user input before it gets changed to the suggestion's text
		        var usrInpt = input.value; 
				
			    var target = Cmn.GetEvntTarget(event);
			    Cmn.PreventDeflt(event);
			
			    if (target === mFirstLI ||
			        target === mCloseButton){
			        container.CloseButton();			   			    
			    } else {
			        var position = getSuggPositionByLi(target, container);
			        container.UserSelected(textFromLI(target, container, position), position, "clickSugg", null, target);
			    }
		    });
	    
	    
	    /*
	     * <summary>
	     * Mouseover event. Simply highlight anything
	     * we go over. Need this for old browsers that
	     * don't do the hover pseudo class.
	     * </summary>
	     */
	    container.MouseOver
		.Do(
		    function(event){
			Cmn.PreventDeflt(event);
			var target = Cmn.GetEvntTarget(event);
			container.RemoveAllHighlights();
			//don't highlight the close button
			if (target === mCloseButton ||
			    target === mLastLI){
			    //do nothing
			} else {
			    container.Highlight(target); 
			}
		    }
		);
	    
	    /*
	     * <summary>
	     * On mouseout, remove highlights and close the
	     * suggestions after a standard delay.
	     * </summary>
	     */
	    container.MouseOut
		.Do(
		    function(event){
			container.RemoveAllHighlights();
			container.Close(CLOSE_DELAY);
		    }
		);
	    
	    
	    /*
	     * <summary>
	     * Cancel any delayed closes.
	     * </summary>
	     */
	    container.CancelClose = function(){
		clearTimeout(mCloseTimeout); 
	    };
	    
	    
	    /*
	     * <summary>
	     * Cancel all delays, (selections and close)
	     * </summary>
	     */
	    container.CancelDelays = function(){
		container.CancelClose();
		container.CancelUserSelection();
	    };
	    
	    
	    /*
	     * Cancel any delayed closing on all of these events.
	     */
	    container.Selected.Before(container.CancelDelays);
	    container.MouseOver.Do(container.CancelDelays);
	    
	    
	    container.IsOpen = function(){
		return !closed;
	    };
	    
	    
	    container.IsClosed = function(){
		return closed; 
	    };
	    
	    
	    /*
	     * <summary>
	     * Create the markup that we will insert into the
	     * suggestions box.
	     * </summary>
	     * <param name="results">
	     * An array of strings that are suggestions.
	     * </param>	 
	     */
	    container.GenMarkup = function(results){
		var markup = header;
		
		ForEach(results, function(result){
			    markup += '<li class="suggestion">' + result + "</li>";
			});
		
		markup += footer;
		
		return markup;
	    };
	    
	    
	    
	    /*
	     * <summary>
	     * Opens the container if it's closed. Basically set it
	     * up for animation, either css3 or animator.
	     * </summary>
	     * <param name="dimensions">
	     * This is a dimensions object that contains height and width properties
	     * </param>"
	     */
	    container.Open = Emitter(
		function(dimensions){
		    if (this.IsClosed()){
			closed = false;
			Cmn.SetStyle(outer, "height", "0px");
			outer.style.display = "block";
			var msg = new McMaster.MsgMgrMsgs.SrchSuggCntnrExpanded(mMsgHdr);
			McMaster.MsgMgr.PubMsg(msg);
		    }
		    this.AnimateOpen(dimensions);
		}, container);
	    
	    
	    
	    /*
	     * <summary>
	     * Closes the box.
	     * </summary>
	     * <param name="delay">
	     * This is optional. If left out it closes immediately.
	     * </param>"
	     */
	    container.Close = Emitter(
		function(delay){
		    var me = this;
		    container.CancelClose();
		    var close = function(){
			if (me.IsOpen()){
			    closed = true;
			    me.FocusedLI = null;
			    me.RemoveAllHighlights();
			    me.AnimateClose();
			}
		    };
		    if (delay){
			mCloseTimeout = setTimeout(close, delay);
		    } else {
			close();
		    }
		}, container);
	    
	    container.CloseButton = Emitter(container.Close);
	    
	    
	    /*
	     * <summary>
	     * Creates a timeout to select something later.
	     * </summary>
	     * <param name="">
	     * </param>"
	     */
	    container.DelayedUserSelection = function(){
		if (mUserSelectTimeout){
		    container.CancelUserSelection();
		};
		mUserSelectTimeout = setTimeout(function(){
						    var target = container.GetHighlighted();
						    //send implicitly selected as true for webreports. we track all calls
						    // to userselected except from the delayed user selection.
						    var position = getSuggPositionByLi(target, container);
						    container.UserSelected(textFromLI(target, container, position), position, "implicit", IMPLICITLY_SELECTED, target);
						    container.Close(CLOSE_DELAY);
						}, USER_SELECT_DELAY);
		
	    };
	    
	    container.CancelUserSelection = function(){
		clearTimeout(mUserSelectTimeout);
	    };
	    
	    
	    /*
	     * <summary>
	     * Either starts the animation sequence from the library
	     * or just sets a height and let's css3 do its thing.
	     * </summary>
	     * <param name="dimensions">
	     * An object with height and width properties.
	     * </param>"
	     */
	    container.AnimateClose = Emitter(
		function(){
		    if (Cmn.Html5.HasCssTransitions()){
			clearTimeout(mAnimateTimeout);
			mAnimateTimeout = setTimeout(container.AnimationComplete, 200); 
			Cmn.SetStyle(outer, "height", "0px");
		    } else {
			animator.seekTo(0);						 
		    }
		}, container);
	    
	    
	    /*
	     * <summary>
	     * Same as animate close, just in the opposite
	     * direction.
	     * </summary>
	     * <param name="dimensions">
	     * An object with height and width properties.
	     * </param>"
	     */
	    container.AnimateOpen = Emitter(
		function(dimensions){
		    
		    //set the final height for the animation
		    heightSubject.to = parseFloat(dimensions.height);
		    
		    if (Cmn.Html5.HasCssTransitions()){
			Cmn.SetStyle(outer, "height", dimensions.height + "px");
			//this timeout is based on the animation time set in the CSS
			clearTimeout(mAnimateTimeout);
			mAnimateTimeout = setTimeout(container.AnimationComplete, 200); 
		    } else {
			animator.seekTo(1);						 
		    }
		    
		}, container);
	    
	    
	    /*
	     * <summary>
	     * Called when the animation is done. We set the
	     * display to none, otherwise we still see the border
	     * of the suggestions bocx. We also publish a
	     * message for backwards compatability (this was
	     * done in the old search suggestions).
	     * </summary>
	     * <param name="">
	     * </param>"
	     */
	    container.AnimationComplete = Emitter(
		function(){
		    if (closed){
			outer.style.display = "none";
			
			if (input.value.length < MIN_SEARCH_LENGTH) {
			    // Clear cached results because the suggestions have been collapsed with a query text that's too short
			    // This usually happens when a customer backspaces to reset and search for something else
			    // Publish search suggestions state reset message
			    var msg = new McMaster.MsgMgrMsgs.SrchSuggStReset(mMsgHdr);
			    McMaster.MsgMgr.PubMsg(msg);
			} else {
			    var msg = new McMaster.MsgMgrMsgs.SrchSuggCntnrCollapsed(mMsgHdr);
			    McMaster.MsgMgr.PubMsg(msg);
			}
		    } 
		    
		    
		}, container);
	    animator.options.onComplete = container.AnimationComplete;
	    
	    
	    /*
	     * <summary>
	     * Insert the markup. Set instance variables
	     * to new reference new dom elements.
	     * </summary>
	     * <param name="markup">
	     * </param>"
	     */
	    container.InsertMarkup = Emitter(
		function(markup){
		    container.elem.innerHTML = markup; 
		    mFirstLI = Cmn.GetObj("ac-hd");
		    mLastLI = Cmn.GetObj("ac-ft");
		    mCloseButton = mFirstLI.firstChild.firstChild;
		}, container);
	    
	    
	    /*
	     * <summary>
	     * You will want to call this only after you have inserted
	     * the newly generated markup. Otherwise it will
	     * measure whatever is currently in the DOM, which
	     * might not be what you want.
	     * </summary>
	     */
	    container.SetDimensions = Emitter(
		function(){
		    var dimensions = getDimensions(outer);
		    
		    Cmn.SetStyle(container.outerDiv, "width", dimensions.width + "px");
		    
		    return dimensions;
		}, container);
	    
	    
	    /*
	     * <summary>
	     * Highlight the next element in the list. Either
	     * the first, last or next to the currently highlighted
	     * LI.
	     * </summary>
	     * 
	     * NOTE: There is a delayed user selection
	     * after we highlight something. Added that
	     * here so I could call Highlight on mouseover without
	     * initiating a user selection.
	     * 
	     */
	    container.HighlightNext = Emitter(
		function(){
		    var highlighted = container.GetHighlighted(),
		    termToHighlight = null;
		    container.RemoveAllHighlights();
		    
		    if (highlighted){
			if (highlighted.nextSibling === mLastLI){
			    termToHighlight = mFirstLI.nextSibling;
			    
			} else {
			    termToHighlight = highlighted.nextSibling;
			}
		    } else {
			termToHighlight = mFirstLI.nextSibling;
		    }
		    
		    container.FocusedLI = termToHighlight;
		    container.Highlight(termToHighlight);
		    container.DelayedUserSelection();
		    
		}, container);
	    
	    
	    /*
	     * <summary>
	     * Same as HighlightNext, just the opposite.
	     * </summary>
	     */
	    container.HighlightPrevious = Emitter(
		function(){
		    var highlighted = container.GetHighlighted(),
		    termToHighlight = null;
		    container.RemoveAllHighlights();
		    
		    if (highlighted){
			if (highlighted.previousSibling === mFirstLI){
			    termToHighlight = mLastLI.previousSibling;
			} else {
			    termToHighlight = highlighted.previousSibling;
			}
		    } else {
			termToHighlight = mLastLI.previousSibling;
		    }
		    
		    container.FocusedLI = termToHighlight;
		    container.Highlight(termToHighlight);
		    container.DelayedUserSelection();
		}
	    );
	    
	    
	    
	    container.Empty = function(){
		return !container.NotEmpty();
	    };
	    
	    
	    /*
	     * <summary>
	     * If it's empty, the innerHTML will be an empty string which
	     * is false.
	     * </summary>
	     * <param name="">
	     * </param>"
	     */
	    container.NotEmpty = function(){
		return !!container.elem.innerHTML;
	    };
	    
	    
	    
	    /*************************************************************
	     * Private functions
	     */
	    
	    /*
	     * <summary>
	     * Given a number, return min if it's less than min,
	     * max if it's greater or num if it's "between"
	     * </summary>
	     * <param name="">
	     * </param>"
	     */
	    var between = function(min, max, num){
		
		if (num < min){
		    return min;
		} else if (num > max) {
		    return max;
		} else {
		    return num;
		}
		
	    },
	    
	    
	    /*
	     * <summary>
	     * Given some text, quickly find the index
	     * of where it is in the suggestions box.
	     * </summary>
	     * <param name="text">
	     * suggestion to look for.
	     * </param>
	     */
	    getSuggestionPosition = function(text){
		//get the position of the term
		
		text = text.toLowerCase(); //canonicalize the input text value because fasttrack names have caps.
		var position;
		for (var i = 0; i < container.Suggestions.length; i++){
		    var sugg = container.Suggestions[i].toLowerCase();
		    if (sugg === text){
			position = i + 1; //add one to account for the first LI in the list
			break;
		    }
		}
		return position;
	    },
	    
	    
	    
	    /*
	     * <summary>
	     * Given suggestion text, find the corresponding LI
	     * </summary>
	     * <param name="text">
	     * suggestion to find
	     * </param>"
	     */
	    getLI = function(text){
		text = text.toLowerCase(); //canonicalize the input text value because fasttrack names have caps.
		var position = getSuggestionPosition(text),
		li = null;
		if (position){
		    li = aclist.childNodes[position];
		} 
		
		return li;
	    },
	    
	    
	    
	    /*
	     * <summary>
	     * This is retained from the original search suggestions. It renders
	     * the suggestions box off screen to get back dimensions to use
	     * for animation.
	     * </summary>
	     * <param name="">
	     * </param>"
	     */
	    getDimensions = function(elem){
		
		var clone = elem.cloneNode(true),
		betweenMinAndMax = between.curry(MIN_WIDTH, MAX_WIDTH),
		dimensions = {};
		
		clone.style.position = "absolute";
		clone.style.left = "0px";
		clone.style.top = "-9000px";
		clone.style.display = "block";
		clone.style.height = "";
		clone.style.width = "";
		
		// Insert the clone into the DOM 
		document.body.appendChild(clone);
		
		
		// Get the dimensions of the clone and adjust for our styling
		// We set the width to the naturally rendered width as long as
		// it fits within our predetermined min and max width.
		dimensions.width = betweenMinAndMax(Cmn.GetWidth(clone));
		Cmn.SetStyle(clone, "width", dimensions.width + "px");
		
		// The height will vary based on the width; get it now
		dimensions.height = Cmn.GetHeight(clone);
		
		//remove the clone from the document
		document.body.removeChild(clone);
		clone = null; //not sure we have to do this...
		return dimensions;
	    };
	    
	    container.GetSuggestionPosition = getSuggestionPosition;			 
	    
	    return container;
	},
	
	
	
	/*
	 * <summary>
	 * This is the highest level object in this module. It combines the input and
	 * container widgets to create the overall dropdown feature.
	 * </summary>
	 * <param name="inputElem">
	 * element of the input box
	 * </param>"
	 * <param name="url">
	 * The url for search suggestions
	 * </param>
	 */
	createDropdown = function(inputElem, url){
	    
	    
	    /*************************************************************
	     * Declarations
	     */
	    
	    //the base dropdown object			 
	    var dropdown = {url: url},

            /* This is set whenever a key is pressed in the input box. The onpropertychange
             * event is used for the .Input event on widgets in internet explorer. The problem
             * in search suggestions is whenever we update the text in the search box we trigger
             * the function as if someone typed, but we want to do something different when someone
             * types and something when we update the input box using javascript.
             * 
             * We check to see if mKeyPressed is true in the input handler, otherwise
             * we don't do anything (in the unless statement).
             */
	    mKeyPressed = false,

	    //input and container widgets
	    input = createInput(inputElem),
	    container =  
		createContainer(
		    createContainerElem(Cmn.GetObj("SrchEntryWebPart_Cntnr")),
		    input),
	    
	    //used for caching when available
	    mLocalStorage = Cmn.Html5.CreateJSONLocalStorage("SearchSuggest"),
	    
	    
	    /*************************************************************
	     * Private functions
	     */
	    
	    
	    /*
	     * <summary>
	     * Create and maintain the ajax connections.
	     * </summary>
	     */
	    async = function(){
		
		var req;
		
		return {
		    Connect: function(url, connection){
			if (req){
			    AbortAjax(req); 
			}
			req = PerformAjax(url, connection);
		    },
		    
		    CancelRequests: function(){
			if (req){
			    AbortAjax(req); 
			}
		    }
		};
	    }(),
	    
	    /*
	     * <summary>
	     * We don't load if they have only typed numbers.
	     * </summary>
	     * <param name="value">
	     * The value in the input box.
	     * </param>"
	     */
	    isAllNumbers = function(value){
		return !!mNumbersRe.test(value);
	    },
	    
	    clearStorageIfStale = function(){
		var webVerTS = McMaster.SesnMgr.GetStVal(McMaster.SesnMgr.StValDefs.WebVerTS.KyTxt()),
		currVerTS = mLocalStorage.Get(WEB_VER_NUM_KEY);
		if (currVerTS !== webVerTS){
		    mLocalStorage.ClearThis(function(){
						mLocalStorage.Set(WEB_VER_NUM_KEY, webVerTS);
					    });
		}
	    };
	    
	    clearStorageIfStale(); //clear the local storage if it's stale
	    
	    
	    //cancel outstanding requests so we don't have timing
	    //issues
	    container.Close.Before(async.CancelRequests);
	    
	    
	    /*************************************************************
	     * Public Functions
	     */
	    
	    //Container and input should be accessible from calling code
	    //so it's easier to hook into search box events.
	    dropdown.Container = container;
	    dropdown.Input = input;
	    dropdown.CancelRequests = async.CancelRequests; //make this a public function for other modules
	    
	    
	    
	    /*************************************************************
	     * Input event handlers
	     * 
	     * These are all of the events on the input box that
	     * we have to handle here since it is dependent on the container.
	     * When we create the input, we don't know about the container.
	     */
	    
	    input.KeyDown
		.Do(function(){
                        mKeyPressed = true;
                        container.CancelClose();
                    });
	    
	    
	    input.KeyDown.UpArrow
		.Do(
		    function(event){
			if (container.IsOpen()){
			    container.HighlightPrevious();
			    Cmn.PreventDeflt(event);
			}
		    }
		);
	    
	    input.KeyUp.RightArrow
		.Do(
		    function(event){
			Cmn.PreventDeflt(event);
			var target = container.GetHighlighted();
			if (target){
			    var position = getSuggPositionByLi(target, container);
			    container.UserSelected(textFromLI(target, container, position), position, "rightKeySlctSugg", null, target);
			    container.Close();
			}
		    }
		);
	    
	    input.Blur
		.Do(
		    function(){
			container.Close();
			container.CancelDelays();
		    });
	    
	    input.KeyDown.Escape
		.Do(
		    function(){
			container.CancelDelays();
			input.Clear();

			/*
			 * blur then focus the element. This is to get
			 * around a firefox bug. Firefox uses the escape key to
			 * cancel autocompletes. When it does it replaces the input
			 * box value with what was previously there. calling blur
			 * then focus causes firefox to change its state so it forgets
			 * what the previous value was and resets it to blank (since
			 * we cleared the input value above).
			 */
			input.elem.blur();
			input.elem.focus();
			container.Close();
		    });
	    
	    
	    /*
	     * <summary>
	     * OnInput listener.
	     * </summary>
	     */				
	    var inputDo = function(event, scope, inpValue){
			container.FocusedLI = null;		

			// Replace invalid characters in the search box
			if (input) input.value = input.value.replace(mInvalidInpCharsRegex,"");				
		
			scope = scope || {}, 
			inpValue = inpValue || input.value; // get value from <input> or passed-in
		
			if (inpValue.length > 0){
				dropdown.Load(inpValue); 
			} else {
				container.Close();
			}
			mKeyPressed = false;
		};
		
	    /*
	     * <summary>
	     * OnInput workaround for IE9+'s buggy backspace behavior. 
		 * See event binding below for details.
	     * </summary>
	     */				
		var inputDoIEWorkaround = function(event) {
			inputDo(event, null, Cmn.GetObj("SrchEntryWebPart_InpBox").value); // hack for IE
		};
		
		
	    /*
	     * <summary>
	     * Fire the onInput listener unless the return value is true.
	     * </summary>
	     */		
		var inputUnless = function(event){
			/*
			 * Do the default action unless the keycode is invalid the input legnth is between 1 
			 * and less than the min_search_length. We want to handle a length of zero and
			 * everything above and including the min_search_lenght.
			 * 
			 */
			var shouldNotLoad = (input.value.length < MIN_SEARCH_LENGTH && input.value.length > 0) 
			    || (input.value.length > 0 && input.value.Trim().length == 0)
			    || shouldIgnore(event.keyCode)
			    || isAllNumbers(input.value)
                            || !mKeyPressed;

			mKeyPressed = false;
			return shouldNotLoad;
		}
		
	    /*
	     * <summary>
	     * Update suggestions box for every valid keystroke.
	     * </summary>
	     */
	    input.Input
			.Do(inputDo)
			.Unless(inputUnless);

	    /*
	     * <summary>
	     * Handle buggy IE9+ behavior for the backspace key
		 * See: http://help.dottoro.com/ljufknus.php
	     * </summary>
	     */			
		if (Cmn.IsIE() && parseInt(Cmn.GetBrowserVer()) >= 9) {
			input.KeyUp.Backspace
				.Do(inputDoIEWorkaround)
				.Unless(inputUnless);
        }		
	    
	    
	    input.KeyDown.DownArrow
		.Do(
		    function(event){
			if (container.IsClosed() &&
			    input.value.length > 0){
			    dropdown.Load(input.value);
			    
			} else if(container.IsOpen()){
			    container.HighlightNext();
			}
			Cmn.PreventDeflt(event);
		    }
		);
	    
	    
	    /*
	     * <summary>
	     * If there is no text that the user has selected,
	     * we just fall back to the search entry webpart.
	     * otherwise we cancel the event from bubbling
	     * up and send a request.
	     * </summary>
	     */
	    input.KeyDown.Enter
		.Do(
		    function(event){
			
			if (container.FocusedLI){
			    Cmn.PreventDeflt(event);
			    var position = getSuggPositionByLi(container.FocusedLI, container);
			    container.UserSelected(textFromLI(container.FocusedLI, container, position), position, "enterKeySlctSugg", null, container.FocusedLI);
			} 
			container.Close();
		    }
		);
	    
	    
	    
	    dropdown.Load = Emitter(
		function(query){
                    query = query.toLowerCase(); //to improve CDN/akamai cache hit ratio
		    if (mLocalStorage.HasKey(query)){
			dropdown.LoadCached(query);
		    } else {
			dropdown.LoadUncached(query);
		    }
		    
		}, dropdown);
	    
	    
	    
	    dropdown.LoadCached = Emitter(
		function(query){
		    var response = mLocalStorage.Get(query); 
		    if (response){
			this.RenderList(response);
			this.SendRequest(query, 
					 
					 //just update the cache, don't render the
					 //list, we've already done that from cache.
					 //this is the mechanism we use to insure users
					 //only ever get a stale cached response once.
					 dropdown.UpdateCache);
			
		    }
		    
		}, dropdown);
	    
	    
	    
	    dropdown.LoadUncached = Emitter(
		function(query){
		    //render and update the cache in handleResponse.
		    this.SendRequest(query, dropdown.HandleResponse);
		}, dropdown);
	    
	    
	    /*
	     * <summary>
	     * Sends a request to the server to grab suggestions.
	     * You can override the default response handler with whatever.
	     * The handler is passed three paramters, the query string,
	     * suggestions in a list, and the full response object.
	     * </summary>
	     * <param name="query">
	     * String to get suggestions for.
	     * </param>
	     * <param name="success">
	     * Optional function for handling response from the server. Default
	     * just updates content.
	     * </param>
	     */
	    dropdown.SendRequest = Emitter(
		function(query, handler){
		    
		    var url = dropdown.url + escape(query),
		    connection = {
			success: function(response){
			    /*
			     * On occasion, if the timing is right, we will
			     * get a canceled request with 200 OK status and
			     * no response. The YUI library just stops it right
			     * after it gets the headers. So the success function
			     * is still called but with an empty response. We
			     * catch this scenario here.
			     */
			    if (response){
				response = Cmn.ParseJSON(response).SrchSuggRsltsDat;
				
				/*
				 * All success functions are passed these three
				 * values.
				 */
				handler(query, response);
			    }
			}
		    };
		    async.Connect(url, connection);
		    
		}, dropdown);
	    
	    
	    /*
	     * <summary>
	     * Handles responses sent back from the server and
	     * updates the suggestions box.
	     * </summary>
	     * <param name="query">
	     * The query string that triggered the request.
	     * </param>
	     * <param name="response">
	     * The response object from the server as JSON.
	     * </param>
	     */
	    dropdown.HandleResponse = Emitter(
		function(query, response){
		    this.RenderList(response);
		    this.UpdateCache(query, response);
		}, dropdown);
	    
	    
	    /*
	     * <summary>
	     * Given a list of suggestions, renders markup for
	     * the suggestions box, updates the box and then
	     * animates the box.
	     * </summary>
	     * <param name="suggestions">
	     * </param>
	     */
	    dropdown.RenderList = Emitter(
		function(response){
		    
			var coll = response.SrchSuggColl;
			// if relevance module is present, use it to re-sequence suggestions
			if (SrchSuggWebPart.Relevance && SrchSuggWebPart.Relevance.getResequencedColl) {
				coll = SrchSuggWebPart.Relevance.getResequencedColl(response.SrchSuggColl);
			}
			
			// record whether the order of the list actually changed
			mLastSrchSuggLoadWasResortedDueToRecency = !areIdenticalArrays(response.SrchSuggColl, coll);
			
		    var suggestions = Pluck(coll, "Nm");
		    container.SuggestionsDat = coll;
		    container.Suggestions = suggestions;
		    if (suggestions.length > 0) {								
				var markup = container.GenMarkup(suggestions);
				container.InsertMarkup(markup);
				var dimensions = container.SetDimensions();
				container.Open(dimensions);
				container.Close(CLOSE_DELAY);
		    } else {
				container.Close();
		    }
		}, dropdown);
	    
	    
	    /*
	     * <summary>
	     * Takes the response and updates the local
	     * cache, and that's it.
	     * </summary>
	     * <param name="">
	     * </param>"
	     */
	    dropdown.UpdateCache = Emitter(
		function(query, response){
		    mLocalStorage.Set(query, response);
		}, dropdown);
	    
	    
	    dropdown.GetSuggestionPosition = container.GetSuggestionPosition;
	    
	    return dropdown;
	};
	
	var areIdenticalArrays = function(arr1, arr2) {
		if (arr1.length !== arr2.length) return false;
		
		var len = arr1.length;
		
		for (var i=0; i<len; i++) {
			if (arr1[i] !== arr2[i]) return false;
		}
	
		return true; // all the tests passed--the arrays are identical
	};
	
	/*
	 * These two functions are used for loading the search suggestions
	 * webPart at the right time.
	 */
	var pubWebPartLoadedMsg = function (webPartCntnrNm) {
	    var msg = new McMaster.MsgMgrMsgs.WebPartLoaded(mMsgHdr, webPartCntnrNm);
	    McMaster.MsgMgr.PubMsg(msg);
	},
	
	/*
	 * Handles the WebPartLoaded message from the Search Entry Web Part
	 * and adds Search Suggestions functionality to the input box
	 * in the Search Entry Web Part.
	 * Does not decorate the Search Entry Web Part input box with Search Suggestions
	 * functionality if the cookie for a customer's predictive search preference
	 * indicates that this feature should be disabled.
	 */
	hndlWebPartLoaded = function (msgObj) {
	    var msgCntxt = msgObj.MsgHdr().CntxtNm;
	    if (msgCntxt === McMaster.MsgMgr.CntxtNms.SRCH_ENTRY_WEB_PART) {
		if (Cmn.GetCookieVal(SRCH_SUGG_PREF_COOKIE_NM) === SRCH_SUGG_DISABLED_COOKIE_VAL_TXT) {
		    // Do nothing
		    // The customer preference is to not receive Search Suggestions
		} else {
		    
		    if (Cmn.Html5.HasCssTransitions()){
			Cmn.AddCls(document.documentElement, "csstransitions");						 
		    }
		    
		    var webPartCntnrNm = msgObj.MsgPayload().CntnrNm;
		    
		    // Add Search Suggestions to the input box in the Search Entry Web Part's DIV container
		    this.SrchSuggWebPart = createDropdown(
			Cmn.GetObj("SrchEntryWebPart_InpBox"), 
			"/WebParts/SrchRsltWebPart/SrchSuggWebPart.aspx?srchargtxt=");
		    
		    // Publish WebPartLoaded for Search Suggestions
		    pubWebPartLoadedMsg(webPartCntnrNm);
		}
	    }
	};
	
	//----------------------------------------------------------
	// Determines how the customer selected the search suggestion
	//----------------------------------------------------------
	var getNavTyp = function(slctnTyp) {
		
		var navTyp = "";
		
		if (slctnTyp == "rightKeySlctSugg" || slctnTyp == "enterKeySlctSugg") {
			navTyp = SrchTrkr.UsrActTyps.KEY;
		} else if (slctnTyp == "clickSugg") {
			navTyp = SrchTrkr.UsrActTyps.SLCT;
		} else if (slctnTyp == "autoSlct") {
			navTyp = SrchTrkr.UsrActTyps.AUTOSLCT;
		} else {
			navTyp = "UNKNOWN";
		}        

		return navTyp
	};
	
	McMaster.MsgMgr.AddSubscriber(McMaster.MsgMgrMsgs.WebPartLoaded, hndlWebPartLoaded);
	
	
	//starts as an empty object. Remains empty if entry webpart never loads.
	return {};
    };
}


this.FastTrackLoader||(FastTrackLoader=new function(){var g=this;g.CreateHeaders=function(){return new McMaster.MsgMgr.Hdr(McMaster.MsgMgr.CntxtNms.SRCH_RSLTS,"1.0")};g.FastTrack=function(a,c,d){d=d||[];c=c||g.CreateHeaders();var e=g.CreateResultObj(a),b=McMaster.SesnMgr.GetStVal(McMaster.SesnMgr.StValDefs.PerfTrackingBypassFastTrkInd.KyTxt());if(null===b||!1==b){var b=McMasterCom.Nav.GetTopFrame(),f=new b.PerfTracker.EvntPayload;"undefined"!=typeof a&&a.Nm&&f.Add("srchRsltNm",a.Nm);"undefined"!=
typeof e.SrchRsltId&&e.SrchRsltId&&f.Add("srchRsltId",e.SrchRsltId);b=McMasterCom.Nav.GetTopFrame();new b.PerfTracker.Evnt(b.PerfTracker.EvntNms.FastTrkBgn,b.PerfTracker.PgCntxtNms.DynCntnt,f)}else McMaster.SesnMgr.SetStVal(McMaster.SesnMgr.StValDefs.PerfTrackingBypassFastTrkInd.KyTxt(),!1);if("undefined"!=typeof e.SrchRsltId&&e.SrchRsltId){SrchRsltWebPart.IsAutoExpandSrchRslts(a)?(Shell.ExpandSecondaryContent(),WebToolsetWebPart.ResizeActive()):McMaster.MsgMgr.PubMsg(new McMaster.MsgMgrMsgs.CollapseSecondaryContent);
McMaster.SesnMgr.SetStVal(McMaster.SesnMgr.StValDefs.SlctdSrchRsltId.KyTxt(),e.SrchRsltId);McMaster.SesnMgr.RemStVal(McMaster.SesnMgr.StValDefs.DynamicPagePrsnttnStats.KyTxt());McMaster.SesnMgr.RemStVal(McMaster.SesnMgr.StValDefs.DynamicContentSesnSt.KyTxt());!0!=McMaster.SesnMgr.GetStVal(McMaster.SesnMgr.StValDefs.SysSlctdSpecFiltersInd.KyTxt())&&(McMaster.SesnMgr.RemStVal(McMaster.SesnMgr.StValDefs.SpecUsrInps.KyTxt()),McMaster.SesnMgr.RemStVal(McMaster.SesnMgr.StValDefs.SlctdSrchRsltFilters.KyTxt()));
b=SpecSrchInp.Get();b.RemAllProdFilters();for(f=0;f<d.length;f++)b.AddProdAttr(d[f].AttrID),b.AddProdVal(d[f].AttrID,d[f].AttrValId,"PreSlctd");b.mUsrInps.SpecSrchFilters&&b.UpdateSession()}else McMaster.SesnMgr.RemStVal(McMaster.SesnMgr.StValDefs.SlctdSrchRsltId.KyTxt());McMaster.TxtInterp.Defs.IntermediatePg.VldtIntermediatePageNm(e.SrchTrm)&&0===a.PreSlctdVals.length?McMaster.MsgMgr.PubMsg(new McMaster.MsgMgrMsgs.IntermediatePageSlctd(c,e.SrchTrm)):McMaster.MsgMgr.PubMsg(new McMaster.MsgMgrMsgs.SrchRsltSlctd(c,
a,e.SrchTrm))};g.LoadDynamicContentOnly=function(a,c,d){d=d||[];var e=g.CreateHeaders(),b=McMaster.SesnMgr.GetStVal(McMaster.SesnMgr.StValDefs.PerfTrackingBypassFastTrkInd.KyTxt());if(null===b||!1==b){var b=McMasterCom.Nav.GetTopFrame(),f=new b.PerfTracker.EvntPayload;"undefined"!=typeof c&&c&&f.Add("srchRsltNm",c);"undefined"!=typeof a&&a&&f.Add("srchRsltId",a);b=McMasterCom.Nav.GetTopFrame();new b.PerfTracker.Evnt(b.PerfTracker.EvntNms.FastTrkBgn,b.PerfTracker.PgCntxtNms.DynCntnt,f)}else McMaster.SesnMgr.SetStVal(McMaster.SesnMgr.StValDefs.PerfTrackingBypassFastTrkInd.KyTxt(),
!1);if("undefined"!=typeof a&&a){SrchRsltWebPartOvrd.IsAutoExpandSrchRslt(c)?(Shell.ExpandSecondaryContent(),WebToolsetWebPart.ResizeActive()):McMaster.MsgMgr.PubMsg(new McMaster.MsgMgrMsgs.CollapseSecondaryContent);McMaster.SesnMgr.SetStVal(McMaster.SesnMgr.StValDefs.SlctdSrchRsltId.KyTxt(),a);McMaster.SesnMgr.RemStVal(McMaster.SesnMgr.StValDefs.DynamicPagePrsnttnStats.KyTxt());McMaster.SesnMgr.RemStVal(McMaster.SesnMgr.StValDefs.DynamicContentSesnSt.KyTxt());!0!=McMaster.SesnMgr.GetStVal(McMaster.SesnMgr.StValDefs.SysSlctdSpecFiltersInd.KyTxt())&&
(McMaster.SesnMgr.RemStVal(McMaster.SesnMgr.StValDefs.SpecUsrInps.KyTxt()),McMaster.SesnMgr.RemStVal(McMaster.SesnMgr.StValDefs.SlctdSrchRsltFilters.KyTxt()));a=SpecSrchInp.Get();a.RemAllProdFilters();for(b=0;b<d.length;b++)a.AddProdAttr(d[b].AttrID),a.AddProdVal(d[b].AttrID,d[b].AttrValId,"PreSlctd");a.mUsrInps.SpecSrchFilters&&a.UpdateSession()}else McMaster.SesnMgr.RemStVal(McMaster.SesnMgr.StValDefs.SlctdSrchRsltId.KyTxt());McMaster.SesnMgr.SetStVal(McMaster.SesnMgr.StValDefs.SlctdSrchRsltTxt.KyTxt(),
c);McMaster.TxtInterp.Defs.IntermediatePg.VldtIntermediatePageNm(c)&&0===d.length?McMaster.MsgMgr.PubMsg(new McMaster.MsgMgrMsgs.IntermediatePageSlctd(e,c)):(McMaster.SesnMgr.SetStVal(McMaster.SesnMgr.StValDefs.ChooseSpecsRsltnOvrdInd.KyTxt(),!1),McMaster.MsgMgr.PubMsg(new McMaster.MsgMgrMsgs.DynamicContentSlctd(e)))};g.LoadDynamicContent=function(a){if(a&&a.MsgPayload()){var c,d,e;a.MsgPayload().SrchRsltID&&(c=a.MsgPayload().SrchRsltID);a.MsgPayload().SrchTxt&&(d=a.MsgPayload().SrchTxt);a.MsgPayload().Specs&&
(e=a.MsgPayload().Specs);g.LoadDynamicContentOnly(c,d,e)}};g.CreateResultObj=function(a){var c={};a&&(a.RsltInfo&&(c=a.RsltInfo),c.SrchTrm=a.Nm);return c};McMaster.MsgMgr.AddSubscriber(McMaster.MsgMgrMsgs.SrchSuggSlctd,g.LoadDynamicContent,McMaster.MsgMgr.PRIORITY.HIGH);return g});


if (this.SrchSuggWebPart.Relevance) {
    // Already defined
} else {
    	
	McMaster.MsgMgr.AddSubscriber(McMaster.MsgMgrMsgs.WebPartLoaded, 
	function (msgObj) {
			
		var msgCntxt = msgObj.MsgHdr().CntxtNm;
		if (msgCntxt === McMaster.MsgMgr.CntxtNms.SRCH_SUGG) {
		
			SrchSuggWebPart.Relevance = new function () {
			
			/*
			 * This class is responsible for storage of a user's personal history
			 * of search suggestion selections and for personalizing the display
			 * of search suggestions based on this history.
			 */	
			
			
			/*************************************************************
			 * Declarations
			 */
			 		 
				var Util = Cmn.Utilities,
				Pluck = Util.Pluck,		
				InArray = Util.InArray,
				mLocalStorage = Cmn.Html5.CreateJSONLocalStorage("SearchSuggest"),
				STORAGE_KEY = "personalhistory",
				mHistoryObj = mLocalStorage.Get(STORAGE_KEY) || { selectionHistory: {} }, // if empty, initialize js obj
				THRESHOLD_MS = 24 * 60 * 60 * 1000; // 1 day

			
			/*************************************************************
			 * friend functions
			 */
			 
				// Record the selection of a search suggestion
				// Inputs:
				// slctdSuggTxt - the text of the selection that was explicitly chosen by the user		
				// inpTxt - the text typed by the user
				this.recordSelection = function(slctdSuggTxt, inpTxt) {
					if (slctdSuggTxt) saveSelection(slctdSuggTxt, inpTxt);				
				};
				
				// Given a collection of search terms, returns a re-sequenced collection
				// of the same length where terms with which the customer has recently interacted
				// are listed first.
				//
				// coll - a list of search terms. The order of this array is the default order
				//        of the search engine.
				this.getResequencedColl = function(coll) {
					// if recency-based re-sequencing has been explicitly disabled, 
					// just return the collection.
					if (Cmn.GetQSVal("reorder_suggestions") === "false") return coll;
				
					// if not feature-activated, just return the collection
					if (!McMaster.SesnMgr.GetStVal(McMaster.SesnMgr.StValDefs.SrchSuggRecencyReorderInd.KyTxt())) return coll;
				
					// else, re-sequence
					var newColl = [],
					nms = Pluck(coll, "Nm"),
					matches = getMatches(nms);
					
					// construct new order
					
					// first pass--previously selected stuff
					// todo resequence based on recency
					var len = coll.length;
					for (var i=0; i<len; i++) {
						if (InArray(matches, coll[i].Nm)) newColl.push(coll[i]);
					}
					
					// second pass--stuff that wasn't previously selected
					// keep the original order
					for (var i=0; i<len; i++) {
						if (!InArray(matches, coll[i].Nm)) newColl.push(coll[i]);
					}					
					
					return newColl;
				};

				
			/*************************************************************
			 * private functions
			 */
			 
				// Saves search suggestion selection information to local storage.
				//
				// slctdSuggTxt - the text of the selection that was 
				//   explicitly chosen by the user		
				// inpTxt - the text typed by the user	 
				var saveSelection = function(slctdSuggTxt, inpTxt) {
					// initialize history entry for selection, if necessary
					if (!mHistoryObj.selectionHistory[slctdSuggTxt]) mHistoryObj.selectionHistory[slctdSuggTxt] = []; // empty array
					
					// record timestamp and associated entry text for selected suggestion
					// format is:
					//
					//   {
					//     ts: [timestampInMs],
					//     inpTxt: [input text the customer entered before making the selection]
					//   }					
					mHistoryObj.selectionHistory[slctdSuggTxt].push({
						ts: new Date().getTime(), // now -- the time of selection
						inpTxt: inpTxt // the text entered by the user into the search box
					});	

					mLocalStorage.Set(STORAGE_KEY, mHistoryObj);
				};
			
				// Returns the subset (if any) of the passed-in search term collection
				// that was recently selected by the customer.
				// 
				// If the passed-in collection contains 5 search terms, and the customer
				// recently interacted with the third term, this method returns a list
				// of 1.
				//
				// If more than 1 member of the passed-in collection was recently selected
				// by the customer, this method returns the subset in the same order as the
				// passed-in collection.
				var getMatches = function(coll) {
					var len = coll.length, 
					matches = [];
					
					for (var i=0; i<len; i++) {
						var term = coll[i],
						selectionColl = mHistoryObj.selectionHistory[term];						
						if (selectionColl && isRecentMatch(selectionColl)) matches.push(term);
					}
					
					return matches;						
				};
				
				// Returns true if a selection in the passed-in collection was recent enough
				// to pass the recency threshold.
				//
				// selectionColl - the array of selections (timestamp and inpTxt) associated with
				//                 a search term
				var isRecentMatch = function(selectionColl) {
					var now = new Date();
					
					for (var i=0; i<selectionColl.length; i++) {
						if (now.getTime() - selectionColl[i].ts <= THRESHOLD_MS) {
							// selection was recent enough
							return true;
						}
					}
					
					// nothing recent enough
					return false;
				};
			
			} 
		
		}
	});
}

this.SrchSuggWebPart.FastTrack||McMaster.MsgMgr.AddSubscriber(McMaster.MsgMgrMsgs.WebPartLoaded,function(k){k.MsgHdr().CntxtNm===McMaster.MsgMgr.CntxtNms.SRCH_SUGG&&(SrchSuggWebPart.FastTrack=new function(){var b=this,k=FastTrackLoader,g=Cmn.Utilities,p=g.Assert,q=g.Head,e=g.KeyCodes,l="",n=null,d=SrchSuggWebPart.Container,m=SrchSuggWebPart.Input;SrchSuggWebPart.RenderList.After(function(a){if(a.FastTrackInd){var c=a.FastTrackNm,f=a.FastTrackDynamicInd,h=q(d.Suggestions);if(c&&(c.toLowerCase()===
h.toLowerCase()||a.SrchSuggColl[0].Specs&&0<a.SrchSuggColl[0].Specs.length))h=a.SrchSuggColl[0].Specs&&0<a.SrchSuggColl[0].Specs.length?h:c,d.RemoveAllHighlights(),c!==l&&b.FastTrackLater(r.curry(h,f,a))}});d.Close.After(function(){l=""});b.FastTrackLater=function(a){b.CancelFastTrack();d.CancelDelays();n=b.mUsrSelectionInd?setTimeout(a,850):b.mLastInpKyCd===e.Backspace?setTimeout(a,b.UserState.FAST_TRACK_FRM_BKSPC_DELAY_MS_NBR):setTimeout(a,2E3)};b.CancelFastTrack=function(){clearTimeout(n)};m.KeyDown.Do(function(a){b.CancelFastTrack()});
d.Selected.Before(b.CancelFastTrack);d.MouseOver.Do(b.CancelFastTrack);m.Blur.Do(b.CancelFastTrack);m.KeyUp.Enter.Do(function(){d.Close();b.CancelFastTrack()});var r=function(a,c,f){SecondaryContentCoordinator.Init();p(a,"You have to call this function with a fasttrack name");l=a;d.Selected(a,!0);var b=new McMaster.MsgMgr.Hdr(McMaster.MsgMgr.CntxtNms.SRCH_SUGG),b=new McMaster.MsgMgrMsgs.SrchTxtChged(b,0,a,!0,!0);SrchSuggWebPart.CancelRequests();McMaster.MsgMgr.PubMsg(b);c?(k.LoadDynamicContentOnly(f.SrchSuggColl[0].SrchRsltId,
a,f.SrchSuggColl[0].Specs),c=new SrchTrkr.SrchDat({usr:SrchTrkr.UsrActTyps.AUTOSLCT}),c.usr.srcNm="SrchSuggWebPart.FastTrack",c.usr.elemTyp=SrchTrkr.ElemTyps.SRCH_SUGG,c.usr.slctdTxt=decodeURIComponent(a),f.SrchArgTxt&&(c.usr.entryTxt=decodeURIComponent(f.SrchArgTxt)),c.Trk()):d.UserSelected(a,!0,"autoSlct");d.Close(1E3)};b.UserState=new function(){var a=this;a.mLastArrowTS=null;a.mLastInpKyCd=null;a.mMouseOverDropdown=!1;a.mUsrSelectionInd=!1;a.mLastKeystrokeTS=null;a.FAST_TRACK_FRM_BKSPC_DELAY_MS_NBR=
2E3;a.shouldClose=function(){var c=!1;return c=null==SrchSuggWebPart.Input.value||0===SrchSuggWebPart.Input.value.length?!0:!a.mMouseOverDropdown&&a.keyboardNavAllowsCollapse()&&a.typingAllowsCollapse()};a.mousePreventsClose=function(){return a.mMouseOverDropdown&&a.keyboardNavAllowsCollapse()&&a.typingAllowsCollapse()};a.typingAllowsCollapse=function(){var c=2E3<a.timeSinceLastKeyStroke(),b=!0;a.mLastInpKyCd===e.Backspace&&(b=2E3<a.timeSinceLastKeyStroke());return c&&b};a.keyboardNavPreventsCollapse=
function(){return 0>a.timeSinceLastArrow()&&0!=a.timeSinceLastArrow()};a.keyboardNavAllowsCollapse=function(){return!a.keyboardNavPreventsCollapse()};a.timeSinceLastArrow=function(){var c=new Date,b=0;a.mLastArrowTS&&(b=c.getTime()-a.mLastArrowTS.getTime());return b};a.timeSinceLastKeyStroke=function(){var c=new Date,b=0;a.mLastKeystrokeTS&&(b=c.getTime()-a.mLastKeystrokeTS.getTime());return b};d.MouseOver.Do(function(){a.mMouseOverDropdown=!0});d.MouseOut.Do(function(){a.mMouseOverDropdown=!1});
SrchSuggWebPart.Input.KeyUp.Do(function(b){a.mLastInpKyCd=b.keyCode;a.mLastKeystrokeTS=new Date});SrchSuggWebPart.Input.KeyUp.Do(function(){a.mLastArrowTS=new Date}).OnlyIf(function(a){return g.InArray([e.DownArrow,e.UpArrow,e.LeftArrow,e.RightArrow],a.keyCode)})}})});


this.SrchSuggWebPart.WebReports||McMaster.MsgMgr.AddSubscriber(McMaster.MsgMgrMsgs.WebPartLoaded,function(g){if(g.MsgHdr().CntxtNm===McMaster.MsgMgr.CntxtNms.SRCH_SUGG){var b=SrchSuggWebPart,f=function(a){Cmn.TrkAct(a,"srchsugg")},e=function(){var a=!1;return function(){a||(f("srchsuggact=keyboardnavused"),a=!0)}}();SrchSuggWebPart.WebReports=new function(){b.Container.CloseButton.After(function(){f("srchsuggact=cntnrclosed")});b.Input.KeyDown.UpArrow.Do(e);b.Input.KeyDown.DownArrow.Do(e);b.Container.UserSelected.Before(function(a,
d){if(!d){var c;c="srchsuggact=itmslctd&slctdrsltnm="+encodeURIComponent(a);var e=b.GetSuggestionPosition(a);c=c+("&itmslctdidxnbr="+e)+("&origsrchargtxt="+b.Input.value);f(c)}});b.Input.KeyUp.Enter.Do(function(){var a=b.Input.value,d=McMasterCom.Nav.GetTopFrame(),c=new d.PerfTracker.EvntPayload;c.Add("usrEntrdTxt",a);new d.PerfTracker.Evnt(d.PerfTracker.EvntNms.SrchEntryUsrSubmit,d.PerfTracker.PgCntxtNms.DynCntnt,c);McMaster.SesnMgr.SetStVal(McMaster.SesnMgr.StValDefs.PerfTrackingBypassFastTrkInd.KyTxt(),
!0)})}}});


this.SrchRsltWebPart||(SrchRsltWebPart=new function(){var e=this,k=FastTrackLoader,V=function(a){e.ProcssNavReq(a)},h=null,B=0,W=/(^|\s+)Products($|\s+)/i,X=/(^|\s+)Additional($|\s+)/i,p=new CmnColls.HashTable,l=new CmnColls.HashTable,u=new CmnColls.HashTable,n=!1,C=null,g=null,r=!1,K=SrchRsltWebPartOvrd.AutoExpandSearchRslts();e.CurrSrchTxt=function(){return C};e.FastTrack=function(a,b){var c;c=[];var d=McMaster.SesnMgr.GetStVal(McMaster.SesnMgr.StValDefs.SrchSentReqTxt.KyTxt()),d=d?d.TS:0;fastTrackDelay=
5*McMaster.SesnMgr.GetStVal(McMaster.SesnMgr.StValDefs.SrchReqAvgDelay.KyTxt());var v=!1;b?D(a,d,fastTrackDelay,v):(w(a,!0,!1),q(a,c))};e.WebPart_Load=function(a){L(a);McMaster.MsgMgr.PubMsg(new McMaster.MsgMgrMsgs.WebPartLoaded(k.CreateHeaders(),a.CntnrIDTxt))};var L=function(a){n=McMaster.SesnMgr.GetStVal(McMaster.SesnMgr.StValDefs.SrchLoadFrmSesnInd.KyTxt());null==n&&(n=!1);M("/gfx/PlusIcon.gif?version=1","/gfx/MinusIcon.gif?version=1");var b=McMaster.SesnMgr.GetStVal(McMaster.SesnMgr.StValDefs.SrchTxt.KyTxt()),
c=Cmn.Trim(a.ArgTxt);C=c;McMaster.SesnMgr.SetStVal(McMaster.SesnMgr.StValDefs.SrchTxt.KyTxt(),c);McMaster.SesnMgr.SetStVal(McMaster.SesnMgr.StValDefs.SrchCompleteInd.KyTxt(),a.SrchCompleteInd);p.ContainsKy("SecondaryContent")?p.Replace("SecondaryContent",a.RsltSet):p.Add("SecondaryContent",a.RsltSet);l.ContainsKy("SecondaryContent")?l.Replace("SecondaryContent",a.IDTxt):l.Add("SecondaryContent",a.IDTxt);u.ContainsKy("SecondaryContent")?u.Replace("SecondaryContent",a.ArgTxt):u.Add("SecondaryContent",
a.ArgTxt);var d=!1;if(n&&b===c&&(highlightSrchRsltTxt=McMaster.SesnMgr.GetStVal(McMaster.SesnMgr.StValDefs.SlctdSrchRsltTxt.KyTxt())))if(b=E(highlightSrchRsltTxt))x(b),d=!0;var v="object"==typeof a.FastTrackRslt&&null!=a.FastTrackRslt,b=v?a.FastTrackRslt.PreSlctdVals:[];0<b.length&&McMaster.SesnMgr.SetStVal(McMaster.SesnMgr.StValDefs.PreSlctdSpecCntxtNm.KyTxt(),McMaster.MsgMgr.CntxtNms.SRCH_ENTRY_WEB_PART);var f;if(f=v){f=!0;var g=!1,e=a.FastTrackRslt;if(e&&e.RsltInfo&&-1===e.RsltInfo.SrchRsltId&&
a.CoveringUnionSrchRsltNmTxt)for(var k=0;k<a.RsltSet.length;k++)a.RsltSet[k].Nm===a.CoveringUnionSrchRsltNmTxt&&(e=a.RsltSet[k]);a&&(a.TermsUnionSrchRsltNms&&0<a.TermsUnionSrchRsltNms.length&&!a.SlctdUnionSrchRsltId&&a.SlctdUnionSrchRsltNmsTxt&&0==a.SlctdUnionSrchRsltNmsTxt.length&&!a.CoveringUnionSrchRsltNmTxt&&!a.CombineUnionIntermediatePagesInd)&&(g=!0);if(e&&(A(e)||a.AllRsltsSlctdInd||McMaster.TxtInterp.Defs.IntermediatePg.VldtIntermediatePageNm(Cmn.Trim(a.ArgTxt))||a.CombineUnionIntermediatePagesInd)&&
!g)f=!1}f?McMaster.MsgMgr.PubMsg(new McMaster.MsgMgrMsgs.CollapseSecondaryContent):(Shell.ExpandSecondaryContent(),WebToolsetWebPart.ResizeActive());!d&&!n&&(a.ShouldFastTrack&&v?(d=!1,h&&y(h)&&h.RsltInfo.NewArgTxt==c&&(d=!0),w(a.FastTrackRslt,!0,!1,a.SlctdUnionSrchRsltNmsTxt,a.SlctdUnionSrchRsltId),(a.AllRsltsSlctdInd||"about"===a.FastTrackRslt.Nm.toLowerCase().substring(0,5)||!0===d)&&q(a.FastTrackRslt,b),a=Cmn.GetObj("SecondaryContent"),a.scrollTop=0):McMaster.TxtInterp.Defs.IntermediatePg.VldtIntermediatePageNm(c)?
a.FastTrackRslt&&F(a.FastTrackRslt):!1===a.ShouldFastTrack?(McMaster.SesnMgr.SetStVal(McMaster.SesnMgr.StValDefs.SlctdSrchRsltTxt.KyTxt(),c),McMaster.SesnMgr.SetStVal(McMaster.SesnMgr.StValDefs.LastSlctdSrchRsltTxt.KyTxt(),c)):(a=Cmn.GetObj("SecondaryContent"),a.scrollTop=0));n=!1;McMaster.SesnMgr.SetStVal(McMaster.SesnMgr.StValDefs.SrchLoadFrmSesnInd.KyTxt(),!1)};e.WebPart_AssocFilesLoad=function(a){McMaster.MsgMgr.AddSubscriber(McMaster.MsgMgrMsgs.SrchSuggCntnrExpanded,G);McMaster.MsgMgr.AddSubscriber(McMaster.MsgMgrMsgs.SrchSuggStReset,
H);for(var b=Cmn.GetElementsByClsNm("ListLnkSlctd","a",Cmn.GetObj("SecondaryContent")),c=0;c<b.length;c++)m(b[c],"ListLnkSlctd","ListLnk");b=!1;r&&(g=a,I(),b=!0);L(a);b?SecondaryContentCoordinator.ContentReady("srch"):r?(g=a,I(),SecondaryContentCoordinator.ContentReady("srch")):g=a};e.WebPart_Unload=function(a){McMaster.MsgMgr.RemSubscriber(McMaster.MsgMgrMsgs.KyBoardNavKyPressed,V);McMaster.MsgMgr.RemSubscriber(McMaster.MsgMgrMsgs.SrchSuggCntnrExpanded,G);McMaster.MsgMgr.RemSubscriber(McMaster.MsgMgrMsgs.SrchSuggStReset,
H);McMaster.SesnMgr.RemStVal(McMaster.SesnMgr.StValDefs.SrchEntryMode.KyTxt());McMaster.SesnMgr.RemStVal(McMaster.SesnMgr.StValDefs.SlctdSrchRsltId.KyTxt());McMaster.SesnMgr.RemStVal(McMaster.SesnMgr.StValDefs.UnionSrchRsltLoadedInd.KyTxt());p.Rem("SecondaryContent");l.Rem("SecondaryContent");u.Rem("SecondaryContent");g=C=null;McMaster.MsgMgr.PubMsg(new McMaster.MsgMgrMsgs.WebPartUnloaded(k.CreateHeaders(),a.CntnrIDTxt))};e.SlctSrchRslt=function(a,b){n=b?b:!1;var c=E(a);c&&(b&&N(c)?(Shell.ExpandSecondaryContent(),
WebToolsetWebPart.ResizeActive()):A(c)?(Shell.ExpandSecondaryContent(),WebToolsetWebPart.ResizeActive()):McMaster.MsgMgr.PubMsg(new McMaster.MsgMgrMsgs.CollapseSecondaryContent));c?x(c):a&&O();n=!1;McMaster.SesnMgr.SetStVal(McMaster.SesnMgr.StValDefs.SrchLoadFrmSesnInd.KyTxt(),!1)};e.ProcssNavReq=function(a){McMaster.SesnMgr.SetStVal(McMaster.SesnMgr.StValDefs.SrchEntryMode.KyTxt(),McMaster.SesnMgr.StValDefs.SrchEntryMode.Vals.SRCH_ENTRY_MODE_KEYBOARD);if(a.MsgPayload())switch(a.MsgPayload().KyCd){case 40:P();
break;case 38:if(a=Q(R(h)-1)){var b=Cmn.GetObj(a.ParId);s(t(b),"ListLnkCollapsed")&&(a=S(b));!J(a)&&!y(a)&&x(a,!0)}break;case 13:h&&(a=z(h),0<h.ChldsLen&&T(h,a))}};e.Lnk_Click=function(a){a=YAHOO.util.Dom.getFirstChild(a);var b=S(a),c=McMasterCom.Nav.GetTopFrame(),d=new c.PerfTracker.EvntPayload;"undefined"!=typeof b&&b.Nm&&d.Add("srchTerm",b.Nm);new c.PerfTracker.Evnt(c.PerfTracker.EvntNms.SrchRsltLnkClick,c.PerfTracker.PgCntxtNms.DynCntnt,d);c=new SrchTrkr.SrchDat({usr:SrchTrkr.UsrActTyps.SLCT});
c.usr.elemTyp=SrchTrkr.ElemTyps.SRCH_RSLT;c.usr.srcNm="SrchRsltWebPart";c.usr.slctdNm=decodeURIComponent(b.Nm);a&&(c.usr.slctdElemXYPosn=Cmn.GetXOffset(a)+","+Cmn.GetYOffset(a));"undefined"!=typeof b&&(b.RsltInfo&&b.RsltInfo.SrchRsltId)&&(c.usr.slctdID=b.RsltInfo.SrchRsltId);"undefined"!=typeof b&&(b.RsltInfo&&y(b))&&(c.usr.elemTyp=SrchTrkr.ElemTyps.SPELL_SUGG_LNK,c.usr.entryTxt=McMaster.SesnMgr.GetStVal(McMaster.SesnMgr.StValDefs.SrchTxt.KyTxt()),c.usr.slctdNm=b.RsltInfo.NewArgTxt,c.usr.slctdTxt=
b.RsltInfo.SuggTxt);c.Trk();McMaster.SesnMgr.SetStVal(McMaster.SesnMgr.StValDefs.PerfTrackingBypassFastTrkInd.KyTxt(),!0);A(b)||McMaster.MsgMgr.PubMsg(new McMaster.MsgMgrMsgs.CollapseSecondaryContent);x(b,!1);0<b.ChldsLen&&T(b,a);return!1};e.IsAutoExpandSrchRslt=function(a){var b=!1;a&&K[a.toLowerCase()]&&(b=!0);return b};var A=function(a){var b=!1,c=a.Nm,d=a.RsltInfo;c&&K[c.toLowerCase()]||a.hasLnding?b=!0:a.hasDynamicContent||(d?!1==SrchRsltEvntHandler.HandleSrch.IsDynamicPageInd(d.PageNbrs,d.SrchRsltId)&&
(b=!0):b=!0);return b};e.IsAutoExpandSrchRslts=A;var z=function(a){var b=null;a&&("undefined"!=typeof a.Id&&a.Id&&""!=a.Id?b=Cmn.GetObj(a.Id):"undefined"!=typeof a.Nm&&a.Nm&&(a=E(a.Nm))&&(b=Cmn.GetObj(a.Id)));return b},S=function(a){var b=null;if(a){var c=p.Itm("SecondaryContent");c&&(a=a.id.replace(l.Itm("SecondaryContent")+"_",""),b=c[a])}return b},E=function(a){var b=null,c=p.Itm("SecondaryContent");if(c){a&&(a=a.toLowerCase());for(var d=0;d<c.length;d++){var e=c[d];if(e.Nm.toLowerCase()===a){b=
e;break}}}return b},R=function(a){var b=-1;a&&p.Itm("SecondaryContent")&&(b=a.Id.replace(l.Itm("SecondaryContent")+"_",""));return parseInt(b)},Q=function(a){var b=null,c=p.Itm("SecondaryContent");c&&0<=a&&a<c.length&&(b=c[a]);return b},Y=function(){var a=null;p.Itm("SecondaryContent")&&(a=u.Itm("SecondaryContent"));return a},P=function(a){a+=1;if(!a&&(a=R(h)+1,h)){var b=z(h);s(t(b),"ListLnkCollapsed")&&(a+=h.ChldsLen)}(b=Q(a))&&(!J(b)&&!y(b)?x(b,!0):P(a))},m=function(a,b,c){YAHOO.util.Dom.removeClass(a,
b);YAHOO.util.Dom.addClass(a,c)},s=function(a,b){var c=!1;a&&(c=YAHOO.util.Dom.hasClass(a,b));return c},N=function(a){var b=Cmn.GetElementsByClsNm("ListLnkSlctd","a",Cmn.GetObj("SecondaryContent"))[0]||null;return b&&a&&b.id!=a.Id||b&&!a},O=function(a){N(a)&&(a=Cmn.GetElementsByClsNm("ListLnkSlctd","a",Cmn.GetObj("SecondaryContent"))[0]||null)&&m(a,"ListLnkSlctd","ListLnk")},x=function(a,b){var c=z(a);try{c.focus()}catch(d){}McMaster.MsgMgr.PubMsg(new McMaster.MsgMgrMsgs.SrchRsltFocused(k.CreateHeaders(),
function(){this.Nm=a.Nm}));var e=k.CreateResultObj(a);if(J(a)||y(a))w(a,!1,b),q(a);else{var f=z(h);s(f,"ListLnkSlctd")&&YAHOO.util.Dom.removeClass(f,"ListLnkSlctd");YAHOO.util.Dom.addClass(c,"ListLnkSlctd");O(a);b?D(a,(new Date).getTime(),750,!0):(w(a,!1,!1),q(a));"undefined"!=typeof e.SrchRsltId&&e.SrchRsltId?McMaster.SesnMgr.SetStVal(McMaster.SesnMgr.StValDefs.SlctdSrchRsltId.KyTxt(),e.SrchRsltId):McMaster.SesnMgr.RemStVal(McMaster.SesnMgr.StValDefs.SlctdSrchRsltId.KyTxt())}},T=function(a,b){var c=
"";s(t(b),"ListLnkCollapsed")?(m(t(b),"ListLnkCollapsed","ListLnkOpen"),m(U(b),"ListLnkGrpHidden","ListLnkGrpVisible"),c="exp"):(m(t(b),"ListLnkOpen","ListLnkCollapsed"),m(U(b),"ListLnkGrpVisible","ListLnkGrpHidden"),c="col");var d="RESULT";a.RsltInfo||(W.test(a.Nm)?d="ACCESSORY":X.test(a.Nm)&&(d="ADDITIONAL"));Cmn.TrkAct("EvntDsc="+c+"&NodeNm="+a.Nm+"&NodeTyp="+d+"&OrigSrchTxt="+Y(),"SrchRsltWebPart")},D=function(a,b,c,d,e){if(e){var f=McMaster.SesnMgr.GetStVal(McMaster.SesnMgr.StValDefs.SrchLastReqArgs.KyTxt());
!(b<f.TS)&&e==B&&(w(a,!0,d),q(a))}else{var g=B+=1;setTimeout(function(){D(a,b,c,d,g)},c)}},w=function(a,b,c,d,e){var f=k.CreateResultObj(a);F(a);Cmn.TrkAct("keyboardNav="+c+"&fastTrack="+b+"&fastTrackTerm="+f.SrchTrm,"SrchRsltWebPart");f.PageNbrs?(b=f.PageNbrs.join(","),McMaster.SesnMgr.SetStVal(McMaster.SesnMgr.StValDefs.SlctdSrchRsltPgNbrs.KyTxt(),b)):McMaster.SesnMgr.RemStVal(McMaster.SesnMgr.StValDefs.SlctdSrchRsltPgNbrs.KyTxt());if(0<f.SrchTrm.length)McMaster.SesnMgr.SetStVal(McMaster.SesnMgr.StValDefs.SlctdSrchRsltTxt.KyTxt(),
f.SrchTrm),McMaster.SesnMgr.SetStVal(McMaster.SesnMgr.StValDefs.LastSlctdSrchRsltTxt.KyTxt(),f.SrchTrm);else{n||McMaster.SesnMgr.SetStVal(McMaster.SesnMgr.StValDefs.UnionSrchRsltLoadedInd.KyTxt(),!0);b=a;f=[];if(c=p.Itm("SecondaryContent"))for(var g=0;2>g;g++)if((b=c[g])&&b.RsltInfo.DscIds)for(var h=b.RsltInfo.DscIds[0],m=0;m<b.RsltInfo.DscIds.length;m++)if(h==b.RsltInfo.DscIds[m]){f.push(b.Nm);break}b=null;0<f.length&&(b=f.join(" and "));if(f=b)McMaster.SesnMgr.SetStVal(McMaster.SesnMgr.StValDefs.SlctdSrchRsltTxt.KyTxt(),
f),McMaster.SesnMgr.SetStVal(McMaster.SesnMgr.StValDefs.LastSlctdSrchRsltTxt.KyTxt(),f),q(a);else if(d){1<d.length?(McMaster.SesnMgr.SetStVal(McMaster.SesnMgr.StValDefs.SlctdSrchRsltId.KyTxt(),l),McMaster.SesnMgr.RemStVal(McMaster.SesnMgr.StValDefs.SlctdSrchRsltId.KyTxt())):McMaster.SesnMgr.SetStVal(McMaster.SesnMgr.StValDefs.SlctdSrchRsltId.KyTxt(),e);var l=d[0];1<d.length&&(l=l+", "+d[1]);McMaster.SesnMgr.SetStVal(McMaster.SesnMgr.StValDefs.SlctdSrchRsltTxt.KyTxt(),l);McMaster.SesnMgr.SetStVal(McMaster.SesnMgr.StValDefs.LastSlctdSrchRsltTxt.KyTxt(),
l)}else McMaster.SesnMgr.RemStVal(McMaster.SesnMgr.StValDefs.SlctdSrchRsltTxt.KyTxt()),q(a)}n||SecondaryContentCoordinator.ContentReady("srch")},q=function(a,b){n||(k.FastTrack(a,k.CreateHeaders(),b),r=!1)},U=function(a){var b=null;a=YAHOO.util.Dom.getNextSibling(t(a));"UL"==a.tagName&&(b=a);return b},t=function(a){return YAHOO.util.Dom.getAncestorByTagName(a,"div")},M=function(){if(document.images)for(var a=[],b=M.arguments,c=0;c<b.length;c++)a[c]=new Image,a[c].src=b[c]},I=function(){if(g){McMaster.LoadMgr.InsrtContent(g.CntnrIDTxt,
g.MarkupTxt);McMaster.LoadMgr.ShowCntnr(g.CntnrIDTxt);var a=new McMaster.MsgMgrMsgs.WebPartLoaded(k.CreateHeaders(),g.CntnrIDTxt);McMaster.MsgMgr.PubMsg(a);r=!1;F(g.FastTrackRslt);g=null}},F=function(a){var b=z(a);b&&(s(b,"ListLnkVisitedLnk")||m(b,"ListLnk","ListLnkVisitedLnk"),s(b,"ListLnkSlctd")||m(b,"ListLnk","ListLnkSlctd"),h=a,a.RsltInfo&&McMaster.SesnMgr.SetStVal(McMaster.SesnMgr.StValDefs.SlctdSrchRsltId.KyTxt(),a.RsltInfo.SrchRsltId))};McMaster.MsgMgr.AddSubscriber(McMaster.MsgMgrMsgs.WebPartLoaded,
function(a){a.MsgHdr().CntxtNm===McMaster.MsgMgr.CntxtNms.SRCH_SUGG&&SrchSuggWebPart.Container.AnimationComplete.After(function(){SrchSuggWebPart.Container.IsClosed()&&(g?(I(),SecondaryContentCoordinator.ContentReady("srch")):r=!0)})});var G=function(){r=!1},H=function(){g=null},J=function(a){var b=!1;a&&("undefined"!=typeof a.RsltInfo&&a.RsltInfo)&&(b=a.RsltInfo.LinkTxt?!0:!1);return b},y=function(a){var b=!1;a&&("undefined"!=typeof a.RsltInfo&&a.RsltInfo)&&(b=a.RsltInfo.SuggTxt?!0:!1);return b};
McMaster.MsgMgr.AddSubscriber(McMaster.MsgMgrMsgs.SrchSuggCntnrExpanded,G);McMaster.MsgMgr.AddSubscriber(McMaster.MsgMgrMsgs.SrchSuggStReset,H)});


SrchRsltStObj=function(){var c=null,a=false;var b=function(){console.log("Private method");};return{ShowCurrSt:function(){return c;},UpdtSt:function(d){c=d;},ShowSuccessInd:function(){return a;},Succeeded:function(){a=true;},Failed:function(){a=false;},Reset:function(){a=false;c=null;},Test:function(){c="testing SRSO";console.log("Current State: "+c);}};}();

if(this.SrchRsltEvntHandler){}else{this.SrchRsltEvntHandler=new function(){var a=["2","3","4","5","6","7","8","9","10","11","12","13","14","15","16","17","18","19","20","83","84","85","86","87","88","89","90","91","92","93","94","95","96","97","202","203","204","205","206","207","208","209","210","211","212","213","214","215","216","217","218","219","220","221","222","223","224","225","226","227","228","229","230","231","232","233","234","235","236","237","238","239","240","241","242","243","244","245","246","247","248","249","250","251","252","253","254","255","256","257","258","259","260","261","262","263","264","265","266","267","268","269","270","271","272","273","274","275","276","277","278","279","280","281","282","283","284","285","286","287","288","289","290","291","292","293","294","295","296","297","298","299","300","301","302","303","304","305","306","308","309","310","311","312","313","314","315","316","317","318","319","320","321","322","323","324","325","326","327","328","329","330","331","332","333","334","335","336","337","338","339","340","341","342","346","347","348","349","350","351","352","353","354","355","356","357","358","359","360","361","362","363","364","365","388","408","409","410","411","412","413","414","415","416","417","418","419","420","421","422","423","424","425","426","427","428","429","430","431","432","433","434","435","436","437","438","439","440","441","442","443","444","445","446","447","448","449","450","451","452","453","454","455","456","457","458","459","460","461","462","463","464","465","466","467","468","469","470","471","472","473","474","475","476","477","478","479","480","481","482","483","484","485","486","487","488","489","490","492","493","494","491","495","496","497","498","502","503","504","505","506","507","508","509","510","511","512","513","514","515","516","517","518","519","520","521","522","523","524","525","526","527","528","529","530","531","532","533","534","535","536","537","538","539","540","541","542","543","544","545","546","547","566","567","568","569","570","571","572","573","574","575","576","577","578","579","580","581","582","583","584","585","586","587","588","589","590","591","592","593","594","595","596","597","598","599","600","601","602","604","605","606","607","608","609","610","611","612","613","614","615","616","617","618","619","620","621","622","623","624","625","626","629","630","631","632","634","635","636","637","638","639","640","641","642","643","644","645","646","647","648","649","650","651","652","653","654","655","656","657","658","659","660","661","662","663","664","665","666","668","669","670","671","672","673","674","675","676","677","678","679","680","681","682","683","684","685","686","687","688","689","690","691","692","693","694","695","696","697","698","699","700","701","702","703","704","705","706","707","708","709","710","711","712","713","714","715","716","717","718","719","720","721","722","723","724","725","726","727","728","729","730","731","732","733","734","735","736","737","738","739","740","741","742","743","744","745","746","747","748","749","750","751","752","753","754","755","756","757","758","759","760","761","762","763","764","765","766","767","775","776","777","778","779","780","781","782","783","794","795","796","797","798","799","800","801","802","803","804","805","818","819","820","821","822","827","828","829","830","831","832","833","834","835","836","837","838","839","840","841","842","843","844","845","846","847","848","849","850","851","852","853","854","855","856","857","858","859","860","861","862","863","864","865","866","867","868","869","870","871","872","873","874","875","876","877","878","879","880","881","882","883","884","885","886","887","888","889","890","891","892","893","894","895","896","897","898","899","900","901","902","903","904","905","906","907","908","909","910","911","912","913","914","915","916","917","918","919","920","921","922","923","924","925","926","927","928","929","930","931","932","933","934","935","936","937","938","940","941","942","943","944","945","946","947","948","949","950","951","952","953","954","955","956","957","958","959","960","961","962","963","964","965","966","967","968","969","970","971","972","973","974","975","976","977","978","979","980","981","982","983","984","985","986","987","988","989","990","991","992","993","994","995","996","997","998","999","1002","1004","1005","1006","1007","1008","1009","1010","1011","1012","1013","1016","1017","1018","1019","1020","1021","1022","1023","1024","1025","1026","1027","1028","1029","1030","1031","1032","1033","1034","1035","1036","1037","1038","1039","1040","1041","1042","1043","1044","1045","1046","1047","1048","1049","1050","1051","1052","1053","1054","1055","1056","1057","1058","1059","1060","1061","1062","1063","1064","1065","1066","1067","1068","1069","1070","1071","1072","1073","1074","1075","1076","1077","1078","1079","1080","1081","1082","1083","1084","1085","1086","1087","1088","1089","1090","1091","1092","1093","1094","1095","1096","1097","1098","1100","1101","1102","1103","1104","1105","1106","1107","1108","1109","1110","1111","1112","1113","1114","1115","1116","1117","1118","1119","1120","1121","1122","1123","1124","1125","1126","1150","1151","1152","1153","1154","1155","1156","1157","1158","1159","1160","1161","1162","1163","1164","1165","1166","1167","1168","1169","1170","1171","1172","1173","1174","1175","1176","1177","1178","1179","1180","1181","1182","1183","1184","1185","1186","1187","1188","1189","1190","1191","1192","1193","1194","1195","1196","1197","1198","1199","1200","1201","1202","1203","1220","1221","1222","1223","1224","1225","1226","1227","1228","1229","1230","1231","1232","1233","1234","1235","1236","1237","1238","1239","1240","1241","1242","1243","1244","1245","1246","1247","1248","1249","1250","1251","1252","1253","1254","1255","1256","1257","1258","1259","1260","1261","1262","1263","1264","1265","1266","1267","1268","1269","1270","1271","1272","1273","1274","1275","1276","1277","1278","1279","1280","1281","1282","1283","1284","1285","1286","1287","1288","1289","1290","1291","1292","1293","1294","1295","1296","1297","1298","1299","1300","1301","1302","1303","1304","1305","1306","1307","1308","1309","1310","1311","1312","1313","1314","1315","1316","1317","1318","1319","1320","1321","1322","1323","1324","1325","1326","1327","1328","1329","1330","1331","1332","1333","1334","1335","1336","1337","1338","1339","1340","1341","1342","1343","1344","1345","1346","1347","1348","1349","1350","1351","1352","1353","1354","1355","1356","1357","1358","1359","1360","1361","1362","1363","1364","1365","1366","1367","1368","1369","1370","1371","1372","1373","1374","1375","1376","1377","1378","1379","1380","1381","1401","1402","1403","1404","1405","1406","1407","1408","1409","1410","1411","1412","1413","1414","1415","1420","1421","1422","1423","1424","1425","1426","1427","1428","1429","1430","1431","1455","1456","1457","1458","1459","1460","1461","1462","1463","1464","1465","1466","1467","1468","1469","1477","1478","1479","1480","1481","1482","1483","1484","1485","1486","1487","1488","1489","1490","1491","1492","1493","1494","1495","1496","1497","1498","1499","1500","1501","1502","1503","1504","1505","1506","1507","1508","1509","1510","1511","1512","1513","1514","1515","1516","1517","1518","1519","1520","1521","1522","1523","1524","1525","1526","1527","1528","1529","1530","1531","1532","1533","1534","1535","1536","1537","1538","1539","1540","1541","1542","1543","1544","1545","1546","1547","1548","1549","1550","1551","1552","1553","1554","1555","1556","1557","1558","1559","1560","1561","1562","1563","1564","1565","1566","1567","1568","1569","1570","1571","1572","1573","1574","1575","1576","1577","1578","1579","1580","1582","1583","1584","1585","1586","1587","1588","1589","1590","1591","1592","1593","1594","1595","1596","1597","1598","1599","1600","1601","1602","1603","1604","1605","1606","1607","1608","1609","1610","1611","1612","1613","1614","1615","1616","1617","1618","1619","1620","1621","1622","1623","1624","1625","1626","1627","1628","1629","1630","1631","1632","1633","1634","1635","1636","1637","1638","1639","1640","1641","1642","1643","1644","1645","1646","1647","1648","1649","1650","1651","1652","1653","1654","1655","1656","1657","1658","1659","1660","1661","1662","1663","1664","1665","1666","1667","1668","1669","1670","1671","1672","1673","1674","1675","1676","1677","1678","1679","1680","1681","1682","1683","1684","1685","1686","1687","1688","1689","1690","1691","1692","1693","1694","1695","1696","1697","1698","1699","1700","1701","1702","1703","1704","1705","1706","1707","1708","1709","1710","1711","1712","1713","1714","1715","1716","1717","1718","1719","1720","1721","1722","1723","1724","1725","1726","1727","1728","1729","1730","1731","1732","1733","1734","1735","1736","1737","1738","1739","1740","1741","1742","1743","1744","1745","1746","1747","1748","1749","1750","1752","1753","1754","1755","1756","1757","1758","1759","1760","1761","1762","1763","1764","1765","1766","1767","1768","1769","1770","1771","1772","1773","1774","1775","1776","1777","1778","1779","1780","1781","1782","1783","1784","1785","1786","1787","1788","1789","1790","1791","1792","1793","1794","1795","1796","1797","1798","1799","1800","1801","1802","1803","1804","1805","1806","1807","1808","1809","1810","1811","1812","1813","1814","1815","1816","1817","1818","1819","1820","1821","1822","1823","1824","1825","1826","1827","1828","1829","1830","1831","1832","1833","1834","1835","1836","1837","1838","1839","1840","1841","1842","1843","1844","1845","1846","1847","1848","1849","1850","1851","1852","1853","1854","1855","1856","1857","1858","1859","1860","1861","1862","1863","1864","1865","1880","1881","1882","1883","1884","1885","1886","1887","1888","1889","1890","1891","1892","1893","1894","1895","1896","1897","1898","1899","1900","1901","1902","1903","1904","1905","1906","1907","1920","1921","1922","1923","1924","1925","1926","1927","1928","1929","1930","1931","1932","1933","1934","1935","1936","1937","1938","1939","1940","1941","1942","1943","1944","1945","1946","1947","1948","1949","1950","1951","1952","1953","1954","1955","1956","1957","1958","1959","1960","1961","1962","1963","1964","1965","1966","1967","1968","1969","1970","1971","1972","1973","1974","1975","1976","1977","1978","1979","1980","1982","1983","1984","1985","1986","1987","1988","1989","1990","1991","1992","1993","1994","1995","1996","1997","1998","1999","2000","2001","2002","2003","2004","2005","2006","2007","2008","2009","2010","2011","2012","2013","2014","2015","2020","2021","2022","2023","2024","2025","2026","2027","2028","2029","2030","2031","2032","2033","2034","2035","2036","2037","2038","2039","2040","2041","2042","2043","2044","2045","2046","2047","2048","2049","2050","2051","2052","2053","2054","2055","2056","2057","2058","2059","2060","2061","2062","2063","2064","2065","2066","2067","2068","2069","2070","2071","2072","2073","2074","2075","2076","2077","2078","2079","2080","2081","2082","2083","2084","2085","2086","2087","2088","2089","2090","2091","2092","2093","2094","2095","2096","2097","2098","2099","2100","2101","2102","2103","2104","2105","2106","2107","2108","2109","2110","2111","2112","2113","2114","2115","2116","2117","2118","2119","2120","2121","2122","2123","2126","2127","2128","2129","2130","2131","2132","2133","2134","2135","2136","2137","2138","2139","2140","2141","2142","2143","2144","2145","2146","2147","2148","2150","2151","2152","2153","2154","2155","2156","2157","2158","2159","2160","2161","2162","2163","2164","2165","2166","2167","2168","2169","2170","2171","2172","2173","2174","2175","2176","2177","2178","2179","2180","2181","2182","2183","2184","2185","2186","2187","2188","2189","2190","2191","2192","2193","2194","2195","2196","2197","2198","2199","2200","2201","2202","2203","2204","2205","2206","2207","2208","2209","2210","2211","2212","2213","2214","2215","2216","2217","2218","2219","2220","2221","2222","2223","2224","2225","2226","2228","2229","2230","2231","2232","2233","2234","2235","2236","2237","2238","2239","2240","2241","2242","2243","2244","2245","2246","2247","2248","2249","2250","2251","2252","2253","2254","2255","2256","2257","2258","2259","2260","2261","2262","2263","2264","2265","2266","2267","2268","2269","2270","2271","2272","2273","2274","2275","2276","2277","2278","2279","2280","2281","2282","2283","2284","2285","2286","2287","2288","2289","2290","2291","2292","2293","2294","2295","2296","2297","2298","2299","2300","2302","2303","2304","2305","2306","2307","2308","2309","2310","2311","2312","2313","2314","2315","2316","2317","2318","2319","2320","2321","2322","2323","2324","2325","2326","2327","2328","2329","2330","2331","2332","2333","2334","2335","2336","2337","2338","2339","2340","2341","2342","2343","2344","2345","2346","2347","2348","2349","2350","2351","2352","2353","2354","2355","2356","2357","2358","2359","2360","2361","2362","2363","2364","2365","2366","2367","2368","2369","2370","2371","2372","2373","2374","2375","2376","2377","2378","2379","2380","2381","2382","2383","2384","2385","2386","2387","2388","2389","2390","2391","2392","2393","2394","2396","2397","2398","2399","2400","2401","2402","2403","2404","2405","2406","2407","2408","2409","2410","2411","2412","2413","2414","2415","2416","2417","2418","2419","2420","2421","2422","2423","2424","2425","2426","2427","2428","2429","2430","2431","2432","2433","2434","2435","2436","2437","2438","2439","2440","2441","2442","2443","2444","2445","2446","2447","2448","2449","2450","2451","2452","2453","2454","2455","2456","2457","2458","2459","2460","2461","2462","2463","2464","2465","2466","2467","2468","2469","2470","2471","2472","2473","2474","2475","2476","2477","2478","2479","2480","2481","2482","2483","2484","2485","2486","2487","2488","2489","2490","2491","2492","2493","2494","2495","2496","2497","2498","2499","2500","2501","2502","2503","2504","2505","2506","2507","2508","2509","2510","2511","2512","2513","2514","2515","2516","2517","2518","2519","2520","2521","2522","2523","2524","2525","2526","2527","2528","2529","2530","2531","2532","2533","2534","2535","2536","2537","2538","2539","2540","2541","2542","2543","2544","2545","2546","2547","2548","2549","2550","2551","2552","2553","2554","2555","2556","2557","2558","2559","2560","2561","2562","2563","2564","2565","2566","2567","2568","2569","2570","2571","2572","2573","2574","2575","2576","2577","2578","2579","2580","2581","2587","2588","2589","2590","2591","2592","2593","2594","2595","2596","2604","2605","2606","2607","2608","2609","2610","2611","2612","2613","2614","2615","2616","2617","2618","2619","2620","2621","2622","2623","2624","2625","2626","2627","2628","2629","2630","2631","2632","2633","2634","2635","2636","2637","2638","2639","2640","2641","2642","2643","2644","2645","2646","2647","2648","2649","2650","2651","2652","2653","2654","2655","2656","2657","2658","2659","2660","2661","2662","2663","2664","2665","2666","2667","2668","2669","2670","2671","2672","2673","2674","2675","2676","2677","2678","2679","2682","2683","2684","2685","2686","2687","2688","2689","2690","2691","2692","2693","2694","2695","2696","2697","2698","2713","2714","2715","2716","2717","2730","2731","2732","2733","2734","2735","2736","2737","2738","2739","2740","2741","2742","2743","2744","2745","2746","2747","2748","2749","2750","2751","2752","2753","2754","2755","2756","2757","2758","2759","2760","2761","2762","2763","2764","2765","2766","2767","2768","2769","2770","2771","2772","2773","2774","2775","2776","2777","2778","2779","2780","2781","2782","2783","2784","2785","2786","2787","2788","2789","2790","2791","2792","2793","2794","2795","2796","2797","2798","2799","2800","2801","2802","2803","2804","2805","2806","2807","2808","2809","2810","2811","2812","2813","2814","2815","2816","2817","2818","2819","2820","2821","2822","2823","2824","2825","2826","2827","2828","2829","2830","2831","2832","2833","2834","2835","2836","2837","2838","2839","2840","2841","2842","2843","2844","2845","2846","2847","2848","2849","2850","2851","2852","2853","2854","2855","2856","2857","2858","2859","2860","2862","2863","2864","2865","2866","2867","2868","2869","2870","2871","2872","2873","2874","2875","2876","2877","2878","2879","2880","2881","2882","2883","2884","2885","2886","2887","2888","2889","2890","2891","2892","2893","2894","2895","2896","2897","2898","2899","2900","2901","2902","2903","2904","2905","2906","2907","2908","2909","2910","2911","2912","2913","2914","2915","2916","2917","2918","2919","2920","2921","2922","2923","2924","2925","2926","2927","2928","2929","2930","2931","2932","2933","2934","2935","2936","2937","2938","2939","2940","2941","2942","2943","2944","2945","2946","2947","2948","2949","2950","2951","2952","2953","2954","2955","2956","2957","2958","2959","2960","2961","2962","2963","2964","2965","2966","2967","2968","2969","2970","2971","2972","2973","2974","2975","2976","2977","2978","2979","2980","2981","2982","2983","2984","2985","2986","2987","2988","2989","2990","2991","2992","2993","2994","2995","2996","2997","2998","2999","3000","3002","3003","3004","3005","3006","3007","3008","3009","3010","3011","3012","3013","3014","3015","3016","3017","3018","3019","3020","3021","3022","3023","3024","3025","3026","3027","3028","3029","3031","3032","3033","3034","3035","3036","3037","3038","3039","3058","3059","3060","3061","3062","3063","3064","3065","3066","3067","3068","3069","3070","3071","3072","3073","3074","3075","3076","3077","3078","3079","3080","3081","3082","3083","3084","3085","3086","3087","3088","3089","3090","3091","3092","3093","3094","3095","3096","3097","3098","3099","3100","3101","3102","3103","3104","3105","3106","3107","3108","3109","3110","3111","3112","3113","3114","3115","3116","3117","3118","3119","3120","3121","3122","3123","3124","3125","3126","3127","3128","3129","3130","3131","3132","3133","3134","3135","3136","3137","3138","3139","3140","3141","3142","3143","3144","3145","3146","3150","3151","3152","3153","3154","3155","3156","3157","3158","3159","3160","3161","3162","3163","3164","3165","3166","3170","3171","3172","3173","3174","3175","3176","3177","3178","3179","3180","3181","3182","3183","3184","3185","3186","3187","3188","3189","3190","3191","3192","3193","3194","3195","3196","3197","3198","3199","3200","3201","3202","3203","3204","3205","3206","3207","3208","3209","3210","3211","3212","3213","3214","3215","3216","3217","3218","3219","3220","3221","3222","3223","3224","3225","3226","3227","3228","3229","3230","3231","3232","3233","3234","3235","3236","3237","3238","3239","3240","3241","3242","3243","3244","3245","3246","3247","3248","3249","3250","3251","3252","3268","3269","3270","3271","3272","3273","3274","3275","3276","3277","3278","3279","3280","3281","3282","3283","3284","3285","3286","3287","3288","3289","3290","3291","3292","3293","3294","3295","3296","3297","3298","3299","3300","3301","3302","3303","3304","3305","3306","3307","3308","3309","3310","3311","3312","3313","3314","3315","3316","3317","3318","3319","3320","3321","3327","3329","3330","3331","3332","3333","3344","3345","3346","3347","3348","3349","3350","3351","3352","3353","3354","3355","3356","3357","3358","3359","3360","3361","3362","3363","3364","3365","3366","3367","3368","3369","3370","3371","3372","3373","3374","3375","3376","3377","3378","3379","3380","3381","3382","3383","3384","3385","3386","3387","3388","3389","3390","3391","3392","3393","3394","3395","3396","3397","3398","3399","3400","3401","3402","3403","3404","3405","3406","3407","3408","3409","3410","3411","3412","3413","3414","3415","3416","3417","3418","3419","3420","3421","3422","3423","3424","3425","3426","3427","3428","3429","3430","3431","3432","3433","3434","3435","3436","3437","3438","3439","3440","3441","3442","3443","3444","3445","3446","3447","3448","3449","3450","3451","3452","3453","3454","3455","3456","3457","3458","3459","3460","3461","3462","3463","3464","3465","3466","3467","3468","3469","3470","3471","3472","3474","3475","3476","3477","3478","3479","3480","3481","3482","3483","3484","3485","3486","3487","3488","3489","3490","3491","3492","3493","3494","3495","3496","3497","3532","3533","3534","3535","3536","3537","3538","3539","3540","3541","3542","3543","3544","3545","3546","3547","3548","3549","3550","3551","3552","3553","3554","3555","3556","3557","3564","3565","3566","3567","3568","3569","3570","3571","3572","3573","3574","3575","3576","3577","3578","3579","3580","3581","3582","3583","3584","3585","3586","3587","3588","3589","3590","3591","3592","3593","3594","3595","3596","3597","3598","3599","3600","3601","3602","3603","3604","3605","3606","3607","3608","3609","3610","3611","3612","3613","3614","3615","3616","3617","3618","3619","3620","3621","3622","3623","3624","3625","3626","3627","3628","3629","3630","3631","3632","3633","3634","3635","3636","3637","3638","3639","3640","3641","3642","3643","3644","3645","3646","3647","3648","3649","3650","3651","3652","3653","3654","3655","3656","3657","3658","3659","3660","3661","3662","3663","3664","3665","3666","3667","3668","3669","3670","3671","3672","3673","3674","3675","3676","3677","3678","3679","3680","3681","3682","3683","3684","3685","3686","3687","3688","3689","3690","3691","3692","3693","3694","3695","3696","3697","3698","3699","3700","3701","3702","3703","3704","3705","3706","3707","3708","3709","3710","3711","3712","3713","3714","3715","3716","3717","3718","3719","3720","3721","3722","3723","3724","3725","3726","3727","3728","3729","3730","3731","3732","3733","3734","3735","3736","3737","3738","3739","3740","3741","3742","3743","3744","3745","3746","3747","3748","3749","3750","3751"];var b=["3170","3171","3172","3173","3174","3175","3176","3177","3178","3179","3180","3181","3182","3183","3184","3185","3186","3187","3188","3189","3190","3191","3192","3193","3194","3195","3196","3197","3198","3199","3200","3201","3202"];this.getDynamicPageArr=function(){return a;};this.getHexNutsDynamicPageArr=function(){return b;};};}

(function(){if(!this.SrchRsltEvntHandler){}else{if(this.SrchRsltEvntHandler.HandleSrch){}else{SrchRsltEvntHandler.HandleSrch=new function(){var b='<div class="WarningTxt">We were unable to display products for your search.  Please try again or contact us.</div>';var h=new McMaster.MsgMgr.Hdr(McMaster.MsgMgr.CntxtNms.SRCH_RSLT_EVNT_HANDLER);var m=SrchRsltStObj,l=null;this.IsDynamicPageInd=function(p,o){var n=true;if(d(o)&&p&&p.length>0){}else{n=false;}return n;};var i=function(n){m.Reset();if(n){var z,r,y,t,o,v,s,u,x,q,p,w;if(n.NM==="WebPart_FatalErrOccurred"){z=l;r=false;}else{z=n;r=true;}if(z){y=z.MsgPayload().SrchRsltInfoObj;if(r&&y){l=n;}if(y.RsltInfo){t=y.RsltInfo.SrchRsltId;o=y.RsltInfo.SrchTrm;v=y.RsltInfo.MostRelPageNbr;s=y.RsltInfo.PageNbrs;u=y.RsltInfo.SuggTxt;x=y.RsltInfo.NewArgTxt;q=y.RsltInfo.OrigTxt;p=y.RsltInfo.SuggSeq;w=y.RsltInfo.LinkTxt;}}switch(m.ShowCurrSt()){case null:if(r&&y.hasLnding===true){hndlLandingPage(y);break;}else{m.UpdtSt("hndldLandingPage");}case"hndldLandingPage":if(r&&j(s,t,m)){break;}else{if(r&&y.hasDynamicContent===true){overrideHndlDynamicContent(s,m);break;}else{m.UpdtSt("hndldDynamicContent");}}case"hndldDynamicContent":if(a(v,s,m)){break;}else{m.UpdtSt("hndldCtlgPage");}case"hndldCtlgPage":if(f(u,x,q,p)){break;}else{m.UpdtSt("hndldSpellingSugg");}case"hndldSpellingSugg":if(e(w)){break;}else{m.UpdtSt("hndldSpclWrd");}case"hndldSpclWrd":if(c(t)){break;}else{m.UpdtSt("hndldSrchRsltGrpExpanded");}default:}}};hndlLandingPage=function(o){m.UpdtSt("hndldLandingPage");var n=o.Nm;McMaster.MsgMgr.PubMsg(new McMaster.MsgMgrMsgs.IntermediatePageSlctd(h,n));};overrideHndlDynamicContent=function(p,n){var o=false;McMaster.SesnMgr.SetStVal(McMaster.SesnMgr.StValDefs.ChooseSpecsRsltnOvrdInd.KyTxt(),o);var q=new McMaster.MsgMgrMsgs.DynamicContentSlctd(h);McMaster.MsgMgr.PubMsg(q);};var c=function(n){var o=false;if(n===null||n===undefined){o=true;}return o;};var j=function(r,q,o){if(o){o.UpdtSt("hndldDynamicContent");}var n=SrchRsltEvntHandler.HandleSrch.IsDynamicPageInd(r,q);if(n){var p=false;McMaster.SesnMgr.SetStVal(McMaster.SesnMgr.StValDefs.ChooseSpecsRsltnOvrdInd.KyTxt(),p);var s=new McMaster.MsgMgrMsgs.DynamicContentSlctd(h);McMaster.MsgMgr.PubMsg(s);}return n;};var a=function(r,n,o){if(o){o.UpdtSt("hndldCtlgPage");}var q=false;if(r){q=true;McMaster.SesnMgr.SetStVal(McMaster.SesnMgr.StValDefs.CurrCtlgPgNbr.KyTxt(),r);if(n&&n.length>1){McMaster.SesnMgr.SetStVal(McMaster.SesnMgr.StValDefs.CurrRelatedCtlgPgsTxt.KyTxt(),n.toString());}else{McMaster.SesnMgr.RemStVal(McMaster.SesnMgr.StValDefs.CurrRelatedCtlgPgsTxt.KyTxt());}var p=new McMaster.MsgMgrMsgs.CtlgPageSlctd(h);McMaster.MsgMgr.PubMsg(p);}return q;};var f=function(q,n,p,o){var s=false;if(q){s=true;var r=new McMaster.MsgMgrMsgs.SpellingSuggSlctd(h,q,n,p,o);McMaster.MsgMgr.PubMsg(r);}return s;};var e=function(n){var p=false;if(n){p=true;var o=new McMaster.MsgMgrMsgs.SpclWrdSlctd(h,n);McMaster.MsgMgr.PubMsg(o);}return p;};var d=function(n){var o=false;if(n&&n>0){o=true;}return o;};var k=function(n){var o,p;o=n.MsgHdr().CntxtNm;p=n;if(o===McMaster.MsgMgr.CntxtNms.DYNAMIC_PAGE||o===McMaster.MsgMgr.CntxtNms.PROD_PAGE||o===McMaster.MsgMgr.CntxtNms.INTERMEDIATE_PAGE){McMaster.LoadMgr.UnloadCntnr("MainContent");Cmn.GetObj("MainContent").innerHTML=b;i(p);}};var g=function(n){var o=n.MsgHdr().CntxtNm;if(o===McMaster.MsgMgr.CntxtNms.DYNAMIC_PAGE||o===McMaster.MsgMgr.CntxtNms.INTERMEDIATE_PAGE){m.Succeeded();}else{if(o===McMaster.MsgMgr.CntxtNms.CTLG_PAGE||o===McMaster.MsgMgr.CntxtNms.DYNAMIC_CTLG_PAGE){if(n.MsgPayload().URLHashArgsTxt!=null&&n.MsgPayload().SiteTitlTxt!=null){m.Succeeded();}}}};McMaster.MsgMgr.AddSubscriber(McMaster.MsgMgrMsgs.SrchRsltSlctd,i);McMaster.MsgMgr.AddSubscriber(McMaster.MsgMgrMsgs.WebPartFatalErrOccurred,k);McMaster.MsgMgr.AddSubscriber(McMaster.MsgMgrMsgs.WebPartLoaded,g);};}}})();

this.SrchRsltWebPartLoader||(SrchRsltWebPartLoader=new function(){var h=this,v=/^\s*\w\s*$/i,w=/^\s*\d+\s*$/,x=/^\s*\d{4,5}[a-z](\d{0,3}|ac?)\s*$/i,p=0,k=null,m=!1,f=new CmnColls.HashTable,q;McMaster.SesnMgr.GetStVal(McMaster.SesnMgr.StValDefs.SrchReqAvgDelay.KyTxt())||McMaster.SesnMgr.SetStVal(McMaster.SesnMgr.StValDefs.SrchReqAvgDelay.KyTxt(),500);var l={SrchTxt:"",CmplSrchInd:!1};l.TS=(new Date).getTime();McMaster.SesnMgr.GetStVal(McMaster.SesnMgr.StValDefs.SrchLastReqArgs.KyTxt())||McMaster.SesnMgr.SetStVal(McMaster.SesnMgr.StValDefs.SrchLastReqArgs.KyTxt(),
l);McMaster.SesnMgr.GetStVal(McMaster.SesnMgr.StValDefs.SrchSentReqTxt.KyTxt())||McMaster.SesnMgr.SetStVal(McMaster.SesnMgr.StValDefs.SrchSentReqTxt.KyTxt(),l);var g=[500,500,500,500,500,500,500,500,500,500,500,500,500,500,500,500,500,500,500,500],l=function(a){h.RtrvWebPartCompleteSrch(a)};h.LoadFrmSesn=function(){McMaster.SesnMgr.SetStVal(McMaster.SesnMgr.StValDefs.SrchLoadFrmSesnInd.KyTxt(),!0);var a=McMaster.SesnMgr.GetStVal(McMaster.SesnMgr.StValDefs.SrchTxt.KyTxt()),d=null;SrchRsltWebPart&&
(d=SrchRsltWebPart.CurrSrchTxt());if(a){var b=McMaster.SesnMgr.GetStVal(McMaster.SesnMgr.StValDefs.SlctdSrchRsltTxt.KyTxt());a==d&&SrchRsltWebPart&&b?SrchRsltWebPart.SlctSrchRslt(b,!0):(d=McMaster.SesnMgr.GetStVal(McMaster.SesnMgr.StValDefs.SrchCompleteInd.KyTxt()),b=new McMaster.MsgMgr.Hdr(McMaster.MsgMgr.CntxtNms.SRCH_RSLTS),!0===d?(a=new McMaster.MsgMgrMsgs.SrchSubmitted(b,a),h.RtrvWebPartCompleteSrch(a,!0)):(a=new McMaster.MsgMgrMsgs.SrchTxtChged(b,null,a),h.RtrvWebPartIncompleteSrch(a,!0)))}};
h.RtrvWebPartIncompleteSrch=function(a,d){var b="/WebParts/SrchRsltWebPart/SrchRsltWebPart.aspx?argTxt="+escape(a.MsgPayload().SrchTxt)+"&srchCompleteInd=false&bldFullHtmlInd=false&newfrmwk=true&targetNm=_parent&cntnrIDtxt=SecondaryContent";d||(d=!1);var c,e;e=a.MsgHdr().CntxtNm==McMaster.MsgMgr.CntxtNms.SRCH_SUGG?c=!1:c=!0;b=r(b,a,a.MsgPayload().SrchTxt,a.MsgPayload().TS,!1,d,c,e,a.MsgPayload().AllRsltsSlctdInd);s(b)};h.RtrvWebPartCompleteSrch=function(a,d){var b="/WebParts/SrchRsltWebPart/SrchRsltWebPart.aspx?argTxt="+
escape(a.MsgPayload().SrchTxt)+"&srchCompleteInd=true&bldFullHtmlInd=false&newfrmwk=true&targetNm=_parent&cntnrIDtxt=SecondaryContent";"Srch_TxtChged"==a.NM&&(b+="&fastTrack=true");d||(d=!1);var c,e,u;e=a.MsgHdr().CntxtNm==McMaster.MsgMgr.CntxtNms.SRCH_SUGG?c=!1:c=!0;var f=!1,n=a.MsgPayload();u="Srch_TxtChged"===a.NM&&n.AlreadyFastTracked?!1:!0;n&&n.FastTrackingInd&&(f=!0);n=a.MsgPayload().SrchTxt;Cmn.TrkAct({srchTxt:n,fastTracked:f},"SrchRsltWebPartLoader");b=r(b,a,a.MsgPayload().SrchTxt,a.MsgPayload().TS,
!0,d,c,e,a.MsgPayload().AllRsltsSlctdInd);s(b,d,u)};h.PrfrmSpellSuggSrch=function(a){var d="/WebParts/SrchRsltWebPart/SrchRsltWebPart.aspx?argTxt="+escape(a.MsgPayload().SpellingSuggNewArgTxt)+"&srchCompleteInd=true&origTxt="+escape(a.MsgPayload().SpellingSuggOrigTxt)+"&suggTxt="+escape(a.MsgPayload().SpellingSuggTxt)+"&suggSeq="+escape(a.MsgPayload().SpellingSuggSuggSeq)+"&bldFullHtmlInd=false&newfrmwk=true&targetNm=_parent&cntnrIDtxt=SecondaryContent";a=r(d,a,a.MsgPayload().SpellingSuggNewArgTxt,
a.MsgPayload().TS,!0,!1,!1,!0,a.MsgPayload().AllRsltsSlctdInd);s(a)};var s=function(a,d,b){void 0===b&&(b=!0);var c=McMaster.SesnMgr.GetStVal(McMaster.SesnMgr.StValDefs.SrchLastReqArgs.KyTxt());McMaster.SesnMgr.GetStVal(McMaster.SesnMgr.StValDefs.SrchSentReqTxt.KyTxt());y(c.TS,a.TS);McMaster.SesnMgr.SetStVal(McMaster.SesnMgr.StValDefs.SrchLastReqArgs.KyTxt(),a);c=!(void 0==a.SrchTxt||0===a.SrchTxt.length||v.test(a.SrchTxt)||w.test(a.SrchTxt)||x.test(a.SrchTxt));m&&(p+=1,0<p&&k&&McMaster.CnxnMgr.AbortAjaxCnxn(k));
var e=!m;if(c&&e){p=0;c={success:function(c,e){c.ShouldFastTrack=b?!0:!1;a.MsgObj.Nm="UnionRsltSlctd";c.SlctdUnionSrchRsltNmsTxt=a.MsgObj.MsgPayload().SlctdUnionSrchRsltNmsTxt;c.SlctdUnionSrchRsltId=a.MsgObj.MsgPayload().SlctdUnionSrchRsltId;c.TermsUnionSrchRsltNms=a.MsgObj.MsgPayload().TermsUnionSrchRsltNms;c.CoveringUnionSrchRsltNmTxt=a.MsgObj.MsgPayload().CoveringUnionSrchRsltNmTxt;c.CombineUnionIntermediatePagesInd=a.MsgObj.MsgPayload().CombineUnionIntermediatePagesInd;if(c&&0<c.MarkupTxt.length)if(McMaster.SesnMgr.SetStVal(McMaster.SesnMgr.StValDefs.SrchSentReqTxt.KyTxt(),
a),c.DisplRsltsInd=e.displRsltsInd,c.FastTrackDelayInd=e.fastTrackDelayInd,c.loadPrevSesnStInd=a.loadPrevSesnStInd,c.AllRsltsSlctdInd=e.allRsltsSlctdInd,!1===e.displRsltsInd)McMaster.LoadMgr.LoadAssocWebPartFiles(c);else{McMaster.LoadMgr.LoadWebPart(c);var f=McMasterCom.Nav.GetTopFrame();new f.PerfTracker.Evnt(f.PerfTracker.EvntNms.SrchRsltLdrLd,f.PerfTracker.PgCntxtNms.DynCntnt);if(!c.FastTrackRslt||!("object"==typeof c.FastTrackRslt&&null!=c.FastTrackRslt))d&&!0===d||McMaster.SesnMgr.SetStVal(McMaster.SesnMgr.StValDefs.SecondaryContentWebPartNm.KyTxt(),
McMaster.SesnMgr.StValDefs.SecondaryContentWebPartNm.Vals.SRCH_RSLT)}k=null;m=!1},failure:function(a,b){k=null;m=!1},abort:function(a,b){SecondaryContentCoordinator.Reset();k=null;m=!1},cnxnParm:{respTyp:McMaster.CnxnMgr.WEB_PART_RESP_TYP_TXT,fastTrackDelayInd:a.FastTrackDelayInd,displRsltsInd:a.DisplRsltsInd,allRsltsSlctdInd:a.AllRsltsSlctdInd},timeout:1E6};m=!0;switch(!0){case f.ContainsKy(a.CnxnUrl):e=f.Itm(a.CnxnUrl);!0===e?(k=McMaster.CnxnMgr.PerformAjaxCnxn(a.CnxnUrl,c),t(a.MsgObj,FetchAhead.CACHE_STATES.HIT_COMPLETE)):
(k=McMaster.CnxnMgr.ModifyCnxn(e,c),f.Replace(a.CnxnUrl,!0),t(a.MsgObj,FetchAhead.CACHE_STATES.HIT_INFLIGHT));break;default:k=McMaster.CnxnMgr.PerformAjaxCnxn(a.CnxnUrl,c)}z()}},y=function(a,d){var b=McMaster.SesnMgr.GetStVal(McMaster.SesnMgr.StValDefs.SrchReqAvgDelay.KyTxt());b||(b=500,McMaster.SesnMgr.SetStVal(McMaster.SesnMgr.StValDefs.SrchReqAvgDelay.KyTxt(),b));b=a?d-a:b;if(500>b){if(1<g.length)for(var c=1;c<g.length;c++)g[c-1]=g[c];g[g.length-1]=b;for(c=b=0;c<g.length;c++)b+=g[c];McMaster.SesnMgr.SetStVal(McMaster.SesnMgr.StValDefs.SrchReqAvgDelay.KyTxt(),
Math.round(b/g.length))}},r=function(a,d,b,c,e,f,g,h,k){return new function(){this.MsgObj=d;this.TS=c;this.SrchTxt=b;this.CnxnUrl=a;this.CmplSrchInd=e;this.LoadFrmSesnInd=f;this.FastTrackDelayInd=g;this.DisplRsltsInd=h;this.AllRsltsSlctdInd=k}},z=function(){for(var a=f.Keys(),d=a.length,b=0;b<d;b++){var c=a[b],e=f.Itm(c);e&&!0!==e&&(McMaster.CnxnMgr.AbortAjaxCnxn(e),f.Rem(c))}},t=function(a,d){switch(!0){case a&&(a.MsgHdr().CntxtNm===McMaster.MsgMgr.CntxtNms.INTERMEDIATE_PAGE||a.MsgHdr().CntxtNm===
McMaster.MsgMgr.CntxtNms.INTERMEDIATE_PRSNTTN):var b={};b.FetchAheadSource=McMaster.MsgMgr.CntxtNms.INTERMEDIATE_PRSNTTN;b.FetchAheadCacheSt=d;b.SrchTxt=a.MsgPayload().SrchTxt;Cmn.TrkAct(b,"SrchRsltWebPartLoader")}};McMaster.MsgMgr.AddSubscriber(McMaster.MsgMgrMsgs.SrchSubmitted,l);McMaster.MsgMgr.AddSubscriber(McMaster.MsgMgrMsgs.UnionRsltSlctd,l);McMaster.MsgMgr.AddSubscriber(McMaster.MsgMgrMsgs.SrchTxtChged,l);McMaster.MsgMgr.AddSubscriber(McMaster.MsgMgrMsgs.SpellingSuggSlctd,function(a){h.PrfrmSpellSuggSrch(a)});
McMaster.MsgMgr.AddSubscriber(McMaster.MsgMgrMsgs.HomeSlctd,function(a){window.HomePageNavWebPart||(a=McMaster.SesnMgr.GetWebPartDatByCntnrId("SecondaryContent"))&&McMaster.LoadMgr.UnloadWebPart(a)});McMaster.MsgMgr.AddSubscriber(McMaster.MsgMgrMsgs.SrchFetchAheadDatRcvd,function(a){var d=a.MsgPayload();if(!q||q!==d.FetchAheadGrpId)FetchAhead.TrkPredictions(FetchAhead.PREDICT_STATES.PREDICT,d.CurrWebPartIdTxt?d.CurrWebPartIdTxt:"unknown","SrchRsltWebPart"),q=d.FetchAheadGrpId;var d=a.MsgPayload().SrchTxt,
b="/WebParts/SrchRsltWebPart/SrchRsltWebPart.aspx?argTxt="+escape(d)+"&srchCompleteInd=true&bldFullHtmlInd=false&newfrmwk=true&targetNm=_parent&cntnrIDtxt=SecondaryContent";switch(!0){case f.ContainsKy(b):break;default:t(a,FetchAhead.CACHE_STATES.REQUEST),a=McMaster.CnxnMgr.PerformAjaxCnxn(b,{success:function(a,d){f.ContainsKy(b)&&f.Replace(b,!0)},failure:function(){f.Rem(b)},abort:function(){f.Rem(b)},cnxnParm:{respTyp:McMaster.CnxnMgr.WEB_PART_RESP_TYP_TXT}}),f.Add(b,a)}})});


if(this.SiteSettingsWebPartLoader){}else{SiteSettingsWebPartLoader=new function(){var f=this;var a="cntnridtxt";var c=f.loadWebPart;var e="MainContent";var d="/WebParts/SiteSettingsWebPart/SiteSettingsWebPart.aspx";f.RtrvWebPart=function(l,k,i){McMaster.LoadMgr.DisplWaitIcon(e);var j={success:l,cnxnParm:{respTyp:McMaster.CnxnMgr.WEB_PART_RESP_TYP_TXT}};var h=d+"?"+a+"="+e;McMaster.CnxnMgr.PerformAjaxCnxn(h,j);};var g=function(i,h){if(h.NM==McMaster.MsgMgrMsgs.LoginChged.NM){if(Cmn.Get("SiteSettingsWebPartCntnr")==null){}else{f.RtrvWebPart(b,i,h);}}};var b=function(h,i){McMaster.LoadMgr.LoadWebPart(h);};McMaster.MsgMgr.AddSubscriber(McMaster.MsgMgrMsgs.SiteSettingsSlctd,function(h){f.RtrvWebPart(b,false,h);},McMaster.MsgMgr.PRIORITY.HIGH);McMaster.MsgMgr.AddSubscriber(McMaster.MsgMgrMsgs.LoginChged,function(h){g(false,h);},McMaster.MsgMgr.PRIORITY.LOW);};}

if(this.TaxLoader){}else{TaxLoader=new function(){var c=this;var a="/help/Tax.aspx";var b="MainContent";McMaster.MsgMgr.AddSubscriber(McMaster.MsgMgrMsgs.TaxSlctd,function(d){c.RtrvTax(d);});c.RtrvTax=function(e){var d=a;var h=e.MsgPayload();var g;if(h.StateTxt){g=h.StateTxt.toLowerCase();d=a+"?st="+g;}var f={success:function(i){Cmn.GetObj(b).innerHTML=i;}};McMaster.CnxnMgr.PerformAjaxCnxn(d,f);};};}

if(this.MastheadLoginWebPartLoader){}else{MastheadLoginWebPartLoader=new function(){var f=this;var a="cntnridtxt";var c=f.loadWebPart;var e="ShellLayout_MastheadLogin_Cntnr";var d="/WebParts/MastheadLoginWebPart/MastheadLoginWebPart.aspx";f.RtrvWebPart=function(k,j,h){var i={success:k,cnxnParm:{respTyp:McMaster.CnxnMgr.WEB_PART_RESP_TYP_TXT}};var g=d+"?"+a+"="+e;McMaster.CnxnMgr.PerformAjaxCnxn(g,i);};f.HndlWebPartUnloadedMsg=function(k,h,g){var j=Cmn.Get("MastheadLoginUsrCtrlCntnr");if(j&&Cmn.HasCls(j,"MastheadLoginUsrCtrlCntnr_Show")){var i=g.MsgPayload().CntnrNm;if(i&&i.match("IntermediatePageWebPart")){}else{f.RtrvWebPart(k,h,g);}}};var b=function(g,h){McMaster.LoadMgr.LoadWebPart(g);};McMaster.MsgMgr.AddSubscriber(McMaster.MsgMgrMsgs.LoginChged,function(g){f.RtrvWebPart(b,false,g);},McMaster.MsgMgr.PRIORITY.HIGH);McMaster.MsgMgr.AddSubscriber(McMaster.MsgMgrMsgs.CntnctInfoUpdted,function(g){f.RtrvWebPart(b,false,g);},McMaster.MsgMgr.PRIORITY.HIGH);McMaster.MsgMgr.AddSubscriber(McMaster.MsgMgrMsgs.MastheadLoginCanceled,function(g){f.RtrvWebPart(b,false,g);},McMaster.MsgMgr.PRIORITY.HIGH);McMaster.MsgMgr.AddSubscriber(McMaster.MsgMgrMsgs.SgnOutSlctd,function(g){f.RtrvWebPart(b,false,g);},McMaster.MsgMgr.PRIORITY.HIGH);McMaster.MsgMgr.AddSubscriber(McMaster.MsgMgrMsgs.ShellInitContentLoaded,function(g){f.RtrvWebPart(b,false,g);},McMaster.MsgMgr.PRIORITY.MEDIUM);McMaster.MsgMgr.AddSubscriber(McMaster.MsgMgrMsgs.OrdPlcd,function(g){f.RtrvWebPart(b,false,g);},McMaster.MsgMgr.PRIORITY.MEDIUM);McMaster.MsgMgr.AddSubscriber(McMaster.MsgMgrMsgs.WebPartUnloaded,function(g){f.HndlWebPartUnloadedMsg(b,false,g);},McMaster.MsgMgr.PRIORITY.HIGH);};}

if(this.LoginUsrCtrlWebPartLoader){}else{LoginUsrCtrlWebPartLoader=new function(){var f=this;var a="cntnridtxt";var g=function(h){f.RtrvWebPart(b,false,h);};var c=f.loadWebPart;var e="MastheadLoginUsrCtrlCntnr";var d="/WebParts/LoginUsrCtrlWebPart/LoginUsrCtrlWebPart.aspx";f.RtrvWebPart=function(l,k,i){var j={success:l,cnxnParm:{respTyp:McMaster.CnxnMgr.WEB_PART_RESP_TYP_TXT}};var h=d+"?"+a+"="+e;McMaster.CnxnMgr.PerformAjaxCnxn(h,j);};var b=function(h,i){McMaster.LoadMgr.LoadWebPart(h);};McMaster.MsgMgr.AddSubscriber(McMaster.MsgMgrMsgs.CntctInfoUpdtd,function(h){f.RtrvWebPart(b,false,h);},McMaster.MsgMgr.PRIORITY.LOW);};}

if (this.ProdPageWebPart) {
	// class already exists
} else {

this.ProdPageWebPart = new function () {

    var SPEC_SRCH_CNTNR_NM = "SpecSrch_Cntnr";
    var SPEC_SRCH_INNER_CNTNR_NM = "SpecSrch_Inner";
    var SPEC_SRCH_TOGGLE_CNTNR_NM = "SpecSrch_Toggle";
    var PROD_PAGE_CONTENT_CNTNR_NM = "ProdPageContent";
    var MAIN_CONTENT_NM = "MainContent";
    var MAIN_CONTENT_PROD_PAGE_LOADED = "ShellLayout_MainContent_ProdPage_Loaded";
    var ABBR_PREFIX_NM = "Abbr_";
    var ABBR_PRSNTTN_HIGHLIGHTED_CLS = "AbbrPrsnttn_PrsnttnNm_Highlighted";
    var ABBR_PRSNTTN_CTRL_GRP_CLS = "AbbrPrsnttn_PrsnttnNm_CtrlGrp";
    var PART_NBR_HIGHLIGHTED_CLS = "PartNbrOrdrdLnk";
    var HIGHLIGHTING_CTRL_GRP_CLS = "PartNbrOrdrdLnk_CtrlGrp";
    var ATTR_VAL_HIGHLIGHTED_CLS = "SpecChoiceOrdrdLnk";
	var CLS_NM = "ProdPageWebPart";

    var mSpecSrchWdthExpanded = null;
    var mSpecSrchWdthCollapsed = null;

	var mNbrSlctns = 0; // The number of user selections we've observed since this web part has been loaded.
	
    // change to this.WebPart_AssocFilesLoad
    this.WebPart_AssocFilesLoad = function (webPartObj) {

        var specSrchSuppressInd = true,
		dynPageObj = null;
		
        // Manipulate HTML in a DOM fragment
        var fragDiv = document.createElement("div");
        fragDiv.innerHTML = webPartObj.MarkupTxt;
		
		// check so if any presentations or part numbers need to be highlighted.
		// do this for the visitor, then the location
        highlightRelevantPrsnttnMarkup(fragDiv, true);
		highlightRelevantPrsnttnMarkup(fragDiv, false);

        // clear out existing stuff
        Cmn.GetObj(webPartObj.CntnrIDTxt).innerHTML = "";

        // append to DOM
        Cmn.GetObj(webPartObj.CntnrIDTxt).appendChild(fragDiv);

        if (webPartObj && webPartObj.LoadChldWebPartsInd) {

            for (var chldIdx = 0; chldIdx < webPartObj.ChldWebParts.length; chldIdx++) {
                if (webPartObj.ChldWebParts[chldIdx].CntnrIDTxt === SPEC_SRCH_INNER_CNTNR_NM) {
                    specSrchSuppressInd = false;
					
					// A good moment to save off a snapshot of group usr inps on initial load of spec search. 
					// If any such grpUsrInps exist, we want to hold them and not roll them back with spec search "Clear all."
					// If there is no grpUsrInp in scope anymore (navigate to another page), allow this code to clear out the session.
					var grpUsrInp = GrpUsrInp.Get();
					if (grpUsrInp) {
						var mGrpUsrInps = grpUsrInp.mGrpUsrInps;
						McMaster.SesnMgr.SetStVal(McMaster.SesnMgr.StValDefs.GrpUsrInpsWhenSpecSrchLoads.KyTxt(), mGrpUsrInps);		
					}
					
					//HACK: if there are no specs selected except a group user input that matches the snapshot group user input, hide the clear all link
					//This hides the link on initial load. The link is hidden when we get back to just the snapshot grp
					var specSrchInp = SpecSrchInp.Get();
					var prsnttnUsrInp = PrsnttnUsrInp.Get();
					var imgUsrInp = ImgUsrInp.Get();
					var currGrpUsrInp = GrpUsrInp.Get();
					if (specSrchInp.GetSelectionCnt() == 0 && prsnttnUsrInp.GetSelectionCnt() == 0 && imgUsrInp.GetSelectionCnt() == 0 && currGrpUsrInp.GetSelectionCnt() == 1) {
						var clearAll = Cmn.GetElementsByClsNm("SpecSrch_ClearAllLnk", "div", fragDiv);														
						if (clearAll) {
							Cmn.SetStyle(clearAll[0], "display", "none");
						}						
					}

                    break;
                };
            };
        };

        //initialize SpecsSrchSuppressInd
        McMaster.SesnMgr.SetStVal(McMaster.SesnMgr.StValDefs.SpecsSrchSuppressInd.KyTxt(), specSrchSuppressInd);

		this.PostWebPartLoad();
		
		var specSrchSuppressInd = McMaster.SesnMgr.GetStVal(McMaster.SesnMgr.StValDefs.SpecsSrchSuppressInd.KyTxt());
        SecondaryContentCoordinator.ContentReady("prodpage", specSrchSuppressInd);			
		
        // create and publish a web part loaded message
        var msgHdr = new McMaster.MsgMgr.Hdr(McMaster.MsgMgr.CntxtNms.PROD_PAGE);
        var msg = new McMaster.MsgMgrMsgs.WebPartLoaded(msgHdr,
                                                 webPartObj.CntnrIDTxt);
        McMaster.MsgMgr.PubMsg(msg);



    };

	this.PostWebPartLoad = function() {
        resizeContentContainers();

        McMaster.MsgMgr.AddSubscriber(McMaster.MsgMgrMsgs.MainContentCntnrResized, resizeContentContainers, McMaster.MsgMgr.PRIORITY.HIGH);
        McMaster.MsgMgr.AddSubscriber(McMaster.MsgMgrMsgs.ChooseSpecsStatChg, resizeContentContainers, McMaster.MsgMgr.PRIORITY.HIGH);
		McMaster.MsgMgr.AddSubscriber(McMaster.MsgMgrMsgs.ProdInfoSlctd, trkSpecSrchOrContentRelevance, McMaster.MsgMgr.PRIORITY.HIGH);
		
	};

    //---------------------------------------------------------------------
    // Summary: Publishes a message indicating that all child webparts
    //			have been loaded
    // Remarks: Will be called once the webpart is finished loading
    // Input: The web part that's done loading.
    //---------------------------------------------------------------------
    this.WebPart_LoadCmpl = function (webPartObj) {
        var trkEvnt;
        //Performance Tracking
		var top = McMasterCom.Nav.GetTopFrame();
        trkEvnt = new top.PerfTracker.Evnt(top.PerfTracker.EvntNms.ProdPageLoadCmplBgn, top.PerfTracker.PgCntxtNms.DynCntnt);

        SecondaryContentCoordinator.ContentLoadCmplt("prodpage");

        // update session
        McMaster.SesnMgr.SetStVal(McMaster.SesnMgr.StValDefs.ProdPageReloadingInd.KyTxt(), false);

        //set indicator to let us know that we have specs. We will use this later on to determine whether to
        //show the spec search pane when de-selecting a filtered image.
        if (McMaster.SesnMgr.GetStVal(McMaster.SesnMgr.StValDefs.ChooseSpecsStat.KyTxt()) == "EXPANDED") {
            McMaster.SesnMgr.SetStVal(McMaster.SesnMgr.StValDefs.HasSpecSrchInd.KyTxt(), true);
            McMaster.SesnMgr.SetStVal(McMaster.SesnMgr.StValDefs.SrchRsltIdForSpecSrch.KyTxt(),
	        						  McMaster.SesnMgr.GetStVal(McMaster.SesnMgr.StValDefs.DynamicPageSrchRsltId.KyTxt()));
        } else {
            McMaster.SesnMgr.SetStVal(McMaster.SesnMgr.StValDefs.HasSpecSrchInd.KyTxt(), false);
            McMaster.SesnMgr.SetStVal(McMaster.SesnMgr.StValDefs.SrchRsltIdForSpecSrch.KyTxt(), null);
        }

        //Set the tracking event and spec search complete indicator, and then track the transaction
		var top = McMasterCom.Nav.GetTopFrame();
        trkEvnt = new top.PerfTracker.Evnt(top.PerfTracker.EvntNms.ProdPageLoadCmplEnd, top.PerfTracker.PgCntxtNms.DynCntnt);

    };

    // takes care of anything that needs to be done before markup is destroyed
    this.WebPart_PreUnload = function (webPartObj) {
        //Hide the specification search frame
        //Abort any stale AJAX requests
        SpecSrchWebPartLoader.AbortStaleReq();

        SpecSrchWebPart.SpecInfo.Unload();

        SpecSrchWebPartLoader.Hide();
        // HACK: CLEARS LISTENERS FROM SPEC SEARCH CONTAINER

        // when other pages load to replace product page they also subscribe to some ..._slctd message with high priority,
        // because of this unload container might happen before SSWPLoader.UnloadWebPart or PPWPLoader.UnloadWebPart is reached.

        // Also, children web parts unload before parent.
        // Also, spec search has special logic not to reatach its event listeners every time it loads (performance hack)
        // Because of all above, we need to do take care of some stuff before spec search mark up is destroyed in unload container.

        var cntnr = Cmn.GetObj(SPEC_SRCH_INNER_CNTNR_NM);
        Cmn.RemEvntListeners(cntnr, "click");
        Cmn.RemEvntListeners(cntnr, "mouseover");
        Cmn.RemEvntListeners(cntnr, "mouseout");
        Cmn.RemEvntListeners(cntnr, "select");
        Cmn.RemEvntListeners(cntnr, "selectstart");
        Cmn.RemEvntListeners(cntnr, "keyup");
        Cmn.RemEvntListeners(document, "click");

        //unload pinned content
        this.PinnedCollUnload();

        //unload local variable in full presentation web part
        McMasterCom.Nav.GetTopFrame().FullPrsnttnWebPart.ClearPrsnttnIdSeenCntVar();
    };

    // -------------------------------------------------
    // Summary: Performs cleanup when the web part is unloaded.
    //
    // Inputs:
    //	webPartObj - the web part object
    // --------------------------------------------------		
    this.WebPart_Unload = function (webPartObj) {

        McMaster.MsgMgr.RemSubscriber(McMaster.MsgMgrMsgs.MainContentCntnrResized, resizeContentContainers);
        McMaster.MsgMgr.RemSubscriber(McMaster.MsgMgrMsgs.ChooseSpecsStatChg, resizeContentContainers);
		McMaster.MsgMgr.RemSubscriber(McMaster.MsgMgrMsgs.ProdInfoSlctd, trkSpecSrchOrContentRelevance);
		mNbrSlctns = 0; // Reset counter of user selections.

        McMaster.SesnMgr.RemStVal(McMaster.SesnMgr.StValDefs.SpecsSrchSuppressInd.KyTxt());

        // Padding on mainContent is overridden when product page is loaded.
        var mainContentElem = Cmn.GetObj(MAIN_CONTENT_NM);
        if (Cmn.HasCls(mainContentElem, MAIN_CONTENT_PROD_PAGE_LOADED)) {
            Cmn.RemCls(mainContentElem, MAIN_CONTENT_PROD_PAGE_LOADED);
        }

        // publish product page unloaded message
        if (McMaster.SesnMgr.GetStVal(McMaster.SesnMgr.StValDefs.ProdPageReloadingInd.KyTxt()) == false) {

            //publish a message to indicate that it is moving away from dynamic content
            // This is not just a reload of the Dynamic page
            var msgHdr = new McMaster.MsgMgr.Hdr(McMaster.MsgMgr.CntxtNms.PROD_PAGE);
            var msg = new McMaster.MsgMgrMsgs.ProdPageUnloaded(msgHdr);
            McMaster.MsgMgr.PubMsg(msg);

        }

        // create and publish a web part unloaded message
        var msgHdr = new McMaster.MsgMgr.Hdr(McMaster.MsgMgr.CntxtNms.PROD_PAGE);
        var msg = new McMaster.MsgMgrMsgs.WebPartUnloaded(msgHdr,
                                                              webPartObj.CntnrIDTxt);
        McMaster.MsgMgr.PubMsg(msg);

    };


    //---------------------------------------------------------------------
    // Summary: Unload pinned contents
    //---------------------------------------------------------------------
    this.PinnedCollUnload = function () {
        //load sticky presentations	
        McMasterCom.Nav.GetTopFrame().PinnedPrsnttns.Unload();
    };

    //---------------------------------------------------------------------
    // Summary: Expand and collapse choose specs
    //---------------------------------------------------------------------
    this.ExpandCollapseSpecSrch = function () {

        var specSrchObj = Cmn.GetObj(SPEC_SRCH_INNER_CNTNR_NM);
        var specSrchStat;

        //ANALYTICS
        var d = new Date();
        var hour = d.getHours() + 1;
        var min = d.getMinutes();
        var sec = d.getSeconds();
        var mTimeOfAction = '' + hour + min + sec;

        if (specSrchObj.style.display == 'none') {
            specSrchObj.style.display = '';
            specSrchStat = 'EXPANDED';
            if (Cmn.DetectBrowser() == "IE 6.0") {
                var specSrchCntnr = Cmn.GetObj(SPEC_SRCH_CNTNR_NM);
                specSrchCntnr.style.width = 214 + "px";
            }
        }
        else {
            specSrchObj.style.display = 'none';
            specSrchStat = 'COLLAPSED';
            if (Cmn.DetectBrowser() == "IE 6.0") {
                var specSrchCntnr = Cmn.GetObj(SPEC_SRCH_CNTNR_NM);
                specSrchCntnr.style.width = 10 + "px";
            }
        }

        //update choose spec state and publish message
        McMaster.SesnMgr.SetStVal(McMaster.SesnMgr.StValDefs.ChooseSpecsStat.KyTxt(), specSrchStat);

        // Publish the MainContent Container Resized message
        var hdr = new McMaster.MsgMgr.Hdr(McMaster.MsgMgr.CntxtNms.PROD_PAGE);
        var msg = new McMaster.MsgMgrMsgs.MainContentCntnrResized(hdr);
        McMaster.MsgMgr.PubMsg(msg);

        var specSrchStatMsg = new McMaster.MsgMgrMsgs.ChooseSpecsStatChg(new McMaster.MsgMgr.Hdr(McMaster.MsgMgr.CntxtNms.CHOOSE_SPECS), specSrchStat);
        McMaster.MsgMgr.PubMsg(specSrchStatMsg);
    };

    // Determine the width of the Choose Specs container. Remember the value so we minimize DOM traversal.
    this.GetSpecSrchWdth = function () {
        var rtnSpecSrchWdth = 0;
        var SPEC_SRCH_MARGIN = 10;

        // Check choose specs container status
        var specSrchStat = McMaster.SesnMgr.GetStVal(McMaster.SesnMgr.StValDefs.ChooseSpecsStat.KyTxt());

        switch (specSrchStat) {
            case null:
            case "HIDDEN":
                rtnSpecSrchWdth = 0;
                break;

            case "COLLAPSED":
                if (mSpecSrchWdthCollapsed == null) {
                    var specSrchElem = Cmn.GetObj(SPEC_SRCH_CNTNR_NM);
                    mSpecSrchWdthCollapsed = Cmn.GetWidth(specSrchElem)
                                        + SPEC_SRCH_MARGIN;
                }
                rtnSpecSrchWdth = mSpecSrchWdthCollapsed;
                break;

            case "EXPANDED":

                mSpecSrchWdthExpanded = 210;
                rtnSpecSrchWdth = mSpecSrchWdthExpanded;
                break;
        }

        return rtnSpecSrchWdth;
    };
	
	// ----------------------------------------------------------------
	// Summary: Track the first click a user makes when presented with
	//			spec search and content. We track what the user clicked
	//			on, visual position of the selection on the page, and
	//			whether that selection was visible when the page loaded.
	// ----------------------------------------------------------------
	var trkSpecSrchOrContentRelevance = function(msgObj) {
	
		if (mNbrSlctns > 0) {
			// Do nothing.
			// We only track the first selection from either spec search or content.
		} else {
			// Track in webreports.
			var trkObj = {};
			trkObj.SlctnCntxt = msgObj.MsgPayload().SlctnCntxt;
			trkObj.SlctnNmTxt = msgObj.MsgPayload().SlctnNmTxt;
			trkObj.SlctnPosNbr = msgObj.MsgPayload().SlctnPosNbr;
			trkObj.SlctnAbvFoldInd = msgObj.MsgPayload().SlctnAbvFoldInd;
			Cmn.TrkAct(trkObj, CLS_NM);
		}
		
		mNbrSlctns = mNbrSlctns + 1;
		
	};

    // -------------------------------------------------------------
    // Summary: Method to resize prod page containers when
    //		when the window is resized by the user or specsearch status changes.
    //      called in response to maincontent resizing.    
    // -------------------------------------------------------------			
    var resizeContentContainers = function () {

        var SPEC_SRCH_HEIGHT_OFFSET = 2;

        // Set the height of the content container
        // Safari requires the appended "px"
        var mainContentPxHeight = Shell.GetMainContentHeight();


        Cmn.SetStyle(SPEC_SRCH_INNER_CNTNR_NM, "height", (mainContentPxHeight - SPEC_SRCH_HEIGHT_OFFSET) + "px");
        Cmn.SetStyle(SPEC_SRCH_TOGGLE_CNTNR_NM, "height", (mainContentPxHeight - SPEC_SRCH_HEIGHT_OFFSET) + "px");
        Cmn.SetStyle(PROD_PAGE_CONTENT_CNTNR_NM, "height", mainContentPxHeight + "px");



        // Set the width of the Product Page Content
        //set product page width.
        // there is an extra 2 px added, to be compatible to maincontent.
        // Why maincontent has extra 2 px added to padding manually? Solves some bug?

        // Determine the width of the Spec Search container
        var chooseSpecsWdth = ProdPageWebPart.GetSpecSrchWdth();
        var mainContentPxWidth = Shell.GetMainContentWidth();
        var prodPageContentWdth = mainContentPxWidth - chooseSpecsWdth
                     - parseInt(Cmn.GetStyle(PROD_PAGE_CONTENT_CNTNR_NM, "padding-right"))
                     - parseInt(Cmn.GetStyle(PROD_PAGE_CONTENT_CNTNR_NM, "padding-left")) - 2;

        Cmn.SetStyle(PROD_PAGE_CONTENT_CNTNR_NM, "width", prodPageContentWdth + "px");

    };
    this.ResizeContentCntnrs = resizeContentContainers;
    // -------------------------------------------------------------------------------
    // Summary: Method to highlight abbreviated presentations 
    //          and part numbers from which customers have 
    //          purchased in the past.
    // Note: The flow for highlighting abbreviated presentations is as follows:
    //       (Assuming there are abbreviated presentations on the page)
    //       1). We have ordered something from a particular presentation in the past.
    //       2). Determine if the ordered part numbers for a particular presentation
    //           also have been tied to a previously ordered "search result id". The
    //           reason for this is because we filter part numbers that ultimately 
    //           displayed on the page. So the logic goes, if we are not displaying any
    //           purple part number links under the displayed presentation, then don't
    //           make the presentation purple.
    // -------------------------------------------------------------------------------	
    var highlightRelevantPrsnttnMarkup = function (rootElem, vstrPrtInd) {

        var len = 0
		   , lenOfArray = 0
		   , srchIDPartsObj = {}
		   , srchIDPartNbrArray = []
		   , prsnttnsToHighlight = McMaster.SesnMgr.GetStVal(McMaster.SesnMgr.StValDefs.FndAgainPrsnttnIdsToHighlight.KyTxt())
		   , orderedSpecIdVals = McMaster.SesnMgr.GetStVal(McMaster.SesnMgr.StValDefs.FndAgainSpecIdValsToParts.KyTxt());
		
		//set prtNbrsToHighlight as either visitor or location part numbers
		if (vstrPrtInd){
			var prtNbrsToHighlight = McMaster.SesnMgr.GetStVal(McMaster.SesnMgr.StValDefs.FndAgainPrtNbrsToHighlight.KyTxt())
		}else{
			var prtNbrsToHighlight = McMaster.SesnMgr.GetStVal(McMaster.SesnMgr.StValDefs.FndAgainLocPrtNbrsToHighlight.KyTxt())
		}

        // check for abbreviated presentations to highlight
        if (Cmn.IsEmpty(prsnttnsToHighlight) == false) {
            var abbr_prefix_nm_lngth = parseInt(ABBR_PREFIX_NM.length);
            var prsnttnElemsOnPage = Cmn.GetElementsByClsNm("AbbrPrsnttn", "div", rootElem);
            len = prsnttnElemsOnPage.length; // performance boost by saving off the length
            if (prsnttnElemsOnPage && len > 0) {
                var srchResultIdsAndPartNbrs = McMaster.SesnMgr.GetStVal(McMaster.SesnMgr.StValDefs.FndAgainSearchIdsToParts.KyTxt());
                var srchRsltID = getSrchId();
                if (Cmn.IsEmpty(srchResultIdsAndPartNbrs) == false &&
 				    srchRsltID != undefined && srchRsltID > 0 &&
					srchResultIdsAndPartNbrs[srchRsltID]) {
                    srchIDPartNbrArray = srchResultIdsAndPartNbrs[srchRsltID].split("|");
                    lenOfArray = srchIDPartNbrArray.length;
                    // Load up our search result ID's to part number array
                    for (var i = 0; i < lenOfArray; i++) {
                        srchIDPartsObj[srchIDPartNbrArray[i]] = '0';
                    }
                    for (var i = 0; i < len; i++) {
                        // Remove the text characters from the ID in order to use just the numeric portion.
                        var currPrsnttnId = prsnttnElemsOnPage[i].id.substring(abbr_prefix_nm_lngth);
                        if (prsnttnsToHighlight[currPrsnttnId]) {
                            // Double check to ensure we have ordered any displayed part numbers under the current presentation
                            // for a given search result. Just b/c we ordered from a given presentation before does not mean
                            // we want to highlight it. Only if there are purple part nbrs under it.
                            var highlightItInd = false;
                            var prsnttnIDPartNbrArray = prsnttnsToHighlight[currPrsnttnId].split("|");
                            lenOfArray = prsnttnIDPartNbrArray.length;
                            for (var ii = 0; ii < lenOfArray; ii++) {
                                if (srchIDPartsObj[prsnttnIDPartNbrArray[ii]]) {
                                    highlightItInd = true;
                                }
                            }
                            if (highlightItInd) {
                                Cmn.AddCls(prsnttnElemsOnPage[i], ABBR_PRSNTTN_HIGHLIGHTED_CLS);
                            }
                        }
                    }
                }
            }
        }

        // Check for part numbers to highlight
        if (Cmn.IsEmpty(prtNbrsToHighlight) == false) {
            var prtNbrElemsOnPage = Cmn.GetElementsByClsNm("PartNbrLnk", "a", rootElem);
            len = prtNbrElemsOnPage.length; // performance boost by saving off the length
            if (prtNbrElemsOnPage && len > 0) {
                for (var i = 0; i < len; i++) {
                    var currPrtNbr = prtNbrElemsOnPage[i].getAttribute("data-mcm-partnbr");
                    if (currPrtNbr.length > 0 && prtNbrsToHighlight[currPrtNbr]) {
                        //set hover text according to whether we are looking at visitor or location part number
						if (vstrPrtInd){
							prtNbrElemsOnPage[i].setAttribute('title', 'You ordered this product previously.');
						}else{
							if (Cmn.HasCls(prtNbrElemsOnPage[i], PART_NBR_HIGHLIGHTED_CLS)){
								//Part was bought by the visitor; do nothing
							}else{
								prtNbrElemsOnPage[i].setAttribute('title', 'Your company ordered this product previously.');
							}
						}
						Cmn.AddCls(prtNbrElemsOnPage[i], PART_NBR_HIGHLIGHTED_CLS);
                    }
                }
            }
        }

        // Check for attribute value links to highlight for ordered part numbers 
        if (Cmn.IsEmpty(orderedSpecIdVals) == false) {

			// Ensure compatibility of code below with IE<9 browsers, support Array.indexOf
			if (!('indexOf' in Array.prototype)) {
				Array.prototype.indexOf= function(find, i /*opt*/) {
					if (i===undefined) i= 0;
					if (i<0) i+= this.length;
					if (i<0) i= 0;
					for (var n= this.length; i<n; i++)
					if (i in this && this[i]===find)
						return i;
					return -1;
				}
			};

			var specChoiceLnksOnPage = Cmn.GetElementsByClsNm("SpecChoiceLnk", "a", rootElem);
            var len = specChoiceLnksOnPage.length; // performance boost by saving this off	
            if (len > 0) {
                for (var i = 0; i < len; i++) {
                    var partNbrMatchInd = false;
                    var relatedPartNbr = FullPrsnttnWebPart.getClickablePartNbrCell(Cmn.GetAncestorByTagNm(specChoiceLnksOnPage[i], "td"));
                    if (relatedPartNbr != null) {
                        var currPartNbr = relatedPartNbr.getAttribute("data-mcm-partnbr");
                        var attrCompIdsTxt = relatedPartNbr.getAttribute("data-mcm-attr-comp-itm-ids");
                        if (attrCompIdsTxt) {
                            var attrCompIdList = attrCompIdsTxt.split(",");
                        }
                        if (currPartNbr && prtNbrsToHighlight[currPartNbr]) {
                            var currSpecProdId = specChoiceLnksOnPage[i].getAttribute("data-mcm-prod-attr-id");
                            var currSpecProdValId = specChoiceLnksOnPage[i].getAttribute("data-mcm-prod-attrval-id");
                            var prodValIdPair = currSpecProdId + ";" + currSpecProdValId;
                            if (orderedSpecIdVals[prodValIdPair]) {
                                var specPartNbrArray = orderedSpecIdVals[prodValIdPair].split("|");
                                for (var j = 0; j < specPartNbrArray.length; j++) {
                                    if (specPartNbrArray[j] === currPartNbr ||
									(attrCompIdList &&
									 attrCompIdList.indexOf(prtNbrsToHighlight[specPartNbrArray[j]]) >= 0)) {
                                        partNbrMatchInd = true;
                                        break;
                                    }
                                }
                                if (partNbrMatchInd) {
                                    Cmn.AddCls(specChoiceLnksOnPage[i], ATTR_VAL_HIGHLIGHTED_CLS);
                                }
                            }
                        }
                    }
                }
            }
        }
    };

    // -------------------------------------------------------------
    // Returns the search result ID.
    // Remarks: The SlctdSrchRsltId might be null, i.e. if the customer
    // 			has selected a part number causing the search result 
    //			web part to unload.  Accordingly, we check both that
    //			session value and the DynamicPageSrchRsltId, which is
    //			initialized by the DynamicContentCoordinator.
    // -------------------------------------------------------------
    var getSrchId = function () {
        return McMaster.SesnMgr.GetStVal(McMaster.SesnMgr.StValDefs.SlctdSrchRsltId.KyTxt())
			|| McMaster.SesnMgr.GetStVal(McMaster.SesnMgr.StValDefs.DynamicPageSrchRsltId.KyTxt());
    };

    // --------------------------------------------------
    // Summary: Gets the name of the abbreviated presentation
    //			to track.
    // Inputs: An HTML node
    // --------------------------------------------------
    // var getAbbrPrsnttnTrackingTxt = function (node){
    // var prsnttnHdrElems = Cmn.GetElementsByClsNm("AbbrPrsnttn_PrsnttnNm", "h3", node );
    // if (prsnttnHdrElems.length > 0 ){
    // var trackingTxt = Cmn.GetTxtContent(prsnttnHdrElems[0]);
    // }
    // return trackingTxt;
    // }
}             // end definition of ProdPageWebPart

} // end check for ProdPageWebPart

if(this.ContentWebPart){}else{this.ContentWebPart=new function(){var g="Abbr_",d="AbbrPrsnttn_PrsnttnNm_Highlighted",j="AbbrPrsnttn_PrsnttnNm_CtrlGrp",a="PartNbrOrdrdLnk",c="PartNbrOrdrdLnk_CtrlGrp",h="SpecChoiceOrdrdLnk";this.WebPart_AssocFilesLoad=function(k){var l=document.createElement("div");l.innerHTML=k.MarkupTxt;b(l,true);b(l,false);Cmn.GetObj(k.CntnrIDTxt).innerHTML="";Cmn.GetObj(k.CntnrIDTxt).appendChild(l);};this.WebPart_PreUnload=function(k){McMaster.MsgMgr.RemSubscriber(McMaster.MsgMgrMsgs.FetchAheadDatRcvd,ContentWebPartLoader.HndlFetchAheadDat);};this.WebPart_LoadCmpl=function(k){McMaster.MsgMgr.AddSubscriber(McMaster.MsgMgrMsgs.FetchAheadDatRcvd,ContentWebPartLoader.HndlFetchAheadDat);};var b=function(l,p){var H=0,A=0,L={},I=McMaster.SesnMgr.GetStVal(McMaster.SesnMgr.StValDefs.SpecUsrInps.KyTxt()),w=McMaster.SesnMgr.GetStVal(McMaster.SesnMgr.StValDefs.FndAgainPrsnttnIdsToHighlight.KyTxt()),N=McMaster.SesnMgr.GetStVal(McMaster.SesnMgr.StValDefs.FndAgainSpecIdValsToParts.KyTxt()),K={},x=[];if(p){var J=McMaster.SesnMgr.GetStVal(McMaster.SesnMgr.StValDefs.FndAgainPrtNbrsToHighlight.KyTxt());}else{var J=McMaster.SesnMgr.GetStVal(McMaster.SesnMgr.StValDefs.FndAgainLocPrtNbrsToHighlight.KyTxt());}if(Cmn.IsEmpty(w)==false){var m=parseInt(g.length);var n=Cmn.GetElementsByClsNm("AbbrPrsnttn","div",l);H=n.length;if(n&&H>0){var O=McMaster.SesnMgr.GetStVal(McMaster.SesnMgr.StValDefs.FndAgainSearchIdsToParts.KyTxt());var B=i();if(Cmn.IsEmpty(O)==false&&B!=undefined&&B>0&&O[B]){x=O[B].split("|");A=x.length;for(var F=0;F<A;F++){L[x[F]]="0";}for(var F=0;F<H;F++){var y=n[F].id.substring(m);if(w[y]){var s=false;var D=w[y].split("|");var v=e(L,D);if(v==true){if(Cmn.IsEmpty(I)==true||Cmn.IsEmpty(N)==true){s=true;}else{s=f(I,N,D);}}if(s){Cmn.AddCls(n[F],d);}}}}}}if(!("indexOf" in Array.prototype)){Array.prototype.indexOf=function(S,R){if(R===undefined){R=0;}if(R<0){R+=this.length;}if(R<0){R=0;}for(var T=this.length;R<T;R++){if(R in this&&this[R]===S){return R;}}return -1;};}if(Cmn.IsEmpty(J)==false){var o=Cmn.GetElementsByClsNm("PartNbrLnk","a",l);H=o.length;if(o&&H>0){for(var F=0;F<H;F++){var r=o[F].getAttribute("data-mcm-partnbr");if(r.length>0&&J[r]){if(p){o[F].setAttribute("title","You ordered this product previously.");}else{if(Cmn.HasCls(o[F],a)){}else{o[F].setAttribute("title","Your company ordered this product previously.");}}Cmn.AddCls(o[F],a);}}}if(Cmn.IsEmpty(N)==false){var Q=Cmn.GetElementsByClsNm("SpecChoiceLnk","a",l);var H=Q.length;if(H>0){for(var F=0;F<H;F++){var q=false;var E=FullPrsnttnWebPart.getClickablePartNbrCell(Cmn.GetAncestorByTagNm(Q[F],"td"));if(E!=null){var z=E.getAttribute("data-mcm-partnbr");var M=E.getAttribute("data-mcm-attr-comp-itm-ids");if(M){var k=M.split(",");}if(z&&J[z]){var G=Q[F].getAttribute("data-mcm-prod-attr-id");var P=Q[F].getAttribute("data-mcm-prod-attrval-id");var u=G+";"+P;if(N[u]){var t=N[u].split("|");for(var C=0;C<t.length;C++){if(t[C]===z||(k&&k.indexOf(J[t[C]])>=0)){q=true;break;}}if(q){Cmn.AddCls(Q[F],h);}}}}}}}}};var i=function(){return McMaster.SesnMgr.GetStVal(McMaster.SesnMgr.StValDefs.SlctdSrchRsltId.KyTxt())||McMaster.SesnMgr.GetStVal(McMaster.SesnMgr.StValDefs.DynamicPageSrchRsltId.KyTxt());};var e=function(k,o){var m=false;var n=o.length;for(var l=0;l<n;l++){if(k[o[l]]){m=true;break;}}return m;};var f=function(u,q,y){var r=true;for(var z in u.SpecSrchFilters){if(u.SpecSrchFilters.hasOwnProperty(z)){var p=u.SpecSrchFilters[z];for(var l in p){if(p.hasOwnProperty(l)){if(l=="SlctdVals"){var w=p[l];var k=0;for(var s in w){if(w.hasOwnProperty(s)){++k;}}if(k>0){if(k==1){for(var m in w){if(w.hasOwnProperty(m)){var v=z+";"+m;if(q[v]){var t=q[v].split("|");var x={};for(var o=0;o<t.length;o++){if(x[t[o]]){}else{x[t[o]]="0";}}var n=false;for(var o=0;o<y.length;o++){if(x[y[o]]){n=true;}}if(n==false){return false;}}else{return false;}}}}else{var n=false;for(var m in w){if(w.hasOwnProperty(m)){var v=z+";"+m;if(q[v]){var t=q[v].split("|");var x={};for(var o=0;o<t.length;o++){if(x[t[o]]){}else{x[t[o]]="0";}}for(var o=0;o<y.length;o++){if(x[y[o]]){n=true;}}}}}if(n==false){return false;}}}}}}}}return r;};};}

this.HomePageNavWebPart||(HomePageNavWebPart=new function(){var f=McMaster.MsgMgr,g=McMaster.MsgMgrMsgs,n=McMaster.SesnMgr.SetStVal,l=McMaster.SesnMgr.StValDefs,s=McMaster.SesnMgr.GetStVal,e=null,k={},m=new f.Hdr(f.CntxtNms.HOME_PAGE_NAV);this.WebPart_AssocFilesLoad=function(a){var b=Cmn.GetObj("HomePageNavigation");if(!b){Cmn.GetObj(a.CntnrIDTxt).innerHTML=a.MarkupTxt;for(var b=Cmn.GetObj("HomePageNavigation"),d=0;d<a.Catgs.length;d++){var c=a.Catgs[d];k[c.CatgID]=c}Cmn.AddEvntListener(b,"click",
t);Cmn.AddCls(Cmn.GetObj("HomePageCatgs"),"visible")}p();f.PubMsg(new g.WebPartLoaded(m,a.CntnrIDTxt))};this.WebPart_PreUnload=function(a){Cmn.RemEvntListener(Cmn.GetObj("HomePageNavigation"),"click");f.RemSubscriber(g.HomePageCatgSlctd,q)};this.WebPart_Unload=function(a){k={};e=null;f.PubMsg(new g.WebPartUnloaded(m,a.CntnrIDTxt))};var t=function(a){var b=null,d=null;a&&(b=Cmn.GetEvntTarget(a),b="A"==b.tagName.toUpperCase()?b:Cmn.GetAncestorByTagNm(b,"A"));if(b){Cmn.PreventDeflt(a);for(var c=b.id,
e=Cmn.Utilities.Values(k),d=a=null,h=0;h<e.length;h++)if(e[h].HTMLID===c){d=e[h].CatgNm;a=e[h].CatgID;break}n(l.HomePageSlctdCatgTxt.KyTxt(),d);n(l.HomePageSlctdCatgID.KyTxt(),a);c=new g.HomePageCatgSlctd(m);c.MsgPayload().UsrInpTxt=d;f.PubMsg(c);c=new SrchTrkr.SrchDat({usr:SrchTrkr.UsrActTyps.SLCT});c.usr.srcNm="HomePageNavWebPart";c.usr.elemTyp=SrchTrkr.ElemTyps.HOME_PAGE_CATG_NM;c.usr.slctdNm=decodeURIComponent(d);c.usr.slctdID=a;c.usr.slctdElemXYPosn=Cmn.GetXOffset(b)+","+Cmn.GetYOffset(b);c.Trk()}},
r=function(a,b){var d=Cmn.GetObj(a);d&&Cmn.ReplaceCls(d,d.className,b)},p=function(){var a=s(l.HomePageSlctdCatgID.KyTxt()),a=(a=k[a])?a.HTMLID:null;a!=e&&(r(e,"HomePageNavCatgLnk"),r(a,"HomePageNavCatgLnk_Selected"),e=a)},q=function(a){p();a.MsgPayload().UsrInpTxt&&(a=a.MsgPayload().UsrInpTxt.Trim(),Cmn.TrkAct({SelectedCategory:a},"HomePage"))};f.AddSubscriber(g.HomePageCatgSlctd,q)});


this.HomePageWebPart||(this.HomePageWebPart=new function(){var h=this,k=null,n=null,r=new McMaster.MsgMgr.Hdr(McMaster.MsgMgr.CntxtNms.HOME_PAGE),p=null,s=null;h.WebPart_AssocFilesLoad=function(c){p=c.mCatgImgs;k=Cmn.GetObj(c.CntnrIDTxt);n=c.CatgIDTbl;s=c.DisplayCatgs;var a=Cmn.GetObj("MainContent"),b=Cmn.GetObj("ShellLayout_SecondaryContent_Cntnr");Cmn.HasCls(b,"ShellLayout_SecondaryContent_Cntnr_SecondaryContent_Collapsed")&&Cmn.AddCls(a,"CollapsedSecondaryContent");var b=document.getElementById("HomePage"),
d=McMaster.SesnMgr.GetStVal(McMaster.SesnMgr.StValDefs.HomePageSlctdCatgTxt.KyTxt()),f=!1,a=Cmn.GetObj("ShellLayout_Cntnr");b||(b=document.createElement("div"),b.innerHTML=c.MarkupTxt,b=b.childNodes[0],hpContentCntnr=b.childNodes[1],t(hpContentCntnr),f=!0,Cmn.AddEvntListener(b,"click",v),Cmn.AddEvntListener(k,"scroll",h.LoadVisibleImgs));var e=b,g=McMaster.SesnMgr.GetStVal(McMaster.SesnMgr.StValDefs.HomePageSlctdCatgID.KyTxt());if(g){WebToolsetWebPart.HideAllTxtTools(Cmn.GetObj("HomePageTitl"));for(var g=
n[g],e=Cmn.GetElementsByClsNm("catg","div",e),q=0;q<e.length;q++){var m=e[q],l=Cmn.GetFrstChld(m);q==g?(Cmn.RemCls(m,"hidden"),Cmn.AddCls(l,"noBorder")):(Cmn.AddCls(m,"hidden"),Cmn.RemCls(l,"noBorder"))}}null==McMaster.SesnMgr.GetStVal(McMaster.SesnMgr.StValDefs.BrowserProcSpeed.KyTxt())&&(e=McMaster.SesnMgr.GetStVal(McMaster.SesnMgr.StValDefs.HomePageSlctdEntryScrollTop.KyTxt()),g=(new Date).getTime(),k&&Cmn.SetVerticalScrollPosn(k,e),e=(new Date).getTime(),McMaster.EnvrMgr.ProfClntSpeed("HomePageVertScrollTm",
e-g));d?Cmn.ReplaceCls(a,"lowres","highres"):(d=window.innerWidth||document.documentElement.clientWidth,800>d&&1<d?Cmn.ReplaceCls(a,"highres","lowres"):Cmn.ReplaceCls(a,"lowres","highres"),McMaster.SesnMgr.SetStVal(McMaster.SesnMgr.StValDefs.HomePageSlctdCatgID.KyTxt(),null));f&&Cmn.GetObj(c.CntnrIDTxt).appendChild(b);h.LoadVisibleImgs();a=McMasterCom.Nav.GetTopFrame();new a.PerfTracker.Evnt(a.PerfTracker.EvntNms.HomePgLdCmplEnd,a.PerfTracker.PgCntxtNms.DynCntnt);Cmn.SetVerticalScrollPosn(k,0);McMaster.MsgMgr.PubMsg(new McMaster.MsgMgrMsgs.WebPartLoaded(r,
c.CntnrIDTxt));McMaster.SesnMgr.SetStVal(McMaster.SesnMgr.StValDefs.HelpCntxtTxt.KyTxt(),null);McMaster.MsgMgr.AddSubscriber(McMaster.MsgMgrMsgs.MainContentCntnrResized,u)};this.WebPart_PreUnload=function(c){Cmn.RemEvntListener(Cmn.GetObj("HomePage"),"click");Cmn.RemEvntListener(k,"scroll");McMaster.MsgMgr.RemSubscriber(McMaster.MsgMgrMsgs.MainContentCntnrResized,u)};h.WebPart_Unload=function(c){n=k=null;var a=Cmn.GetObj("MainContent");Cmn.GetObj("ShellLayout_SecondaryContent_Cntnr");Cmn.HasCls(a,
"CollapsedSecondaryContent")&&Cmn.RemCls(a,"CollapsedSecondaryContent");McMaster.MsgMgr.PubMsg(new McMaster.MsgMgrMsgs.WebPartUnloaded(r,c.CntnrIDTxt))};h.GetLoadedInd=function(){return Cmn.GetObj("HomePage")&&"block"===Cmn.GetStyle(Cmn.GetObj("MainContent"),"display")?!0:!1};h.LoadVisibleImgs=function(){var c=Cmn.GetVerticalScrollPosn(k),a=Cmn.GetViewportHeight(),c=parseInt(a+c,10);if("true"===Cmn.GetQSVal("load_all_images"))for(var b=0;b<p.length;b++){var d=Cmn.GetObj("catg"+b);d&&d.offsetParent&&
(d.className=d.className.replace("Almost",""))}else for(b=0;b<p.length;b++)if((d=Cmn.GetObj("catg"+b))&&d.offsetParent){var f=Cmn.GetYOffset(d);f<c+a&&f+Cmn.GetHeight(d)>c-a&&(d.className=d.className.replace("Almost",""))}};h.Catgs=function(c){return s};var v=function(c){var a=null,b=null,d=null;if(c)var f=Cmn.GetEvntTarget(c),a="A"==f.tagName.toUpperCase()?f:Cmn.GetAncestorByTagNm(f,"A");d=function(a){return Cmn.HasCls(a,"catg")};b=Cmn.GetAncestorByTagNm(f,"DIV");if(a&&Cmn.HasCls(b,"subcat")){var f=
Cmn.Trim(a.lastChild.nodeValue),e=McMasterCom.Nav.GetTopFrame(),g=new e.PerfTracker.EvntPayload;g.Add("iconNm",f);new e.PerfTracker.Evnt(e.PerfTracker.EvntNms.HomePgImgClick,e.PerfTracker.PgCntxtNms.DynCntnt,g);McMaster.SesnMgr.SetStVal(McMaster.SesnMgr.StValDefs.PerfTrackingBypassFastTrkInd.KyTxt(),!0);(b=Cmn.GetFrstChld(b).innerHTML)||(b="none");d=Cmn.GetAncestorBy(a,d);d=Cmn.GetFrstChld(d).innerHTML;Cmn.PreventDeflt(c);McMaster.SesnMgr.GetStVal(McMaster.SesnMgr.StValDefs.HomePageSlctdCatgID.KyTxt())||
McMaster.SesnMgr.SetStVal(McMaster.SesnMgr.StValDefs.HomePageSlctdEntryScrollTop.KyTxt(),Cmn.GetVerticalScrollPosn(k));c=decodeURIComponent(a.hash.substring(1)).replace(/-/g," ");e=new SrchTrkr.SrchDat({usr:SrchTrkr.UsrActTyps.SLCT,resp:"unknown"});e.usr.srcNm="HomePageWebPart";e.usr.elemTyp=SrchTrkr.ElemTyps.HOME_PAGE_ELEM;e.usr.slctdNm=decodeURIComponent(c);e.usr.slctdTxt=decodeURIComponent(f);e.usr.slctdElemXYPosn=Cmn.GetXOffset(a)+","+Cmn.GetYOffset(a);McMaster.MsgMgr.PubMsg(new McMaster.MsgMgrMsgs.UsrInpTxtSubmitted(r,
c,e));e="";e=McMaster.SesnMgr.GetStVal(McMaster.SesnMgr.StValDefs.HomePageSlctdCatgID.KyTxt())?"Single Category Selected":"All Categories";g=[];g.EntryIconSlctd=f;g.SubCategory=b;g.Category=d;g.CurrentState=e;g.SrchSubmitted=c;Cmn.TrkAct(g,"HomePage");try{var h=Cmn.GetObj("MainContent");catgs=Cmn.GetElementsByClsNm("catg","div",h);pos=-1;for(b=visibleLnkCnt=0;b<catgs.length;b++)if("block"===Cmn.GetStyle(catgs[b],"display")){var m=catgs[b].getElementsByTagName("a");for(c=0;c<m.length;c++)if(m[c]===
a){pos=visibleLnkCnt+c+1;break}if(-1!==pos)break;visibleLnkCnt+=catgs[b].getElementsByTagName("a").length}var l=Cmn.GetYOffset(a),n=Cmn.GetHeight(h),a=!0;l>n&&(a=!1);l={SlctnCntxt:"HomePage"};l.SlctnNmTxt=f;l.SlctnPosNbr=pos;l.SlctnAbvFoldInd=a;Cmn.TrkAct(l,"HomePage")}catch(p){}}},u=function(){var c=document.getElementById("HomePageContent");c&&t(c)},t=function(c){var a=Cmn.GetObj("MainContent").offsetWidth-35,a=72*Math.floor(a/72);72>a&&(a=72);1728<a&&(a=1728);for(var b=c.className.split(" "),d=
[],f=0;f<b.length;f++)-1<b[f].indexOf("hp-w")||d.push(b[f]);a=d.join(" ")+" hp-w"+a;c.className=a}});


if(this.IncmplOrdsWebPart){}else{IncmplOrdsWebPart=new function(){var h="ShellLayout_IncmplOrds_Cntnr";var c="/HTTPHandlers/RtrvIncmplOrds.aspx";var f="sesnextrep";var g=null;var e=new McMaster.MsgMgr.Hdr(McMaster.MsgMgr.CntxtNms.INCMPL_ORDS,"1.0");this.WebPart_Load=function(i){var l=Cmn.GetObj("savedOrdTxtLinkNew");if(l&&l.childNodes.length>0){Cmn.ReplaceCls(l,"IncmplOrdsWebPartLayout_Hidden","IncmplOrdsWebPartLayout_Show");}var j=Cmn.GetObj("savedOrdersCntnr");if(l&&j){g=new Cmn.DropDown.DropDownObj(l,j,true,true);}a();var k=new McMaster.MsgMgrMsgs.WebPartLoaded(e,h);McMaster.MsgMgr.PubMsg(k);};this.WebPart_Unload=function(i){var j=new McMaster.MsgMgrMsgs.WebPartUnloaded(e,h);McMaster.MsgMgr.PubMsg(j);};this.CurrOrdLnk_Click=function(){var i=McMaster.MsgMgr.CntxtNms.INCMPL_ORDS;var j="1.0";var l=new McMaster.MsgMgr.Hdr(i,j);var k=new McMaster.MsgMgrMsgs.CurrOrdSlctd(l);McMaster.MsgMgr.PubMsg(k);};this.SavedOrdsLnk_Click=function(){if(McMaster.SesnMgr.GetStVal(McMaster.SesnMgr.StValDefs.NewOrdPadInd.KyTxt())=="False"){var i=McMaster.MsgMgr.CntxtNms.INCMPL_ORDS;var j="1.0";var l=new McMaster.MsgMgr.Hdr(i,j);var k=new McMaster.MsgMgrMsgs.SavedOrdsSlctd(l);McMaster.MsgMgr.PubMsg(k);}};this.SavedOrdsCloseBtn_Click=function(){g.hideDropDownObj();};this.SavedOrder_Click=function(i){var k="ordID="+i+"&acttxt=acvtsavedord";var j={httpMthd:"GET",success:function(l){g.hideDropDownObj();Cmn.TrkAct("RtrvSavedOrd","IncmplOrds");b();},failure:function(l){McMaster.MsgMgr.PubMsg(new McMaster.MsgMgrMsgs.CurrOrdSlctd(e));},cnxnParm:{respTyp:McMaster.CnxnMgr.JSON_RESP_TYP_TXT}};McMaster.CnxnMgr.PerformAjaxCnxn("/HTTPHandlers/IncmplOrdsHTTPHandler.aspx?"+k,j);};var b=function(){var i=new McMaster.MsgMgrMsgs.SavedOrdSlctd(e);McMaster.MsgMgr.PubMsg(i);};var a=function(){var j=Cmn.GetWidth(Cmn.Get("ShellLayout_IncmplOrds_Cntnr"));Cmn.SetStyle(Cmn.Get("savedOrdersCntnr"),"width",j.toString()+"px");var k=Shell.GetMainContentHeight();if(k>0){Cmn.SetStyle(Cmn.Get("savedOrdersCntnr"),"max-height",k.toString()+"px");}if(Cmn.IsIE6()){var i=Cmn.Get("savedOrdersCntnr");Cmn.SetStyle(i,"height",k.toString()+"px");}};var d=function(){if(Cmn.GetStyle(Cmn.Get("savedOrdersCntnr"),"display")=="block"){g.hideDropDownObj();}};McMaster.MsgMgr.AddSubscriber(McMaster.MsgMgrMsgs.WndwResized,a);McMaster.MsgMgr.AddSubscriber(McMaster.MsgMgrMsgs.WebPartLoaded,d,McMaster.MsgMgr.PRIORITY.LOW);};}

this.WebToolsetWebPart||(this.WebToolsetWebPart=new function(){var y=McMasterCom.Nav.GetTopFrame(),v=new McMaster.MsgMgr.Hdr(McMaster.MsgMgr.CntxtNms.WEB_TOOLSET_WEB_PART),z="",n=[],w=new Boolean,r=new CmnColls.HashTable,C=[{Cd:0,SuccessfulSubmissionInd:!0,MsgTxt:{SND_FDBK:"Thanks.  We appreciate your comments.",FRW_LNK:"Your email has been sent.",DEL_ORD:"Your order has been deleted.",SAVE_ORD:"Your order has been saved.",FWD_ORD:"Requisition forwarded to "}},{Cd:-1,SuccessfulSubmissionInd:!1,Typ:"General Failure",
MsgTxt:{SND_FDBK:"There was a problem sending your feedback.  Please try again.",FRW_LNK:"There was a problem forwarding your link.  Please try again.",DEL_ORD:"There was a problem deleting your order.  Please try again.",SAVE_ORD:"There was a problem saving your order.  Please try again.",FWD_ORD:"There was a problem forwarding your order.  Please try again."}},{Cd:-2,SuccessfulSubmissionInd:!1,Typ:"Invalid 'To' Email Address",MsgTxt:{FRW_LNK:"Please enter a valid 'To' e-mail address in the space provided.",
FWD_ORD:"Please enter a valid 'To' e-mail address in the space provided."}},{Cd:-3,SuccessfulSubmissionInd:!1,Typ:"Invalid 'From' Email Address",MsgTxt:{SND_FDBK:"Please enter your e-mail address in the space provided.",FRW_LNK:"Please enter your e-mail address in the space provided.",FWD_ORD:"Please enter your e-mail address in the space provided."}},{Cd:-4,SuccessfulSubmissionInd:!1,Typ:"No order lines",MsgTxt:{FWD_ORD:"Please add items to your order before forwarding."}}],p={CtlgOptOut:function(a){return"opted out to "+
a+" pages"},Snd:function(){return"submitted information"},Toggle:function(){return"expanded/collapsed form"}};this.WebPart_Load=function(a){z="";n=[];r.Add(a.CntnrIDTxt,null);for(i=0;i<a.Tools.length;i++)"ctlgPageFlipperTool"==a.Tools[i]?z=a.ChldWebParts[i].currentPage:"rltdCtlgPgsTool"==a.Tools[i]&&(n=a.ChldWebParts[i].PageNbrLst);F(a.CntnrIDTxt);1===r.Cnt()&&(McMaster.MsgMgr.AddSubscriber(McMaster.MsgMgrMsgs.MainContentCntnrResized,A,McMaster.MsgMgr.PRIORITY.LOW),McMaster.MsgMgr.AddSubscriber(McMaster.MsgMgrMsgs.ChooseSpecsStatChg,
A,McMaster.MsgMgr.PRIORITY.LOW));n instanceof Array&&0<n.length&&function(){for(var a=document.getElementById("MultiPageNav").getElementsByTagName("li"),b=0;b<a.length;b++)a[b].onmouseover=function(){this.className+=" sfhover"},a[b].onmouseout=function(){this.className=this.className.replace(/ sfhover\b/,"")}}();a=Cmn.GetApplEnvrPrfx()+Cmn.GetApplEnvrSfx();var b=Cmn.GetElementsByClsNm("WebToolsetWebPart_Icon_CtlgOptOut","a");if(0<b.length){var c=McMaster.SesnMgr.GetStVal(McMaster.SesnMgr.StValDefs.CurrRelatedCtlgPgsTxt.KyTxt()),
d;if(c&&(rltdPagesSesnValTxtStr=c.toString(),c=rltdPagesSesnValTxtStr.split(",").length,d=rltdPagesSesnValTxtStr.split(","),0<c))switch(a){case "wwwdev":b[0].setAttribute("href","http://wwwdev.mcmaster.com/#"+d[0]);break;case "wwwqual":b[0].setAttribute("href","http://wwwqual.mcmaster.com/#"+d[0]);break;case "pubdev":b[0].setAttribute("href","http://pubdev.mcmaster.com/#"+d[0]);break;case "pubqual":b[0].setAttribute("href","http://pubqual.mcmaster.com/#"+d[0]);break;case "pub":b[0].setAttribute("href",
"http://pub.mcmaster.com/#"+d[0]);break;default:b[0].setAttribute("href","http://www.mcmaster.com/#"+d[0])}}McMaster.MsgMgr.AddSubscriber(McMaster.MsgMgrMsgs.MastheadLoginSlctd,function(a){a=r.Keys(r.Keys().length);a=Cmn.Get(a);toolsetToolWebPartCntnr=s(a);a=Cmn.GetElementsByClsNm("WebToolsetToolWebPart_FormCntnr","div",toolsetToolWebPartCntnr);for(var b=0;b<a.length;b++){var c=a[b];c.style.display="none";(c=c.previousElementSibling)&&Cmn.HasCls(c,"WebToolsetToolWebPart_ActvCntnr")&&Cmn.RemCls(c,
"WebToolsetToolWebPart_ActvCntnr")}},McMaster.MsgMgr.PRIORITY.HIGH);a=new McMaster.MsgMgrMsgs.WebPartLoaded(v);McMaster.MsgMgr.PubMsg(a)};this.WebPart_AssocFilesLoad=function(a){this.WebPart_Load(a)};this.WebPart_Unload=function(a){r.Rem(a.CntnrIDTxt,null);n=z=null;0===r.Cnt()&&(McMaster.MsgMgr.RemSubscriber(McMaster.MsgMgrMsgs.MainContentCntnrResized,A),McMaster.MsgMgr.RemSubscriber(McMaster.MsgMgrMsgs.ChooseSpecsStatChg,A))};this.ClearAll_Click=function(a){SpecSrchInp.Get().RemAll().UpdateSession().PubMsg();
return!1};this.PrintTool_Click=function(a){y.print();(a=a.getAttribute("itmPrsnttnWebPartToolsetInd"))&&"True"==a?Cmn.TrkAct("ItmPrsnttnWebToolsetPrintToolClick","ItmPrsnttn"):(new h("Print","click")).Trk();return!1};this.FeedbackTool_Click=function(a){var b=McMaster.SesnMgr.GetStVal(McMaster.SesnMgr.StValDefs.CurrVstrCntctEmailAddrTxt.KyTxt());if(b&&0<b.length){var c=Cmn.GetNxtSibling(Cmn.GetAncestorByTagNm(a,"div"));Cmn.GetElementsByClsNm("WebToolsetToolWebPart_FrmEmailInp","input",c)[0].value=
b}f(a);a=new h("Feedback","click");a.ActDtl(p.Toggle());a.Trk();return!1};this.FeedbackTool_Submit=function(a){var b=k(a),c=x(b),d=l(b);m(d);var e=Cmn.GetElementsByClsNm("WebToolsetToolWebPart_FrmEmailInp","input",b)[0].value,b=encodeURIComponent(Cmn.GetElementsByClsNm("WebToolsetToolWebPart_MsgInp","textarea",b)[0].value);0==b.length?this.FeedbackTool_Cancel(a):(a=G(),Cmn.GetObj("IntermediatePageWebPart_Page")&&(a="the "+a+" landing page"),e="frmEmailAddr="+e+("&custMsgTxt="+b),e+="&actvWebsiteCntxt="+
a,McMaster.CnxnMgr.PerformAjaxCnxn("/WebParts/WebToolsetWebPart/WebToolsetWebPart.aspx?toolReq=SND_FDBK",{httpMthd:"POST",postDat:e,success:function(a,b){var e=a.RC;0==e?t(e,"SND_FDBK",c):-2!=e&&q(e,q,d)},cnxnParm:{respTyp:"JSON"}}),e=new h("Feedback","submit"),e.ActDtl(p.Snd()),e.Trk());return!1};this.FeedbackTool_Cancel=function(a){a=k(a);var b=u(a).childNodes[0],c=l(a);f(b);setTimeout(function(){m(c)},300);return!1};this.HelpfulFeedbackTool_Click=function(a){var b=McMaster.SesnMgr.GetStVal(McMaster.SesnMgr.StValDefs.CurrVstrCntctEmailAddrTxt.KyTxt());
if(b&&0<b.length){var c=Cmn.GetNxtSibling(Cmn.GetAncestorByTagNm(a,"div"));Cmn.GetElementsByClsNm("WebToolsetToolWebPart_FrmEmailInp","input",c)[0].value=b}J(a);return w=!1};this.HelpfulFeedbackTool_onLoad=function(){var a=Cmn.GetElementsByClsNm("WebToolsetToolWebPart_is-this-page-helpful","div")[0];Cmn.GetNxtSibling(a);J(a.children[0]);return w=!1};this.HelpfulFeedbackTool_Open=function(a){!1==w&&(a=Cmn.GetElementsByClsNm("WebToolsetToolWebPart_is-this-page-helpful","div")[0],Cmn.GetNxtSibling(a),
P(a.children[0]));return!1};this.HelpfulFeedbackTool_Submit=function(a){var b=k(a),c=x(b),d=l(b);m(d);var e=Cmn.GetElementsByClsNm("WebToolsetToolWebPart_FrmEmailInp","input",b)[0].value;a=function(a){for(var b=0;b<a.length;b++)for(var c=a[b].nextSibling.form.HelpfulnessReply,b=0;b<c.length;b++){var d=c[b];if(d.checked)return d.nextSibling.data}}(Cmn.GetElementsByClsNm("WebToolsetToolWebPart_HelpfulnessVal"));var g=encodeURIComponent(Cmn.GetElementsByClsNm("WebToolsetToolWebPart_MsgInp","textarea",
b)[0].value),b=G();Cmn.GetObj("IntermediatePageWebPart_Page")&&(b="the "+b+" landing page");e="frmEmailAddr="+e+("&custMsgTxt="+g);e+="&helpfulness="+a;e+="&actvWebsiteCntxt="+b;McMaster.CnxnMgr.PerformAjaxCnxn("/WebParts/WebToolsetWebPart/WebToolsetWebPart.aspx?toolReq=HELPFUL_FDBK",{httpMthd:"POST",postDat:e,success:function(a,b){var e=a.RC;0==e?(H(),t(e,"SND_FDBK",c)):-2!=e&&q(e,q,d)},cnxnParm:{respTyp:"JSON"}});w=!0;McMaster.SesnMgr.SetStVal(McMaster.SesnMgr.StValDefs.ItmPrsnttnFeedbackFormOpened.KyTxt(),
!1);return!1};this.HelpfulFeedbackTool_CloseBtn=function(a){a=k(a);var b=u(a).childNodes[0],c=l(a);f(b);setTimeout(function(){m(c)},300);H();w=!0;McMaster.SesnMgr.SetStVal(McMaster.SesnMgr.StValDefs.ItmPrsnttnFeedbackFormOpened.KyTxt(),!1);Q("FDBKOPEN",!0);return!1};var Q=function(a,b){McMaster.CnxnMgr.PerformAjaxCnxn("/WebParts/WebToolsetWebPart/WebToolsetWebPart.aspx?toolReq=UPDT_VSTR_PREF&prefNm="+a+"&prefValTxt="+b,{httpMthd:"GET",success:function(a){},cnxnParm:{respTyp:"JSON"}})};this.HelpfulFeedbackTool_Cancel=
function(a){a=k(a);var b=u(a).childNodes[0],c=l(a);f(b);setTimeout(function(){m(c)},300);H();w=!0;McMaster.SesnMgr.SetStVal(McMaster.SesnMgr.StValDefs.ItmPrsnttnFeedbackFormOpened.KyTxt(),!1);return!1};this.CtlgPageOptOutTool_Click=function(a){a=McMaster.SesnMgr.GetStVal(McMaster.SesnMgr.StValDefs.CurrRelatedCtlgPgsTxt.KyTxt());var b=new McMaster.MsgMgrMsgs.CtlgPageSlctd(v);McMaster.MsgMgr.PubMsg(b);b=McMasterCom.Nav.GetTopFrame();new b.PerfTracker.Evnt(b.PerfTracker.EvntNms.CtlgPgOptOutLnkClick,
b.PerfTracker.PgCntxtNms.DynCntnt);var b=new h("Catalog Page Opt-out","click"),c=1;a&&(c=a.split(",").length);b.ActDtl(p.CtlgOptOut(c));b.Trk();return!1};this.ctlgPageFlipperTool_Click=function(a){return!1};this.ctlgPageFlipperToolPrevPage_Click=function(a){CtlgPageWebPart.CtlgPageLnk_Click(z-1,n);return!1};this.ctlgPageFlipperToolNextPage_Click=function(a){CtlgPageWebPart.CtlgPageLnk_Click(z+1,n);return!1};this.rltdCtlgPgsTool_Click=function(a){a=a.innerHTML.toString();McMaster.SesnMgr.SetStVal(McMaster.SesnMgr.StValDefs.CurrCtlgPgNbr.KyTxt(),
a);n instanceof Array&&0<n.length&&McMaster.SesnMgr.SetStVal(McMaster.SesnMgr.StValDefs.CurrRelatedCtlgPgsTxt.KyTxt(),n.toString());a=new McMaster.MsgMgrMsgs.CtlgPageSlctd(v);McMaster.MsgMgr.PubMsg(a);return!1};this.FwdLnkTool_Click=function(a){f(a);(a=a.getAttribute("itmPrsnttnWebPartToolsetInd"))&&"True"==a?Cmn.TrkAct("ItmPrsnttnWebToolsetForwardLnkClick","ItmPrsnttn"):(a=new h("Forward Link","click"),a.ActDtl(p.Toggle()),a.Trk());return!1};this.FwdLnkTool_Submit=function(a){var b=k(a),c=x(b),d=
l(b);m(d);a=Cmn.GetElementsByClsNm("WebToolsetToolWebPart_FrmEmailInp","input",b)[0].value;var e=Cmn.GetElementsByClsNm("WebToolsetToolWebPart_ToEmailInp","input",b)[0].value,b=Cmn.GetElementsByClsNm("WebToolsetToolWebPart_MsgInp","textarea",b)[0].value;a="frmEmailAddr="+a+("&toEmailAddr="+e);a+="&custMsgTxt="+b;a+="&actvWebsiteCntxt="+G();a+="&urlTxt="+R();McMaster.CnxnMgr.PerformAjaxCnxn("/WebParts/WebToolsetWebPart/WebToolsetWebPart.aspx?toolReq=FRW_LNK",{httpMthd:"POST",postDat:a,success:function(a){a=
a.RC;0==a?t(a,"FRW_LNK",c):q(a,"FRW_LNK",d)},cnxnParm:{respTyp:"JSON"}});a=new h("Forward Link","submit");a.ActDtl(p.Snd());a.Trk();return!1};this.FwdLnkTool_Cancel=function(a){a=k(a);var b=u(a).childNodes[0],c=l(a);f(b);setTimeout(function(){m(c)},300);return!1};this.DelOrdTool_Click=function(a){f(a);a=new h("Delete Order","click");a.ActDtl(p.Toggle());a.Trk();return!1};this.DelOrdTool_Submit=function(a){a=k(a);var b=x(a),c=l(a);m(c);a="acttxt=delord&currts="+encodeURIComponent(OrdPadWebPart.OrdUpdtTsTxt);
McMaster.CnxnMgr.PerformAjaxCnxn("/HTTPHandlers/WebOrdMaintainer.aspx?"+a,{httpMthd:"GET",success:function(a){var e="",e="None"==a.ErrTxt?0:-1;0==e?(t(e,"DEL_ORD",b),a=new McMaster.MsgMgrMsgs.OrdDeleted(v),McMaster.MsgMgr.PubMsg(a)):-1==e&&q(e,"DEL_ORD",c)},cnxnParm:{respTyp:McMaster.CnxnMgr.JSON_RESP_TYP_TXT}});a=new h("Delete Order","submit");a.ActDtl(p.Snd());a.Trk();return!1};this.DelOrdTool_Cancel=function(a){a=k(a);var b=u(a).childNodes[0],c=l(a);f(b);setTimeout(function(){m(c)},300);return!1};
this.SaveOrdTool_Click=function(a){var b=Cmn.GetObj("OrdPadProdsWebPart_PoTxtBx").value,c="";0<b.length&&(c=b);Cmn.GetElementsByClsNm("WebToolsetToolWebPart_SaveOrdInp")[0].value=c;f(a);a=new h("Save Order","click");a.ActDtl(p.Toggle());a.Trk();return!1};this.SaveOrdTool_Submit=function(a){var b=function(){var b=k(a),d=x(b),e=l(b);m(e);var b=OrdPadWebPart.OrdUpdtTsTxt,g=Cmn.GetElementsByClsNm("WebToolsetToolWebPart_SaveOrdInp","input")[0].value,b="acttxt=SAVEORD&currts="+encodeURIComponent(b)+"&potxt="+
encodeURIComponent(g);McMaster.CnxnMgr.PerformAjaxCnxn("/HTTPHandlers/WebOrdMaintainer.aspx?"+b,{httpMthd:"GET",success:function(a){var b="",b="None"==a.ErrTxt?0:-1;0==b?(t(b,"SAVE_ORD",d),a=new McMaster.MsgMgrMsgs.OrdSaved(v),McMaster.MsgMgr.PubMsg(a)):-1==b&&q(b,"SAVE_ORD",e)},cnxnParm:{respTyp:McMaster.CnxnMgr.JSON_RESP_TYP_TXT}});b=new h("Save Order","submit");b.ActDtl(p.Snd());b.Trk()};OrdPadWebPart.VldtOrdPad(!1,!1,b,b);return!1};this.DispConfMsg=function(a,b,c){a=Cmn.GetObj(a);a=Cmn.GetElementBy(function(a){return Cmn.HasCls(a,
b)},"div",a);var d=Cmn.GetNxtSibling(a);a=Cmn.GetPrevSibling(a);"FWD_ORD"==c&&(d.style.padding="10px 10px 20px 15px");K(a);t(0,c,d);"FWD_ORD"==c&&setTimeout(function(){d.style.height="Auto"},1700);return!1};this.SaveOrdTool_Cancel=function(a){a=k(a);var b=u(a).childNodes[0],c=l(a);f(b);setTimeout(function(){m(c)},300);return!1};this.SavedOrdsKyPress=function(a,b){if(13==(window.event?window.event.keyCode:b.which)){a.focus();var c=Cmn.GetAncestorByClsNm(a,"WebToolsetToolWebPart_Lbl"),c=Cmn.GetNxtSibling(c),
c=Cmn.GetFrstChld(c);this.SaveOrdTool_Submit(c)}return!1};this.FwdOrdTool_Click=function(a){var b=McMaster.SesnMgr.GetStVal(McMaster.SesnMgr.StValDefs.CurrVstrCntctEmailAddrTxt.KyTxt());0<b.length&&(Cmn.GetObj("FwdOrdTool_FrmEmailInp").value=b);f(a);a=new h("Forward Order","click");a.ActDtl(p.Toggle());a.Trk();return!1};this.FwdOrdTool_Submit=function(a){var b=function(){var b=k(a),d=x(b),e=l(b);m(e);var b=Cmn.Trim(Cmn.GetObj("FwdOrdTool_ToEmailInp").value),g=Cmn.GetObj("FwdOrdTool_MsgInp").value,
D=Cmn.GetObj("FwdOrdTool_CpyToChckBx").checked,f=Cmn.Trim(Cmn.GetObj("FwdOrdTool_FrmEmailInp").value),n=null!=Cmn.GetObj("OrdPadShpBillWebPart_CntctInfoNmInp")?Cmn.GetObj("OrdPadShpBillWebPart_CntctInfoNmCntnr").value:f;if(!Cmn.VldtEmailAddr(b))return q(-2,"FWD_ORD",e),!1;if(!Cmn.VldtEmailAddr(f))return q(-3,"FWD_ORD",e),!1;if(!OrdPadProdsWebPart.HaveOrdLn())return q(-4,"FWD_ORD",e),!1;C[0].MsgTxt.FWD_ORD="Requisition forwarded to:<br />"+b;b="acttxt=FWDORD&receiver="+encodeURIComponent(b)+"&sender_message="+
encodeURIComponent(g)+"&sendcopy="+encodeURIComponent(D)+"&emailcopytotxt="+encodeURIComponent(f)+"&sender="+encodeURIComponent(f)+"&fullname="+encodeURIComponent(n)+"&ordid="+McMaster.SesnMgr.GetStVal(McMaster.SesnMgr.StValDefs.CurrOrdId.KyTxt())+"&cntxt=AJAX";g={httpMthd:"GET",success:function(a){0==a?(t(a,"FWD_ORD",d),d.style.height="Auto",a=new McMaster.MsgMgrMsgs.OrdForwarded(v),McMaster.MsgMgr.PubMsg(a)):-1==a&&q(a,"FWD_ORD",e)},cnxnParm:{respTyp:McMaster.CnxnMgr.JSON_RESP_TYP_TXT}};fwdOrdForm=
Cmn.Get("WebToolsetToolWebPart_FwdOrdTool_Form");fwdOrdForm.HiddenSubmitButton.click()?fwdOrdForm.HiddenSubmitButton.click():fwdOrdForm.submit();D=new h("Forward Order","submit");D.ActDtl(p.Toggle());D.Trk();McMaster.CnxnMgr.PerformAjaxCnxn("/order/ProcssRteOrd.aspx?"+b,g)};OrdPadWebPart.VldtOrdPad(!1,!1,b,b);return!1};this.FwdOrdTool_Cancel=function(a){a=k(a);var b=u(a),c=l(a);f(b.childNodes[0]);setTimeout(function(){m(c)},300);return!1};this.PrintOrd_Click=function(){var a=new h("Print Order","click");
a.ActDtl(p.Toggle());a.Trk();OrdPadWebPart.PrintOrdPad();return!1};this.PrtMdl_Click=function(a,b){var c=Cmn.GetObj("MainContent");Cmn.GetFrstChld(c);var d=Cmn.GetNxtSibling(c),d=Cmn.GetFrstChld(d);d.src=b;Cmn.SetStyle(d,"display","block");Cmn.SetStyle(c,"display","none");c=new h("Print CAD","click");c.ActDtl(b);c.Trk()};this.HideAllTxtTools=function(a){a=Cmn.GetElementsByClsNm("WebToolsetToolWebPart_TxtTool_Cntnr","div",a);for(var b=0;b<a.length;b++)a[b].style.display="none";return!1};this.ShowAllTxtTools=
function(a){a=Cmn.GetElementsByClsNm("WebToolsetToolWebPart_TxtTool_Cntnr","div",a);for(var b=0;b<a.length;b++)a[b].style.display="block";return!1};this.CloseCnfrmMsg=function(a){B(a);return!1};var F=function(a){if(!Cmn.IsAppMode()){var b=Cmn.GetObj(a);if(b){var c=Cmn.GetElementsByClsNm("WebToolsetWebPart_Cntnr","div",b)[0],d=b.parentNode;Cmn.GetAncestorBy(b,function(a){return"absolute"==Cmn.GetStyle(a,"position")});var e=Shell.GetMainContentTopPosn();"IE 7.0"==Cmn.DetectBrowser()&&(e-=2);var g=0;
"SpecSrch_Inner"===d.id?(setTimeout(function(){F(a)},0),d=Cmn.GetNxtSibling(b),g=Cmn.Utilities.Empty(d)?177:Cmn.GetWidth(d)-10,Shell.GetSecondaryContentWdth(),e+=1):Cmn.HasCls(d,"DynamicPage")||"ProdPageContent_Inner"===d.id?(Cmn.HasCls(d.parentElement.parentElement.firstChild,"SpecSrch_Cntnr")||Cmn.HasCls(d.parentElement.parentElement.parentElement.firstChild,"SpecSrch_Cntnr"),g=Shell.GetMainContentWidth()-ProdPageWebPart.GetSpecSrchWdth()-parseInt(Cmn.GetStyle("ProdPageContent","padding-right"))-
parseInt(Cmn.GetStyle("ProdPageContent","padding-left"))-19,Shell.GetSecondaryContentWdth(),ProdPageWebPart.GetSpecSrchWdth(),parseInt(Cmn.GetStyle("ProdPageContent","padding-left"))):(g=Shell.GetMainContentWidth()-19,Shell.GetSecondaryContentWdth());"IE 6.0"==Cmn.DetectBrowser()||Cmn.IsTouchAware()||Cmn.SetStyle(c,"top",e+"px");Cmn.SetStyle(c,"width",g+"px");e=Cmn.GetElementsByClsNm("WebToolsetToolWebPart_ConfirmationMsg","div",b);for(c=0;c<e.length;c++)Cmn.SetStyle(e[c],"top","21px");e=Cmn.GetElementsByClsNm("WebToolsetToolWebPart_FormCntnr",
"div",b);for(c=0;c<e.length;c++)Cmn.SetStyle(e[c],"top","21px"),Cmn.AddDropShadow(e[c]);if(d=Cmn.GetNxtSibling(b))null==r.Itm(a)&&(c=parseFloat(Cmn.GetStyle(d,"padding-top")),r.Replace(a,c)),c=r.Itm(a),null!=c&&Cmn.SetStyle(d,"padding-top",c+"px"),Cmn.SetStyle(b,"padding-bottom","22px");b=Cmn.GetElementsByClsNm("WebToolsetToolWebPart_Aligned_RIGHT","div",b);Cmn.AddCls(b[0],"WebToolsetToolWebPart_RightmostTool_Cntnr")}}},E=function(a){var b=a.cloneNode(!0);b.style.position="absolute";b.style.left=
"-9999px";b.style.display="block";b.style.height="auto";Cmn.InsrtAfter(b,a);a=Cmn.GetWidth(b);Cmn.RemElem(b);return a},L=function(a){var b=a.cloneNode(!0);b.style.position="absolute";b.style.left="-9999px";b.style.display="block";b.style.height="auto";Cmn.InsrtAfter(b,a);a=Cmn.GetHeight(b)-14;Cmn.RemElem(b);return a},A=function(){for(var a=r.Keys(),b=0;b<a.length;b++)F(a[b])};this.ResizeActive=A;var U=function(a){if("block"===Cmn.GetStyle(a,"display")){var b=Cmn.Animation.CrteTransitionStyle(Cmn.Animation.PropertyNms.HGT_NM,
"0px"),b=Cmn.Animation.CrteAnimation(a,b,0.3);b.OnCmpl=function(){Cmn.SetStyle(a,"display","none");Cmn.SetStyle(a,"overflow","visible")}}else{S(a);Cmn.SetStyle(a,"display","block");Cmn.SetStyle(a,"height",0);var c=L(a),b=Cmn.Animation.CrteTransitionStyle(Cmn.Animation.PropertyNms.HGT_NM,c+"px"),b=Cmn.Animation.CrteAnimation(a,b,0.3);b.OnCmpl=function(){Cmn.SetStyle(a,"height","auto");Cmn.SetStyle(Cmn.GetFrstChld(a),"height",c+10);Cmn.SetStyle(a,"overflow","visible");T(a)}}Cmn.SetStyle(a,"overflow",
"hidden");Cmn.Animation.PerformAnimation(b)},W=function(a){if("block"===Cmn.GetStyle(a,"display")){var b=Cmn.Animation.CrteTransitionStyle(Cmn.Animation.PropertyNms.HGT_NM,"0px"),b=Cmn.Animation.CrteAnimation(a,b,0.3);b.OnCmpl=function(){Cmn.SetStyle(a,"display","none");Cmn.SetStyle(a,"overflow","visible")}}else{V(a);Cmn.SetStyle(a,"display","block");Cmn.SetStyle(a,"height",0);var c=L(a),b=Cmn.Animation.CrteTransitionStyle(Cmn.Animation.PropertyNms.HGT_NM,c+"px"),b=Cmn.Animation.CrteAnimation(a,b,
0.3);b.OnCmpl=function(){Cmn.SetStyle(a,"height","auto");Cmn.SetStyle(Cmn.GetFrstChld(a),"height",c+10);Cmn.SetStyle(a,"overflow","visible")}}Cmn.SetStyle(a,"overflow","hidden");Cmn.Animation.PerformAnimation(b)},S=function(a){var b=Cmn.GetPrevSiblingBy(a,function(a){if(Cmn.HasCls(a,"WebToolsetToolWebPart_Cntnr"))return!0}),b=Cmn.GetX(b),c=E(a),d=s(a),e=Cmn.GetElementsByClsNm("WebToolsetToolWebPart_RightmostTool_Cntnr","div",d)[0],d=0,b=Cmn.GetRegion(e).right-(b+c);0<b&&(d=b);Cmn.SetStyle(a,"right",
d+"px")},V=function(a){var b=Cmn.GetPrevSiblingBy(a,function(a){if(Cmn.HasCls(a,"WebToolsetToolWebPart_Cntnr"))return!0});Cmn.GetX(b);E(a);var c=s(a),b=Cmn.GetElementsByClsNm("WebToolsetToolWebPart_RightmostTool_Cntnr","div",c)[0],b=Cmn.GetRegion(b).right,c=Cmn.GetElementsByClsNm("WebToolsetToolWebPart_is-this-page-helpful","div",c)[0],c=Cmn.GetRegion(c).left;Cmn.IsIE()?(Cmn.SetStyle(a,"width",b-c+-25+"px"),Cmn.SetStyle(a,"right","-4px")):(b=Cmn.IsGecko()?b-c+-28:b-c+-29,Cmn.SetStyle(a,"width",b+
"px"),Cmn.SetStyle(a,"right","0px"))},X=function(a){var b=Cmn.GetPrevSiblingBy(a,function(a){if(Cmn.HasCls(a,"WebToolsetToolWebPart_Cntnr"))return!0});Cmn.GetX(b);E(a);var c=s(a),b=Cmn.GetElementsByClsNm("WebToolsetToolWebPart_Aligned_RIGHT","div",c)[0],b=Cmn.GetRegion(b).right;E(c);c=Cmn.GetElementsByClsNm("WebToolsetToolWebPart_is-this-page-helpful","div",c)[0];c=Cmn.GetRegion(c).left;Cmn.IsIE()?(Cmn.SetStyle(a,"width",b-c+-25+"px"),Cmn.SetStyle(a,"right","-4px")):(b=Cmn.IsGecko()?b-c+-28:b-c+-29,
Cmn.SetStyle(a,"width",b+"px"),Cmn.SetStyle(a,"right","0px"))},T=function(a){a=Cmn.GetElementsBy(function(a){if("text"==a.type||"textarea"==a.type)return!0},null,a);if(0<a.length){a=a[0];try{a.focus()}catch(b){}}},P=function(a){B(a);a=Cmn.GetAncestorBy(a,function(a){if(Cmn.HasCls(a,"WebToolsetToolWebPart_Cntnr"))return!0});M(a);a=Cmn.GetNxtSiblingBy(a,function(a){if(Cmn.HasCls(a,"WebToolsetToolWebPart_FormCntnr"))return!0});X(a);Cmn.SetStyle(a,"display","block")},f=function(a){B(a);a=Cmn.GetAncestorBy(a,
function(a){if(Cmn.HasCls(a,"WebToolsetToolWebPart_Cntnr"))return!0});K(a);var b=Cmn.GetNxtSiblingBy(a,function(a){if(Cmn.HasCls(a,"WebToolsetToolWebPart_FormCntnr"))return!0});I(b);setTimeout(function(){U(b)},100)},J=function(a){B(a);a=Cmn.GetAncestorBy(a,function(a){if(Cmn.HasCls(a,"WebToolsetToolWebPart_Cntnr"))return!0});M(a);var b=Cmn.GetNxtSiblingBy(a,function(a){if(Cmn.HasCls(a,"WebToolsetToolWebPart_FormCntnr"))return!0});I(b);setTimeout(function(){W(b)},100)},s=function(a){return Cmn.GetAncestorBy(a,
function(a){if(Cmn.HasCls(a,"WebToolsetWebPart_Cntnr"))return!0})},u=function(a){return Cmn.GetPrevSiblingBy(a,function(a){if(Cmn.HasCls(a,"WebToolsetToolWebPart_Cntnr"))return!0})},k=function(a){return Cmn.GetAncestorBy(a,function(a){if(Cmn.HasCls(a,"WebToolsetToolWebPart_FormCntnr"))return!0})},x=function(a){return Cmn.GetNxtSiblingBy(a,function(a){if(Cmn.HasCls(a,"WebToolsetToolWebPart_ConfirmationMsg"))return!0})},l=function(a){return Cmn.GetElementsByClsNm("WebToolsetToolWebPart_ErrMsgCntnr",
"div",a)[0]},I=function(a){toolsetToolWebPartCntnr=s(a);for(var b=Cmn.GetElementsByClsNm("WebToolsetToolWebPart_FormCntnr","div",toolsetToolWebPartCntnr),c=0;c<b.length;c++){var d=b[c];a&&d==a||(d.style.display="none")}},B=function(a,b){for(var c=Cmn.GetAncestorBy(a,function(a){if(Cmn.HasCls(a,"WebToolsetWebPart_Cntnr"))return!0}),c=Cmn.GetElementsByClsNm("WebToolsetToolWebPart_ConfirmationMsg","div",c),d=0;d<c.length;d++){var e=c[d];b&&e==b||(e.style.display="none")}},M=function(a){for(var b=s(a),
b=Cmn.GetElementsByClsNm("WebToolsetToolWebPart_Cntnr","div",b),c,d=0;d<b.length;d++){var e=b[d];Cmn.RemCls(e,"WebToolsetToolWebPart_AdjacentInactvCntnr");e==a?Cmn.HasCls(e,"WebToolsetToolWebPart_ActvCntnr")?(Cmn.RemCls(e,"WebToolsetToolWebPart_ActvCntnr"),McMaster.SesnMgr.SetStVal(McMaster.SesnMgr.StValDefs.ItmPrsnttnFeedbackFormOpened.KyTxt(),!1)):(Cmn.AddCls(e,"WebToolsetToolWebPart_ActvCntnr"),McMaster.SesnMgr.SetStVal(McMaster.SesnMgr.StValDefs.ItmPrsnttnFeedbackFormOpened.KyTxt(),!0),c=d+1):
Cmn.RemCls(e,"WebToolsetToolWebPart_ActvCntnr")}b[c]&&Cmn.AddCls(b[c],"WebToolsetToolWebPart_AdjacentInactvCntnr")},K=function(a){for(var b=s(a),b=Cmn.GetElementsByClsNm("WebToolsetToolWebPart_Cntnr","div",b),c,d=0;d<b.length;d++){var e=b[d];Cmn.RemCls(e,"WebToolsetToolWebPart_AdjacentInactvCntnr");e==a?Cmn.HasCls(e,"WebToolsetToolWebPart_ActvCntnr")?Cmn.RemCls(e,"WebToolsetToolWebPart_ActvCntnr"):(Cmn.AddCls(e,"WebToolsetToolWebPart_ActvCntnr"),c=d+1):Cmn.RemCls(e,"WebToolsetToolWebPart_ActvCntnr")}b[c]&&
Cmn.AddCls(b[c],"WebToolsetToolWebPart_AdjacentInactvCntnr")},t=function(a,b,c){a=N(a,b);b=s(c);b=Cmn.GetElementsByClsNm("WebToolsetToolWebPart_Cntnr","div",b);for(var d=0;d<b.length;d++){var e=b[d];Cmn.RemCls(e,"WebToolsetToolWebPart_AdjacentInactvCntnr");Cmn.RemCls(e,"WebToolsetToolWebPart_ActvCntnr")}I(c);B(c,c);d=s(c);e=d.getElementsByTagName("input");for(b=0;b<e.length;b++){var g=e[b];Cmn.HasCls(g,"WebToolsetToolWebPart_FrmEmailInp")||(g.value="")}d=d.getElementsByTagName("textarea");for(b=0;b<
d.length;b++)d[b].value="";c.style.display="block";Cmn.GetElementsByClsNm("WebToolsetToolWebPart_ConfirmationMsgTxt","div",c)[0].innerHTML=a;Y(c)},q=function(a,b,c){a=N(a,b);c.innerHTML=a},m=function(a){a.innerHTML=""},N=function(a,b){for(var c="",d=0;d<C.length;d++)if(C[d].Cd==a){c=C[d].MsgTxt[b];break}return c},Y=function(a){var b=Cmn.Animation.CrteTransitionStyle(Cmn.Animation.PropertyNms.OPACITY_NM,"0"),c=Cmn.Animation.CrteAnimation(a,b,0.5);c.OnCmpl=function(){Cmn.SetStyle(a,"display","none");
Cmn.SetStyle(a,"opacity",1)};setTimeout(function(){Cmn.Animation.PerformAnimation(c)},1500)},H=function(){for(var a=Cmn.GetElementsByClsNm("WebToolsetToolWebPart_HelpfulnessVal"),b=s(a[0]),c=b.getElementsByTagName("input"),a=0;a<c.length;a++)c[a].value="";b=b.getElementsByTagName("textarea");for(a=0;a<b.length;a++)b[a].value="";b=Cmn.GetElementsByClsNm("WebToolsetToolWebPart_HelpfulnessVal");for(a=0;a<b.length;a++){c=b[a].nextSibling.form.HelpfulnessReply;for(a=0;a<c.length;a++){var d=c[a];d.checked&&
(d.checked=!1)}}},G=function(){var a="the home page",b=O();0<b.length&&(a=b.replace(/\-/g," "));return a},R=function(){var a=Cmn.BldNonSecureURL(y.location.pathname,y.location.search,y.location.hostname),a=a+("#"+O());return encodeURIComponent(a)},O=function(){var a="",a=y.location.hash,b=McMaster.UrlMgr.SesnStKyPrfxTxt(),a=a.split(b,2)[0];return a=a.replace(/[#\/]/g,"")},h=function(a,b){var c="",d="",e="",c=a,e=b;this.Trk=function(){var a=McMaster.SesnMgr.GetStVal(McMaster.SesnMgr.StValDefs.SlctdSrchRsltTxt.KyTxt()),
a=encodeURIComponent(a),b;b="reqtyp="+c;b+="&acttyp="+e;b+="&actdtl="+d;Cmn.TrkAct(b+("&srchtrm="+a),"WebToolset")};this.ActDtl=function(a){d=a}}});


/// <reference path="MyDEVReferences.js" />
if (this.InLnOrdWebPart) {
	// Continue
} else {

InLnOrdWebPart = new function () {
    /// <summary>
    /// Contains client-side functionality for the Inline Ordering web part.
    /// </summary>

	/// #Region "Declarations"
	var Me = this
		  , INLN_ORD_HTTP_HANDLER_URL = "/WebParts/Ordering/InLnOrdWebpart/InLnOrd.aspx"
		  , ACT_TXT = "acttxt"
		  , ADD_ITM_CURR_ORD_QS_KY_TXT = "additmcurrord"
		  , GET_ORD_HIST_QS_KY_TXT = "getordhist"
		  , GET_ADDNL_CNTNT_LNKS_QS_KY_TXT = "getaddnlcntntlnks"
		  , UPDT_ATTR_QS_KY_TXT = "updtattr"
		  , QTY_TXT_QS_KY_TXT = "qtytxt"
		  , PART_NBR_QS_KY_TXT = "partnbrtxt"
		  , INTRN_PART_NBR_QS_KY_TXT = "intrnpartnbrtxt"
		  , ATTR_VAL_QS_KY_TXT = "attrval"
		  , ATTR_NM_QS_KY_TXT = "attrnm"
		  , SPEC_ITM_QS_KY_TXT = "specitm"
		  , ATTR_MSTR_AVAIL_LENS = "attrmstravaillens"
		  , FIRM_PKG_ERR_IND = "firmpkgerrind"
		  , QTY_ERR_SHOWING_IND = "qtyerrshowingind"
		  , ATTR_ERR_SHOWING_IND = "attrerrshowingind"
		  , ENT_KY_CD = 13
		  , IDSTRARR_PARTNUMBER_INDEX = 2
		  , IDSTRARR_ATTRNAME_INDEX = 1
		  , ATTR_DROP_DOWN_BORDER = 1
		  , TOOLSET_HGT
		  , MASTHEAD_HGT
		  , BOTTOMNAVTOOLSET_HGT
		  , SCROLLBUFFER = 40
		  , HORZSCROLLBARBUFFER = 10
		  , BUFFER_HGT = 4
		  , SPEC_TXT_LMT = 250
		  , ELLPSS_WDTH = 9
		  , DRP_DWN_RT_SD_WDTH = 30
		  , CHLD_ATTR_TOP_BORDER = 5
          , PUB_ATTR_ID_IDX = 3
		  , mMainContentCntnr
		  , mCtlgShellCntnr
		  , mWebPartObj
		  , mReadyNxtAjaxCallInd = true
		  , mMetaDat
		  , mMetaDatDict = {}
		  , mAttrbtSlctdTbl = new CmnColls.HashTable()
		  , mAttrErrInd = false
		  , mBxObj
		  , mCrtedBxObjs = []
		  , mCrtedBxObjsIdx = 0
		  , mInLnOrdWebPartJSObj
		  , valDefs = McMaster.SesnMgr.StValDefs
		  , setVal = McMaster.SesnMgr.SetStVal
		  , getVal = McMaster.SesnMgr.GetStVal
		  , remVal = McMaster.SesnMgr.RemStVal
		  , PROD_ATTR_ID_IDX = 2
		  , PROD_VAL_ID_IDX = 5
		  , PUB_VAL_ID_IDX = 6
		  , OTHER_DOMAIN_TXT = "Other_Domain"
		  , OTHER_VAL_TXT = "Other"
		  , APP_MODE_PREF_TXT = "appmode"
		  , ZERO_WIDTH_SPACE = String.fromCharCode(parseInt(0x200B));
		  
	//for feature activation for item presentation product detail link
	var PROD_DET_LNK_ACTVN_IND_QS_KY_TXT = "proddetlnkactvnind";
		  
    //Environment constants
    var PUB_DEV = "pubdev",
			DEV = "wwwdev",
			PUB_QUAL = "pubqual",
			QUAL = "wwwqual",
			PROD = "www",
			PUB = "pub";
    //Inline order spec change
    //New constants and global variables for inline specs
    var ATTR_COMP_IDS = "attrCompIds",
	    IS_INLNSPEC = "isInLnSpec",
		FULL_PRSNTTN_ID_KY_TXT = "fullprsnttnid",
		PRSNTTN_ID_KY_TXT = "prsnttnid";

    var ATTR_VAL_HIGHLIGHTED_CLS = "SpecSrch_Value_OrdrdLnk";
    /// #End Region

    /// #Region "Event Handlers"
    Me.WebPart_Load = function (webPartObj) {
        webPartObj.PartNbrLnk = fndPartNbrLnkByClsNm(webPartObj.MetaDat.PartNbrTxt, "PartNbrLnk");
        InLnOrdWebPart.WebPart_AssocFilesLoad(webPartObj);
    }
	
    // <summary>
    // Called when the web part loads and performs initialization
    // functionality.
    // </summary>
    // <param name="webPartObj">
    // The current web part object.
    // </param>
    Me.WebPart_AssocFilesLoad = function (webPartObj) {
        // Get masthead, toolset and bottom nav toolset heights for scrolling purposes.
        try {
			mMainContentCntnr = Cmn.GetObj("MainContent");
			mWebPartObj = webPartObj;
			mMetaDat = webPartObj.MetaDat;
			mMetaDatDict[mMetaDat.PartNbrTxt] = mMetaDat;

			var bxObj
			  , crtdBxs;

			var toolSetCntnr = Cmn.GetElementBy(function (elem) { return Cmn.HasCls(elem, "WebToolsetWebPart_Cntnr"); }, "div", mMainContentCntnr);
			if (toolSetCntnr) {
				TOOLSET_HGT = Cmn.GetHeight(toolSetCntnr);
			} else {
				TOOLSET_HGT = 0;
			}
			var headerCntnr = Cmn.GetObj("ShellLayout_Header_Cntnr")
			if (headerCntnr) {
				MASTHEAD_HGT = Cmn.GetHeight(headerCntnr);
			} else {
				MASTHEAD_HGT = 0;
			}
			var bottomNavCntnr = Cmn.GetObj("Shell_BottomNavWebPart_Cntnr")
			if (bottomNavCntnr) {
				BOTTOMNAVTOOLSET_HGT = Cmn.GetHeight(bottomNavCntnr);
			} else {
				BOTTOMNAVTOOLSET_HGT = 0;
			}

			// Add the event listeners for the attribute menu. 			
			if (mMainContentCntnr) {
				var inLnBxRws = Cmn.GetElementsByClsNm("AddToOrdFlow_ItmBx", "tr", mCtlgShellCntnr);
				if (inLnBxRws && inLnBxRws.length > 2) {
					// Do nothing, the event listener will already have been added.
				} else {
					Cmn.RemEvntListener(mMainContentCntnr, "click", hndlClickEvnt);
					Cmn.AddEvntListener(mMainContentCntnr, "click", hndlClickEvnt);
				}

				mInLnOrdWebPartJSObj = InLnOrdWebPartJSObj;

			} else {
				mCtlgShellCntnr = Cmn.GetObj("CtlgPageShell_CtlgPage_Cntnr");

				if (mCtlgShellCntnr) {
					// Check to make sure that there is not already another box loaded
					// since the event listener added with it handles all clicks.
					var inLnBxRws = Cmn.GetElementsByClsNm("AddToOrdFlow_ItmBx", "tr", mCtlgShellCntnr);
					if (inLnBxRws && inLnBxRws.length > 2) {
						// Do nothing, the event listener will already have been added.
					} else {
						Cmn.RemEvntListener(mCtlgShellCntnr, "click", hndlClickEvnt);
						Cmn.AddEvntListener(mCtlgShellCntnr, "click", hndlClickEvnt);
					}
				}

				mInLnOrdWebPartJSObj = self.parent.parent.InLnOrdWebPartJSObj;
			}

			bxObj = new mInLnOrdWebPartJSObj.BxObj(mWebPartObj.PartNbrLnk, mWebPartObj);
			mBxObj = bxObj;

			// Call the dynamic rendering javascript to generate the markup.
			InLnOrdWebPartDynamicRendering.WebPart_Load(mBxObj);

			//Inline order spec 
			//determines if the inline box contains a specification from MDM 
			var partNbrLnk = webPartObj.PartNbrLnk;
			var getLinks = true;

			if (isInLnSpec(partNbrLnk)) {

				//this means we are dealing with inline order specs
				updtInlnSpecInteractions(webPartObj);
				Cmn.AddCls(mBxObj.PartNbrLnk, "HasInLnOrdSpec");

				var parentRow,
					bxCntntRow,
					attrRow,
					attrs,
					valsSlctd,
					inLnSpecId,
					seqNbr;
					
				//attach event listeners to title input boxes. Not done otherwise.
				var specCntnr = Cmn.Get("InLnOrdWebPartAttrCntnr" + webPartObj.PartNbrLnk.innerHTML);
				
				if (specCntnr) {
					var inpDomBxs = Cmn.GetElementsByClsNm("OtherValInpBx", "input", specCntnr);				
					for (var inpDomBxIndx = 0; inpDomBxIndx < inpDomBxs.length; inpDomBxIndx++) {
						Cmn.AddEvntListener(inpDomBxs[inpDomBxIndx], "blur", function (e) {
							InLnOrdWebPart.HndlKeyDownEvnt(e, webPartObj);
						});
						Cmn.AddEvntListener(inpDomBxs[inpDomBxIndx], "focus", function (e) {
						});
					}
					// attach event listeners to sized input box.
					var sizedInpBx = Cmn.GetElementsByClsNm("SizedInpBx", "textarea", specCntnr)[0];
					if (sizedInpBx){
						Cmn.AddEvntListener(sizedInpBx,"keydown",function(e){InLnOrdWebPart.HndlEvntOnKeyDown(e, webPartObj)});
						Cmn.AddEvntListener(sizedInpBx,"keypress",function(e){InLnOrdWebPart.HndlKeyPressEvnt(e,webPartObj);});
						Cmn.AddEvntListener(sizedInpBx,"paste",function(e){InLnOrdWebPart.HndlPasteEvnt(e,webPartObj);});
						Cmn.AddEvntListener(sizedInpBx,"blur",function(e){InLnOrdWebPart.HndlBlurEvnt(e,webPartObj);});
					}
				}
						
				if (chkCtlgPageInd()) {
					var mainIFrame = document.getElementById("MainIFrame");
					var ctlgPageElem = getObjFrmIFrameById(mainIFrame, "Catalog");

					specCntnr = getObjFrmIFrameById(ctlgPageElem, "InLnOrdWebPartAttrCntnr" + webPartObj.PartNbrLnk.innerHTML);
					if(!(specCntnr)){
						specCntnr = Cmn.Get("InLnOrdWebPartAttrCntnr" + webPartObj.PartNbrLnk.innerHTML);
					}
					if (specCntnr) {
						var inpDomBxs = Cmn.GetElementsByClsNm("OtherValInpBx", "input", specCntnr);
						for (var inpDomBxIndx = 0; inpDomBxIndx < inpDomBxs.length; inpDomBxIndx++) {
							Cmn.AddEvntListener(inpDomBxs[inpDomBxIndx], "blur", function (e) {
								InLnOrdWebPart.HndlKeyDownEvnt(e, webPartObj);
							});
							Cmn.AddEvntListener(inpDomBxs[inpDomBxIndx], "focus", function (e) {
							});
						}
						// attach event listeners to sized message box. 
						var sizedInpBx = Cmn.GetElementsByClsNm("SizedInpBx", "textarea", specCntnr)[0];
						if (sizedInpBx){
							Cmn.AddEvntListener(sizedInpBx,"keydown",function(e){InLnOrdWebPart.HndlEvntOnKeyDown(e, webPartObj)});
							Cmn.AddEvntListener(sizedInpBx,"keypress",function(e){InLnOrdWebPart.HndlKeyPressEvnt(e,webPartObj);});
							Cmn.AddEvntListener(sizedInpBx,"paste",function(e){InLnOrdWebPart.HndlPasteEvnt(e,webPartObj);});
							Cmn.AddEvntListener(sizedInpBx,"blur",function(e){InLnOrdWebPart.HndlBlurEvnt(e,webPartObj);});
						}
					}
					parentRow = partNbrLnk;
					while (parentRow.tagName != "TR") {
						parentRow = parentRow.parentNode;
					}
					bxCntntRow = parentRow.nextSibling.nextSibling;

					//find all the attributes for the given part number
					var attrsForPartNbr = [];
					var slctdValsForPartNbr = [];
					attrs = getObjFrmIFrameByClsNm(ctlgPageElem, "SpecSrch_Attribute");
					valsSlctd = getObjFrmIFrameByClsNm(ctlgPageElem, "SpecSrch_SlctdVal");

					if (attrs) {
						for (var i = 0; i < attrs.length; i++) {
							if (attrs[i].id.search(webPartObj.PartNbrLnk.innerHTML) > 0) {
								attrsForPartNbr.push(attrs[i]);
							}
						}
						//find all the selected values for the given part number
						for (var i = 0; i < valsSlctd.length; i++) {
							if (valsSlctd[i].id.search(webPartObj.PartNbrLnk.innerHTML) > 0) {
								slctdValsForPartNbr.push(valsSlctd[i]);
							}
						}
					}

					inLnSpecId = webPartObj.PartNbrLnk.innerHTML + '_' + webPartObj.PrsnttnId;
					
					seqNbr = webPartObj.PartNbrLnk.getAttribute("data-mcm-partnbr-seqnbr");
					if (seqNbr) {
						inLnSpecId = inLnSpecId + '_' + seqNbr;
					}
					
					if (attrsForPartNbr.length > 0 && attrsForPartNbr.length == slctdValsForPartNbr.length) {
						InLnOrdWebPart.updtSpecAttr(inLnSpecId);
						getLinks = false;
					} else {
						var stkmsgcntnr = getObjFrmIFrameById(ctlgPageElem, "InLnOrdWebPart_StkMsg" + webPartObj.PartNbrLnk.innerHTML)
						if(!(stkmsgcntnr)){
							stkmsgcntnr = Cmn.Get("InLnOrdWebPart_StkMsg" + webPartObj.PartNbrLnk.innerHTML);
						}
						// Take away the stock status.
						if (stkmsgcntnr) {
							stkmsgcntnr.innerHTML = "";
						}
					}

				} else {
					parentRow = Cmn.GetAncestorByTagNm(webPartObj.PartNbrLnk, "TR");
					bxCntntRow = Cmn.GetNxtSibling(Cmn.GetNxtSibling(parentRow));
					seqNbr = webPartObj.PartNbrLnk.getAttribute("data-mcm-partnbr-seqnbr");
					//checks to make sure that every attribute has a value selected before getting the stock message
					attrRow = Cmn.GetElementsByClsNm("InLnOrdWebPartAttrCntnr", "div", bxCntntRow)[0];
					//get all the attributes in the box
					attrs = Cmn.GetElementsByClsNm("SpecSrch_Attribute", "div", attrRow);
					//gets all the values selected
					valsSlctd = Cmn.GetElementsByClsNm("SpecSrch_SlctdVal", 'td', attrRow)
					inLnSpecId = webPartObj.PartNbrLnk.innerHTML + '_' + webPartObj.PrsnttnId;
					if (seqNbr) {
						inLnSpecId = inLnSpecId + '_' + seqNbr;
					}
					
					if (attrs.length == valsSlctd.length) {
						InLnOrdWebPart.updtSpecAttr(inLnSpecId);
						getLinks = false;
					} else {
						var stkmsgcntnr = Cmn.Get("InLnOrdWebPart_StkMsg" + webPartObj.PartNbrLnk.innerHTML)
						// Take away the stock status.
						if (stkmsgcntnr) {
							stkmsgcntnr.innerHTML = "";
						}
					}
				}
			}

			// Set the properties on the box object that are associated with the markup just dynamically
			// generated for this part number. 
			mInLnOrdWebPartJSObj.SetMarkupProperties(mBxObj);

			//Get Environment
			var envr = Cmn.GetApplEnvrPrfx() + Cmn.GetApplEnvrSfx();

			//Make the additional content AJAX calls.
			//Don't make call in Pub Environments
			
			switch (envr) {
				case (PUB_DEV):
				case (PUB_QUAL):
				case (PUB):
					break;
				default:
					Me.GetOrdHist(mBxObj);
					if (getLinks) {
						Me.GetAddnlCntntLnks(mBxObj);
					}
					Me.HighlightRelevantInLnSpecMarkup(mBxObj);
			} 

			// If we're on a catalog page, we need to make sure the global variables at the
			// shell level reflect the values on the catalog page. 
			if (mCtlgShellCntnr) {
				McMasterCom.Nav.GetTopFrame().InLnOrdWebPart.SetJSBxObjProperties(bxObj);
			}

			setVal(valDefs.ActvInLnOrdBx.KyTxt(), bxObj);

			mBxObj = getVal(valDefs.ActvInLnOrdBx.KyTxt());

			Cmn.AddCls(mBxObj.PartNbrCell, "AddToOrdBxCreated");
			Cmn.AddCls(mBxObj.PartNbrLnk, "PartNbrSlctd");
			Cmn.AddCls(mBxObj.PartNbrLnk, "AddToOrdBxCreated");

			// Set the global variables associated with the javascript objects.
			if (typeof (mCrtedBxObjs) == "object") {
				// Session inexplicably clones arrays incorrectly when we're
				// in iFrames. Recast the (now) object back to an array.
				var bxIdx = 0
					  , tempArray = [];

				while (mCrtedBxObjs[bxIdx]) {
					if (mCrtedBxObjs[bxIdx].PartNbrTxt != mBxObj.PartNbrTxt) {
						tempArray.push(mCrtedBxObjs[bxIdx]);
					}
					bxIdx++;
				}

				mCrtedBxObjs = tempArray;
			}

			mCrtedBxObjs.push(mBxObj);
			mCrtedBxObjsIdx++;
			setVal(valDefs.InLnOrdBxsCrtd.KyTxt(), mCrtedBxObjs);
			if (webPartObj.AutoSlctdPartNbrInd == undefined || webPartObj.AutoSlctdPartNbrInd == false) {
				// Take a back button snap shot only if the part 
				// number is explicitly selected by the customer
				Me.TakeSnapShot();
			}
			mCrtedBxObjs = getVal(valDefs.InLnOrdBxsCrtd.KyTxt());

			//set cursor position
			setCursorPos(bxObj);

			InLnOrdWebPart.ScrollToShowInLnOrdCntnr();

			// Build and publish a loaded message.
			var msgNm, msgHdr, webPartLoadedMsg;
			msgNm = McMaster.MsgMgr.CntxtNms.INLN_ORD;
			msgHdr = new McMaster.MsgMgr.Hdr(msgNm);

			// Create the web part loaded message. 
			webPartLoadedMsg = new McMaster.MsgMgrMsgs.WebPartLoaded(msgHdr, webPartObj.CntnrIDTxt);

			// Publish the web part loaded message. 
			McMaster.MsgMgr.PubMsg(webPartLoadedMsg);
					
			// Track the event for web performance.
			var top = McMasterCom.Nav.GetTopFrame();
			new top.PerfTracker.Evnt(top.PerfTracker.EvntNms.InLnOrdLdEnd, top.PerfTracker.PgCntxtNms.DynCntnt);
		} catch (ex) {
			//do nothing
		}
    }
	
    // -------------------------------------------------
    // Summary: Handle key down event 
    // Input: event
    // --------------------------------------------------
    Me.HndlKeyDownEvnt = function (e, webPartObj, respArgs) {
        if (e) {
			var mainCntnr,
			    inLnSpecId;
            var kyCd = e.keyCode;
			var clickedElem = Cmn.GetEvntTarget(e);
			
			if (webPartObj.MetaDat) {
				mainCntnr = Cmn.Get("InLnOrdWebPart_Main" + webPartObj.MetaDat.PartNbrTxt);
			} else if (respArgs && respArgs.PartNbrTxt) {
				mainCntnr = Cmn.Get("InLnOrdWebPart_Main" + respArgs.PartNbrTxt);
			} 
			if (mainCntnr == null && Cmn.HasCls(clickedElem, "OtherValInpBx")){
				mainCntnr = Cmn.GetAncestorByClsNm(clickedElem, "InLnOrdWebPartLayout_Main");
			}
			
			var inLnSpecId = Cmn.GetElementsByClsNm("InLnOrdWebPartAttrCntnr", "div", mainCntnr)[0].getAttribute("data-InLnSpecId");
			
			var stkmsgcntnr = Cmn.GetElementsByClsNm("InLnOrdWebPartLayout_StkMsg", "div", mainCntnr)[0];
			if (!stkmsgcntnr) {
				//look for cntnr with alternate class name
				stkmsgcntnr = Cmn.GetElementsByClsNm("InLnOrdWebPartLayout_StkMsgPacks", "div", mainCntnr)[0];
			}
			var qtyErrCntnr = Cmn.GetElementsByClsNm("InLnOrdWebPartLayout_QtyErr", "div", mainCntnr)[0];
			//Cmn.ReplaceCls(qtyErrCntnr, "Show", "Hide");

			var htmlElem;
			var specAttrCntnr = Cmn.GetAncestorByClsNm(clickedElem, "SpecSrch_Attribute");
			if (specAttrCntnr) {
				 htmlElem = Cmn.GetElementsByClsNm("SpecSrch_Value", "td", specAttrCntnr);
			}
			if (htmlElem && htmlElem.length == 1) {
				if (Cmn.HasCls(htmlElem[0], "SpecSrch_SlctdVal")) { //for title input boxes
					//do nothing
				} else {
					
					if (htmlElem[0].innerHTML.lastIndexOf(OTHER_DOMAIN_TXT, 0) === 0) { 
						var attrIdArray = htmlElem[0].id.split("_")
						var pubAttrId = attrIdArray[PUB_ATTR_ID_IDX];
						var prodAttrId = attrIdArray[PROD_ATTR_ID_IDX];
						var prodValId = attrIdArray[PROD_VAL_ID_IDX];
						var pubValId = attrIdArray[PUB_VAL_ID_IDX];

						var inLnSpecDict = McMaster.SesnMgr.GetStVal(McMaster.SesnMgr.StValDefs.InLnSpecUsrInps.KyTxt());
						var cntxtNm = "InLnOrd";
						if (inLnSpecDict[inLnSpecId].ValExists(prodAttrId, prodValId, cntxtNm)) {
							inLnSpecDict[inLnSpecId].RemVal(prodAttrId, prodValId, cntxtNm);
						}
						inLnSpecDict[inLnSpecId].ToggleVal(prodAttrId, pubAttrId, prodValId, pubValId, cntxtNm);
						McMaster.SesnMgr.SetStVal(McMaster.SesnMgr.StValDefs.InLnSpecUsrInps.KyTxt(), inLnSpecDict);
					}
				}
			}
			
			var otherInpBxs = Cmn.GetElementsByClsNm("OtherValInpBx", "input", mainCntnr);
			if (otherInpBxs) {
				for (var i = 0; i < otherInpBxs.length; i++) {
					var otherBx = otherInpBxs[i];
					if (otherBx && otherBx.value.length == 0) {
						stkmsgcntnr.innerHTML = "";
						Cmn.ReplaceCls(qtyErrCntnr, "Show", "Hide");
					}
				}   
				InLnOrdWebPart.updtSpecAttr(inLnSpecId, clickedElem);
			}
			setVal(valDefs.ActvInLnOrdBx.KyTxt(), mBxObj);
        }
    };
	
	//-------------------------------------------------------------------------
	// <summary>
	// Handles a keydown event.
	// </summary>
	// <param name="e">The event.</param>
	//-------------------------------------------------------------------------		
	Me.HndlEvntOnKeyDown = function(e, webPartObj, respArgs){
		if (e){
			var targetElem = Cmn.GetEvntTarget(e);
			
			var mainCntnr;
			if (webPartObj.MetaDat) {
				mainCntnr = Cmn.Get("InLnOrdWebPart_Main" + webPartObj.MetaDat.PartNbrTxt);
			} else if (respArgs && respArgs.PartNbrTxt) {
				mainCntnr = Cmn.Get("InLnOrdWebPart_Main" + respArgs.PartNbrTxt);
			}
			if (mainCntnr == null && 
				(Cmn.HasCls(targetElem, "InLnOrdWebPartLayout_OtherInpBx") ||
				Cmn.HasCls(targetElem, "OtherValInpBx")) ) {
				mainCntnr = Cmn.GetAncestorByClsNm(targetElem, "InLnOrdWebPartLayout_Main");
			}
			
			//t2emc
			var sizedInpBx = Cmn.GetElementsByClsNm("SizedInpBx", "textarea", mainCntnr)[0];
			if (sizedInpBx && sizedInpBx === targetElem){
				SpecInteractions.SizedInpTyping(targetElem,e);
				SpecInteractions.SizedInpArrowKeys(targetElem,e);
			}
		}	
	}
	
	Me.HndlBlurEvnt = function(e, webPartObj){
		if (e){
			var blurElem = Cmn.GetEvntTarget(e);
			if(Cmn.HasCls(blurElem, "SizedInpBx")){
				var mainCntnr,
					inLnSpecId;
				if (webPartObj.MetaDat) {
					mainCntnr = Cmn.Get("InLnOrdWebPart_Main" + webPartObj.MetaDat.PartNbrTxt);
				} else if (mainCntnr == null){
					mainCntnr = Cmn.GetAncestorByClsNm(blurElem, "InLnOrdWebPartLayout_Main");
				}			
				var inLnSpecId = Cmn.GetElementsByClsNm("InLnOrdWebPartAttrCntnr", "div", mainCntnr)[0].getAttribute("data-InLnSpecId");
				var stkmsgcntnr = Cmn.GetElementsByClsNm("InLnOrdWebPartLayout_StkMsg", "div", mainCntnr)[0];
				if (!stkmsgcntnr) {
					//look for cntnr with alternate class name
					stkmsgcntnr = Cmn.GetElementsByClsNm("InLnOrdWebPartLayout_StkMsgPacks", "div", mainCntnr)[0];
				}
				var qtyErrCntnr = Cmn.GetElementsByClsNm("InLnOrdWebPartLayout_QtyErr", "div", mainCntnr)[0];
				//Cmn.ReplaceCls(qtyErrCntnr, "Show", "Hide");
				
				var htmlElem;
				var specAttrCntnr = Cmn.GetAncestorByClsNm(blurElem, "SpecSrch_Attribute");
				if (specAttrCntnr) {
					 htmlElem = Cmn.GetElementsByClsNm("SpecSrch_Value", "td", specAttrCntnr);
				}
				if (htmlElem && htmlElem.length == 1) {
					if (specAttrCntnr.innerHTML.lastIndexOf("Other") > -1) { //for title input boxes
						if (htmlElem[0].innerHTML.lastIndexOf(OTHER_DOMAIN_TXT, 0) === 0) { 
							var attrIdArray = htmlElem[0].id.split("_")
							var pubAttrId = attrIdArray[PUB_ATTR_ID_IDX];
							var prodAttrId = attrIdArray[PROD_ATTR_ID_IDX];
							var prodValId = attrIdArray[PROD_VAL_ID_IDX];
							var pubValId = attrIdArray[PUB_VAL_ID_IDX];

							var inLnSpecDict = McMaster.SesnMgr.GetStVal(McMaster.SesnMgr.StValDefs.InLnSpecUsrInps.KyTxt());
							var cntxtNm = "InLnOrd";
							if (inLnSpecDict[inLnSpecId].ValExists(prodAttrId, prodValId, cntxtNm)) {
								inLnSpecDict[inLnSpecId].RemVal(prodAttrId, prodValId, cntxtNm);
							}
							inLnSpecDict[inLnSpecId].ToggleVal(prodAttrId, pubAttrId, prodValId, pubValId, cntxtNm);
							McMaster.SesnMgr.SetStVal(McMaster.SesnMgr.StValDefs.InLnSpecUsrInps.KyTxt(), inLnSpecDict);
						}
					}
				}
				
				var sizedInpBx = Cmn.GetElementsByClsNm("SizedInpBx", "textarea", mainCntnr)[0];
				if (sizedInpBx && sizedInpBx.value.length == 0) {
					stkmsgcntnr.innerHTML = "";
					Cmn.ReplaceCls(qtyErrCntnr, "Show", "Hide");
					//InLnOrdWebPart.updtSpecAttr(inLnSpecId, blurElem);
				} else if (sizedInpBx){
					//stkmsgcntnr.innerHTML = webPartObj.MetaDat.StkMsg;
					var datetime = new Date();
					stkmsgcntnr.innerHTML = webPartObj.MetaDat.StkMsg;
					Cmn.ReplaceCls(qtyErrCntnr, "Hide", "Show");
					//InLnOrdWebPart.updtSpecAttr(inLnSpecId, blurElem);
				}
				setVal(valDefs.ActvInLnOrdBx.KyTxt(), mBxObj);
			}
		}	
	};
	
	//-------------------------------------------------------------------------
	// <summary>
	// Handles a keypress event.
	// </summary>
	// <param name="e">The event.</param>
	//-------------------------------------------------------------------------		
	Me.HndlKeyPressEvnt = function(e, webPartObj, respArgs){
		if (e){
			var targetElem = Cmn.GetEvntTarget(e);
			
			var mainCntnr;
			if (webPartObj.MetaDat) {
				mainCntnr = Cmn.Get("InLnOrdWebPart_Main" + webPartObj.MetaDat.PartNbrTxt);
			} else if (respArgs && respArgs.PartNbrTxt) {
				mainCntnr = Cmn.Get("InLnOrdWebPart_Main" + respArgs.PartNbrTxt);
			}
			if (mainCntnr == null && 
				(Cmn.HasCls(targetElem, "OtherValInpBx") ||
				Cmn.HasCls(targetElem, "InLnOrdWebPartLayout_OtherInpBx")) ) {
				mainCntnr = Cmn.GetAncestorByClsNm(targetElem, "InLnOrdWebPartLayout_Main");
			}
			
			var sizedInpBx = Cmn.GetElementsByClsNm("SizedInpBx", "textarea", mainCntnr)[0];
			if (sizedInpBx && sizedInpBx === targetElem){
				SpecInteractions.SizedInpTyping(targetElem,e);
			}
		}	
	}

	//-------------------------------------------------------------------------
	// <summary>
	// Handles a paste event.
	// </summary>
	// <param name="e">The event.</param>
	//-------------------------------------------------------------------------		
	Me.HndlPasteEvnt = function(e, webPartObj, respArgs){
		if (e){
			var targetElem = Cmn.GetEvntTarget(e);
			
			var mainCntnr;
			if (webPartObj.MetaDat) {
				mainCntnr = Cmn.Get("InLnOrdWebPart_Main" + webPartObj.MetaDat.PartNbrTxt);
			} else if (respArgs && respArgs.PartNbrTxt) {
				mainCntnr = Cmn.Get("InLnOrdWebPart_Main" + respArgs.PartNbrTxt);
			} 
			if (mainCntnr == null && 
				(Cmn.HasCls(targetElem, "InLnOrdWebPartLayout_OtherInpBx") ||
				Cmn.HasCls(targetElem, "OtherValInpBx")) ) {
				mainCntnr = Cmn.GetAncestorByClsNm(targetElem, "InLnOrdWebPartLayout_Main");
			}
			
			var sizedInpBx = Cmn.GetElementsByClsNm("SizedInpBx", "textarea", mainCntnr)[0];
			if (sizedInpBx && sizedInpBx === targetElem){
				SpecInteractions.SizedInpPaste(targetElem,e);
			}
		}	
	}
	
	// <summary>
    // If an inline box has been created before, we need to refresh the global variable
    // used in this file so that we know which box is "active."
    // </summary>
    // <param nm="partNbrLnk">
    // We use the part number link to identify the box object.
    // </param>
    Me.RegenerateJSBxObj = function (partNbrLnk) {

        var partId = partNbrLnk.getAttribute("data-mcm-itm-id")
				, crtdBxs = getVal(valDefs.InLnOrdBxsCrtd.KyTxt());

        // Set the global variables associated with the javascript objects.
        if (typeof (crtdBxs) == "object") {
            // Session inexplicably clones arrays incorrectly when we're
            // in iFrames. Recast the (now) object back to an array.
            var bxIdx = 0
				  , tempArray = [];

            while (crtdBxs[bxIdx]) {
                tempArray.push(crtdBxs[bxIdx]);
                bxIdx++;
            }

            crtdBxs = tempArray;
        }

        for (var bxIdx = 0; bxIdx < crtdBxs.length; bxIdx++) {
            if (crtdBxs[bxIdx].Id == partId
				   && crtdBxs[bxIdx].PrimaryPartNbrTxts == "") {
                InLnOrdWebPart.SetJSBxObjProperties(crtdBxs[bxIdx]);
                break;
            } else {
                // If this part appears more than once on the page, we have
                // to make sure we have the correct one. 
                if (crtdBxs[bxIdx].PrimaryPartNbrTxts.length > 0) {
                    var parentRow = Cmn.GetAncestorByTagNm(partNbrLnk, "tr")
						  , partNbrLnks = Cmn.GetElementsByClsNm("PartNbrLnk", "a", parentRow)
						  , primArr = [];

                    for (var lnkIdx = 0; lnkIdx < partNbrLnks.length; lnkIdx++) {
                        if (partNbrLnks[lnkIdx].getAttribute("data-mcm-itm-id") != partId) {
                            primArr.push(partNbrLnks[lnkIdx].getAttribute("data-mcm-itm-id"));
                        } else {
                            // Continue.
                        }
                    }

                    for (var primIdx = 0; primIdx < primArr.length; primIdx++) {
                        if ((crtdBxs[bxIdx].PrimaryPartNbrTxts.indexOf(primArr[primIdx]) > -1)) {
                            InLnOrdWebPart.SetJSBxObjProperties(crtdBxs[bxIdx]);
                            break;
                        }
                    }
                }
            }
        }
    }

    Me.SetJSBxObjProperties = function (bxObj) {
        /// <summary>
        /// If an inline box has been created before, we need to refresh the global variable
        /// used in this file so that we know which box is "active." 
        /// </summary>

        if (Cmn.GetObj("MainContent")) {
            // Dynamic content
            InLnOrdWebPartJSObj.SetMarkupProperties(bxObj);
        } else {
            // Catalog pages.
            self.parent.parent.InLnOrdWebPartJSObj.SetMarkupProperties(bxObj);
        }

        mBxObj = bxObj;
    }

    Me.WebPart_PreUnload = function (webPartObj) {
        // Remove event listeners
        if (mMainContentCntnr) {
            // Check to make sure that there is not already another box loaded
            // for then we want to leave the event listener for that box.
            var inLnBxRws = Cmn.GetElementsByClsNm("AddToOrdFlow_ItmBx", "tr", mMainContentCntnr);
            if (inLnBxRws && inLnBxRws.length > 2) {
                // remove nothing so attribute menus will continue to work for open boxes.
            } else {
                Cmn.RemEvntListener(mMainContentCntnr, "click", hndlClickEvnt);
            }
        } else if (mCtlgShellCntnr) {
            // Check to make sure that there is not already another box loaded
            // for then we want to leave the event listener for that box.
            var inLnBxRws = Cmn.GetElementsByClsNm("AddToOrdFlow_ItmBx", "tr", mCtlgShellCntnr);
            if (inLnBxRws && inLnBxRws.length > 2) {
                // remove nothing so attribute menus will continue to work for open boxes.
            } else {
                Cmn.RemEvntListener(mCtlgShellCntnr, "click", hndlClickEvnt);
            }
        } else {
            // do nothing as neither container we add listeners to is available.
        }
    };

    Me.WebPart_Unload = function (webPartObj) {
        /// <summary>
        /// Called just prior to the web part unloading and takes steps to clean
        /// up global data and report the unload to the rest of the site.
        /// </summary>
        /// <param name="webPartObj">
        /// The current web part object.
        /// </param>					

        // Create a web part unloaded message. 
        var msgNm = McMaster.MsgMgr.CntxtNms.INLN_ORD
			  , msgHdr = new McMaster.MsgMgr.Hdr(msgNm)
			  , cntnrNm = webPartObj.CntnrIDTxt
			  , webPartUnLoadedMsg = new McMaster.MsgMgrMsgs.WebPartUnloaded(msgHdr, cntnrNm);

        // Publish the message
        McMaster.MsgMgr.PubMsg(webPartUnLoadedMsg);
		
		//unload spec
        //        var inLnBxs = McMaster.SesnMgr.GetStVal(McMaster.SesnMgr.StValDefs.InLnOrdBxsCrtd.KyTxt())
        //        for (var inLnBxIdx = 0; inLnBxIdx < inLnBxs.length; inLnBxIdx++) {
        //            if (inLnBxs[inLnBxIdx].mWebPartObj.CntnrIDTxt == webPartObj.CntnrIDTxt) {
        //                mBxObj = inLnBxs[inLnBxIdx];
        //            }
        //        }	
		if (isInLnSpec(mBxObj.mWebPartObj.PartNbrLnk)) {
			unloadSpec();
		}

		        // Remove all state values associated with the part number.
        remStVals();

		try{
        // If the box is loaded in a catalog page, we will need to remove the box on an unload.
			if (McMasterCom.Nav.GetTopFrame().MainIFrame.Catalog) {
				if (mBxObj.VisibilityInd == true) {
					var tblBody = Cmn.GetAncestorByTagNm(mBxObj.PartNbrLnk, 'tbody')
					  , inLnOrdBxs = Cmn.GetElementsByClsNm("AddToOrdFlow_ItmBxFor" + mBxObj.Id, 'tr', tblBody)
					  , tRow = Cmn.GetAncestorByTagNm(mBxObj.PartNbrLnk, 'tr')
					  , partNbrTxt
					  , bufferRows;

					var specChoiceLnks = Cmn.GetElementsByClsNm("SpecChoiceSlctd", "a", tRow);
					for (var specChoiceLnkIdx = 0; specChoiceLnkIdx < specChoiceLnks.length; specChoiceLnkIdx++) {
						Cmn.ReplaceCls(specChoiceLnks[specChoiceLnkIdx], "SpecChoiceSlctd", "SpecChoiceVisitedLnk ");
					}

					var prceLnks = Cmn.GetElementsByClsNm("PrceLnkSlctd", "a", tRow);
					for (var prceLnksIdx = 0; prceLnksIdx < prceLnks.length; prceLnksIdx++) {
						Cmn.ReplaceCls(prceLnks[prceLnksIdx], "PrceLnkSlctd", "PrceLnkVisited ");
					}


					//get part number text
					if (mBxObj.PartNbrLnk.innerHTML.length > 0) {
						partNbrTxt = mBxObj.PartNbrLnk.innerHTML;
					} else {
						//partNbrCell that is passed into this function may not exist in the DOM
						//in that case, IE freaks out when trying to access the property
						//Instead of using innerHTML, use the hash. This is hackish.
						partNbrTxt = mBxObj.PartNbrLnk.hash.replace("#", "");
					}

					bufferRows = Cmn.GetElementsByClsNm("InLnOrdWebPart_BufferRowFor" + partNbrTxt, 'tr', tblBody);
					if (bufferRows.length > 0) {
						// Remove the buffer row.
						Cmn.RemElem(bufferRows[0]);
					}

					Cmn.RemCls(mBxObj.PartNbrLnk, "AddToOrdBxCreated");
					Cmn.RemCls(mBxObj.PartNbrLnk, "PartNbrSlctd");
					Cmn.ReplaceCls(mBxObj.PartNbrCell, "InLnOrdWebPartLayout_ItmTblPartNbrCell", "ItmTblColSpacePartNbr");
					Cmn.ReplaceCls(mBxObj.PartNbrCell, "AddToOrdBxCreated", "AddToOrdBxHidden");
					for (var bxIdx = 0; bxIdx < inLnOrdBxs.length; bxIdx++) {
						Cmn.RemElem(inLnOrdBxs[bxIdx]);
					}

					// Get the updated list of created boxes from session. 
					var crtdBxs = getVal(valDefs.InLnOrdBxsCrtd.KyTxt());

					// If we're on a catalog page, we need to update the value
					// of the global variable for the active box object.
					if (McMasterCom.Nav.GetTopFrame().MainIFrame.Catalog) {
						if (crtdBxs && crtdBxs.length > 0) {
							Me.SetJSBxObjProperties(crtdBxs[crtdBxs.length - 1]);
						}
					}
				} else {
					// Do nothing. InLnOrdWebPartLoader will take care of reinserting the 
					// box into the DOM if it's on a catalog page.
				}

					// TODO T2DXC: Remove the buffer rows as well!
				} else {
					// The box is not loaded in the catalog IFrame, so the box will be properly unloaded by
					// session/load manager.
				}
			} catch(ex){
				//do nothing
			}

        delete mMetaDatDict[mBxObj.PartNbrTxt];
        mMainContentCntnr = null;
        mCtlgShellCntnr = null;
        mCrtedBxObjs = [];
        mCrtedBxObjsIdx = 0;
        delete mBxObj;
    };

    Me.CadLnk_Click = function (partNbrTxt, intrnPartNbrTxt) {
        /// <summary>
        /// Redirects the customer to CAD content depending on what content is 
        /// available. 
        /// </summary>
        /// <param name="partNbrTxt"The part number text.></param>
        /// <param name="intrnPartNbrTxt"The internal part number text.></param>

        // Create a CAD content selected message. 
        var msgHdr = new McMaster.MsgMgr.Hdr(McMaster.MsgMgr.CntxtNms.CAD_WEB_PART)
			  , cadMsg;

        // Set the state value in session for the selected part number. 
        setVal(valDefs.SlctdPartNbrTxt.KyTxt(), mBxObj.PartNbrTxt);

        // Create the CAD link selected message, setting the various part number texts
        // as the payload
        cadMsg = new McMaster.MsgMgrMsgs.CadLnkSlctd(msgHdr, partNbrTxt, intrnPartNbrTxt);

        // Publish the CAD selected message. 
        McMaster.MsgMgr.PubMsg(cadMsg);

        // Webreports tracking.
        Cmn.TrkAct("InLnOrdCADLnkClck&partnbr=" + partNbrTxt, "InLnOrd");
		
        // TrkSrch
        var srchTrkInfo = new SrchTrkr.SrchDat({ usr: SrchTrkr.UsrActTyps.SLCT });
        srchTrkInfo.usr.srcNm = "InLnOrdWebPart";
        srchTrkInfo.usr.slctdNm = partNbrTxt;
        srchTrkInfo.usr.elemTyp = SrchTrkr.ElemTyps.CAD_LNK;
        srchTrkInfo.Trk();

    };

	// <summary>
	// Redirects the customer to item presentation content.
	// </summary>
	// <param name="partNbrTxt"The part number text.></param>
	Me.ProdDetailLnk_Click = function (elem, partNbrTxt) {	
	
	   var testMthd = function(elem) {
			var successInd = false;
			if (elem.id == "InLnOrdWebPart_Lnks"+ partNbrTxt) {
				// current element has specified class
				// passes test
				successInd = true;
			}
			return successInd;
		}
		
		var lnkCntnr = Cmn.GetAncestorBy(elem, testMthd);
		if (lnkCntnr){
			//find the part number link to get data from
			var partNbrLnks = Cmn.GetElementsByClsNm("PartNbrLnk", "a");
			//Get sequence from the link container
			var seqNbr = lnkCntnr.getAttribute("data-mcm-partnbr-seqnbr");
			
			var partNbrLnk = null;
			for (var i=0; i<partNbrLnks.length; i++){
				if (partNbrLnks[i].innerHTML == partNbrTxt && Cmn.HasCls(partNbrLnks[i], "PartNbrSlctd")){
					if (seqNbr){
						//Check against the sequence number on the part number link
						var seqNbrOnPartNbrLnk = partNbrLnks[i].getAttribute("data-mcm-partnbr-seqnbr");
						if (seqNbr == seqNbrOnPartNbrLnk){
							partNbrLnk = partNbrLnks[i];
							break;
						}						
					}else{	
						partNbrLnk = partNbrLnks[i];
						break;
					}
				}
			}
			
			var attrCompItmIds = null;
			var prsnttnId = null;
			var isEasyToOrderAttrInd = false;
			var usrInp = null;
			var attrNms = "";
			var attrValsTxt = "";
			var attrnms = [];
			var attrvals = [];
			var inpBxVal = "";
			var qtyInpBxVal = "";
			
			//get main cntnr
			var box = Cmn.GetAncestorByClsNm(lnkCntnr, "InLnOrdWebPartLayout_CntntDiv");
			
			//save quantity if the customer has typed it in
			var qtyInpBx = Cmn.GetElementsByClsNm("InLnOrdWebPartLayout_InpBx", "input", box)[0];			
			if (qtyInpBx && qtyInpBx.value.length > 0) {
				qtyInpBxVal = qtyInpBx.value;
			}
						
			//found part number link
			if (partNbrLnk){
				attrCompItmIds = partNbrLnk.getAttribute("data-mcm-attr-comp-itm-ids");
				if (attrCompItmIds) isEasyToOrderAttrInd = true;
				
				var attrCntnr = Cmn.GetElementsByClsNm("InLnOrdWebPartAttrCntnr", "div", box)[0];
				if (attrCntnr) {
					//If we have an attrCntnr, try to get attributes that are selected to pass to product detail page. 
					//If we don't (this happens after placing an order), we want the product detail page to be a clean slate, no attrs selected.
					
					if (isEasyToOrderAttrInd){
						//new stuff
						prsnttnId = getPrsnttnId(partNbrLnk);
						var id = partNbrTxt + '_' + prsnttnId;
						if (seqNbr) id = id + '_' + seqNbr;
						var inLnSpecInpDict = McMaster.SesnMgr.GetStVal(McMaster.SesnMgr.StValDefs.InLnSpecUsrInps.KyTxt());
						if (inLnSpecInpDict && inLnSpecInpDict[id]) usrInp = inLnSpecInpDict[id].Clone();
						usrInp.UpdateSession();

						//Other input box logic.
						var otherInpBxs = Cmn.GetElementsByClsNm("OtherValInpBx", "input", box);

						//populate attrvals and attrnms with what's in Other
						if (otherInpBxs) {
							for (var i = 0; i < otherInpBxs.length; i++) {
								attrvals[attrvals.length] = otherInpBxs[i].value;
								var divId = Cmn.GetAncestorByClsNm(otherInpBxs[i], "SpecSrch_Attribute").id;
								var attrIdArray = divId.split("_")
								attrnms[attrnms.length] = attrIdArray[PUB_ATTR_ID_IDX];
							}
						}
					} else {
					//get attribute names and values for old style attributes
						var attrCntnrs = Cmn.GetChldrnBy(function (elem) { return Cmn.HasCls(elem, "InLnOrdWebPart_ChildAttrCntnr") }, attrCntnr)
						  , inpBx = Cmn.GetElementsByClsNm("InLnOrdWebPartLayout_AttrInpBx", "input", attrCntnr)[0]
						  , attrCntnrMetaDat = attrCntnr.attributes
						  , partNbrSeq = 0;
					  
						// Collect the attribute names and values.
						for (var cntnrIdx = 0; cntnrIdx < attrCntnrs.length; cntnrIdx++) {
							var attrSlct = Cmn.GetElementsByClsNm("InLnOrdWebPart_AttrDropDwn", "div", attrCntnrs[cntnrIdx])[0]
								  , attrLst = Cmn.GetElementsByClsNm("InLnOrdWebPart_AttrForm", "ul", attrCntnrs[cntnrIdx])[0];

							//get sequence number from the attribute container. 
							//this sequence number is used to uniquely identify each instance of same part number 
							for (var i=0; i<attrCntnrMetaDat.length; i++){
								if (attrCntnrMetaDat[i].name == "data-mcm-partnbr-seqnbr"){
									partNbrSeq = attrCntnrMetaDat[i].value;
									break;
								}
							}
							
							if (attrSlct) {
								var id = attrSlct.id;
								if (partNbrSeq && partNbrSeq > 0){
									id = id + partNbrSeq;
								}
								
								if (mAttrbtSlctdTbl.Itm(id)) {
									attrnms[cntnrIdx] = attrSlct.id.split('&')[IDSTRARR_ATTRNAME_INDEX];
									attrvals[cntnrIdx] = getAttrVal(mAttrbtSlctdTbl.Itm(id));
									var attrSlctsInnerHTML = attrSlct.innerHTML;
									if (attrvals[cntnrIdx] == "Other") {
										if (inpBx.value.length > 0) {
											//save what the user has typed to transfer to item presentation
											inpBxVal = inpBx.value;
										}
									} else if (attrSlctsInnerHTML == 'Select from list...') {
										attrvals[cntnrIdx] = "Select from list...";
									}
								}
								else {
									// do nothing
								}
							} else if (attrLst) {
								
								var slctAttrRdoBtn = Cmn.GetElementsByClsNm("InLnOrdWebPart_AttrLstSlctd", "li", attrLst)[0];
								if (slctAttrRdoBtn) {
									attrnms[cntnrIdx] = attrLst.id;
									attrvals[cntnrIdx] = getAttrVal(slctAttrRdoBtn.innerHTML);
								} else {
									// do nothing
								}
							}
						}
					}
					
					// Join the attribute names and values into a query string
					// delimited by the proper character.
					if (attrnms && attrvals) {
						attrNms = attrnms.join(String.fromCharCode(2029));
						attrValsTxt = attrvals.join(String.fromCharCode(2029));
					}
				}
			}
			
			//Publish product link clicked message
			var newMsgHdr = new McMaster.MsgMgr.Hdr(McMaster.MsgMgr.CntxtNms.ITM_PRSNTTN);
			McMaster.MsgMgr.PubMsg(new McMaster.MsgMgrMsgs.ProdDtlLnkClicked(newMsgHdr, partNbrTxt, usrInp, attrCompItmIds, attrNms, attrValsTxt, inpBxVal, qtyInpBxVal));    
			
		}
    };

	
    // <summary>
    // Remove from cache
    // </summary>
    Me.RemFrmCache = function (partNbrTxt) {
        // Set the global variables associated with the javascript objects.
        if (typeof (mCrtedBxObjs) == "object") {
            // Session inexplicably clones arrays incorrectly when we're
            // in iFrames. Recast the (now) object back to an array.
            for (var i = 0; i < mCrtedBxObjs.length; i++) {
                if (mCrtedBxObjs[i].PartNbrTxt == partNbrTxt) {
                    mCrtedBxObjs.splice(i, 1);
                }
            }
        }
    };

    // <summary>
    // Redirects the customer to additional content such as MSDS pages 
    // or product specification sheets depending on what content is available. 
    // </summary>
    // <param name="typeTxt">The type of additional content document.</param>
    // <param name="idTxt"The id of the document requrested.></param>
    // <param name="partNbrTxt"The part number text.></param>
    Me.AddCntLnk_Click = function (typeTxt, idTxt, partNbrTxt) {
        // Create url
        var url = "/addlcontent/loadaddcontent.asp?ID=" + idTxt + "&Type=" + typeTxt;

        // Load url into MainIFrame
        McMasterCom.LoadMgr.LoadMainIFrame(url);

        // Webreports tracking.
        Cmn.TrkAct("InLnOrdAddCntClck&partnbr=" + partNbrTxt, "InLnOrd");
		
		// TrkSrch
        var srchTrkInfo = new SrchTrkr.SrchDat({ usr: SrchTrkr.UsrActTyps.SLCT });
        srchTrkInfo.usr.srcNm = "InLnOrdWebPart";
        srchTrkInfo.usr.slctdNm = partNbrTxt;
        srchTrkInfo.usr.elemTyp = SrchTrkr.ElemTyps.ADDNL_CNTNT_LNK;
        srchTrkInfo.Trk();
    };

    Me.CtlgPageOptOut_Click = function (e, partNbrTxt, ctlgPgNbr) {
        /// <summary>
        /// Redirects the customer to the selected product's catalog page.
        /// </summary>
        /// <param name="e"> The link clicked.</param>
        /// <param name="partNbrTxt"The part number text.></param>
        /// <param name="ctlgPgNbr">The catalog page number.</param>

        // Set the state value in session for the selected part number. 
        setVal(valDefs.ActvInLnOrdBx.KyTxt(), mBxObj);
        setVal(valDefs.InLnOrdBxsCrtd.KyTxt(), mCrtedBxObjs);
        setVal(valDefs.SlctdPartNbrTxt.KyTxt(), mBxObj.PartNbrTxt);

        if (partNbrTxt) {
            // Create a page number search message. 
            var msgHdr = new McMaster.MsgMgr.Hdr(McMaster.MsgMgr.CntxtNms.SRCH_ENTRY_WEB_PART)
			 , partNbrSlctdMsg = new McMaster.MsgMgrMsgs.PartNbrSlctd(msgHdr, partNbrTxt);

            // Publish the catalog page selected message. 
            McMaster.MsgMgr.PubMsg(partNbrSlctdMsg);

            // Webreports tracking.
            Cmn.TrkAct("InLnOrdCatPage&partnbr=" + partNbrTxt, "InLnOrd");
        } else {
            // Create a catalog page message
            var msgHdr = new McMaster.MsgMgr.Hdr(McMaster.MsgMgr.CntxtNms.INLN_ORD)
				  , ctlgPgSlctdMsg = new McMaster.MsgMgrMsgs.CtlgPageSlctd(msgHdr, ctlgPgNbr);
            setVal(valDefs.CurrCtlgPgNbr.KyTxt(), ctlgPgNbr);

            //Publish the catalog page selected message
            McMaster.MsgMgr.PubMsg(ctlgPgSlctdMsg);
        }

        // TrkSrch
        var srchTrkInfo = new SrchTrkr.SrchDat({ usr: SrchTrkr.UsrActTyps.SLCT });
        srchTrkInfo.usr.srcNm = "InLnOrdWebPart";
        srchTrkInfo.usr.slctdNm = partNbrTxt ? partNbrTxt : ctlgPgNbr;
        srchTrkInfo.usr.elemTyp = partNbrTxt ? SrchTrkr.ElemTyps.PART_NBR_CTLG_PG : SrchTrkr.ElemTyps.CTLG_PG;
        srchTrkInfo.Trk();
    };

    Me.BmLnk_Click = function (bmLnk, partNbrTxt) {
        /// <summary>
        /// Bookmarks the current product. 
        /// <param name="bmLnk"The bookmark link.></param>
        /// <param name="partNbrTxt"The part number text.></param>
        /// </summary>

        // Switch bookmark link to bookmarked text.
        var bkmkSpn = Cmn.GetNxtSiblingBy(bmLnk, function (elem) { return Cmn.HasCls(elem, "InLnOrdWebPart_Bkmkd") });
        Cmn.AddCls(bmLnk, "Hide");
        Cmn.RemCls(bkmkSpn, "Hide");

        // Grab hidden bookmark form and submit.
        var lnkCntnr = Cmn.GetAncestorByTagNm(bmLnk, "div")
			  , objFrm = Cmn.GetNxtSiblingBy(lnkCntnr, function (elem) { return Cmn.HasCls(elem, "InLnOrdWebPart_BmForm") });
        objFrm.submit();

        // Publish message to load left side bookmarks frame
        var hdr = new McMaster.MsgMgr.Hdr(McMaster.MsgMgr.CntxtNms.INLN_ORD)
			  , msg = new McMaster.MsgMgrMsgs.BMsSlctd(hdr);
        McMaster.MsgMgr.PubMsg(msg);

        // Webreports tracking.
        Cmn.TrkAct("InLnOrdBmClck&partnbr=" + partNbrTxt, "InLnOrd");

        // TrkSrch
        var srchTrkInfo = new SrchTrkr.SrchDat({ usr: SrchTrkr.UsrActTyps.SLCT });
        srchTrkInfo.usr.srcNm = "InLnOrdWebPart";
		srchTrkInfo.usr.elemTyp = SrchTrkr.ElemTyps.BOOKMARK;
        srchTrkInfo.usr.slctdNm = decodeURIComponent(partNbrTxt);
        srchTrkInfo.Trk();
    };

    Me.AttrLstChng = function (e, partNbrTxt) {
        /// <summary>
        /// Update the new attribute from the option links.
        /// </summary>
        /// <param name="e">
        /// The list item selected
        /// </param>	
        /// <param name="partNbrTxt">
        /// The the part number associated with the menu adjusted
        /// </param>	

        // Set slctd class and remove the slctd class from other option
        var attrCntnr = Cmn.GetAncestorByClsNm(e, "InLnOrdWebPartAttrCntnr")
			  , attrLstCntnr = Cmn.GetAncestorByClsNm(e, "InLnOrdWebPart_ChildAttrCntnr")
			  , attrLiElems = Cmn.GetElementsByClsNm("InLnOrdWebPart_AttrLst", "li", attrLstCntnr);

        if (Cmn.HasCls(e, "InLnOrdWebPart_AttrLstSlctd")) {

            // If clicked link was already selected, then unselect the attribute and 
            // show the hidden options.
            for (var lstIdx = 0; lstIdx < attrLiElems.length; lstIdx++) {
                Cmn.RemCls(attrLiElems[lstIdx], "Hide");
            }

            // Remove the selected class on the list element. 
            Cmn.ReplaceCls(e, "InLnOrdWebPart_AttrLstSlctd", "InLnOrdWebPart_AttrLst");

            // Clear out the stock message, since no attribute option has been selected.
            var stkmsgcntnr = Cmn.Get("InLnOrdWebPart_StkMsg" + partNbrTxt);
            if (stkmsgcntnr) {
                stkmsgcntnr.innerHTML = "";
            }

            // Clear the CAD link, since no attribute option has been selected.
            var lnkCntnr = Cmn.Get("InLnOrdWebPart_Lnks" + partNbrTxt);
            var addnlCntntLnkCntnr = Cmn.GetElementBy(function (elem) { return Cmn.HasCls(elem, "MsdsSpan") }, 'span', lnkCntnr);
            if (addnlCntntLnkCntnr) {
                addnlCntntLnkCntnr.innerHTML = "";
            }

            // Clear the product spec link, since no attribute option has been selected.
            var mainCntCntnr = Cmn.GetNxtSiblingBy(lnkCntnr, function (elem) { return Cmn.HasCls(elem, "InLnOrdWebPartLayout_Main") });
            var prodSpecCntnrs = Cmn.GetElementsByClsNm("InLnOrdWebPart_ProdSpecLnk", "div", mainCntCntnr);
            if (prodSpecCntnrs) {
                prodSpecCntnrs.innerHTML = "";
            }
			
			
			// Update the item information for the selected attribute value.
            updtAttr(e);

        } else {
            // Hide the "Please complete the specification..." error if it is displayed
            var attrAlertCntnrs = Cmn.GetElementsBy(function (elem) { return Cmn.HasCls(elem, "InLnOrdWebPart_AttrAlert"); }, 'div', attrCntnr);

            for (var alertCntnrIDx = 0; alertCntnrIDx < attrAlertCntnrs.length; alertCntnrIDx++) {
                Cmn.ReplaceCls(attrAlertCntnrs[alertCntnrIDx], "Show", "Hide");
            }

            // Option was selected so hide other values and set proper identifier class				
            Cmn.ReplaceCls(e, "InLnOrdWebPart_AttrLst", "InLnOrdWebPart_AttrLstSlctd");

            for (var lstIdx = 0; lstIdx < attrLiElems.length; lstIdx++) {
                if (Cmn.HasCls(attrLiElems[lstIdx], "InLnOrdWebPart_AttrLst")) {
                    Cmn.AddCls(attrLiElems[lstIdx], "Hide");
                } else {
                    // Do nothing.
                }
            }

            // Update the item information for the selected attribute value.
            updtAttr(e);
        }

        // Hide the error message
        var attrAlertCntnrs = Cmn.GetElementsBy(function (elem) { return Cmn.HasCls(elem, "InLnOrdWebPart_AttrAlert"); }, 'div', attrCntnr);
        for (var alertCntnrIDx = 0; alertCntnrIDx < attrAlertCntnrs.length; alertCntnrIDx++) {
            Cmn.ReplaceCls(attrAlertCntnrs[alertCntnrIDx], "Show", "Hide");
        }
    };

    Me.InpBxKeyUp = function (evnt, e, partNbrTxt) {
        /// <summary>
        /// Checks the key press from the input box for enters and 
        /// calls the add to order function if so.
        /// </summary>
        /// <param name="evnt"> The key up event on the input quantity box. </param>
        /// <param name="e"> The input quantity box. </param>
        /// <param name="partNbrTxt"The part number text.></param>

		if (evnt.keyCode == ENT_KY_CD && e.value.length >= 0) {
			Me.AddToOrd_Click(e);
		} else {
			var bx = Cmn.GetAncestorByClsNm(e, "InLnOrdWebPartLayout_CntntDiv");	
			var testMthd = function(elem) {
				if (elem.id == "InLnOrdWebPartQtyErr" + partNbrTxt
					&& Cmn.HasCls(elem, "InLnOrdWebPartLayout_QtyErr")){
				    return true;
				}
			}
			
			var qtyErrCntnr = Cmn.GetElementBy(testMthd, 'div', bx);
			if (e.value.length >= 0) {
				Cmn.ReplaceCls(qtyErrCntnr, "Show", "Hide");
			}
		}
	};

    // <summary>
    // Adds the selected product to the user's order. 
    // </summary>
    // <param name="e">The click event on the add to order button.</param>
    Me.AddToOrd_Click = function (btn) {
		
        var mainCntnr = Cmn.GetAncestorByClsNm(btn, "InLnOrdWebPartLayout_Main");
        if (!mainCntnr) {
            mainCntnr = mBxObj.MainCntnr;
        }

        var cntntRow = Cmn.GetAncestorByTagNm(mainCntnr, "tr");
        var parentRow = Cmn.GetPrevSibling(Cmn.GetPrevSibling(cntntRow));
        var partNbrCells = Cmn.GetChildrenByClsNm(parentRow, "ItmTblCellPartNbr");
        var partNbrLnk = null;
        for (var i = 0; i < partNbrCells.length; i++) {
            if (!Cmn.HasCls(partNbrCells[i], "ItmTblFiller")) {
                partNbrLnks = Cmn.GetChildrenByClsNm(partNbrCells[i], "PartNbrSlctd");
                if (partNbrLnks.length == 0) {
                    partNbrLnks = Cmn.GetChildrenByClsNm(partNbrCells[i], "AddToOrdBxCreated");
                }
                if (partNbrLnks.length > 0) {
                    partNbrLnk = partNbrLnks[0];
                    break;
                }
            }
        }

        // Reset the box object if necessary. 
        // We have to check for this in case the user had more than one box open and chose
        // to add an item from an "inactive" box. 
        Me.ResetBxObj(btn, parentRow);
        // Proceed with add to order functionality. 
        var qtyErrCntnr = Cmn.GetElementsByClsNm("InLnOrdWebPartLayout_QtyErr", "div", mainCntnr)[0]
              , attrWarningCntnr = Cmn.GetElementsByClsNm("InLnOrdWebPartLayout_WarningAlert", "div", mainCntnr)[0]
			  , attrSlctCntnr = Cmn.GetElementsByClsNm("InLnOrdWebPartAttrCntnr", "div", mainCntnr)[0]
			  , attrAlertCntnr
			  , attrSlcts
			  , attrnms = []
			  , attrvals = []
			  , attrNmsQSTxt
			  , attrValsQSTxt
			  , addtoOrdBxCntnr
			  , inpQtyBxCntnr
			  , inpBx
			  , specItm = Cmn.GetElementsByClsNm("InLnOrdWebPartLayout_ItmSpecTxtBx", "textarea", mainCntnr)[0]
			  , availLensQSTxt = mMetaDat.AttrMstrAvailLens.join(String.fromCharCode(2029))
			  , specItmTxt = ""
			  , qtyTxt
			  , attrMissingInd = false
			  , missingAttrNm
			  , attrCntnrs
			  , otherInpBx
			  , attrAlertHiddenInd = false
			  , isInLnSpecInd = isInLnSpec(partNbrLnk)
			  , qtyErrIsShowing = false
			  , attrErrIsShowing = false
			  , attrCntnrMetaDat
			  , seqNbr = 0
		
		if (isInLnSpecInd) {
		//new flow
            		
			//Other input box logic.
			var otherInpBxs = Cmn.GetElementsByClsNm("OtherValInpBx", "input", mBxObj.MainCntnr);
			var sizedInpBx = Cmn.GetElementsByClsNm("SizedInpBx","textarea",mBxObj.MainCntnr)[0];
			
			//populate attrvals and attrnms
			if (otherInpBxs) {
				for (var i = 0; i < otherInpBxs.length; i++) {
					attrvals[attrvals.length] = otherInpBxs[i].value;
					var divId = Cmn.GetAncestorByClsNm(otherInpBxs[i], "SpecSrch_Attribute").id;
					var attrIdArray = divId.split("_")
					attrnms[attrnms.length] = attrIdArray[PUB_ATTR_ID_IDX];
				}
			}
			
			if (sizedInpBx) {		
				//remove traces of wrapping implementation i.e. non-printed characters
				sizedInpBx.value = replaceAllSubstr(ZERO_WIDTH_SPACE + ZERO_WIDTH_SPACE + "\n",ZERO_WIDTH_SPACE + "\n",sizedInpBx.value);
				sizedInpBx.value = replaceAllSubstr(ZERO_WIDTH_SPACE + "\n","\n",sizedInpBx.value);
				attrvals[attrvals.length] = sizedInpBx.value;
				var divId = Cmn.GetAncestorByClsNm(sizedInpBx, "SpecSrch_Attribute").id;
				var attrIdArray = divId.split("_");
				attrnms[attrnms.length] = attrIdArray[PUB_ATTR_ID_IDX];
			}		

			// Join the attribute names and values into a query string
			// delimited by the proper character.
			if (attrnms && attrvals) {
				attrNmsQSTxt = attrnms.join(String.fromCharCode(2029));
				attrValsQSTxt = attrvals.join(String.fromCharCode(2029));
			}
			
			// Grab the quantity to add to the order from the input box
			if (Cmn.HasCls(btn, "InLnOrdWebPartLayout_InpBx")) {
				inpBx = btn;
			} else {
				addtoOrdBxCntnr = Cmn.GetAncestorByClsNm(btn, "InLnOrdWebPartLayout_AddtoOrd");
				inpQtyBxCntnr = Cmn.GetPrevSibling(addtoOrdBxCntnr);
				inpBx = Cmn.GetFrstChld(inpQtyBxCntnr);
			}

			qtyTxt = inpBx.value;
			// If the value entered is 0, set the qtyTxt to spaces.
			if (parseFloat(qtyTxt) == 0) {
				qtyTxt = "";
			}
			
			//If the quantity error is showing, set the qtyErrIsShowing indicator to true.
			//Pauses the add to order flow.
			if (qtyErrCntnr && qtyErrCntnr.innerHTML.length > 0) {
				qtyErrIsShowing = true;
			}
			
			//We consider the existence of warning message text as a suggestion.
			//When the customer clicks add to order, it becomes bold and we then consider it a warning.
			//This is when the attrErr is considered to be showing, which pauses the add to order flow.
			if (attrWarningCntnr && attrWarningCntnr.innerHTML.length > 0) {
				if (Cmn.HasCls(attrWarningCntnr, "InLnOrdWebPartLayout_BoldedWarningAlert")) {
					attrErrIsShowing = true;
				}
			}
			
			var cnxnObj = {
				success: hndlAddToOrdAJAXResp,
				failure: hndlFailedAddToOrdAjaxResp,
				cnxnParm: {
					respTyp: McMaster.CnxnMgr.WEB_PART_RESP_TYP_TXT,
					PartNbrTxt: partNbrLnk.innerHTML,
					mainCntnr: mainCntnr, 
					isInLnSpecInd: isInLnSpecInd
				}
			};

			var url = INLN_ORD_HTTP_HANDLER_URL + "?" +
							ACT_TXT + "=" +
							ADD_ITM_CURR_ORD_QS_KY_TXT + "&" +
							PART_NBR_QS_KY_TXT + "=" +
							partNbrLnk.innerHTML + "&" +
							QTY_TXT_QS_KY_TXT + "=" +
							encodeURIComponent(qtyTxt) + "&" +
							ATTR_NM_QS_KY_TXT + "=" +
							encodeURIComponent(attrNmsQSTxt) + "&" +
							ATTR_VAL_QS_KY_TXT + "=" +
							encodeURIComponent(attrValsQSTxt) + "&" +
							SPEC_ITM_QS_KY_TXT + "=" +
							encodeURIComponent(specItmTxt) + "&" +
							ATTR_MSTR_AVAIL_LENS + "=" +
							availLensQSTxt + "&" +
							FIRM_PKG_ERR_IND + "=" +
							"false&" +
							QTY_ERR_SHOWING_IND + "=" +
							qtyErrIsShowing + "&" +
							ATTR_ERR_SHOWING_IND + "=" +
							attrErrIsShowing;

			var attrCompItmIds = partNbrLnk.getAttribute("data-mcm-attr-comp-itm-ids");
			var fullPrsnttnId = getFullPrsnttnId(partNbrLnk);
			var prsnttnId = getPrsnttnId(partNbrLnk); //part number link may exist in either sub or full

			url = url + "&" +
				  FULL_PRSNTTN_ID_KY_TXT + "=" +
				  fullPrsnttnId + "&" +
				  PRSNTTN_ID_KY_TXT + "=" +
				  prsnttnId + "&" +
				  IS_INLNSPEC + "=" +
				  true + "&" +
				  ATTR_COMP_IDS + "=" +
				  attrCompItmIds;

			var inLnSpecInpDict = McMaster.SesnMgr.GetStVal(McMaster.SesnMgr.StValDefs.InLnSpecUsrInps.KyTxt());
			seqNbr = partNbrLnk.getAttribute("data-mcm-partnbr-seqnbr");
			if (inLnSpecInpDict) {
				var inLnSpecId = partNbrLnk.innerHTML + '_' + prsnttnId;
				if (seqNbr){
					inLnSpecId = inLnSpecId + '_' + seqNbr;
				}
				if (inLnSpecId in inLnSpecInpDict) {
					url = inLnSpecInpDict[inLnSpecId].AddSpecUsrInpQS(url);
				}
			}
			
			// Use Connection Manager to call the web part's HTTP handler.
			McMaster.CnxnMgr.PerformAjaxCnxn(url, cnxnObj);
			
			Cmn.AddCls(mBxObj.PartNbrLnk, "AddToOrdBxOrdered");
			Cmn.AddCls(partNbrLnk, "AddToOrdBxOrdered");
			

		} else {
		//old flow

			if (attrSlctCntnr) {
				attrCntnrs = Cmn.GetElementsByClsNm("InLnOrdWebPart_ChildAttrCntnr", "div", attrSlctCntnr);
				otherInpBx = Cmn.GetElementsByClsNm("InLnOrdWebPartLayout_AttrInpBx", "input", attrSlctCntnr)[0];
				attrAlertCntnr = Cmn.GetElementsByClsNm("InLnOrdWebPart_AttrAlert", "div", attrSlctCntnr);
				attrSlcts = Cmn.GetElementsByClsNm("InLnOrdWebPart_AttrDropDwn", "div", attrSlctCntnr);
				attrLists = Cmn.GetElementsByClsNm("InLnOrdWebPart_AttrForm", "ul", attrSlctCntnr);
				attrCntnrMetaDat = attrSlctCntnr.attributes;
				//get sequence number from the attribute container. 
				//this sequence number is used to uniquely identify each instance of same part number 
				for (var i = 0; i < attrCntnrMetaDat.length; i++) {
					if (attrCntnrMetaDat[i].name == "data-mcm-partnbr-seqnbr") {
						seqNbr = attrCntnrMetaDat[i].value;
						break;
					}
				}

				// Check the attribute drop-down menus 
				// and make sure that options have been selected.						
				for (var cntnrIdx = 0; cntnrIdx < attrCntnrs.length; cntnrIdx++) {
					var attrSlct = Cmn.GetElementsByClsNm("InLnOrdWebPart_AttrDropDwn", "div", attrCntnrs[cntnrIdx])[0];
					var attrLst = Cmn.GetElementsByClsNm("InLnOrdWebPart_AttrForm", "ul", attrCntnrs[cntnrIdx])[0];
					if (attrSlct) {
						attrnms[cntnrIdx] = attrSlct.id.split('&')[IDSTRARR_ATTRNAME_INDEX];
						
						var id = attrSlct.id;
						if (seqNbr && seqNbr > 0) {
							id = id + seqNbr;
						}
						if (mAttrbtSlctdTbl.Itm(id)) {
							attrvals[cntnrIdx] = getAttrVal(mAttrbtSlctdTbl.Itm(id));
							var attrSlctInnerHTML = attrSlct.innerHTML;
							if (attrvals[cntnrIdx] == "Other") {
								attrvals[cntnrIdx] = otherInpBx.value;
							} else if (attrSlctInnerHTML == 'Select from list...') {
								// If no option is selected, set the missing attribute indicator to true
								attrMissingInd = true;
								mAttrErrInd = false;
								attrvals[cntnrIdx] = " ";
								missingAttrNm = id;
							}
						}
						else {
							// If no option is selected, set the missing attribute indicator to true
							attrMissingInd = true;
							mAttrErrInd = false;
							attrvals[cntnrIdx] = " ";
						}


					} else if (attrLst) {
						attrnms[cntnrIdx] = attrLst.id;
						var slctAttrRdoBtn = Cmn.GetElementsByClsNm("InLnOrdWebPart_AttrLstSlctd", "li", attrLst)[0];
						if (slctAttrRdoBtn) {
							attrvals[cntnrIdx] = getAttrVal(slctAttrRdoBtn.id);
						} else {
							// If no option is selected, set the missing attribute indicator to true
							attrMissingInd = true;
							mAttrErrInd = false;
							attrvals[cntnrIdx] = " ";
							missingAttrNm = attrnms[cntnrIdx];
						}
					}
				}
			}

			// this is a HACK. INLNORDering treats spec items and attributed items with custom attribute
			// rendering logic searches for custom* and creates a spec box
			// before change, here we used to rely on presence of spec box to determine if it is a spec item
			// NOW, we assume that if it is not spec item (isSpecInd = false) then it is a custom item 
			// even if a spec box is present.
			// there are other ways of doing it, such as relying on mBoxObj to supply info about what is being added to order
			// , intead of relying on HTML

			if (specItm) {
				if (mBxObj.PartNbrMetaDat.IsSpecInd) {
					specItmTxt = specItm.value;
				} else if (specItm) {
					// this is a custom* attribute
					attrnms[attrnms.length] = "Custom"
					attrvals[attrvals.length] = specItm.value;
				}
			}
			
			if (attrnms && attrvals) {
				attrNmsQSTxt = attrnms.join(String.fromCharCode(2029));
				attrValsQSTxt = attrvals.join(String.fromCharCode(2029));
			}
				
			// Grab the quantity to add to the order from the input box
			if (Cmn.HasCls(btn, "InLnOrdWebPartLayout_InpBx")) {
				inpBx = btn;
			} else {
				addtoOrdBxCntnr = Cmn.GetAncestorByClsNm(btn, "InLnOrdWebPartLayout_AddtoOrd");
				inpQtyBxCntnr = Cmn.GetPrevSibling(addtoOrdBxCntnr);
				inpBx = Cmn.GetFrstChld(inpQtyBxCntnr);
			}

			qtyTxt = inpBx.value;
			// If the value entered is 0, set the qtyTxt to spaces.
			if (parseFloat(qtyTxt) == 0) {
				qtyTxt = "";
			}
			
			//If the quantity error is showing, set the qtyErrIsShowing indicator to true.
			//Pauses the add to order flow.
			if (qtyErrCntnr && qtyErrCntnr.innerHTML.length > 0) {
				qtyErrIsShowing = true;
			}
			
			// Set the attribute alert container indicator. 
			if (attrAlertCntnr) {
				if (Cmn.HasCls(attrAlertCntnr[0], "Hide")) {
					attrAlertHiddenInd = true;
				} else {
					attrErrIsShowing = true;
				}
			}

			// Check for missing attribute or quantites before setting up the 
			// AJAX call to add item to the order.  If error message has already
			// been shown, go ahead and add to the item to the order as is.
			if (attrMissingInd && attrAlertHiddenInd && mAttrErrInd == false) {

				Cmn.ReplaceCls(attrAlertCntnr[0], "Hide", "Show");
				InLnOrdWebPart.ScrollToShowInLnOrdCntnr();
				Cmn.TrkAct("InLnOrdAttrErr&partnbr=" + partNbrLnk.innerHTML, "InLnOrd");

				// Set the global attribute missing indicator to true. We only want the
				// customer to see this warning once. 
				if (chkAvailLensDsc(qtyTxt) == false) {
					// Do nothing. The user has an available lengths violation
					// so don't allow them to add the item to the order next time.
				} else {
					mAttrErrInd = true;
				}
			} else if (qtyTxt.length == 0 && Cmn.HasCls(qtyErrCntnr, "Hide")) {
				// The customer did not enter a quantity or entered "0" as a quantity. 
				qtyErrCntnr.innerHTML = "Please enter a quantity.";
				Cmn.ReplaceCls(qtyErrCntnr, "Hide", "Show");
				inpBx.focus();
				InLnOrdWebPart.ScrollToShowInLnOrdCntnr();
				Cmn.TrkAct("InLnOrdQtyErr&partnbr=" + partNbrLnk.innerHTML, "InLnOrd");
			} else if (mBxObj.PartNbrMetaDat.IsFirmPkgInd && (qtyTxt.indexOf("-") > -1 || qtyTxt.indexOf("/") > -1) && Cmn.HasCls(qtyErrCntnr, "Hide")) {
				// This item is sold in a firm package and the customer entered a value that contains
				// a "-" or a "/". We need to send that information to the server for parsing. 

				// Indicator to determine if an ajax call has already been made; will become
				// true once the success method has been executed. Prevents an item from being 
				// added multiple times if the add to order button is clicked quickly.
				mReadyNxtAjaxCallInd = false;

				var cnxnObj = {
					success: hndlAddToOrdAJAXResp,
					failure: hndlFailedAddToOrdAjaxResp,
					cnxnParm: {
						respTyp: McMaster.CnxnMgr.WEB_PART_RESP_TYP_TXT,
						PartNbrTxt: partNbrLnk.innerHTML,
						mainCntnr: mainCntnr,
						isInLnSpecInd: isInLnSpecInd
					}
				};

				var url = INLN_ORD_HTTP_HANDLER_URL + "?" +
								ACT_TXT + "=" +
								ADD_ITM_CURR_ORD_QS_KY_TXT + "&" +
								PART_NBR_QS_KY_TXT + "=" +
								mBxObj.PartNbrTxt + "&" +
								QTY_TXT_QS_KY_TXT + "=" +
								encodeURIComponent(qtyTxt) + "&" +
								ATTR_NM_QS_KY_TXT + "=" +
								encodeURIComponent(attrNmsQSTxt) + "&" +
								ATTR_VAL_QS_KY_TXT + "=" +
								encodeURIComponent(attrValsQSTxt) + "&" +
								SPEC_ITM_QS_KY_TXT + "=" +
								encodeURIComponent(specItmTxt) + "&" +
								ATTR_MSTR_AVAIL_LENS + "=" +
								availLensQSTxt + "&" +
								FIRM_PKG_ERR_IND + "=" +
								!Cmn.HasCls(qtyErrCntnr, "Hide") + "&" +
								QTY_ERR_SHOWING_IND + "=" +
								qtyErrIsShowing + "&" +
								ATTR_ERR_SHOWING_IND + "=" +
								attrErrIsShowing;

				// Use Connection Manager to call the web part's HTTP handler.
				McMaster.CnxnMgr.PerformAjaxCnxn(url, cnxnObj);
			} else if (mBxObj.PartNbrMetaDat.IsFirmPkgInd && (parseFloat(qtyTxt) % 1 > 0) && Cmn.HasCls(qtyErrCntnr, "Hide")) {
				// This item is sold in a firm package and the customer entered a quantity
				// that breaks the package. Show an error message.
				qtyErrCntnr.innerHTML = "This product is sold in packs of " + mMetaDat.SellStdPkgQty + ".";
				Cmn.ReplaceCls(qtyErrCntnr, "Hide", "Show");
				inpBx.select();
				InLnOrdWebPart.ScrollToShowInLnOrdCntnr();
				Cmn.TrkAct("InLnOrdFirmPkgErr&partnbr=" + partNbrLnk.innerHTML, "InLnOrd");

			} else if (mReadyNxtAjaxCallInd) {

				// Indicator to determine if an ajax call has already been made; will become
				// true once the success method has been executed. Prevents an item from being 
				// added multiple times if the add to order button is clicked quickly.
				mReadyNxtAjaxCallInd = false;

				var cnxnObj = {
					success: hndlAddToOrdAJAXResp,
					failure: hndlFailedAddToOrdAjaxResp,
					cnxnParm: {
						respTyp: McMaster.CnxnMgr.WEB_PART_RESP_TYP_TXT,
						PartNbrTxt: partNbrLnk.innerHTML,
						mainCntnr: mainCntnr,
						isInLnSpecInd: isInLnSpecInd
					}
				};

				var url = INLN_ORD_HTTP_HANDLER_URL + "?" +
								ACT_TXT + "=" +
								ADD_ITM_CURR_ORD_QS_KY_TXT + "&" +
								PART_NBR_QS_KY_TXT + "=" +
								partNbrLnk.innerHTML + "&" +
								QTY_TXT_QS_KY_TXT + "=" +
								encodeURIComponent(qtyTxt) + "&" +
								ATTR_NM_QS_KY_TXT + "=" +
								encodeURIComponent(attrNmsQSTxt) + "&" +
								ATTR_VAL_QS_KY_TXT + "=" +
								encodeURIComponent(attrValsQSTxt) + "&" +
								SPEC_ITM_QS_KY_TXT + "=" +
								encodeURIComponent(specItmTxt) + "&" +
								ATTR_MSTR_AVAIL_LENS + "=" +
								availLensQSTxt + "&" +
								FIRM_PKG_ERR_IND + "=" +
								!Cmn.HasCls(qtyErrCntnr, "Hide") + "&" + 
								QTY_ERR_SHOWING_IND + "=" +
								qtyErrIsShowing + "&" +
								ATTR_ERR_SHOWING_IND + "=" +
								attrErrIsShowing;

				// Use Connection Manager to call the web part's HTTP handler.
				McMaster.CnxnMgr.PerformAjaxCnxn(url, cnxnObj);
			}

			Cmn.AddCls(mBxObj.PartNbrLnk, "AddToOrdBxOrdered");
			Cmn.AddCls(partNbrLnk, "AddToOrdBxOrdered");
		}

    };

    Me.OrdLnk_Click = function () {
        /// <summary>
        /// Makes sure that the order pad loads in the correct frame when the user
        /// clicks on the "order" link from the confirmation message.
        /// </summary>
        /// <remarks>
        /// The call to this function resides in markup generated by the add to order
        /// function in mcmWebOrdLnWrapper. 
        /// </remarks>
        var mcmTop = McMasterCom.Nav.GetTopFrame(self);

        mcmTop.location.href = "/#orders";
    }

    // <summary>
    // Closes the add to order box. Executed either when the user clicks on the
    // part number link a second time or clicks on the close icon. 
    // </summary>
    // <param name="btn">The button on which the user clicked to close the box.</param>
    Me.CloseBx = function (btn) {
        var partNbrLnks = Cmn.GetElementsByClsNm("PartNbrLnk", "a"),
			inlnOrdContentCell = Cmn.GetAncestorByTagNm(btn, "td"),
			inlnOrdContentRw = Cmn.GetAncestorByTagNm(btn, "tr"),
			inLnOrdHdrRow = Cmn.GetPrevSibling(inlnOrdContentRw),
			partNbrTxt = null,
			partNbrLnk = null,
			seqNbr = btn.getAttribute("data-mcm-partnbr-seqnbr");

        if (inlnOrdContentCell) {
            var chld = inlnOrdContentCell.childNodes[0];
            if (chld && Cmn.HasCls(chld, "InLnOrdWebPartLayout_CntntDiv")) {
                var inlnOrdElemCntnr = chld.childNodes[0];
                if (inlnOrdElemCntnr && Cmn.HasCls(inlnOrdElemCntnr, "InLnOrdWebPart_RacingStripe")) {
                    var inlnElems = inlnOrdElemCntnr.childNodes;
                    for (var i = 0; i < inlnElems.length; i++) {
                        if (Cmn.HasCls(inlnElems[i], "InLnOrdWebPartLayout_Lnks")) {
                            partNbrTxt = inlnElems[i].id.replace("InLnOrdWebPart_Lnks", "");
                            break;
                        }
                    }
                }
            }

			if (partNbrTxt == null) {
				var lastIdx = inlnOrdContentCell.id.split("_").length - 1;
				partNbrTxt = inlnOrdContentCell.id.split("_")[lastIdx];
			}

			if (partNbrTxt) {
				for (var i = 0; i < partNbrLnks.length; i++) {
					if (partNbrLnks[i].innerHTML == partNbrTxt && Cmn.HasCls(partNbrLnks[i], "AddToOrdBxCreated")) {
						var seqNbrOnPartNbrLnk = partNbrLnks[i].getAttribute("data-mcm-partnbr-seqnbr");
						if (seqNbr){
							if (seqNbrOnPartNbrLnk && seqNbrOnPartNbrLnk == seqNbr){
								partNbrLnk = partNbrLnks[i];
								break;
							}
						}else{
							if (seqNbrOnPartNbrLnk) {
								//do nothing	
							}else{
								partNbrLnk = partNbrLnks[i];
								break;	
							}
						}
					}
				}
			}
		}

        if (partNbrLnk) {
            //hide inline order box
            InLnOrdWebPart.HideInLnBx(inLnOrdHdrRow, inlnOrdContentRw, Cmn.GetAncestorByTagNm(partNbrLnk, "td"), true);
        }
		
		// TrkSrch
		var srchTrkInfo = new SrchTrkr.SrchDat({ usr: SrchTrkr.UsrActTyps.SLCT });
		srchTrkInfo.usr.srcNm = "InLnOrdWebPart";
		srchTrkInfo.usr.elemTyp = SrchTrkr.ElemTyps.CLOSE_BTN;
		srchTrkInfo.usr.slctdNm = decodeURIComponent(partNbrTxt);
		srchTrkInfo.Trk();

        // Publish the inline order box closed message 
        var inlnOrdBxClosMsgHdr = new McMaster.MsgMgr.Hdr(McMaster.MsgMgr.CntxtNms.FULL_PRSNTTN)
		  , inlnOrdBxClosMsg = new McMaster.MsgMgrMsgs.InlnOrdBxClosed(inlnOrdBxClosMsgHdr);
        McMaster.MsgMgr.PubMsg(inlnOrdBxClosMsg);
    }

    Me.MouseOver = function (e) {
        /// <summary>
        /// Handles mouseover of attribute to highlight the element.
        /// </summary>
        /// <param name="e"> The element clicked.</param>
        Cmn.AddCls(e, "InLnOrdWebPartLayout_AttrHighlight");
    }

    Me.MouseOverCloseBtn = function (e) {
        /// <summary>
        /// Handles mouseover of Close button to change color to black.
        /// </summary>
        /// <param name="e"> The element clicked.</param>
        Cmn.ReplaceCls(e, "InLnOrdWebPartLayout_CloseIconGreyImg", "InLnOrdWebPartLayout_CloseIconBlackImg");
    }

    Me.MouseOverAddToOrdBtn = function (e) {
        /// <summary>
        /// Handles mouseover of Add to Order button to change color to black.
        /// </summary>
        /// <param name="e"> The element clicked.</param>
        Cmn.ReplaceCls(e, "InLnOrdWebPartLayout_AddToOrdIconGreyImg", "InLnOrdWebPartLayout_AddToOrdIconBlackImg");
    }

    Me.MouseOut = function (e) {
        /// <summary>
        /// Handles mouseout of attribute to highlight the element.
        /// </summary>
        /// <param name="e"> The element clicked.</param>	
        Cmn.RemCls(e, "InLnOrdWebPartLayout_AttrHighlight");
    }

    Me.MouseOutCloseBtn = function (e) {
        /// <summary>
        /// Handles mouseout of Close button to change color to grey.
        /// </summary>
        /// <param name="e"> The element clicked.</param>	
        Cmn.ReplaceCls(e, "InLnOrdWebPartLayout_CloseIconBlackImg", "InLnOrdWebPartLayout_CloseIconGreyImg");
    }

    Me.MouseOutAddToOrdBtn = function (e) {
        /// <summary>
        /// Handles mouseout of Add to Order button to change color to grey.
        /// </summary>
        /// <param name="e"> The element clicked.</param>	
        Cmn.ReplaceCls(e, "InLnOrdWebPartLayout_AddToOrdIconBlackImg", "InLnOrdWebPartLayout_AddToOrdIconGreyImg");
    };

    Me.SpecBxKeyPress = function (event, txtArea) {
        /// <summary>
        /// Limits the user input for the spec box to the column text limit
        /// in the database. 
        /// </summary>

        if (txtArea.value.length >= SPEC_TXT_LMT) {
            return false;
        }
    };

    /// #End Region "Event Handlers"

    /// #Region "Public Methods"

    Me.GetOrdHist = function (bxObj) {
        /// <summary>
        /// Retrieves the order history message for a product that is either on the
        /// current order or was ordered in the past. 
        /// </summary>
        /// <param name="itmDscTxt"> The item description text.</param>

        // Set up connection object with passed variables used by success function.
        var cnxnObj = {
            success: hndlOrdHistAJAXResp,
            cnxnParm: {
                respTyp: McMaster.CnxnMgr.WEB_PART_RESP_TYP_TXT,
                ItmDscTxt: bxObj.PartNbrMetaDat.Dsc,
                bxObj: bxObj
            }
        };

        var url = INLN_ORD_HTTP_HANDLER_URL + "?" +
							  ACT_TXT + "=" +
							  GET_ORD_HIST_QS_KY_TXT + "&" +
							  PART_NBR_QS_KY_TXT + "=" +
							  bxObj.PartNbrTxt;
		//add more information to the query string
		if (isInLnSpec(bxObj.PartNbrLnk)) {
			var partNbrLnk = bxObj.PartNbrLnk;
			var attrCompItmIds = partNbrLnk.getAttribute("data-mcm-attr-comp-itm-ids");
			var fullPrsnttnId = getFullPrsnttnId(partNbrLnk);
			var prsnttnId = getPrsnttnId(partNbrLnk); //part number link may exist in either sub or full
			var seqNbr = bxObj.PartNbrLnk.getAttribute("data-mcm-partnbr-seqnbr");

            url = url + "&" +
					  FULL_PRSNTTN_ID_KY_TXT + "=" +
					  fullPrsnttnId + "&" +
					  PRSNTTN_ID_KY_TXT + "=" +
					  prsnttnId + "&" +
					  IS_INLNSPEC + "=" +
					  true + "&" +
					  ATTR_COMP_IDS + "=" +
					  attrCompItmIds;

			var inLnSpecInpDict = McMaster.SesnMgr.GetStVal(McMaster.SesnMgr.StValDefs.InLnSpecUsrInps.KyTxt());
			if (inLnSpecInpDict) {
				var inLnSpecId = mBxObj.PartNbrTxt + '_' + prsnttnId;
				if (seqNbr){
					inLnSpecId = inLnSpecId + '_' + seqNbr;
				}
				if (inLnSpecId in inLnSpecInpDict) {
					url = inLnSpecInpDict[inLnSpecId].AddSpecUsrInpQS(url);
				}
			}
		}

        McMaster.CnxnMgr.PerformAjaxCnxn(url, cnxnObj);
    }
	
	
	// <summary> 
	// Retrieves additional content links for the select part number. 
	// </summary>
	// <param name="intrnPartNbrTxt">
	// The internal part number text. This is used to query the database.
	// </param>
	Me.GetAddnlCntntLnks = function (bxObj, mainCntnr) {
		chkPartNbrExcludedForItmPrsnttn(bxObj, mainCntnr);
	}

    Me.HighlightRelevantInLnSpecMarkup = function (bxObj) {
        /// <summary>
        ///  Highlight previously ordered spec values by adding class.
        /// </summary>
        /// <param name="rootElem">
        ///  div containing the inline ordering box markup text
        /// </param>
        // Get the part numbers and attribute values to highlght that are on the page.
        var prtNbrsToHighlight = McMaster.SesnMgr.GetStVal(McMaster.SesnMgr.StValDefs.FndAgainPrtNbrsToHighlight.KyTxt())
            , locPrtNbrsToHighlight = McMaster.SesnMgr.GetStVal(McMaster.SesnMgr.StValDefs.FndAgainLocPrtNbrsToHighlight.KyTxt())
		    , orderedSpecIdVals = McMaster.SesnMgr.GetStVal(McMaster.SesnMgr.StValDefs.FndAgainSpecIdValsToParts.KyTxt());

        if ((Cmn.IsEmpty(prtNbrsToHighlight) == false || Cmn.IsEmpty(locPrtNbrsToHighlight) == false) &&
				Cmn.IsEmpty(orderedSpecIdVals) == false) {

            // Ensure compatibility of code below with IE<9 browsers, support Array.indexOf
            if (!('indexOf' in Array.prototype)) {
                Array.prototype.indexOf = function (find, i /*opt*/) {
                    if (i === undefined) i = 0;
                    if (i < 0) i += this.length;
                    if (i < 0) i = 0;
                    for (var n = this.length; i < n; i++)
                        if (i in this && this[i] === find)
                            return i;
                    return -1;
                }
            };

            var InLnSpecValLnks = Cmn.GetElementsByClsNm("SpecSrch_Value", "td", bxObj.MainCntnr);
            var len = InLnSpecValLnks.length; // performance boost by saving this off	
            if (len > 0) {
                for (var i = 0; i < len; i++) {
                    var partNbrMatchInd = false;
                    var currPartNbr = bxObj.PartNbrTxt;
                    var attrCompIdsTxt = bxObj.PartNbrLnk.getAttribute("data-mcm-attr-comp-itm-ids");
                    if (attrCompIdsTxt) {
                        var attrCompIdList = attrCompIdsTxt.split(",");
                    }
                    if ((currPartNbr && prtNbrsToHighlight[currPartNbr]) || (currPartNbr && locPrtNbrsToHighlight[currPartNbr])) {
                        var specValIdArray = InLnSpecValLnks[i].id.split('_');
                        var currSpecProdId = specValIdArray[2];
                        var currSpecProdValId = specValIdArray[5];

                        var prodValIdPair = currSpecProdId + ";" + currSpecProdValId;
                        if (orderedSpecIdVals[prodValIdPair]) {
                            var specPartNbrArray = orderedSpecIdVals[prodValIdPair].split("|");
                            for (var j = 0; j < specPartNbrArray.length; j++) {
                                if (specPartNbrArray[j] === currPartNbr ||
								(attrCompIdList &&
								 (attrCompIdList.indexOf(prtNbrsToHighlight[specPartNbrArray[j]]) >= 0 ||
                                    attrCompIdList.indexOf(locPrtNbrsToHighlight[specPartNbrArray[j]]) >= 0))) {
                                    partNbrMatchInd = true;
                                    break;
                                }
                            }
                            if (partNbrMatchInd) {
                                Cmn.AddCls(InLnSpecValLnks[i], ATTR_VAL_HIGHLIGHTED_CLS);
                            }
                        }
                    }
                }
            }
        }
    }

    Me.UpdtStVals = function () {
        /// <summary>
        /// Updates state values in session in order to keep track of the part numbers for which
        /// inline boxes have already been created and whether they are visible. 
        /// </summary>
        // T2DXC: This essentially doesn't do anything anymore. I may take this 
        // out after building UNDO functionality. 

        // Make the query string text for reloading from sesn.
        // makeSesnLoadQSTxt(inLnBxsCrtd);
        var crtedBxs = mCrtedBxObjs;

        // Set the global variables associated with the javascript objects.
        if (typeof (crtedBxs) == "object") {
            // Session inexplicably clones arrays incorrectly when we're
            // in iFrames. Recast the (now) object back to an array.
            var bxIdx = 0
				  , tempArray = [];

            while (mCrtedBxObjs[bxIdx]) {
                tempArray.push(mCrtedBxObjs[bxIdx]);
                bxIdx++;
            }

            crtedBxs = tempArray;
        }

        // Reorder the sequence of created box objects. 			
        if (crtedBxs.length > 0) {
            // If the current element exists in the array and is not on the end, 
            // move it to the end.
            if (mBxObj.Id == crtedBxs[crtedBxs.length - 1].Id) {
                // Update the entry in the list of created box objects to 
                // mirror the latest values of the active box.
                crtedBxs[crtedBxs.length - 1] = mBxObj;
            } else {
                for (var bxIdx = 0; bxIdx < crtedBxs.length; bxIdx++) {
                    if (mBxObj.Id == crtedBxs[bxIdx].Id) {
                        var tempBxObj = crtedBxs[bxIdx];
                        crtedBxs.splice(bxIdx, 1);
                        crtedBxs.push(tempBxObj);
                        break;
                    }
                }
            }
        }

        // Update the value in session for the array that stores box objects.
        setVal(valDefs.InLnOrdBxsCrtd.KyTxt(), crtedBxs);
        setVal(valDefs.ActvInLnOrdBx.KyTxt(), mBxObj);
        mCrtedBxObjs = crtedBxs;
    }

    Me.TakeSnapShot = function () {
        //Take snapshot for back button.
        var sesnStNbr = getVal(valDefs.InLnOrdBxsSesnStat.KyTxt());
        if (sesnStNbr == null) sesnStNbr = -1;
        setVal(valDefs.InLnOrdBxsSesnStat.KyTxt(), sesnStNbr + 1);
    }

    Me.ResetBxObj = function (targetElem, parentRow) {
        /// <summary>
        /// Retrieves the box ID associated with an existing inline ordering box. 
        /// </summary>
        /// <param name="targetElem">
        /// An element inside the inline ordering box. This will be an element on which
        /// the user has clicked. 
        /// </param>
        /// <remarks>
        /// We also reset the global variable for the box object that the associated
        /// Javascript file (InLnOrdWebPart.js) uses; we need it to know which is the
        /// "active" box. 
        /// </remarks> 

        var bxId = 0
			  , inLnOrdRow = Cmn.GetAncestorByTagNm(targetElem, "tr");

        if (!parentRow) {
            parentRow = Cmn.GetPrevSibling(Cmn.GetPrevSibling(inLnOrdRow));
        }

        while (Cmn.HasCls(parentRow, "AddToOrdFlow_ItmBx")) {
            parentRow = Cmn.GetPrevSibling(Cmn.GetPrevSibling(parentRow));
        }

        var primaryPartNbrCells = Cmn.GetChildrenByClsNm(parentRow, "ItmTblCellPartNbr");
        var primaryPartNbrLnks = [];
        var primaryPartNbrCellsCpy = primaryPartNbrCells;
        var partNbrLnk = Cmn.GetElementBy(function (elem) { return Cmn.HasCls(elem, "AddToOrdBxCreated"); }, "a", parentRow);

        if (!partNbrLnk) {
            partNbrLnk = Cmn.GetElementsByClsNm("AddToOrdBxCreated" + mBxObj.Id, "a", parentRow)[0];
        }

        var lnkClsNms = partNbrLnk.className.split(" ")
			  , partNbrLnks = Cmn.GetElementsByAttrVal("data-mcm-itm-id", partNbrLnk.getAttribute("data-mcm-itm-id"));

        for (var h = 0; h < primaryPartNbrCellsCpy.length; h++) {
            if (Cmn.HasCls(primaryPartNbrCells[h], "ItmTblFiller")) {
                primaryPartNbrCells.splice(h, 1);
                h--;
            }
        }

        if (primaryPartNbrCells.length > 1) {
            for (var i = 0; i < primaryPartNbrCells.length; i++) {
                if (Cmn.GetChildrenByClsNm(primaryPartNbrCells[i], "PartNbrLnk")) {
                    primaryPartNbrLnks.push(Cmn.GetChildrenByClsNm(primaryPartNbrCells[i], "PartNbrLnk"))[0];

                }
            }
        }

        if (primaryPartNbrLnks.length > 1) {
            for (var j = 0; j < primaryPartNbrLnks.length; j++) {
                if (partNbrLnk && primaryPartNbrCells[primaryPartNbrCells.length - (j + 2)]) {
                    if (partNbrLnk != Cmn.GetChildrenByClsNm(primaryPartNbrCells[primaryPartNbrCells.length - (j + 2)], "PartNbrLnk")[0]) {
                        var primaryPartNbrCell = Cmn.GetChildrenByClsNm(primaryPartNbrCells[primaryPartNbrCells.length - (j + 2)], "PartNbrLnk")[0];
                        break;
                    }
                }
            }
        } else {
            var primaryPartNbrCell = Cmn.GetChildrenByClsNm(primaryPartNbrCells[primaryPartNbrCells.length - 1], "PartNbrLnk")[0];
        }

        var primaryPartNbrTxts;
        var primaryIds = [];
        var primLnk;
        var primId;

        if (primaryPartNbrCell) {
            for (var k = 0; k < primaryPartNbrLnks.length; k++) {
                primLnk = primaryPartNbrLnks[k];
                primId = primLnk[0].getAttribute("data-mcm-itm-id");
                if (primId != partNbrLnk.getAttribute("data-mcm-itm-id")) {
                    primaryIds.push(primId);
                }
            }
            if (primaryIds.length > 1) {
                primaryPartNbrTxts = primaryIds.join("|");
            } else {
                primaryPartNbrTxts = primaryIds[0];
            }
        }

        var crtedBxObjsLength = 0;
        for (var i in mCrtedBxObjs) {
            if (mCrtedBxObjs.hasOwnProperty(i)) {
                crtedBxObjsLength++;
            }
        }

        // Find the id for the box associated with this part number link. 
        for (var clsIdx = 0; clsIdx < lnkClsNms.length; clsIdx++) {
            if (bxId == 0) {
                // Continue.
                for (var bxIdx = 0; bxIdx < crtedBxObjsLength; bxIdx++) {
                    var prevSibling = Cmn.GetPrevSiblingBy(mCrtedBxObjs[bxIdx].PartNbrCell, function (elem) { return Cmn.HasCls(elem, "ItmTblCellPartNbr") });
                    while (Cmn.HasCls(prevSibling, "ItmTblFiller")) {
                        prevSibling = Cmn.GetPrevSiblingBy(prevSibling, function (elem) { return Cmn.HasCls(elem, "ItmTblCellPartNbr") });
                    }
                    if ((mCrtedBxObjs[bxIdx].PrimaryPartNbrTxts != "") && primaryPartNbrTxts) {
                        if ((mCrtedBxObjs[bxIdx].PrimaryPartNbrTxts = primaryPartNbrTxts)
								&& (lnkClsNms[clsIdx].indexOf(mCrtedBxObjs[bxIdx].Id) > -1)
								&& (prevSibling === Cmn.GetAncestorByClsNm(primaryPartNbrCell, "ItmTblCellPartNbr"))) {
                            // Reset the box from which the regular javascript file
                            // is pulling its information.
                            Me.SetJSBxObjProperties(mCrtedBxObjs[bxIdx]);
                            break;
                        }
                        else if (lnkClsNms[clsIdx].indexOf(mCrtedBxObjs[bxIdx].Id) > -1) {
                            // Reset the box from which the regular javascript file

                            // is pulling its information.
                            Me.SetJSBxObjProperties(mCrtedBxObjs[bxIdx]);
                        }
                    }
                    else if (primaryPartNbrTxts && primaryPartNbrTxts.indexOf(mCrtedBxObjs[bxIdx].Id) > -1) {
                        // Reset the box from which the regular javascript file
                        // is pulling its information.
                        Me.SetJSBxObjProperties(mCrtedBxObjs[bxIdx]);
                    }
                    else if (partNbrLnk.getAttribute("data-mcm-itm-id").indexOf(mCrtedBxObjs[bxIdx].Id) > -1) {
                        // Reset the box from which the regular javascript file
                        // is pulling its information.
                        Me.SetJSBxObjProperties(mCrtedBxObjs[bxIdx]);
                    }
                }
            } else {
                // We've found the id, exit the loop.
                break;
            }
        }
    }

    // <summary>
    // Creates the buffer row between inline ordering boxes so adjacent ones
    // don't touch. 
    // </summary>
    Me.CrteBufferRow = function (parentRow) {
        while (Cmn.HasCls(parentRow, "AddToOrdFlow_ItmBx")) {
            parentRow = Cmn.GetPrevSibling(parentRow);
        }

        var bufferRow
		  , bufferCell;

        if (McMasterCom.Nav.GetTopFrame().MainIFrame.Catalog && (Cmn.IsIE6() || Cmn.IsIE7())) {
            bufferRow = parentRow.parentNode.parentNode.insertRow(parentRow.rowIndex);

            Cmn.AddCls(bufferRow, "InLnOrdWebPart_BufferRowFor" + mBxObj.PartNbrTxt);
            Cmn.SetStyle(bufferRow, "height", BUFFER_HGT + "px");

            for (var cellIdx = 0; cellIdx < mBxObj.TblCells.length; cellIdx++) {
                bufferCell = bufferRow.insertCell();
            }
        } else {
            bufferRow = Cmn.CrteElement("tr");
            Cmn.AddCls(bufferRow, "InLnOrdWebPart_BufferRowFor" + mBxObj.PartNbrTxt);
            Cmn.SetStyle(bufferRow, "height", BUFFER_HGT + "px");
            for (var cellIdx = 0; cellIdx < mBxObj.TblCells.length; cellIdx++) {
                bufferCell = Cmn.CrteElement("td");
                bufferRow.appendChild(bufferCell);
            }
            Cmn.InsrtBefore(bufferRow, parentRow);
        }
    };

    // <summary>
    // When the user clicks on a part number that will render part 
    // of an inline ordering box below the fold, we scroll the presentation
    // pane such that the entire box is visible. 
    // </summary>
    Me.ScrollToShowInLnOrdCntnr = function () {
        var inLnOrdCntnr = Cmn.GetElementsByClsNm("InLnOrdWebPart_RacingStripe", "div", mBxObj.BxCntntCell)[0]
		  , partNbrLnkPosn
		  , horzScrollBarCatalog;

        // Get the position of the horizontal scroll bar based on the browser. 
        if (typeof (window.scrollX) == "undefined") {
            // IE
            horzScrollBarCatalog = window.document.body.scrollLeft;
        } else {
            // All other browsers. 
            horzScrollBarCatalog = window.scrollX;
        }
		
		var appModeValTxt = Cmn.GetQSVal(APP_MODE_PREF_TXT);
        // --------------------------------------
        // horzScrollBarCatalog should be changed to Cmn.GetObj("CtlgPageShell_CtlgPage_Cntnr").scrollLeft

        // If and only if we are in a catalog page the masthead height will be 0. 
        if (MASTHEAD_HGT == 0 && appModeValTxt == "") {
            // If true you are on a catalog page and need to execute the scrolling function for the catalog page. 

            // If the context of the part number selected message is "FullPrsntnn" the request to open the inline 
            // box has come from a dynamically generated catalog page and the box will need to be scrolled 
            // so the bottom of the box is above the fold. 

            //use the offset y for catalog pages
            partNbrLnkPosn = Cmn.GetYOffset(mBxObj.PartNbrLnk);
            if (mWebPartObj.PartNbrSlctdMsgCntxtNm == "FULLPRSNTTN") {
                var inLnOrdCntnrPosnCatalog = Cmn.GetHeight(inLnOrdCntnr) + Cmn.GetHeight(mBxObj.PartNbrCell) + partNbrLnkPosn
					  , vertScrollBarCatalog
					  , catalogFrameScrollPosn
					  , scrollCntnr = Cmn.GetObj("CtlgPageShell_CtlgPage_Cntnr");

                if (scrollCntnr) {
                    // Find the positions of the vertical scroll bar, the bottom of our box, and the window height.
                    vertScrollBarCatalog = scrollCntnr.scrollTop;
                    // Find the height of the scrollable region in the catalog iframe. 
                    catalogFrameScrollPosn = scrollCntnr.clientHeight + vertScrollBarCatalog - BOTTOMNAVTOOLSET_HGT;
                }

                if (inLnOrdCntnrPosnCatalog < catalogFrameScrollPosn) {
                    //Do nothing because the bottom of the box is not below the fold
                } else {
                    //Determine the distance the box needs to scroll so it is seen above
                    //the fold and scroll by that distance
                    var newScrollPosnWthHorzScrollBarCatalog = vertScrollBarCatalog +
														(inLnOrdCntnrPosnCatalog - catalogFrameScrollPosn)
														+ HORZSCROLLBARBUFFER + SCROLLBUFFER;
                    scrollCntnr.scrollTop += newScrollPosnWthHorzScrollBarCatalog;
                }

                // If the context of the message is not "FULLPRSNTTN" the request to open the box has come from 
                // the catalog page link in the box, a part number search, or the part number link in 
                // order pad and the inline box needs to be scrolled to the center of the screen. 
            } else {
                //use the GetY
                partNbrLnkPosn = Cmn.GetY(mBxObj.PartNbrLnk);
                scrollInLnBxToCntr(partNbrLnkPosn, horzScrollBarCatalog);
            }
        } else {
            //use the GetY for regular pages
            partNbrLnkPosn = Cmn.GetY(mBxObj.PartNbrLnk);

            // If else on a dynamic page and execute scrolling function for dynamic page. 
            var inLnOrdCntnrPosnDynamic;
            if (partNbrLnkPosn) {
                inLnOrdCntnrPosnDynamic = Cmn.GetHeight(inLnOrdCntnr) + Cmn.GetHeight(mBxObj.PartNbrCell)
											+ partNbrLnkPosn - TOOLSET_HGT - MASTHEAD_HGT;
            } else {
                inLnOrdCntnrPosnDynamic = Cmn.GetHeight(inLnOrdCntnr) + Cmn.GetHeight(mBxObj.PartNbrCell)
											- TOOLSET_HGT - MASTHEAD_HGT;
            }

            var viewableAreaHgtDynamic = Cmn.GetViewportHeight() - TOOLSET_HGT - MASTHEAD_HGT - BOTTOMNAVTOOLSET_HGT;

            if (inLnOrdCntnrPosnDynamic < viewableAreaHgtDynamic) {
                // Do nothing.
            } else {
                // Get the content container
                var prodPageCntntCntnr = Cmn.GetElementsByClsNm("ProdPageContent")[0]
					  , origScrollPosnDynamic = Cmn.GetVerticalScrollPosn(prodPageCntntCntnr)
					  , newScrollPosnDynamic = origScrollPosnDynamic + inLnOrdCntnrPosnDynamic
											- viewableAreaHgtDynamic + TOOLSET_HGT + SCROLLBUFFER
					  , horzScrollBarDynamic = Cmn.ChkForScrollBar(prodPageCntntCntnr, "horizontal")
					  , newScrollPosnWthHorzScrollBarDynamic = newScrollPosnDynamic + HORZSCROLLBARBUFFER;

                // If a horizontal scroll bar exists, its height needs to be taken into account when shifting. 
                if (horzScrollBarDynamic == true) {
                    Cmn.SetVerticalScrollPosn(prodPageCntntCntnr, newScrollPosnWthHorzScrollBarDynamic);
                } else {
                    Cmn.SetVerticalScrollPosn(prodPageCntntCntnr, newScrollPosnDynamic);
                }
            }
        }
    };

    // <summary>
    // Reduces the rowspan of any embedded content cells back to their pre-inline ordering
    // box values or increases it by three (buffer row, header row, content row). For images 
    // and copy embedded in tables. 
    // </summary>
    Me.ModifyRowSpanOnCntntCells = function (rowCnt, bxCntntRow) {
        // See if the row in which the user clicked the part number contains an embedded content cell. 
        var tblCntntCell = Cmn.GetElementBy(function (elem) { return (Cmn.HasCls(elem, "ItmTblPivotImgCell") || Cmn.HasCls(elem, "ItmTblImgCell")); }, "td", mBxObj.ParentRow)
		  , oldRowSpan
		  , newRowSpan;

        // If we do find an embedded content cell in the row clicked, then modify its row span so that 
        // the inline ordering box does not disrupt the layout of the rest of the table. 
        if (tblCntntCell) {
            oldRowSpan = tblCntntCell.rowSpan;
            newRowSpan = oldRowSpan + rowCnt;
			
			if (newRowSpan < 1){
				newRowSpan = 1;
			}
            tblCntntCell.rowSpan = newRowSpan;
        } else {
            // If we do not find it in the row clicked, search table rows above the row clicked until
            // an embedded content cell is found or we run out of rows to search.
            // TODO: This is a potential performance drain but there's no better way to do it now. Many
            // 		 tables have multiple embedded content cells. 
            var row = bxCntntRow;
            if (row) {
                //do nothing
            } else {
                row = mBxObj.ParentRow
            }
            var prevRow = Cmn.GetPrevSibling(row);

            while (prevRow) {
                tblCntntCell = Cmn.GetElementBy(function (elem) { return (Cmn.HasCls(elem, "ItmTblImgCell") || Cmn.HasCls(elem, "ItmTblPivotImgCell")); }, "td", prevRow);

                if (tblCntntCell) {
                    oldRowSpan = tblCntntCell.rowSpan;
                    newRowSpan = oldRowSpan + rowCnt;
                    tblCntntCell.rowSpan = newRowSpan;
                    break;
                } else {
                    prevRow = Cmn.GetPrevSibling(prevRow);
                }
            }
        }
    }

    Me.HideInLnBx = function (bxHdrRow, bxCntntRow, partNbrCell, closeInd) {
        /// <summary>
        /// Hides the inline box of the part number selected
        /// </summary>

        var itmAdded = false
		   , partNbrLnk = Cmn.GetFrstChld(partNbrCell)
		   , partNbrTxt
		   , bufferRow
		   , actvBx = mBxObj;

        if (partNbrLnk.innerHTML.length > 0) {
            partNbrTxt = partNbrLnk.innerHTML;
        } else {
            //partNbrCell that is passed into this function may not exist in the DOM
            //in that case, IE freaks out when trying to access the property
            //Instead of using innerHTML, use the hash. This is hackish.
            partNbrTxt = partNbrLnk.hash.replace("#", "");
        }

        bufferRow = Cmn.GetPrevSiblingBy(bxHdrRow, function (elem) { return Cmn.HasCls(elem, "InLnOrdWebPart_BufferRowFor" + partNbrTxt); });

        if (!partNbrCell) {
            partNbrCell = actvBx.PartNbrCell;
            partNbrLnk = actvBx.PartNbrLnk;
        }

        //hide inline order spec box
        hideInLnSpecBx(partNbrLnk);
        
        hideAttrMenu(actvBx.MainCntnr);

        if (bufferRow) {
            // Remove the buffer row.
            Cmn.RemElem(bufferRow);
        } else {
            //we should not be getting into this code 
            bufferRow = findBufferRow();
            if (bufferRow) {
                Cmn.RemElem(bufferRow);
            }
        }

        // Check to see if the part number was added to the order.	
        if (Cmn.HasCls(bxCntntRow, "InLnOrdWebPart_ItmAdded")) {
            itmAdded = true;
        }

        // Reduce the rowspan of any embedded content cells back to their pre-inline ordering box
        // values.			
        if (Cmn.IsIE6() || Cmn.IsIE7()) {
            InLnOrdWebPart.ModifyRowSpanOnCntntCells(-1, bxCntntRow);
        } else {
            InLnOrdWebPart.ModifyRowSpanOnCntntCells(-3, bxCntntRow);
        }

        //remove elements
        Cmn.ReplaceCls(partNbrLnk, "AddToOrdBxCreated", "AddToOrdBxHidden");
        Cmn.ReplaceCls(partNbrCell, "AddToOrdBxCreated", "AddToOrdBxHidden");

        // Change classes of the part number link that was selected
        Cmn.ReplaceCls(partNbrLnk, "PartNbrSlctd", "PartNbrVisitedLnk");

        // Gather all of the remaining part numbers that are selected and 
        // loop through all of them to remove the selected class
        var partNbrLnks = Cmn.GetElementsByClsNm("PartNbrSlctd", "a");
        for (var partNbrLnkIdx = 0; partNbrLnkIdx < partNbrLnks.length; partNbrLnkIdx++) {
            Cmn.RemCls(partNbrLnks[partNbrLnkIdx], "PartNbrSlctd");
        }

        // Change class on the part number cell to remove the border around the 
        // part number and change the padding.
        Cmn.ReplaceCls(partNbrCell, "InLnOrdWebPartLayout_ItmTblPartNbrCell", "ItmTblColSpacePartNbr");
		
		//Remove tooltip
        partNbrLnk.title = "";
       
	   // Re-add the horizontal rule to the row with the part number.
        reAddHorzntlRule(actvBx.BxCntntCell);

        // Update the value of the visibility indicator on this part number's
        // javascript object to false. 
        actvBx.VisibilityInd = false;
        // Publish for webreports tracking.
        Cmn.TrkAct("InLnOrdClose&partnbr=" + actvBx.PartNbrTxt, "InLnOrd");

        setVal(valDefs.ActvInLnOrdBx.KyTxt(), actvBx);
        mBxObj = actvBx;
        Me.TakeSnapShot();

        //box has been manually closed. Remove the box 
        if (closeInd) {
            remInLnOrdBx(bxHdrRow, bxCntntRow, partNbrLnk.innerHTML, partNbrLnk);
        }

        // Publish the inline order box closed message. Used for pinned content. 
        var inlnOrdBxClosMsgHdr = new McMaster.MsgMgr.Hdr(McMaster.MsgMgr.CntxtNms.FULL_PRSNTTN)
				  , inlnOrdBxClosMsg = new McMaster.MsgMgrMsgs.InlnOrdBxClosed(inlnOrdBxClosMsgHdr);

        McMaster.MsgMgr.PubMsg(inlnOrdBxClosMsg);
    }

    // <summary>
    // Shows the inline box of the part number selected
    // </summary>
    Me.ShowInLnBx = function (inLnBxHdrRw, inLnBxCntntRw, partNbrCell) {
        var partNbrLnk = Cmn.GetFrstChld(partNbrCell);

        Me.RegenerateJSBxObj(partNbrLnk);
        setVal(valDefs.ActvInLnOrdBx.KyTxt(), mBxObj);
        var parentRow = Cmn.GetAncestorByTagNm(partNbrCell, "tr");
        // Check to see if there are multiple part numbers and if so, check if one has a 
        // inline box opened.
        var newBxOpenedInMultPartNbrRowInd = Me.HndlRowsWithMultPartNbrs(parentRow)
		  , actvBx = mBxObj;

        var prevRow = Cmn.GetPrevSibling(parentRow);
        if (prevRow && prevRow.className.Contains("Buffer")) {
            // Do nothing. We want to reuse the same buffer row. If we don't do this, 
            // stacked pivot tables have the potential to become messed up. 
        } else {
            var parentRow = Cmn.GetPrevSibling(inLnBxHdrRw);
            // Create the buffer row.
            InLnOrdWebPart.CrteBufferRow(parentRow);

            // Increase the rowspan of any embedded content cells so that 
            // they do not force unrelated content in the table to wrap.					
            if (Cmn.IsIE6() || Cmn.IsIE7()) {
                InLnOrdWebPart.ModifyRowSpanOnCntntCells(1, inLnBxCntntRw);
            } else {
                InLnOrdWebPart.ModifyRowSpanOnCntntCells(3, inLnBxCntntRw);
            }
        }

        // Change classes on the link.
        Cmn.RemCls(partNbrLnk, "PartNbrVisitedLnk");
        Cmn.ReplaceCls(partNbrLnk, "AddToOrdBxHidden", "AddToOrdBxCreated");
        Cmn.AddCls(partNbrLnk, "PartNbrSlctd");

        // Change classes on the part number cell to add the border around the part number 
        Cmn.ReplaceCls(partNbrCell, "ItmTblColSpacePartNbr", "InLnOrdWebPartLayout_ItmTblPartNbrCell");

        // If there is a horizontal rule under the row with the part number, move the rule under the 
        // inline ordering box.
        if (Cmn.HasCls(actvBx.BxCntntCell, "InLnOrdWebPartLayout_HorizontalRule")) {
            for (var tblCellIdx = 0; tblCellIdx < actvBx.TblCells.length; tblCellIdx++) {
                Cmn.RemCls(actvBx.TblCells[tblCellIdx], "ItmTblAllRuleContentCell");
            }
        }

        // Show the header and content row.
        Cmn.RemCls(inLnBxHdrRw, "Hide");
        Cmn.RemCls(inLnBxCntntRw, "Hide");

        //Place the focus on the quantity box so users can easily enter a quantity. 
        var inpBx = Cmn.GetObj("qtyInp" + actvBx.PartNbrTxt);
        if (inpBx) {
            inpBx.focus();
        }

        // Change the current tool tip to indicate that the box is open and clicking the part 
        // number will close the box. 
        partNbrLnk.title = "Close";

        //Scroll the content to show the whole box on the screen.
        InLnOrdWebPart.ScrollToShowInLnOrdCntnr();

        // Update the value of the visibility indicator on this part number's
        // javascript object to false. 
        actvBx.VisibilityInd = true;

        setVal(valDefs.ActvInLnOrdBx.KyTxt(), actvBx);

        //Update the state.
        Me.UpdtStVals();
        Me.TakeSnapShot();
    }

    // <summary>
    // When we encounter presentations that have multiple part numbers in
    // one row, we need to check if there is already a box open in that row
    // and close it before we open the new one. 
    // </summary>
    Me.HndlRowsWithMultPartNbrs = function (parentRow) {
        var tblCell
		  , otherPartNbrLnk
		  , rtnOpenedNewBoxInd = false
		  , actvSesnBx = getVal(valDefs.ActvInLnOrdBx.KyTxt())
		  , partNbrCells = Cmn.GetChildrenByClsNm(parentRow, "ItmTblContentCell");

        // Loop through all columns looking for part numbers.			
        for (var colIdx = 0; colIdx < partNbrCells.length; colIdx++) {
            // See if there is a part number in the same row that has an add to order box 
            // different from the one that the user clicked. 
            if (actvSesnBx) {
                otherPartNbrLnk = Cmn.GetElementBy(function (elem) { return (Cmn.HasCls(elem, "AddToOrdBxCreated") || Cmn.HasCls(elem, "AddToOrdBxHidden")); }, "a", partNbrCells[colIdx]);
            } else {
                otherPartNbrLnk = Cmn.GetElementBy(function (elem) { return (Cmn.HasCls(elem, "AddToOrdBxCreated") || Cmn.HasCls(elem, "AddToOrdBxHidden")); }, "a", partNbrCells[colIdx]);
            }
            if (otherPartNbrLnk && otherPartNbrLnk != mBxObj.PartNbrLnk) {
                // We only want one box open per row, so hide the currently open box to prepare to 
                // open the box for the part number clicked.
                var otherPartNbrAddToOrdClsNm
			      , actvBx = mBxObj;

                // Set the global variables associated with the javascript objects.
                if (typeof (mCrtedBxObjs) == "object") {
                    // Session inexplicably clones arrays incorrectly when we're
                    // in iFrames. Recast the (now) object back to an array.
                    var bxIdx = 0
						  , tempArray = [];

                    while (mCrtedBxObjs[bxIdx]) {
                        tempArray.push(mCrtedBxObjs[bxIdx]);
                        bxIdx++;
                    }

                    mCrtedBxObjs = tempArray;
                }

                for (var openedBxsIdx = 0; openedBxsIdx < mCrtedBxObjs.length; openedBxsIdx++) {
                    if (Cmn.HasCls(otherPartNbrLnk, "AddToOrdBxCreated" + mCrtedBxObjs[openedBxsIdx].Id)) {
                        otherPartNbrAddToOrdClsNm = "AddToOrdFlow_ItmBxFor" + mCrtedBxObjs[openedBxsIdx].Id;
                        mCrtedBxObjs[openedBxsIdx].VisibilityInd = false;
                        mCrtedBxObjs[openedBxsIdx].ClosedByForceInd = true;
                        break;
                    } else {
                        // Continue. 
                    }
                }

                var otherAddToOrdHdrRow = Cmn.GetNxtSiblingBy(parentRow, function (elem) { return (Cmn.HasCls(elem, otherPartNbrAddToOrdClsNm) && !Cmn.HasCls(elem, "Hide")); })
				  , otherAddToOrdCntntRow = Cmn.GetNxtSibling(otherAddToOrdHdrRow)
				  , otherAddToOrdCntntCell = Cmn.GetFrstChld(otherAddToOrdCntntRow);

                Cmn.AddCls(otherAddToOrdHdrRow, "Hide");
                Cmn.AddCls(otherAddToOrdCntntRow, "Hide");

                Cmn.ReplaceCls(partNbrCells[colIdx].firstChild, "AddToOrdBxCreated", "AddToOrdBxHidden");
                Cmn.ReplaceCls(partNbrCells[colIdx], "AddToOrdBxCreated", "AddToOrdBxHidden");
                Cmn.ReplaceCls(partNbrCells[colIdx].firstChild, "PartNbrSlctd", "PartNbrVisitedLnk");
                Cmn.ReplaceCls(partNbrCells[colIdx], "InLnOrdWebPartLayout_ItmTblPartNbrCell", "ItmTblColSpacePartNbr");

                reAddHorzntlRule(otherAddToOrdCntntCell);

                rtnOpenedNewBoxInd = true;

                setVal(valDefs.ActvInLnOrdBx.KyTxt(), actvBx);

                Me.UpdtStVals();
            }
        }
        return rtnOpenedNewBoxInd;
    };

    // <summary>
    // When the user clicks the back button, we will reinsert boxes using 
    // markup stored in box objects in session. This is used for catalog pages
    // and dynamic content. 
    // </summary>
    Me.InsertMarkup = function (bxObj, bxIdx, bxCnt, inLnBxs, specInd) {
        var catInd = false;
        if (McMasterCom.Nav.GetTopFrame().MainIFrame.Catalog) {
            // We're on a catalog page and the frame doesn't unload.
            var partNbrLnks = window.MainIFrame.Catalog.Cmn.GetElementsByAttrVal("data-mcm-itm-id", bxObj.Id, "a")
			  , partNbrLnk = bxObj.PartNbrLnk
			  , parentRow = window.MainIFrame.Catalog.Cmn.GetAncestorByTagNm(partNbrLnk, "tr")
			  , catInd = true;
        } else {
            var partNbrLnks = Cmn.GetElementsByAttrVal("data-mcm-itm-id", bxObj.Id, "a")
			  , partNbrLnk = partNbrLnks[0]
			  , parentRow = Cmn.GetAncestorByTagNm(partNbrLnk, "tr");

            if (partNbrLnk) {
                bxObj.PartNbrLnk = partNbrLnk;
            }
        }

        if (parentRow && (!Cmn.HasCls(partNbrLnk, "AddToOrdBxCreated"))) { // also ensure box is not already open
            // Check to see how many times this product appears on the page. 
            if (partNbrLnks.length == 1) {
                // This product only appears once on the page. Do nothing. 
            } else if (partNbrLnks.length > 0) {
                // This product appears multiple times on the page. 
                // Make sure we grab the correct row.				
                var partIds = []
					  , primariesTxt
					  , parentRow = null;

                // Gather all the parent rows of each instance of the product on the page and loop 
                // through each one, gathering all the part number links contained therein. If we 
                // come across a part that is not the same as the one that appears multiple times
                // on the page, push it to an array. If the array contains parts in the PrimaryPartNbrTxts
                // property on the box object, then insert it into the DOM. 					
                for (var partIdx = 0; partIdx < partNbrLnks.length; partIdx++) {
                    if (parentRow === null) {
                        // Continue. We haven't found the right parent row yet. 

                        // Build the array of primary part IDs. 
                        var lnkParentRow = Cmn.GetAncestorByTagNm(partNbrLnks[partIdx], "tr");
                        lnks = Cmn.GetElementsBy(function (elem) { return elem; }, "a", lnkParentRow);
                        for (var lnkIdx = 0; lnkIdx < lnks.length; lnkIdx++) {
                            if (lnks[lnkIdx].getAttribute("data-mcm-itm-id") != bxObj.Id) {
                                partIds.push(lnks[lnkIdx].getAttribute("data-mcm-itm-id"));
                            }
                        }

                        if (partIds.length == 0) {
                            nextSblng = Cmn.GetNxtSibling(lnkParentRow);
                            if (nextSblng = bxObj.BxCntntRow.nextSibling) {
                                parentRow = lnkParentRow;
                                break;
                            }
                        }

                        // Loop through the IDs looking for one that's contained in the PrimaryPartNbrTxts property.
                        for (var primIdx = 0; primIdx < partIds.length; primIdx++) {
                            if (bxObj.PrimaryPartNbrTxts.indexOf(partIds[primIdx]) > -1) {
                                // If we find one that's in the string, assign the parent row and 
                                // abandon the rest of the loop.
                                partNbrLnk = partNbrLnks[partIdx];
                                parentRow = lnkParentRow;
                                if (Cmn.HasCls(partNbrLnk, "AddToOrdBxCreated")) {
                                    break;
                                }
                            } else {
                                // Continue.
                            }
                        }
                    } else {
                        // We've found the parent row. 
                        break;
                    }
                }
            } else {
                // Do nothing.
            }


            // If the header or content row are not found, default to load a
            // new box with new data from the server.
            if (bxObj.BxCntntRow && bxObj.BxHdrRow) {

                //Reinsert the markup for the boxes that were showing. 
                if ((bxObj.VisibilityInd == true) && (bxObj.mWebPartObj.AutoSlctdPartNbrInd == false)) {
                    var partNbrCell = Cmn.GetAncestorByTagNm(partNbrLnk, "td");
                    // Add border and bolding of text to part number cell
                    Cmn.ReplaceCls(partNbrLnk, "PartNbrVisitedLnk", "PartNbrSlctd");
                    Cmn.ReplaceCls(partNbrCell, "ItmTblColSpacePartNbr", "InLnOrdWebPartLayout_ItmTblPartNbrCell");
                    Cmn.AddCls(partNbrLnk, "AddToOrdBxCreated");
                    Cmn.AddCls(partNbrLnk, "AddToOrdBxCreated" + bxObj.Id);

                    var bxHdrRow,
					    leftHdrCell,
						middleHdrCell,
						rightHdrCell;

                    if (catInd && (Cmn.IsIE7() || Cmn.IsIE6())) {
                        bxHdrRow = parentRow.parentNode.parentNode.insertRow(parentRow.rowIndex + 1);
                        leftHdrCell = bxHdrRow.insertCell();
                        middleHdrCell = bxHdrRow.insertCell();
                        rightHdrCell = bxHdrRow.insertCell();
                    } else {
                        bxHdrRow = Cmn.CrteElement("tr");
                        leftHdrCell = Cmn.CrteElement("td");
                        middleHdrCell = Cmn.CrteElement("td")
                        rightHdrCell = Cmn.CrteElement("td");
                    }

                    Cmn.AddCls(bxHdrRow, "AddToOrdFlow_ItmBx");
                    Cmn.AddCls(bxHdrRow, "AddToOrdFlow_ItmBxFor" + bxObj.Id);
                    Cmn.AddCls(bxHdrRow, "InLnOrdWebPartLayout_HdrRw");

                    // Build the left header cell. We have to build these elements
                    // since the innerHTML operator is read-only for tr's in IE. 

                    Cmn.AddCls(leftHdrCell, "InLnOrdWebPartLayout_LeftHdrCell");
                    leftHdrCell.colSpan = bxObj.LeftHdrCellColSpan;
                    leftHdrCell.innerHTML = bxObj.LeftHdrCellMarkupTxt;
                    rightHdrCell.colSpan = bxObj.RightHdrCellColSpan;
                    rightHdrCell.innerHTML = bxObj.RightHdrCellMarkupTxt;

                    if (catInd && (Cmn.IsIE7() || Cmn.IsIE6())) {
                        //do nothing
                    } else {
                        bxHdrRow.appendChild(leftHdrCell);
                        bxHdrRow.appendChild(middleHdrCell);
                        bxHdrRow.appendChild(rightHdrCell);

                        Cmn.InsrtAfter(bxHdrRow, parentRow);
                    }

                    bxHdrRow = Cmn.GetNxtSibling(parentRow);
                    var bxCntntRow,
						bxCntntCell;

                    if (catInd && (Cmn.IsIE7() || Cmn.IsIE6())) {
                        bxCntntRow = parentRow.parentNode.parentNode.insertRow(bxHdrRow.rowIndex + 1);
                        bxCntntCell = bxCntntRow.insertCell();
                    } else {
                        bxCntntRow = Cmn.CrteElement("tr");
                        bxCntntCell = Cmn.CrteElement("td");
                    }
                    Cmn.AddCls(bxCntntRow, "AddToOrdFlow_ItmBx");
                    Cmn.AddCls(bxCntntRow, "AddToOrdFlow_ItmBxFor" + bxObj.Id);
                    Cmn.AddCls(bxCntntRow, "InLnOrdWebPart_CntntRowFor" + bxObj.Id);

                    bxCntntCell.colSpan = bxObj.BxCntntCellColSpan;
                    bxCntntCell.id = bxObj.mWebPartObj.CntnrIDTxt;
                    bxCntntCell.innerHTML = bxObj.BxCntntCellMarkupTxt;
                    bxCntntRow.appendChild(bxCntntCell);
                    bxObj.BxCntntRow = bxCntntRow;

                    if (catInd && (Cmn.IsIE7() || Cmn.IsIE6())) {
                        //do nothing
                    } else {
                        Cmn.InsrtAfter(bxCntntRow, bxHdrRow);
                    }
                    var parentCells = Cmn.GetChildrenByClsNm(parentRow, "ItmTblAllRuleContentCell");
                    if (parentCells) {
                        for (var i = 0; i < parentCells.length; i++) {
                            Cmn.RemCls(parentCells[i], "ItmTblAllRuleContentCell");
                        }
                    }

                    Me.GetOrdHist(bxObj);
                    Me.GetAddnlCntntLnks(bxObj);
                    Me.HighlightRelevantInLnSpecMarkup(mBxObj);

                    // Reset the part number link property so that it refreshes properties
                    // that refer to elements in the DOM. 
                    bxObj.mPartNbrLnk = partNbrLnk;

                    var tempBx = new InLnOrdWebPartJSObj.BxObj(bxObj.mPartNbrLnk, bxObj.mWebPartObj);

                    InLnOrdWebPartJSObj.SetMarkupProperties(tempBx);
                    setVal(valDefs.ActvInLnOrdBx.KyTxt(), tempBx);
                    mBxObj = getVal(valDefs.ActvInLnOrdBx.KyTxt());
                    Me.CrteBufferRow(parentRow);
                    // Increase the rowspan of any embedded content cells so that
                    // they do not force unrelated content in the table to wrap.
                    InLnOrdWebPart.ModifyRowSpanOnCntntCells(2, bxCntntRow);
                    mCrtedBxObjs.push(mBxObj);
                    if (bxIdx + 1 == bxCnt) {
                        // If we're on the last box in the array and the one preceding it was one that was closed
                        // by force, i.e. a box that resides in the same row as the one just populated, then we
                        // must mark that box to be opened on the next back button click. 
                        if (inLnBxs[bxIdx - 1] && inLnBxs[bxIdx - 1].VisibilityInd == false && inLnBxs[bxIdx - 1].ClosedByForceInd == true) {
                            inLnBxs[bxIdx - 1].VisibilityInd = true;
                            setVal(valDefs.InLnOrdBxsCrtd.KyTxt(), inLnBxs);
                        }
                    }

                } else if (bxObj.VisibilityInd == false) {
                    // Show a visited part number link.
                    Cmn.ReplaceCls(partNbrLnk, "PartNbrSlctd", "PartNbrVisitedLnk");
                }

                if (specInd == false) {
                    // If we're on the last box in the array, then check to see if the visibility indicator is
                    // true or false. If it's false then we want to reopen this box on the next back button click.
                    // If it's true, then we want to close it. Update the session state accordingly. 
                    if (bxIdx + 1 == bxCnt) {
                        if (bxObj.VisibilityInd == true) {
                            //inLnBxs.splice(bxIdx, 1);

                        } else {
                            inLnBxs[bxIdx].VisibilityInd = true;
                        }

                        setVal(valDefs.InLnOrdBxsCrtd.KyTxt(), inLnBxs);
                    }
                }
                // Publish the inline order box reopened message.
                var inlnOrdBxReopenMsgHdr = new McMaster.MsgMgr.Hdr(McMaster.MsgMgr.CntxtNms.FULL_PRSNTTN)
							  , inlnOrdBxReopenMsg = new McMaster.MsgMgrMsgs.InlnOrdBxReopened(inlnOrdBxReopenMsgHdr);

                McMaster.MsgMgr.PubMsg(inlnOrdBxReopenMsg);
            }
            if (Cmn.GetElementsByClsNm("ProdPageContent")[0]) {
                Me.ScrollToShowInLnOrdCntnr();
            }
            var inpBx = Cmn.GetObj("qtyInp" + bxObj.PartNbrTxt);
            if (inpBx) {
                inpBx.focus();
            }
        }
        if (isInLnSpec(partNbrLnk)) {
            updtInlnSpecInteractions(bxObj.mWebPartObj);
        }
        mMainContentCntnr = Cmn.GetObj("MainContent");
        // Add the event listeners for the attribute menu. 			
        if (mMainContentCntnr) {
            var inLnBxRws = Cmn.GetElementsByClsNm("AddToOrdFlow_ItmBx", "tr", mMainContentCntnr);
            if (inLnBxRws && inLnBxRws.length > 2) {
                // Do nothing, the event listener will already have been added.
            } else {
                Cmn.RemEvntListener(mMainContentCntnr, "click", hndlClickEvnt);
                Cmn.AddEvntListener(mMainContentCntnr, "click", hndlClickEvnt);
            }
        } else {
            mCtlgShellCntnr = Cmn.GetObj("CtlgPageShell_CtlgPage_Cntnr");

            if (mCtlgShellCntnr) {
                // Check to make sure that there is not already another box loaded
                // since the event listener added with it handles all clicks.
                var inLnBxRws = Cmn.GetElementsByClsNm("AddToOrdFlow_ItmBx", "tr", mCtlgShellCntnr);
                if (inLnBxRws && inLnBxRws.length > 2) {
                    // Do nothing, the event listener will already have been added.
                } else {
                    Cmn.RemEvntListener(mCtlgShellCntnr, "click", hndlClickEvnt);
                    Cmn.AddEvntListener(mCtlgShellCntnr, "click", hndlClickEvnt);
                }
            }
        }
    }

    /// #End Region "Public Methods" 


    ///#Region "Private Methods"
	// <summary> 
	// Retrieve information about the part number
	// </summary>
	// <param name="intrnPartNbrTxt">
	// The internal part number text. This is used to query the database.
	// </param>
	var chkPartNbrExcludedForItmPrsnttn = function(bxObj, mainCntnr){
		var cnxnObj = {
			success: hndlPartNbrExcludeAjaxResp,
			cnxnParm: {
				respTyp: McMaster.CnxnMgr.WEB_PART_RESP_TYP_TXT,
				mMainCntnr: mainCntnr,
				mBxObjInstance: bxObj
			}
		};
		var ITM_PRSNTTN_UPDT_HTTP_HANDLER_URL = "/WebParts/Content/ItmPrsnttnDynamicDat.aspx";
        var url = ITM_PRSNTTN_UPDT_HTTP_HANDLER_URL + "?" +
					  ACT_TXT + "=" +
					  "partnumberexclude" + "&" +
					  PART_NBR_QS_KY_TXT + "=" +
                      bxObj.PartNbrTxt;
		McMaster.CnxnMgr.PerformAjaxCnxn(url, cnxnObj);	
	}
	
	// <summary> 
	// Retrieves additional content links for the select part number. 
	// </summary>
	// <param name="intrnPartNbrTxt">
	// The internal part number text. This is used to query the database.
	// </param>
	var hndlPartNbrExcludeAjaxResp = function (webPartObj, respArgs) {
	
		var attrnms = []
		  , attrvals = [];
		
		var mainCntnr = respArgs.mBxObjInstance.BxCntntRow;
		var bxObj = respArgs.mBxObjInstance;
		var partNbrExcludeInd = webPartObj.PartNbrExcludeInd;
		
		if (!mainCntnr){
			mainCntnr = mBxObj.MainCntnr;
		}
		
		var attrCntnr = Cmn.GetElementsByClsNm("InLnOrdWebPartAttrCntnr", "div", mainCntnr)[0]
		    cntnrRow = Cmn.GetAncestorByTagNm(mainCntnr, "tr");
		 
		if (typeof (attrCntnr) != "undefined") {
			var attrCntnrs = Cmn.GetChldrnBy(function (elem) { return Cmn.HasCls(elem, "InLnOrdWebPart_ChildAttrCntnr") }, attrCntnr)
				  , inpBx = Cmn.GetElementsByClsNm("InLnOrdWebPartLayout_AttrInpBx", "input", attrCntnr)[0]
				  , attrSlctCntnr = Cmn.GetElementsByClsNm("InLnOrdWebPartAttrCntnr", "div", mainCntnr)[0]
				  , attrSlcts = Cmn.GetElementsByClsNm("InLnOrdWebPart_AttrDropDwn", "div", attrSlctCntnr)
				  , attrCntnrMetaDat = attrSlctCntnr.attributes
			      , partNbrSeq = 0;

			//get sequence number from the attribute container. 
			//this sequence number is used to uniquely identify each instance of same part number 
			for (var i=0; i<attrCntnrMetaDat.length; i++){
				if (attrCntnrMetaDat[i].name == "data-mcm-partnbr-seqnbr"){
					partNbrSeq = attrCntnrMetaDat[i].value;
					break;
				}
			}

			// Collect the attribute names and values.
			for (var cntnrIdx = 0; cntnrIdx < attrCntnrs.length; cntnrIdx++) {
				var attrSlct = Cmn.GetElementsByClsNm("InLnOrdWebPart_AttrDropDwn", "div", attrCntnrs[cntnrIdx])[0]
				  , attrLst = Cmn.GetElementsByClsNm("InLnOrdWebPart_AttrForm", "ul", attrCntnrs[cntnrIdx])[0];

				if (attrSlct) {
					var id = attrSlct.id;
					if (partNbrSeq && partNbrSeq > 0){
						id = id + partNbrSeq;
					}
					
					if (mAttrbtSlctdTbl.Itm(id)) {
						attrnms[cntnrIdx] = attrSlct.id.split('&')[IDSTRARR_ATTRNAME_INDEX];
						attrvals[cntnrIdx] = getAttrVal(mAttrbtSlctdTbl.Itm(id));
						var attrSlctsInnerHTML = attrSlct.innerHTML;
						if (attrvals[cntnrIdx] == "Other") {
							attrvals[cntnrIdx] = inpBx.value;
						} else if (attrSlctsInnerHTML == 'Select from list...') {
							// No value for this attribute.
						}
					}
					else {
						// No value for this attribute.
					}
				} else if (attrLst) {
					var slctAttrRdoBtn = Cmn.GetElementsByClsNm("InLnOrdWebPart_AttrLstSlctd", "li", attrLst)[0];
					if (slctAttrRdoBtn) {
						attrnms[cntnrIdx] = attrLst.id;
                        attrvals[cntnrIdx] = getAttrVal(slctAttrRdoBtn.innerHTML);
                    } else {
                        // No value for this attribute.
                    }
                }
            }
        }
        // Assemble attribute name and value query strings.
        var attrNmsQSTxt = attrnms.join(String.fromCharCode(2029))
			  , attrValsQSTxt = attrvals.join(String.fromCharCode(2029));
		var cnxnObj = {
			success: hndlAddnlCntntLnksAJAXResp,
			cnxnParm: {
				respTyp: McMaster.CnxnMgr.WEB_PART_RESP_TYP_TXT,
				PartNbrTxt: bxObj.PartNbrTxt,
				cntntRow: mainCntnr
			}
		};

        var url = INLN_ORD_HTTP_HANDLER_URL + "?" +
					  ACT_TXT + "=" +
					  GET_ADDNL_CNTNT_LNKS_QS_KY_TXT + "&" +
					  INTRN_PART_NBR_QS_KY_TXT + "=" +
					  bxObj.PartNbrMetaDat.IntrnPartNbrTxt + "&" +
					  PART_NBR_QS_KY_TXT + "=" +
                      bxObj.PartNbrTxt + "&" +
                      ATTR_NM_QS_KY_TXT + "=" +
                      encodeURIComponent(attrNmsQSTxt) + "&" +
                      ATTR_VAL_QS_KY_TXT + "=" +
                      encodeURIComponent(attrValsQSTxt) + "&" +
					  "partnumberexclude" + "=" + 
					  partNbrExcludeInd;
					  

        //add more information to the query string
        if (isInLnSpec(bxObj.PartNbrLnk)) {
            var partNbrLnk = bxObj.PartNbrLnk;
            var attrCompItmIds = partNbrLnk.getAttribute("data-mcm-attr-comp-itm-ids");
            var fullPrsnttnId = getFullPrsnttnId(partNbrLnk);
            var prsnttnId = getPrsnttnId(partNbrLnk); //part number link may exist in either sub or full

            url = url + "&" +
					  FULL_PRSNTTN_ID_KY_TXT + "=" +
					  fullPrsnttnId + "&" +
					  PRSNTTN_ID_KY_TXT + "=" +
					  prsnttnId + "&" +
					  IS_INLNSPEC + "=" +
					  true + "&" +
					  ATTR_COMP_IDS + "=" +
					  attrCompItmIds;

			var inLnSpecInpDict = McMaster.SesnMgr.GetStVal(McMaster.SesnMgr.StValDefs.InLnSpecUsrInps.KyTxt());
			if (inLnSpecInpDict) {
				
				var InLnSpecId = bxObj.PartNbrTxt + '_' + prsnttnId;
				if (partNbrSeq && partNbrSeq > 0){
					InLnSpecId = InLnSpecId + '_' + partNbrSeq;
				}
				if (InLnSpecId  in inLnSpecInpDict) {
					url = inLnSpecInpDict[InLnSpecId].AddSpecUsrInpQS(url);
				}
			}
		}
		
		//for the server to decide if we build the inlnordwebpart with proddetaillnk 
		var prodDetLnkActvnInd = "0";
		var inSesnInd = McMaster.SesnMgr.ContainsStValKy(McMaster.SesnMgr.StValDefs.ProdDetLnkActvnInd.KyTxt());
		if (inSesnInd == true) {
			prodDetLnkActvnInd = McMaster.SesnMgr.GetStVal(McMaster.SesnMgr.StValDefs.ProdDetLnkActvnInd.KyTxt());
		}
		if (prodDetLnkActvnInd) {
			url = url + "&" + PROD_DET_LNK_ACTVN_IND_QS_KY_TXT + "=" + prodDetLnkActvnInd;
			
			var msgHdr = new McMaster.MsgMgr.Hdr(McMaster.MsgMgr.CntxtNms.INLN_ORD);
			var msg = new McMaster.MsgMgrMsgs.ItmPrsnttnFetchAhead(msgHdr, bxObj.PartNbrTxt, attrCompItmIds);
			McMaster.MsgMgr.PubMsg(msg);
		}
		McMaster.CnxnMgr.PerformAjaxCnxn(url, cnxnObj);	
	}
	
    var hndlOrdHistAJAXResp = function (webPartObj, respArgs) {
        /// <summary>
        /// The success function that gets executed when the call to 
        /// get the order history completes. 
        /// </summary>
        /// <param name="webPartObj">The web part object.</param>
        /// <param name="respArgs">
        /// The arguments that we specified in the connection object - here, it is just the part number. 
        /// </param>

        if (webPartObj) {
            // find the order history message container.
            var actvBx = mBxObj
				  , ordHistMsgCntnr = Cmn.GetElementsByClsNm("InLnOrdWebPartOrdHistMsg" + respArgs.bxObj.PartNbrTxt, 'div', respArgs.bxObj.BxCntntRow)[0];

            // try to get data out of the sales workstation object in session.
            var msgDat = McMaster.SesnMgr.GetStVal(McMaster.SesnMgr.StValDefs.FndAgainSlsWrkStObj.KyTxt());
            // load order history message into the container.

            if (ordHistMsgCntnr) {
                //ordHistMsgCntnr.innerHTML = webPartObj.MarkupTxt + ".";
                if (msgDat == null || msgDat == "NONE" || msgDat.length < 1) {
                    // check if we have information from the sales workstation
                    if (webPartObj.MarkupTxt.length > 0) {
                        ordHistMsgCntnr.innerHTML = webPartObj.MarkupTxt + ".";
                        Cmn.ReplaceCls(ordHistMsgCntnr, "Hide", "InLnOrdWebPartLayout_OrdHistMsg");
                        actvBx.OrdHistMsgTxt = webPartObj.MarkupTxt;
                    }
                } else {
                    // Use Sales Workstation data to build the 
                    // Order History message text.	
                    var msgTxt = bldOrdHistMsgForSlsWrkst(webPartObj, msgDat, actvBx);
                    if (msgTxt.length > 0) {
                        ordHistMsgCntnr.innerHTML = msgTxt + ".";
                        Cmn.ReplaceCls(ordHistMsgCntnr, "Hide", "InLnOrdWebPartLayout_OrdHistMsg");
                        actvBx.OrdHistMsgTxt = msgTxt;
                    }
                }
                setVal(valDefs.ActvInLnOrdBx.KyTxt(), actvBx);
            }

        } else {
            // Do nothing. TODO: Figure out some kind of default behavior for not getting a 
            // response.
        }
    }
    // --------------------------------------------------------------
    // Summary: If the web site is embedded in the Sales Workstation,
    // 			we need to manually build the Order History Message.
    // --------------------------------------------------------------
    var bldOrdHistMsgForSlsWrkst = function (webPartObj, msgDat, actvBx) {
        var singularPartNbrUMTxt = webPartObj.CtlgSellSingularUMTxt
			, pluralPartNbrUMTxt = webPartObj.CtlgSellPluralUMTxt
			, msgTxt
			, qty
			, lastOrdTs
			, poTxt
			, actvPartNbr = actvBx.PartNbrTxt
			, clickedOrdPartNbr = {};

        if (msgDat[actvPartNbr]) {

            clickedOrdPartNbr = msgDat[actvPartNbr];
            qty = clickedOrdPartNbr.qty;
            poTxt = clickedOrdPartNbr.PO;
            lastOrdTs = clickedOrdPartNbr.lastOrdTs;


            msgTxt = qty + ' ';
            if (qty > 1) {
                msgTxt = msgTxt + pluralPartNbrUMTxt + ' ' + 'were' + ' ';
            } else {
                msgTxt = msgTxt + singularPartNbrUMTxt + ' ' + 'was' + ' ';
            }
            msgTxt = msgTxt + 'ordered' + ' ' + lastOrdTs + ' ' + poTxt;
        }


        return msgTxt;
    }

    // <summary>
    // The success function that gets executed when the call to 
    // get the additional content completes. 
    // </summary>
    // <param name="webPartObj">The web part object.</param>
    // <param name="respArgs">
    // The arguments that we specified in the connection object - here, 
    // it is just the part number and the content row. 
    // </param>
    var hndlAddnlCntntLnksAJAXResp = function (webPartObj, respArgs) {
        mBxObj.ProdSpecLnkTxt = webPartObj.ProdSpecLnkMarkupTxt;

        if (webPartObj) {
            // Find the link container.
            var lnkCntnr = Cmn.GetElementsByClsNm("InLnOrdWebPart_Hdr", 'div', respArgs.cntntRow)[0]
				  , addcntntlnkcntnr = Cmn.GetElementsByClsNm("MsdsSpan", 'span', respArgs.cntntRow)[0]
				  , actvBx = mBxObj;
            if (lnkCntnr) {
                var mainCntCntnr = Cmn.GetNxtSiblingBy(lnkCntnr, function (elem) { return Cmn.HasCls(elem, "InLnOrdWebPartLayout_Main") })
					  , dscCntnr = Cmn.GetElementBy(function (elem) { return Cmn.HasCls(elem, "InLnOrdWebPart_ItmDsc") }, "div", mainCntCntnr)
					  , prodSpecCntnrs = Cmn.GetElementsByClsNm("InLnOrdWebPart_ProdSpecLnk", "div", mainCntCntnr);

                // Load the new links into the link container					
                addcntntlnkcntnr.innerHTML = webPartObj.MarkupTxt;
                actvBx.MSDSLnkTxt = webPartObj.MarkupTxt;
                mBxObj.MarkupTxt = webPartObj.MarkupTxt;
                mBxObj.MSDSLnkTxt = webPartObj.MarkupTxt;

                // Load the prod spec link if one exists at the end of the description.
                if (actvBx.ProdSpecLnkTxt.length <= 0) {
                    // Do nothing as there is no prod spec link.
                } else {
                    dscCntnr.innerHTML = actvBx.PartNbrMetaDat.Dsc + webPartObj.ProdSpecLnkMarkupTxt;
                    actvBx.ProdSpecLnkTxt = webPartObj.ProdSpecLnkMarkupTxt;
                }
            }

            setVal(valDefs.ActvInLnOrdBx.KyTxt(), actvBx);

        }
    }

    var hndlAddToOrdAJAXResp = function (webPartObj, respArgs) {
        /// <summary>
        /// The success function that gets executed when the call to 
        /// get the additional content completes. 
        /// </summary>
        /// <param name="webPartObj">The web part object.</param>
        /// <param name="respArgs">
        /// The arguments that we specified in the connection object - here, it is just the part number. 
        /// </param>

        // The indicator is set to true once the success method has completed. Needs to be
        // set to false in order to execute another AJAX call.
        mReadyNxtAjaxCallInd = true;

        // Reset the attribute error indicator to false. 
        mAttrErrInd = false;

        if (webPartObj) {
            // Get the inline order main container. 
            var inLnOrdMainCntnr = respArgs.mainCntnr;
            var partNbrTxt = respArgs.PartNbrTxt;
			var isInLnSpecInd = respArgs.isInLnSpecInd;

            if (inLnOrdMainCntnr) {
                var inpBx = Cmn.GetElementsByClsNm("InLnOrdWebPartLayout_InpBx", "input", inLnOrdMainCntnr)[0];
				var notMsgCntnr = Cmn.GetElementsByClsNm("InLnOrdWebPartLayout_ItmNotes", "div", inLnOrdMainCntnr)[0];
				var warningMsgCntnr = Cmn.GetElementsByClsNm("InLnOrdWebPartLayout_WarningAlert", "div", inLnOrdMainCntnr)[0];
                var qtyErrCntnr = Cmn.GetElementsByClsNm("InLnOrdWebPartLayout_QtyErr", "div", inLnOrdMainCntnr)[0];
				
				if (isInLnSpecInd == true && warningMsgCntnr.innerHTML.length > 0) {
					Cmn.AddCls(warningMsgCntnr, "InLnOrdWebPartLayout_BoldedWarningAlert");
				}
				if (isInLnSpecInd == true && webPartObj.WarningMsg.length > 0) {
					// display warning text
					Cmn.AddCls(warningMsgCntnr, "InLnOrdWebPartLayout_BoldedWarningAlert");
					warningMsgCntnr.innerHTML = webPartObj.WarningMsg;
					InLnOrdWebPart.ScrollToShowInLnOrdCntnr();
					Cmn.TrkAct("InLnOrdAttrErr&partnbr=" + partNbrTxt, "InLnOrd");
				} else if (webPartObj.QtyErrMsg.length > 0) {
					// display qty warning text
					qtyErrCntnr.innerHTML = webPartObj.QtyErrMsg;
					Cmn.ReplaceCls(qtyErrCntnr, "Hide", "Show");
					inpBx.select();
					InLnOrdWebPart.ScrollToShowInLnOrdCntnr();
					Cmn.TrkAct("InLnOrdQtyPck&partnbr=" + partNbrTxt, "InLnOrd");
				} else if (webPartObj.AvailLensErrInd) {
					// Check the error message indicators
					// There was either a standard pack or available length error.
					// Bold the notes text that contains that information.
					if (notMsgCntnr) {
						Cmn.ReplaceCls(notMsgCntnr, "Hide", "Show");
						inpBx.focus();
						Cmn.TrkAct("InLnOrdInvldQtyErr&partnbr=" + partNbrTxt, "InLnOrd");
					}
				} else if (webPartObj.FirmPkErrInd) {
					// This item is sold in a firm package and the customer entered a quantity
					// that breaks the package. Show an error message.
					qtyErrCntnr.innerHTML = "This product is sold in packs of " + mMetaDat.SellStdPkgQty + ".";
					Cmn.ReplaceCls(qtyErrCntnr, "Hide", "Show");
					inpBx.select();
					InLnOrdWebPart.ScrollToShowInLnOrdCntnr();
					Cmn.TrkAct("InLnOrdQtyPck&partnbr=" + partNbrTxt, "InLnOrd");
				} else {
					// Create the order lines updated message. 
					var msgHdr = new McMaster.MsgMgr.Hdr(McMaster.MsgMgr.CntxtNms.INLN_ORD);
					var ordLnsUpdtdMsg = new McMaster.MsgMgrMsgs.OrdLnsUpdated(msgHdr);
					var inLnBxCntnr = Cmn.GetAncestorByClsNm(inLnOrdMainCntnr, "AddToOrdFlow_ItmBxFor" + mBxObj.Id)
					Cmn.AddCls(inLnBxCntnr, "InLnOrdWebPart_ItmAdded");

					// Replace the content of the inline box with the confirmation message. 
					inLnOrdMainCntnr.innerHTML = webPartObj.MarkupTxt;
					Cmn.AddCls(inLnOrdMainCntnr, "InLnOrdWebPartLayout_ItmAddedMsg");

					// Publish the order lines updated message. 
					McMaster.MsgMgr.PubMsg(ordLnsUpdtdMsg);

					Cmn.TrkAct("InLnOrdAddtoOrd&partnbr=" + partNbrTxt + "&AutoSlctdPartNbrInd=" + mBxObj.mWebPartObj.AutoSlctdPartNbrInd, "InLnOrd");
					
					// TrkSrch
					var srchTrkInfo = new SrchTrkr.SrchDat({ usr: SrchTrkr.UsrActTyps.SLCT });
					srchTrkInfo.usr.srcNm = "InLnOrdWebPart";
					srchTrkInfo.usr.elemTyp = SrchTrkr.ElemTyps.ADD_TO_ORD_BTN;
					srchTrkInfo.usr.slctdNm = decodeURIComponent(partNbrTxt);
					srchTrkInfo.usr.entryTxt = decodeURIComponent(inpBx.value);
				    srchTrkInfo.Trk();
				}
			}
        }
    };

    var hndlFailedAddToOrdAjaxResp = function () {
        /// <summary>
        /// Resets the ajax call indicator to true upon a server failure. 
        /// Resets the attribute error indicator to false upon a server failure. 
        /// </summary>
        mReadyNxtAjaxCallInd = true;
        mAttrErrInd = false;
    }

    var hndlUpdtAttrAjaxResp = function (webPartObj, respArgs) {
        /// <summary>
        /// The success function that gets executed when the call to 
        /// update the items attributes.
        /// </summary>
        /// <param name="webPartObj">The web part object.</param>
        /// <param name="respArgs">
        /// The arguments that we specified in the connection object - here, it is just the part number. 
        /// </param>

		//get active element for setting focus
		var active = document.activeElement, 
		activeId = null,
		activeIsQty = false;
		
		if (active.className == "OtherValInpBx") {
			activeId = Cmn.GetAncestorByClsNm(active, "SpecSrch_Attribute").id;
		} else if (active.className == "InLnOrdWebPartLayout_InpBx") {
			activeIsQty = true;
		}
		
        updtStkMsg(webPartObj, respArgs); 

		if (webPartObj.IntrnPartNbrTxt.length > 0) {
			Me.GetAddnlCntntLnks(mBxObj, respArgs.inLnBxMainCntnr);
		}
		
		var parentRow,
			bxCntntRow,
			specCntnr;

		if (respArgs.ClickedElem) {
			specCntnr = getSpecCntnr(respArgs.ClickedElem, respArgs.PartNbrTxt);
		}
		
		var envr = Cmn.GetApplEnvrPrfx() + Cmn.GetApplEnvrSfx();
		//Retrieves the inline attribute container 
		if (chkCtlgPageInd()) {
			if(!(specCntnr)) {
				var mainIFrame = document.getElementById("MainIFrame");
				var ctlgPageElem = getObjFrmIFrameById(mainIFrame, "Catalog");
				specCntnr = getObjFrmIFrameById(ctlgPageElem, "InLnOrdWebPart_SpecCntnr" + "_" + respArgs.PartNbrTxt);
			}
			if(!(specCntnr)){
				specCntnr = Cmn.Get("InLnOrdWebPart_SpecCntnr" + "_" + respArgs.PartNbrTxt);
			}
			if (specCntnr) {
			
				//remove event listeners that exist on old input boxes
				//Chrome is sensitive and otherwise will attend to event listeners that no longer exist
				var mainBx = Cmn.GetAncestorByClsNm(specCntnr, "InLnOrdWebPartLayout_Main")
				var qtyInpBx = Cmn.GetElementsByClsNm("InLnOrdWebPartLayout_InpBx", "input", mainBx);
				var inpBxs = Cmn.GetElementsByClsNm("OtherValInpBx", "input", specCntnr);
				var sizedInpBx = Cmn.GetElementsByClsNm("SizedInpBx", "textarea", specCntnr)[0];
				
				if (qtyInpBx && qtyInpBx[0]) {
					Cmn.RemEvntListener(qtyInpBx[0], "keyup");
				}
				
				for (var i = 0; i < inpBxs.length; i++) {
					Cmn.RemEvntListener(inpBxs[i], "blur");
				}
				
				if (sizedInpBx){
					Cmn.RemEvntListener(sizedInpBx,"keydown",function(e){InLnOrdWebPart.HndlEvntOnKeyDown(e, webPartObj)});
					Cmn.RemEvntListener(sizedInpBx,"keypress",function(e){InLnOrdWebPart.HndlKeyPressEvnt(e,webPartObj);});
					Cmn.RemEvntListener(sizedInpBx,"paste",function(e){InLnOrdWebPart.HndlPasteEvnt(e,webPartObj);});
					Cmn.RemEvntListener(sizedInpBx,"blur",function(e){InLnOrdWebPart.HndlBlurEvnt(e,webPartObj);});
				}
				
				//Reset the markuptxt
				specCntnr.innerHTML = webPartObj.MarkupTxt;
				
				//The markup txt does not contain whatever was in the input boxes. We need to repopulate these boxes on the client.
				var attrnms = respArgs.AttrNms;
				var attrvals = respArgs.AttrVals;
				
				var otherInpBxs = Cmn.GetElementsByClsNm("OtherValInpBx", "input", specCntnr);
				if (otherInpBxs) {
					for (var i = 0; i < otherInpBxs.length; i++) {
						var divId = Cmn.GetAncestorByClsNm(otherInpBxs[i], "SpecSrch_Attribute").id;
						var attrIdArray = divId.split("_");
						if (attrnms.length > 0) {
							for (var j = 0; j < attrnms.length; j++) {
								if (attrnms[j] == attrIdArray[PUB_ATTR_ID_IDX]) {
									otherInpBxs[i].value = attrvals[j];
								}
							}
						}
					}
				}
				//inner html has been modified. must re-define box elem and reattach listeners
				sizedInpBx = Cmn.GetElementsByClsNm("SizedInpBx", "textarea", specCntnr)[0];
				sizedInpBx = Cmn.GetElementsByClsNm("SizedInpBx", "textarea", specCntnr)[0];
				if (sizedInpBx){
					attrnms[attrnms.length] = "Custom";
					if (respArgs.ClickedElem){
						sizedInpBx.value = respArgs.ClickedElem.value;
					}
				}
			}
		} else {
			if(!(specCntnr)){
				specCntnr = Cmn.Get("InLnOrdWebPart_SpecCntnr" + "_" + respArgs.PartNbrTxt);
			}
			if (specCntnr) {
			
				//remove event listeners that exist on old input boxes
				//Chrome is sensitive and otherwise will attend to event listeners that no longer exist
				var mainBx = Cmn.GetAncestorByClsNm(specCntnr, "InLnOrdWebPartLayout_Main")
				var qtyInpBx = Cmn.GetElementsByClsNm("InLnOrdWebPartLayout_InpBx", "input", mainBx);
				var inpBxs = Cmn.GetElementsByClsNm("OtherValInpBx", "input", specCntnr);
				var sizedInpBx = Cmn.GetElementsByClsNm("SizedInpBx", "textarea", specCntnr)[0];
				
				if (qtyInpBx && qtyInpBx[0]) {
					Cmn.RemEvntListener(qtyInpBx[0], "keyup");
				}
				
				for (var i = 0; i < inpBxs.length; i++) {
					Cmn.RemEvntListener(inpBxs[i], "blur");
				}
				
				if (sizedInpBx){
					Cmn.RemEvntListener(sizedInpBx,"keydown",function(e){InLnOrdWebPart.HndlEvntOnKeyDown(e, webPartObj)});
					Cmn.RemEvntListener(sizedInpBx,"keypress",function(e){InLnOrdWebPart.HndlKeyPressEvnt(e,webPartObj);});
					Cmn.RemEvntListener(sizedInpBx,"paste",function(e){InLnOrdWebPart.HndlPasteEvnt(e,webPartObj);});
					Cmn.RemEvntListener(sizedInpBx,"blur",function(e){InLnOrdWebPart.HndlBlurEvnt(e,webPartObj);});
				}
				
				//Reset the markuptxt
				specCntnr.innerHTML = webPartObj.MarkupTxt;
				
				//The markup txt does not contain whatever was in the new input boxes. We need to repopulate these boxes on the client.
				var attrnms = respArgs.AttrNms;
				var attrvals = respArgs.AttrVals;
				
				var otherInpBxs = Cmn.GetElementsByClsNm("OtherValInpBx", "input", specCntnr);
				if (otherInpBxs) {
					for (var i = 0; i < otherInpBxs.length; i++) {
						var divId = Cmn.GetAncestorByClsNm(otherInpBxs[i], "SpecSrch_Attribute").id;
						var attrIdArray = divId.split("_");
						if (attrnms.length > 0) {
							for (var j = 0; j < attrnms.length; j++) {
								if (attrnms[j] == attrIdArray[PUB_ATTR_ID_IDX]) {
									otherInpBxs[i].value = attrvals[j];
								}
							}
						}
					}
				}
				//inner html has been modified. must re-define box elem and reattatch listeners
				sizedInpBx = Cmn.GetElementsByClsNm("SizedInpBx", "textarea", specCntnr)[0];
				if (sizedInpBx){
					attrnms[attrnms.length] = "Custom";
					if (respArgs.ClickedElem){
						sizedInpBx.value = respArgs.ClickedElem.value;
					}
				}
				
			} 
		}

		//Place the focus on either the contextual search box or the quantity box or the sized input box
		if (Cmn.GetElementsByClsNm("SpecSrch_CntxtSrchBx", "input", specCntnr)[0] ||
			Cmn.GetElementsByClsNm("SizedInpBx","textarea", specCntnr)[0]) {
			var inpBx = Cmn.GetElementsByClsNm("SpecSrch_CntxtSrchBx", "input", specCntnr)[0] ?
				Cmn.GetElementsByClsNm("SpecSrch_CntxtSrchBx", "input", specCntnr)[0] :
				Cmn.GetElementsByClsNm("SizedInpBx","textarea", specCntnr)[0];
			//SpecSrchWebPart.MaintainFocus.SavePosn(inpBx)
			if (inpBx) {
				if (inpBx.setSelectionRange) {
					inpBx.focus();
					inpBx.setSelectionRange(inpBx.value.length, inpBx.value.length);
				} else if (inpBx.createTextRange) {
					// IE
					var range = inpBx.createTextRange();
					range.collapse(true);
					range.moveEnd('character', inpBx.value.length);
					range.moveStart('character', inpBx.value.length);
					range.select();
				}
			}
			if (Cmn.HasCls(inpBx, "SizedInpBx")){
				Cmn.AddEvntListener(sizedInpBx,"blur",function(e){InLnOrdWebPart.HndlBlurEvnt(e,webPartObj)});
			}
			
		} else if (Cmn.GetElementsByClsNm("OtherValInpBx", "input", specCntnr)[0]) {
			
			var clickedElem = respArgs.ClickedElem;
			if (clickedElem && clickedElem.innerHTML == OTHER_VAL_TXT) {
				var iDArray = clickedElem.id.split("_");
				var attributeElems = Cmn.GetElementsByClsNm("SpecSrch_Attribute", "div", specCntnr);			
				for (var i = 0; i < attributeElems.length; i++) {
					var attributeIDArray = attributeElems[i].id.split("_");
					if (iDArray[PUB_ATTR_ID_IDX] == attributeIDArray[PUB_ATTR_ID_IDX]) {			
						var inpBx = Cmn.GetElementsByClsNm("OtherValInpBx", "input", attributeElems[i]);
						if (inpBx) {
							inpBx[0].focus();
						}
					}
				}
			} else {
				if (activeId) {
					var activeAttrCntnr = Cmn.Get(activeId);
					var activeInpBxs = Cmn.GetElementsByClsNm("OtherValInpBx", "input", activeAttrCntnr);
					if (activeAttrCntnr && activeInpBxs[0]) {
						activeInpBxs[0].focus();
					}
				} else if (activeIsQty) {
					var qtyInpBx = Cmn.GetElementsByClsNm("InLnOrdWebPartLayout_InpBx", "input", specCntnr);
					if (qtyInpBx && qtyInpBx[0]) {
						qtyInpBx[0].focus();
					}
				}
			}
			
			Cmn.RemEvntListeners(inpBx, "blur");
			Cmn.RemEvntListeners(inpBx, "focus");
			var qtyErrCntnr = Cmn.GetElementsByClsNm("InLnOrdWebPartLayout_QtyErr", "div", bxCntntRow)[0];
			Cmn.ReplaceCls(qtyErrCntnr, "Show", "Hide");
			
			var inpBxs = Cmn.GetElementsByClsNm("OtherValInpBx", "input", specCntnr);

			for (var i = 0; i < inpBxs.length; i++) {
				Cmn.AddEvntListener(inpBxs[i], "blur", function (e) {
					InLnOrdWebPart.HndlKeyDownEvnt(e, webPartObj, respArgs);
				});
			}
			
			// For titled input boxes on products with multiple price levels, refresh the box
			// after every keystroke in the quantity box, as the price level may have changed
			if (inpBxs.length > 0 && webPartObj.IsTieredPrceInd) {
				var mainBx = Cmn.GetAncestorByClsNm(specCntnr, "InLnOrdWebPartLayout_Main")
				var qtyInpBx = Cmn.GetElementsByClsNm("InLnOrdWebPartLayout_InpBx", "input", mainBx);
				if (qtyInpBx && qtyInpBx[0]) {
					Cmn.AddEvntListener(qtyInpBx[0], "keyup", function (e) {
						InLnOrdWebPart.HndlKeyDownEvnt(e, webPartObj, respArgs);
					});
				}
			}
			
		} else {
			//do nothing
		}

	};
	
	var getSpecCntnr = function (elem, partNbrTxt) {
		var rtnElem;
		var tempMthd = function (e) {
			var rtnVal = false;
			if (e.id == "InLnOrdWebPart_SpecCntnr" + "_" + partNbrTxt) {
				rtnVal = true;
			}
			return rtnVal;
		}
		
		if (elem) {
			rtnElem = Cmn.GetAncestorBy(elem, tempMthd);
		}
		
		return rtnElem;
	};

    var getOrdHistMsg = function (webPartObj, respArgs) {
        /// <summary>
        /// The function that fetches order history when the call 
        /// to update the item attributes is made.
        /// </summary>
        /// <param name="webPartObj">The web part object.</param>
        /// <param name="respArgs">
        /// The part number and the ordhistmsg container. 
        /// </param>

        if (webPartObj) {
            // find the order history message container.
            var actvBx = mBxObj
				  , ordHistMsgCntnr = Cmn.GetElementsByClsNm("InLnOrdWebPartOrdHistMsg" + respArgs.PartNbrTxt, 'div', respArgs.inLnBxMainCntnr)[0];

            // try to get data out of the sales workstation object in session.
            var msgDat = McMaster.SesnMgr.GetStVal(McMaster.SesnMgr.StValDefs.FndAgainSlsWrkStObj.KyTxt());
            // load order history message into the container.

            if (ordHistMsgCntnr) {
                //ordHistMsgCntnr.innerHTML = webPartObj.MarkupTxt + ".";
                if (msgDat == null || msgDat == "NONE" || msgDat.length < 1) {
                    // check if we have information from the sales workstation
                    if (webPartObj.MarkupTxt.length > 0) {
                        ordHistMsgCntnr.innerHTML = webPartObj.MarkupTxt + ".";
                        Cmn.ReplaceCls(ordHistMsgCntnr, "Hide", "InLnOrdWebPartLayout_OrdHistMsg");
                        actvBx.OrdHistMsgTxt = webPartObj.MarkupTxt;
                    }
                } else {
                    // Use Sales Workstation data to build the 
                    // Order History message text.	
                    var msgTxt = bldOrdHistMsgForSlsWrkst(webPartObj, msgDat, actvBx);
                    if (msgTxt.length > 0) {
                        ordHistMsgCntnr.innerHTML = msgTxt + ".";
                        Cmn.ReplaceCls(ordHistMsgCntnr, "Hide", "InLnOrdWebPartLayout_OrdHistMsg");
                        actvBx.OrdHistMsgTxt = msgTxt;
                    }
                }
                setVal(valDefs.ActvInLnOrdBx.KyTxt(), actvBx);
            }

        } else {
            // Do nothing. TODO: Figure out some kind of default behavior for not getting a 
            // response.
        }

    };

    // <summary>
    // update stock message
    // </summary>
    // <param name="webPartObj">The web part object.</param>
    // <param name="respArgs">
    // The arguments that we specified in the connection object - here, it is just the part number. 
    // </param>
    var updtStkMsg = function (webPartObj, respArgs, inpVal) {
        var stkmsgcntnr = Cmn.GetElementsByClsNm("InLnOrdWebPartLayout_StkMsg", "div", respArgs.inLnBxMainCntnr)[0];
        if (!stkmsgcntnr) {
            //look for cntnr with alternate class name
            stkmsgcntnr = Cmn.GetElementsByClsNm("InLnOrdWebPartLayout_StkMsgPacks", "div", respArgs.inLnBxMainCntnr)[0];
        }
        var cntntRow = Cmn.GetAncestorByTagNm(respArgs.inLnBxMainCntnr, "tr");
        var stkMsg = webPartObj.StkMsgTxt;
		var warningMsgCntnr = Cmn.GetElementsByClsNm("InLnOrdWebPartLayout_WarningAlert", "div", respArgs.inLnBxMainCntnr)[0];
		
		if (warningMsgCntnr) {
			Cmn.RemCls(warningMsgCntnr, "InLnOrdWebPartLayout_BoldedWarningAlert");
			warningMsgCntnr.innerHTML = webPartObj.WarningMsg;
			if (warningMsgCntnr.innerHTML.length > 0) {
				stkmsgcntnr.innerHTML = "";
			} else {
			
				//Add the new stock message into the stock message container.						
				if (stkmsgcntnr) {
					stkmsgcntnr.innerHTML = stkMsg;
				}
				//Add the price into the price container, which will be in a different location 
				//depending upon the customers preference for viewing product information.
				var prceTxtCntnr = Cmn.GetElementsByClsNm("InLnOrdWebPartLayout_PrceTxt", "div", respArgs.inLnBxMainCntnr)[0];
				var expdViewPrceTxtCntnr = Cmn.GetElementsByClsNm("InLnOrdWebPartLayoutExpdView_PrceCell", "div", respArgs.inLnBxMainCntnr)[0];

				//If the customer wants expanded product information in the inline box and the pricing div exists
				//insert the price text. 
				if (webPartObj.IsExpdFrmtInd && expdViewPrceTxtCntnr) {
					//If the item has tiered pricing, we don't want to replace that with the price text from 
					//the server so do nothing.
					if (webPartObj.IsTieredPrceInd) {
						//Do nothing
					} else if (webPartObj.PrceTxt == "") {
						// Do nothing. 
					} else {
						//Insert the price text from the server below the item's description.
						expdViewPrceTxtCntnr.innerHTML = "$" + webPartObj.PrceTxt + webPartObj.UMTxt;
					}
				} else {
					if (prceTxtCntnr) {
						if (webPartObj.PrceTxt == "") {
							// Do nothing. 
						} else {
							prceTxtCntnr.innerHTML = "$" + webPartObj.PrceTxt;
						}
					}
				}
			}
		} else {
		
			var attrErrCntnr = Cmn.GetElementsByClsNm("InLnOrdWebPartLayout_AttrAlert", "div", respArgs.inLnBxMainCntnr)[0];
			//var otherErrCntnr = Cmn.GetElementsByClsNm("InLnOrdWebPartLayout_OtherChoiceAlert", "div", respArgs.inLnBxMainCntnr)[0];
			
			if (attrErrCntnr) {
				attrErrCntnr.outerHTML = webPartObj.AttrWarningMsg;
				//Cmn.ReplaceCls(attrErrCntnr, "Hide", "Show");
				//InLnOrdWebPartDynamicRendering.js and Me.AddtoOrd deal with whether to show this or not.
			} //Don't want to show stock if attributes are missing.						
			
			//Add the new stock message into the stock message container.						
            if (stkmsgcntnr) {
                stkmsgcntnr.innerHTML = stkMsg;
            }
            //Add the price into the price container, which will be in a different location 
            //depending upon the customers preference for viewing product information.
            var prceTxtCntnr = Cmn.GetElementsByClsNm("InLnOrdWebPartLayout_PrceTxt", "div", respArgs.inLnBxMainCntnr)[0];
            var expdViewPrceTxtCntnr = Cmn.GetElementsByClsNm("InLnOrdWebPartLayoutExpdView_PrceCell", "div", respArgs.inLnBxMainCntnr)[0];

            //If the customer wants expanded product information in the inline box and the pricing div exists
            //insert the price text. 
            if (webPartObj.IsExpdFrmtInd && expdViewPrceTxtCntnr) {
                //If the item has tiered pricing, we don't want to replace that with the price text from 
                //the server so do nothing.
                if (webPartObj.IsTieredPrceInd) {
                    //Do nothing
                } else if (webPartObj.PrceTxt == "") {
                    // Do nothing. 
                } else {
                    //Insert the price text from the server below the item's description.
                    expdViewPrceTxtCntnr.innerHTML = "$" + webPartObj.PrceTxt + webPartObj.UMTxt;
                }
            } else {
                if (prceTxtCntnr) {
                    prceTxtCntnr.innerHTML = "$" + webPartObj.PrceTxt;
                }
            }
			
		}
    }

    var hndlFailedUpdtAttrAjaxResp = function () {
        /// <summary>
        /// Resets the ajax call indicator to true upon a server failure. 
        /// </summary>
        mReadyNxtAjaxCallInd = true;
    }

    var hndlClickEvnt = function (e) {
        /// <summary>
        /// Handles the clicking event in the box
        /// </summary>
        /// <param name="e">The element clicked.</param>
        /// </param>

        //Make sure we have an event.
        if (e) {
            // Get the target element.
            var targetElem = Cmn.GetEvntTarget(e);

			if (Cmn.HasCls(targetElem, "InLnOrdWebPartLayout_AttrLstItm")) {
				// click was on list item so get value and call attribute change function.
				var drpDwnMenuCntnr = Cmn.GetAncestorByTagNm(targetElem, 'div');
				var drpDwnCntnr = Cmn.GetPrevSibling(Cmn.GetPrevSibling(drpDwnMenuCntnr));
				var inpBxs = Cmn.GetElementsByClsNm("InLnOrdWebPartLayout_AttrInpBx", "input", parentAttrCntnr);
				// Get the full attribute display text
				var drpDwnCntnrDsplyTxt = targetElem.innerHTML;
				// Get the uniquely identifying id
				var id = drpDwnCntnr.id;
				var attrCntnr = Cmn.GetAncestorByClsNm(drpDwnMenuCntnr,"InLnOrdWebPartLayout_AttrsCntnr");
				// if same part number appears more than once within a single presentation, 
				// we want to uniquely identify each instance by extracting the sequence 
				// in which the part number appears. By adding this sequence number, 
				// the id is actually unique. 
				// For example, look at "Maintenance-Free Ball Bearing Carriages and Guide Rails
				var seqNbr = 0;
				if (attrCntnr){
					var attrCntnrMetaDats = attrCntnr.attributes;
					for (var i = 0; i < attrCntnrMetaDats.length; i++){
						if (attrCntnrMetaDats[i].name == "data-mcm-partnbr-seqnbr"){
							seqNbr = attrCntnrMetaDats[i].value;
							break;
						}
					}
				}
				//concat id and the sequence number 
				if (seqNbr && seqNbr > 0){
					id = id + seqNbr;
				}
				// Remove any values previously associated with this id
				mAttrbtSlctdTbl.Rem(id);
				// Add the part number/attribute name (key) and selected attribute (val) to the hash table
				mAttrbtSlctdTbl.Add(id, drpDwnCntnrDsplyTxt);
				// Get the ruler element
				var rulerElem = Cmn.GetPrevSibling(Cmn.GetAncestorByTagNm(targetElem, 'div'));
				// Get the width of the selected attribute
				var drpDwnCntnrDsplyTxtWidth = getTxtWdth(rulerElem, drpDwnCntnrDsplyTxt);
				// Get the width of the dropdown
				var drpDwnWdth = Cmn.GetWidth(drpDwnCntnr);
				// Check if the selected attribute is wider than the dropdown width minus the space on the right
				// side of the dropdown that is taken up by the arrow and a buffer
				if (drpDwnCntnrDsplyTxtWidth > (drpDwnWdth - DRP_DWN_RT_SD_WDTH)) {
					while ((drpDwnCntnrDsplyTxtWidth + ELLPSS_WDTH) > (drpDwnWdth - DRP_DWN_RT_SD_WDTH)) {
						// Trim a character until the attribute text + an ellipsis fits in the dropdown
						drpDwnCntnrDsplyTxt = drpDwnCntnrDsplyTxt.substring(0, drpDwnCntnrDsplyTxt.length - 1);
						drpDwnCntnrDsplyTxtWidth = getTxtWdth(rulerElem, drpDwnCntnrDsplyTxt);
					}
					// If the last character is a space, get rid of it
					if (drpDwnCntnrDsplyTxt.charAt(drpDwnCntnrDsplyTxt.length - 1) == " ") {
						drpDwnCntnrDsplyTxt = drpDwnCntnrDsplyTxt.slice(0, -1);
					}
					else {
						// Do nothing
					}
					// Set the displayed text to the trimmed attribute plus an ellipsis
					drpDwnCntnr.innerHTML = drpDwnCntnrDsplyTxt + "...";
				}
				else {
					// The attribute already fits so don't trim anything. Just set the displayed text to the attribute.
					drpDwnCntnr.innerHTML = drpDwnCntnrDsplyTxt;
				}

                // Hide the attribute containers. 
                hideAttrMenu();

                // Call the attribute change function
                var idStrArr = drpDwnCntnr.id.split('&');
                AttrChng(targetElem);

                // Put focus in the "please specify" input box. 
                if (inpBxs.length > 0) {
                    inpBxs[0].focus();
                }

            } else if (Cmn.HasCls(targetElem, "InLnOrdWebPart_AttrDropDwn")) {

                // Check if the click was on an unopened box, if so then open it.
                // If click was on a drop-down menu, either show or hide options.

				var drpDwnMenuCntnr = Cmn.GetNxtSibling(Cmn.GetNxtSibling(targetElem));
				if (Cmn.HasCls(drpDwnMenuCntnr, "Hide")) {
					var partNbrLnksWithBox = Cmn.GetElementsByClsNm("AddToOrdBxCreated", "a"),
						partNbr = targetElem.id.replace("InLnOrdWebPart_AttrDropDwn&Color&", ""),
						parentRow;
						
					for (var i=0; i<partNbrLnksWithBox.length; i++){
						if (partNbrLnksWithBox[i].innerHTML == partNbr){
							parentRow = Cmn.GetAncestorByTagNm(partNbrLnksWithBox[i], "tr");
							break;
						}
					}
					
					if (parentRow){
						Me.ResetBxObj(targetElem, parentRow);
					}

					Me.ResetBxObj(targetElem, mBxObj.ParentRow);
					var inLnOrdMainCntnr = Cmn.GetAncestorByClsNm(targetElem, "InLnOrdWebPart_RacingStripe")
						  , attrCntnrsPrsnt = Cmn.GetElementsByClsNm("InLnOrdWebPart_ChildAttrCntnr", "div", inLnOrdMainCntnr)
						  , listElements = Cmn.GetElementsByClsNm("InLnOrdWebPartLayout_AttrLstItm", "li", drpDwnMenuCntnr)
						  , viewportHeight = Cmn.GetViewportHeight()
						  , otherAttrChldCntnr = Cmn.GetAncestorByClsNm(targetElem, "InLnOrdWebPartLayout_AttrSlctWithOther")
						  , attrInpBxCntnr = Cmn.GetNxtSiblingBy(otherAttrChldCntnr, function (elem) { return Cmn.HasCls(elem, "InLnOrdWebPartLayout_AttrInpBxCntnr"); })
						  , partNbrInfoCntnr = Cmn.GetElementsByClsNm("InLnOrdWebPart_PartNbrInfo", "div", inLnOrdMainCntnr)[0]
						  , transInfoCntnr = Cmn.GetElementsByClsNm("InLnOrdWebPart_TransInfo", "div", inLnOrdMainCntnr)[0]
						  , targetElemY = Cmn.GetY(targetElem); ;

                    // Drop-down menu was hidden so show menu and hide all other menus.						
                    hideAttrMenu();

                    // Add a relative position and a z-index of one to both the parent table cell and
                    // the parent attribute child container. This is for IE7 compatibility. 
                    var parentTd = Cmn.GetAncestorByTagNm(targetElem, "td")
						  , parentAttrCntnr = Cmn.GetAncestorByClsNm(targetElem, "InLnOrdWebPartLayout_AttrChldCntnrPosRelative");

                    Cmn.AddCls(parentTd, "InLnOrdWebPartLayout_ActvAttrCell");
                    Cmn.AddCls(parentAttrCntnr, "InLnOrdWebPartLayout_AttrCntnrZIdx");

                    // Find the y position of the bottom of the drop down box.
                    var drpDownYPos = targetElemY + (listElements.length + 1) * Cmn.GetHeight(targetElem);

                    // If on a catalog page, the scroll postion needs to be subtracted from the drop down position
                    if (mCtlgShellCntnr) {
                        drpDownYPos -= window.scrollY;
                    }

                    // Show the menu
                    Cmn.RemCls(drpDwnMenuCntnr, "Hide");

                    // If the drop down menu won't fit on the screenspace above, make it drop downward
                    if (Cmn.GetHeight(drpDwnMenuCntnr) > screen.height - (screen.height - targetElemY)) {
                        if (Cmn.IsIE() || Cmn.IsSafari()) {
                            // Do nothing if the browser is IE.  
                        } else {
                            // For menus extending down remove position relative from the containing divs so the menu will
                            // appear in front of the elements below it rather than behind them. 
                            for (var loopIdx = 0; loopIdx < attrCntnrsPrsnt.length; loopIdx++) {
                                Cmn.ReplaceCls(attrCntnrsPrsnt[loopIdx], "InLnOrdWebPartLayout_AttrChldCntnrPosRelative", "InLnOrdWebPartLayout_AttrChldCntnrPosStatic");
                            }
                        }
                    }

                    // Check that the y position of the bottom of the drop down is less than the viewport height
                    else if (drpDownYPos < viewportHeight) {
                        if (Cmn.IsIE() || Cmn.IsSafari()) {
                            // Do nothing if the browser is IE.  
                        } else {
                            // For menus extending down remove position relative from the containing divs so the menu will
                            // appear in front of the elements below it rather than behind them. 
                            for (var loopIdx = 0; loopIdx < attrCntnrsPrsnt.length; loopIdx++) {
                                Cmn.ReplaceCls(attrCntnrsPrsnt[loopIdx], "InLnOrdWebPartLayout_AttrChldCntnrPosRelative", "InLnOrdWebPartLayout_AttrChldCntnrPosStatic");
                            }
                        }

                    } else {
                        //For menus extending upwards make sure the class has position relative so the bottom of the menu 
                        //sits on the top of the drop down box							
                        var bottomPosn = Cmn.GetHeight(targetElem);

                        if (Cmn.IsIE6()) {
                            // If the browser is IE6, we need to use the master attribute container to set the 
                            // position of the bottom of the drop down menu container. 
                            var masterAttrCntnr = Cmn.GetAncestorByClsNm(parentAttrCntnr, "InLnOrdWebPartAttrCntnr")
								  , masterAttrCntnrHeight = Cmn.GetHeight(masterAttrCntnr)
								  , cntnrInd = true
								  , specCntnr = Cmn.GetNxtSiblingBy(parentAttrCntnr, function (elem) { return Cmn.HasCls(elem, "InLnOrdWebPartLayout_SpecClass"); })
								  , partNbrInfoHeight = Cmn.GetHeight(partNbrInfoCntnr)
								  , transInfoCntnrHeight = Cmn.GetHeight(transInfoCntnr)
								  , alertCntnr = Cmn.GetFrstChldByClsNm(masterAttrCntnr, "InLnOrdWebPartLayout_Alert")
								  , ordHistCntnr = Cmn.GetFrstChldByClsNm(partNbrInfoCntnr, "InLnOrdWebPart_OrdHistCntnr")
								  , qtyErrCntnr = Cmn.GetFrstChldByClsNm(partNbrInfoCntnr, "InLnOrdWebPartLayout_QtyErr");

                            // Switch the position of the child attribute container from relative to static for IE6. 
                            for (var loopIdx = 0; loopIdx < attrCntnrsPrsnt.length; loopIdx++) {
                                Cmn.ReplaceCls(attrCntnrsPrsnt[loopIdx], "InLnOrdWebPartLayout_AttrChldCntnrPosRelative", "InLnOrdWebPartLayout_AttrChldCntnrPosStatic");

                                // Subtract the height of child attribute containers above the one selected.
                                if (attrCntnrsPrsnt[loopIdx] == parentAttrCntnr) {
                                    cntnrInd = false;
                                }

                                if (cntnrInd) {
                                    masterAttrCntnrHeight = masterAttrCntnrHeight - Cmn.GetHeight(attrCntnrsPrsnt[loopIdx]) - parseFloat(Cmn.GetStyle(parentAttrCntnr, "marginTop"));
                                } else {
                                    // Do nothing. 
                                }
                            }

                            if (otherAttrChldCntnr || specCntnr) {
                                // If the item has a "please specify" box or a spec container, do not add the extra border space.
                                bottomPosn = masterAttrCntnrHeight - bottomPosn + parseFloat(Cmn.GetStyle(parentAttrCntnr, "marginTop"));
                            } else {
                                // Otherwise, add the border to the bottom position. 
                                bottomPosn = masterAttrCntnrHeight - bottomPosn + parseFloat(Cmn.GetStyle(parentAttrCntnr, "marginTop")) + ATTR_DROP_DOWN_BORDER;
                            }

                            // If this is a presentation where the transaction content container extends below the part number
                            // information container, there is more slack at the bottom of the box that cannot be found in
                            // padding or margins. Take this difference and add it to the bottom position as well. 
                            if (transInfoCntnrHeight > partNbrInfoHeight) {
                                bottomPosn = bottomPosn + (transInfoCntnrHeight - partNbrInfoHeight) - ATTR_DROP_DOWN_BORDER;
                            }

                            // If a warning message is showing, we must take its height into account.
                            if (Cmn.HasCls(alertCntnr, "Show")) {
                                bottomPosn = bottomPosn - Cmn.GetHeight(alertCntnr) - CHLD_ATTR_TOP_BORDER;
                            }

                            // If the order history message is showing, we must take its height into account.
                            if (Cmn.HasCls(ordHistCntnr, "Hide")) {
                                // Do nothing.
                            } else {
                                bottomPosn = bottomPosn + Cmn.GetHeight(ordHistCntnr) - ATTR_DROP_DOWN_BORDER;
                            }

                            // If the quantity error message is showing, we must take its height into account.
                            if (Cmn.HasCls(qtyErrCntnr, "Show")) {
                                bottomPosn = bottomPosn + Cmn.GetHeight(qtyErrCntnr) - ATTR_DROP_DOWN_BORDER;
                            }

                        } else {
                            if (attrInpBxCntnr && Cmn.HasCls(attrInpBxCntnr, "Show")) {
                                // If there is a "please specify" box showing, adjust the calculation
                                // for the bottom of the attribute menu. 

                                bottomPosn = bottomPosn
											   + Cmn.GetHeight(attrInpBxCntnr) + parseFloat(Cmn.GetStyle(attrInpBxCntnr, "marginBottom"))
											   - ATTR_DROP_DOWN_BORDER;
                                // If this is an attribute menu with an "other" option, include its bottom margin in the 
                                // calculation. 
                                if (otherAttrChldCntnr) {
                                    bottomPosn = bottomPosn + parseFloat(Cmn.GetStyle(otherAttrChldCntnr, "marginBottom"));
                                }
                            } else {
                                bottomPosn = bottomPosn - ATTR_DROP_DOWN_BORDER

                                if (attrInpBxCntnr) {
                                    if (Cmn.IsIE()) {
                                        // For IE7 and IE8, add the bottom margin of the "please specify" container
                                        // to the calculation for the bottom position.
                                        bottomPosn = bottomPosn + parseFloat(Cmn.GetStyle(attrInpBxCntnr, "marginBottom"));
                                    } else {
                                        bottomPosn = bottomPosn - ATTR_DROP_DOWN_BORDER;
                                    }
                                }
                            }
                        }
                        Cmn.SetStyle(drpDwnMenuCntnr, 'bottom', bottomPosn + 'px');
                    }

                    Cmn.SetStyle(drpDwnMenuCntnr, 'border-top', '1px solid #999999');

                    // Increase the z-index of the containing box so the drop-down menu
                    // will overlay other inline boxes if need be.
                    var inLnBxRacingDiv = Cmn.GetAncestorByClsNm(targetElem, "InLnOrdWebPartLayout_Overlay");
                    Cmn.AddCls(inLnBxRacingDiv, "InLnOrdWebPartLayout_OverlayMore");

                    // Show the menu
                    Cmn.RemCls(drpDwnMenuCntnr, "Hide");
                    // Min-width isn't recognized in IE6 so we'll have to set the width of each
                    // drop down menu container that has a width smaller than that of the menu.
                    if (Cmn.IsIE6()) {
                        if (otherAttrChldCntnr && Cmn.GetWidth(drpDwnMenuCntnr) > 116) {
                            Cmn.SetStyle(drpDwnMenuCntnr, "width", "116px");
                        } else {
                            if (Cmn.GetWidth(drpDwnMenuCntnr) < 142) {
                                Cmn.SetStyle(drpDwnMenuCntnr, "width", "142px");
                            }
                        }
                    }

                } else {
                    // Hide all opened boxes
                    hideAttrMenu();
                }
            }
            else {
                // Click was outside of open menu so close all open menus.
                hideAttrMenu();
            }
        } else {
            // Do nothing. 
        }
    };

    var hideAttrMenu = function () {
        // Click was outside menu so hide the menu.	
        var mainCntnr
			  , dropDwnMenuCntnrs
			  , loopIdx
			  , inLnBxRacingDivs
			  , attrChldCntnrs
			  , actvTds
			  , zIdxCntnrs;

        if (mMainContentCntnr) {
            mainCntnr = mMainContentCntnr;
        } else {
            mainCntnr = mCtlgShellCntnr;
        }

        drpDwnMenuCntnrs = Cmn.GetElementsByClsNm("InLnOrdWebPart_AttrDropDwnMenu", "div", mainCntnr);
        inLnBxRacingDivs = Cmn.GetElementsByClsNm("InLnOrdWebPartLayout_Overlay", "div", mainCntnr);
        attrChldCntnrs = Cmn.GetElementsByClsNm("InLnOrdWebPart_ChildAttrCntnr", "div", mainCntnr);
        actvTds = Cmn.GetElementsByClsNm("InLnOrdWebPartLayout_ActvAttrCell", "td", mainCntnr);
        zIdxCntnrs = Cmn.GetElementsByClsNm("InLnOrdWebPartLayout_AttrCntnrZIdx", "div", mainCntnr);

        // Hide each dropdown menu container. 
        for (loopIdx = 0; loopIdx < drpDwnMenuCntnrs.length; loopIdx++) {
            Cmn.AddCls(drpDwnMenuCntnrs[loopIdx], "Hide");
            Cmn.SetStyle(drpDwnMenuCntnrs[loopIdx], "bottom", "");
        }

        // *HACK* to fix Chrome lingering attribute menu bug
        if (Cmn.IsChrome()) {
            window.scrollBy(0, 0);
        }

        // Reset the z-index of the containing box 			
        Cmn.RemCls(inLnBxRacingDivs, "InLnOrdWebPartLayout_OverlayMore");

        // Set the attribute child menu classes back to their unselected state. 
        Cmn.ReplaceCls(attrChldCntnrs, "InLnOrdWebPartLayout_AttrChldCntnrPosStatic", "InLnOrdWebPartLayout_AttrChldCntnrPosRelative");

        // Remove the relative positioning from all the table cells. 
        Cmn.RemCls(actvTds, "InLnOrdWebPartLayout_ActvAttrCell");

        // Remove the z-index from any attribute containers. 
        Cmn.RemCls(zIdxCntnrs, "InLnOrdWebPartLayout_AttrCntnrZIdx");

    };

    var remStVals = function () {
        /// <summary>
        /// Removes state values in session for part numbers which are unloaded. 
        /// </summary>
        /// <remarks>
        /// This function gets called every time this web part is unloaded. If there are 
        /// multiple boxes open on one page, the unload method will get called for each 
        /// one. Since we don't update the global variable for the last box opened (mBxObj),
        /// we can use it to ensure that we do not take anything other than the last box 
        /// opened out of the session array containing all 'activated' boxes. 
        /// </remarks>

        // Update the state array.
        var inLnBxs = getVal(valDefs.InLnOrdBxsCrtd.KyTxt()),
			tempBxObj = mBxObj;

        if (inLnBxs) {
            // The catalog frame causes the original array of box objects stored in session to 
            // get converted to an object. We must recast the collection of objects back into
            // a proper array.
            var bxIdx = 0
				  , tempArray = [];

            while (inLnBxs[bxIdx]) {
                tempArray.push(inLnBxs[bxIdx]);
                bxIdx++;
            }

            inLnBxs = tempArray;

            for (var bxIdx = 0; bxIdx < inLnBxs.length; bxIdx++) {
                if (inLnBxs[bxIdx].PrimaryPartNbrTxts == "" && inLnBxs[bxIdx].Id == mBxObj.Id) {
                    if (mBxObj.VisibilityInd == true) {
                        if (bxIdx > 0
							   && inLnBxs[bxIdx - 1].ClosedByForceInd == true
							   && inLnBxs[bxIdx - 1].VisibilityInd == false) {
                            // If the box that was active prior to the current active box was closed by
                            // force using the function that handles multiple parts in the same row, make
                            // sure it opens once the active box closes.
                            inLnBxs[bxIdx - 1].VisibilityInd = true;
                        }
                        // Take the active box off the end of the box array to be stored in session. 
                        inLnBxs.splice(bxIdx, 1);
                        break;
                    } else {
                        // If the last user interaction in the array of active boxes 
                        // was one that closed a box, make sure it's marked to open upon
                        // a back button click. 
                        inLnBxs[bxIdx].VisibilityInd = true;
                        tempBxObj.VisibilityInd = false;
                        setVal(valDefs.ActvInLnOrdBx.KyTxt(), tempBxObj);
                    }
                } else {
                    // Check to see if this is a part number that appears multiple times.
                    if (inLnBxs[bxIdx].PrimaryPartNbrTxts.length > 0) {
                        // If it is, make sure we splice the correct entry.
                        if (inLnBxs[bxIdx].Id == mBxObj.Id) {
                            var actvBxPrimaries = mBxObj.PrimaryPartNbrTxts.split("|");
                            for (var primIdx = 0; primIdx < actvBxPrimaries.length; primIdx++) {
                                if (inLnBxs[bxIdx].PrimaryPartNbrTxts.indexOf(actvBxPrimaries[primIdx]) > -1) {
                                    // This is the right box.
                                    if (inLnBxs[bxIdx].VisibilityInd == true) {
                                        // Take the active box off the end of the box array to be stored in session. 
                                        inLnBxs.splice(bxIdx, 1);
                                        break;
                                    } else {
                                        // If the last user interaction in the array of active boxes 
                                        // was one that closed a box, make sure it's marked to open upon
                                        // a back button click. 
                                        inLnBxs[bxIdx].VisibilityInd = true;
                                        tempBxObj.VisibilityInd = false;
                                        setVal(valDefs.ActvInLnOrdBx.KyTxt(), tempBxObj);
                                    }
                                }
                            }
                        }
                    }
                }
            }

            setVal(valDefs.InLnOrdBxsCrtd.KyTxt(), inLnBxs);
        }
    }

    var makeSesnLoadQSTxt = function (inLnBxsCrtd) {
        /// <summary>
        /// Makes the qs text to use for calling the server to load boxes
        /// on spec change or back button.
        /// </summary>
        /// <param name="inLnBxsCrtd">
        /// The hash table of the part numbers with boxes and their javascript objects.
        /// </param>

        var mcmTop = McMasterCom.Nav.GetTopFrame()
			  , visiblePartsArr = []
			  , partNbrIdx = 0
			  , specArr = []
			  , specArrIdx = 0;

        // Grab all part numbers that have the status of visible and assemble into 
        // a querystring text
        for (var i = 0; i < mCrtedBxObjs.length; i++) {
            if (mCrtedBxObjs[i].VisibilityInd == true) {
                visiblePartsArr[partNbrIdx] = mCrtedBxObjs[i];
                partNbrIdx++;
            } else {
                // Continue.
            }
        }
    }

    var updtAttr = function (e) {
        /// <summary>
        /// Calls the server to get the data to update box with attributed information
        /// </summary>
        /// <param name="e">
        /// The drop-down menu adjusted
        /// </param>
        var parentRow = Cmn.GetPrevSibling(Cmn.GetPrevSibling(Cmn.GetAncestorByTagNm(e, "tr")));
        // Find the part number link associated with the button that the user just clicked.
        // We have to check for this in case the user had more than one box open and chose
        // to add an item from an "inactive" box. 
        Me.ResetBxObj(e, parentRow);

		var mainCntnr = Cmn.GetAncestorByClsNm(e, "InLnOrdWebPartLayout_Main")
		  , attrnms = []
		  , attrvals = []
		  , attrCntnr = Cmn.GetAncestorByClsNm(e, "InLnOrdWebPartAttrCntnr")
		  , attrCntnrs = Cmn.GetChldrnBy(function (elem) { return Cmn.HasCls(elem, "InLnOrdWebPart_ChildAttrCntnr") }, attrCntnr)
		  , inpBx = Cmn.GetElementsByClsNm("InLnOrdWebPartLayout_AttrInpBx", "input", attrCntnr)[0]
		  , attrSlctCntnr = Cmn.GetAncestorByClsNm(e, "InLnOrdWebPart_ChildAttrCntnr")
		  , attrSlcts = Cmn.GetElementsByClsNm("InLnOrdWebPart_AttrDropDwn", "div", attrSlctCntnr)
		  , attrCntnrMetaDat = attrCntnr.attributes
		  , partNbrSeq = 0;
		  
		// Collect the attribute names and values.
		for (var cntnrIdx = 0; cntnrIdx < attrCntnrs.length; cntnrIdx++) {
			var attrSlct = Cmn.GetElementsByClsNm("InLnOrdWebPart_AttrDropDwn", "div", attrCntnrs[cntnrIdx])[0]
				  , attrLst = Cmn.GetElementsByClsNm("InLnOrdWebPart_AttrForm", "ul", attrCntnrs[cntnrIdx])[0];

			//get sequence number from the attribute container. 
			//this sequence number is used to uniquely identify each instance of same part number 
			for (var i=0; i<attrCntnrMetaDat.length; i++){
				if (attrCntnrMetaDat[i].name == "data-mcm-partnbr-seqnbr"){
					partNbrSeq = attrCntnrMetaDat[i].value;
					break;
				}
			}
			
			if (attrSlct) {
				var id = attrSlct.id;
				if (partNbrSeq && partNbrSeq > 0){
					id = id + partNbrSeq;
				}
				
				if (mAttrbtSlctdTbl.Itm(id)) {
					attrnms[cntnrIdx] = attrSlct.id.split('&')[IDSTRARR_ATTRNAME_INDEX];
					attrvals[cntnrIdx] = getAttrVal(mAttrbtSlctdTbl.Itm(id));
					var attrSlctsInnerHTML = attrSlct.innerHTML;
					if (attrvals[cntnrIdx] == "Other") {
						attrvals[cntnrIdx] = inpBx.value;
					} 
				}
			} else if (attrLst) {
				attrnms[cntnrIdx] = attrLst.id;
				var slctAttrRdoBtn = Cmn.GetElementsByClsNm("InLnOrdWebPart_AttrLstSlctd", "li", attrLst)[0];
				if (slctAttrRdoBtn) {
					attrvals[cntnrIdx] = getAttrVal(slctAttrRdoBtn.innerHTML);
				}
			}
		}
		
		var otherInpBxs = Cmn.GetElementsByClsNm("OtherValInpBx", "div");

        if (attrnms && attrvals) {
            attrNmsQSTxt = attrnms.join(String.fromCharCode(2029));
            attrValsQSTxt = attrvals.join(String.fromCharCode(2029));
        }

		var cnxnObj = {
			success: hndlUpdtAttrAjaxResp,
			failure: hndlFailedUpdtAttrAjaxResp,
			cnxnParm: {
				respTyp: McMaster.CnxnMgr.WEB_PART_RESP_TYP_TXT,
				PartNbrTxt: mainCntnr.id.replace("InLnOrdWebPartLayout_Main",""),
				inLnBxMainCntnr: mainCntnr
			}
		};

        var url = INLN_ORD_HTTP_HANDLER_URL + "?" +
						ACT_TXT + "=" +
						UPDT_ATTR_QS_KY_TXT + "&" +
						PART_NBR_QS_KY_TXT + "=" +
						mBxObj.PartNbrTxt + "&" +
						ATTR_NM_QS_KY_TXT + "=" +
						encodeURIComponent(attrNmsQSTxt) + "&" +
						ATTR_VAL_QS_KY_TXT + "=" +
						encodeURIComponent(attrValsQSTxt);

        // Use Connection Manager to call the web part's HTTP handler.
        McMaster.CnxnMgr.PerformAjaxCnxn(url, cnxnObj);

        Cmn.TrkAct("InLnOrdAttrChg&partnbr=" + mBxObj.PartNbrTxt, "InLnOrd");
		
		// TrkSrch
        var srchTrkInfo = new SrchTrkr.SrchDat({ usr: SrchTrkr.UsrActTyps.SLCT });
        srchTrkInfo.usr.srcNm = "InLnOrdWebPart";
        srchTrkInfo.usr.elemTyp = SrchTrkr.ElemTyps.INLINE_SPEC;
        srchTrkInfo.usr.slctdNm = decodeURIComponent(mBxObj.PartNbrTxt);
        srchTrkInfo.usr.spec = { attr: attrNmsQSTxt, val: attrValsQSTxt };
        srchTrkInfo.Trk();
    }

    var AttrChng = function (e) {
        /// <summary>
        /// Update the new attribute from the drop-down menu
        /// </summary>
        /// <param name="e">
        /// The drop-down menu item selected 
        /// </param>	
        var parentRow = Cmn.GetPrevSibling(Cmn.GetPrevSibling(Cmn.GetAncestorByTagNm(e, "tr")));
        Me.ResetBxObj(e, parentRow);

        var attrCntnr = Cmn.GetAncestorByClsNm(e, "InLnOrdWebPartAttrCntnr")
			  , attrSlctCntnr = Cmn.GetAncestorByClsNm(e, "InLnOrdWebPart_ChildAttrCntnr")
			  , attrAlertCntnrs = Cmn.GetElementsBy(function (elem) { return Cmn.HasCls(elem, "InLnOrdWebPart_AttrAlert"); }, 'div', attrCntnr)
			  , inLnOrdBxCntnr = Cmn.GetAncestorByClsNm(attrCntnr, "InLnOrdWebPart_RacingStripe")
			  , inpCntnr = Cmn.GetElementsByClsNm("InLnOrdWebPartLayout_AttrInpBxCntnr", "div", attrSlctCntnr)
			  , infoLeft = Cmn.GetElementsByClsNm("InLnOrdWebPartLayout_PartNbrInfoLeftNarrow", "div", inLnOrdBxCntnr)[0]
			  , infoLeftWidth = Cmn.GetWidth(infoLeft);

        for (var alertCntnrIDx = 0; alertCntnrIDx < attrAlertCntnrs.length; alertCntnrIDx++) {
            Cmn.ReplaceCls(attrAlertCntnrs[alertCntnrIDx], "Show", "Hide");
        }

        if (infoLeftWidth < 220) {
            Cmn.AddCls(inpCntnr, "InLnOrdWebPartLayout_AttrInpBxCntnrNarrow");

        } else {
            // Do nothing
        }

        if (e.id == "*") {
            // If Other is selected (id = *)				
            var stkmsgcntnr = Cmn.Get("InLnOrdWebPart_StkMsg" + mBxObj.PartNbrTxt);

            // Show the input box for the user inputed value.
            Cmn.ReplaceCls(inpCntnr, "Hide", "Show");

            //If the customer has selected an expanded view preference and have selected "Other"
            //after selecting another attribute value we need to remove the price for the previous item.
            var expdViewPrceTxtCntnr = Cmn.GetElementsByClsNm("InLnOrdWebPartLayoutExpdView_PrceCell", "div")[0];
            if (expdViewPrceTxtCntnr) {
                //If the container exists we need to clear out the price
                expdViewPrceTxtCntnr.innerHTML = "";
            } else {
                //Do nothing becasue you are in the regular view of inline ordering
            }

            // Take away the stock status. 
            stkmsgcntnr.innerHTML = "";

        } else {
            // Hide the attribute value input box.
            Cmn.ReplaceCls(inpCntnr, "Show", "Hide");
            // Call server to update with attributed part number data
            updtAttr(e);
        }
    };

    // TODO: Remove t2dxc
    var findBufferRow = function () {
        var rtnBufferRow
			  , partNbrLst = new Array()
			  , otherPartNbrLnk
			  , tempBufferRow
			  , arrayIdx = 0;

        for (var i = 0; i < mBxObj.TblCells.length; i++) {
            if (Cmn.HasCls(mBxObj.TblCells[i], "ItmTblCellPartNbr")) {
                otherPartNbrLnk = Cmn.GetFrstChld(mBxObj.TblCells[i]);

                if (otherPartNbrLnk) {
                    if (otherPartNbrLnk.innerHTML == mBxObj.PartNbrTxt) {
                        // Do nothing. 
                    } else {
                        partNbrLst[arrayIdx] = otherPartNbrLnk.innerHTML;
                    }
                }
            } else {
                // Do nothing.
            }
        }

        for (var j = 0; j < partNbrLst.length; j++) {
            tempBufferRow = Cmn.GetPrevSiblingBy(mBxObj.ParentRow, function (elem) { return Cmn.HasCls(elem, "InLnOrdWebPart_BufferRowFor" + partNbrLst[j]); });

            if (tempBufferRow) {
                rtnBufferRow = tempBufferRow;
                break;
            } else {
                // Continue. 
            }
        }

        return rtnBufferRow;
    };

    var scrollInLnBxToCntr = function (partNbrLnkPosn, horzScrollBarCatalog) {
        /// <summary>
        ///When the "catalog page" link is clicked on the inline ordering box, a part number search is executed, or a "part number" link 
        ///is clicked on the Order Pad, a catalog page will load. The inline ordering box will appear open and in the middle of 
        ///the screen.  
        /// </summary>

        //The height of the scrollable region, the scrollable region minus bottom navigation toolset, and midway point of scrollable region
        var ctlgPageViewportHgt;

        if (typeof (window.innerHeight) == "undefined") {
            // IE. 
            ctlgPageViewportHgt = window.document.documentElement.clientHeight - BOTTOMNAVTOOLSET_HGT;
        } else {
            // All other browsers. 
            ctlgPageViewportHgt = window.innerHeight - BOTTOMNAVTOOLSET_HGT;
        }

        var midwayPtOfCtlgPageViewportHgt = (ctlgPageViewportHgt / 2);

        //The position of the scroll top will be located at the difference between the part number link and 
        //the midway distance of the viewport height
        var scrollTopPosn = partNbrLnkPosn - midwayPtOfCtlgPageViewportHgt;

        //the scrollable container is the catalog page container to support pinned content
        window.document.getElementById("CtlgPageShell_CtlgPage_Cntnr").scrollTop += scrollTopPosn;
    };

    var getAttrVal = function (attrVal) {
        /// <summary>
        /// Parses out any special characters added by the browser.
        /// </summary>
        /// <param name="attrElem">
        /// An attribute element to interrogate.
        /// </param>
        /// <returns>
        /// The name of the attribute as it was originally sent from the server. 
        /// </returns>
        var rtnAttrVal = attrVal;

        if (attrVal.indexOf("&amp;") > -1) {
            attrVal = attrVal.replace("&amp;", "&");
            rtnAttrVal = attrVal;
        }

        return rtnAttrVal;
    };

    var getTxtWdth = function (rulerElem, dsplyTxt) {
        rulerElem.innerHTML = dsplyTxt;
        var dsplyTxtWdth = rulerElem.offsetWidth;
        rulerElem.innerHTML = "";
        return dsplyTxtWdth;
    }

    var reAddHorzntlRule = function (inLnOrdCntntCell) {
        /// <summary>
        /// Adds the horizontal rule back to tables that have it. 
        /// </summary>
        /// <param name="inLnOrdCntntCell">
        /// The content cell inside the content row of the inline ordering box.
        /// </param>

        if (Cmn.HasCls(inLnOrdCntntCell, "InLnOrdWebPartLayout_HorizontalRule")) {
            for (var tblCellIdx = 0; tblCellIdx < mBxObj.TblCells.length; tblCellIdx++) {
                Cmn.AddCls(mBxObj.TblCells[tblCellIdx], "ItmTblAllRuleContentCell");
            }
        }

    }

    var reCastObjToArr = function (arrObj) {
        /// <summary>
        /// Sometimes session inexplicably clones arrays incorrectly when
        /// we're in iFrames. We need this function to recast the (now)
        /// object of created inline ordering box ojects back to an array.
        /// </summary>
        /// <param nm="arrObj">
        /// The object that was once an array.
        /// </param>			
        // Set the global variables associated with the javascript objects.
        if (typeof (arrObj) == "object") {
            // Session inexplicably clones arrays incorrectly when we're
            // in iFrames. Recast the (now) object back to an array.
            var bxIdx = 0
				  , tempArray = [];

            while (arrObj[bxIdx]) {
                tempArray.push(arrObj[bxIdx]);
                bxIdx++;
            }

            arrObj = tempArray;
        }

        return arrObj;
    };

    var chkAvailLensDsc = function (qtyTxt) {
        /// <summary>
        /// Checks if there is an available lengths violation on the order.
        /// </summary>
        /// <param nm="qtyTxt">
        /// The quantity text the user entered.
        /// </param>
        /// <returns>
        /// A boolean value of true if there is an available lengths error.
        /// </returns>
        var rtnLenViolationInd = false;

        if (mMetaDat.AttrMstrAvailLensDsc.length == 0) {
            rtnLenViolationInd = true;
        } else {
            for (var lenIdx = 0; lenIdx < mMetaDat.AttrMstrAvailLens.length; lenIdx++) {
                rtnLenViolationInd = true;
                if (qtyTxt == mMetaDat.AttrMstrAvailLens[lenIdx] || qtyTxt % mMetaDat.AttrMstrAvailLens[lenIdx] == 0) {
                    rtnLenViolationInd = false;
                    break;
                }
            }
        };

        // Check to see if the customer is trying to order more than fifteen dollars worth of
        // merchandise. If they are, then let them break the available length restriction.
        if (rtnLenViolationInd == true && (qtyTxt * mMetaDat.PrceTxt >= 15)) {
            rtnLenViolationInd = false;
        }

        return rtnLenViolationInd;
    };
    
	// <summary>Find and replace all.</summary>
	// <param name="find">The substring to search for.</param>
	// <param name="rplc">The replacement substring.</param>
	// <param name="str">The text to be searched through. 
	// Does not alter original str.</param>
	// <returns>String with all replacements made.</returns>
	var replaceAllSubstr = function(find,rplc,str){
		var rplcd = str.replace(find,rplc);
		while(rplcd != rplcd.replace(find,rplc)){
			rplcd = rplcd.replace(find,rplc);
		}
		return rplcd;
	}
	
	

	
	///#End Region "Private Methods"		


    //#Region "Inline Order Spec Methods"
    //-------------------------------------------------------------------------
    // <summary>
    // Published message 
    // </summary>
    //-------------------------------------------------------------------------
    Me.PubSpecMsg = function (inLnSpecId, inpElem) {
        var MSG_HDR = new McMaster.MsgMgr.Hdr(McMaster.MsgMgr.CntxtNms.SPEC);
        var partNbrTxt = inLnSpecId.split('_')[0];
        var prsnttnId = inLnSpecId.split('_')[1];
		InLnOrdWebPart.updtSpecAttr(inLnSpecId, inpElem);
        return this;
    };

    //-------------------------------------------------------------------------
    // <summary>
    // Update Spec attribute
    // </summary>
    //-------------------------------------------------------------------------
    Me.updtSpecAttr = function (inLnSpecId, clickedElem) {
        
		var attrnms = []
		  , attrvals = []
		  , inLnSpecIdComps = inLnSpecId.split('_')
		  , partNbrTxt = inLnSpecIdComps[0]
		  , prsnttnId = inLnSpecIdComps[1]
		  , seqNbr;
		
		//sequence number only exists for duplicate part numbers 
		if (inLnSpecIdComps.length > 2){
			seqNbr = inLnSpecIdComps[2];
		}
		
		var mainCntnr;
		if (clickedElem) {
			mainCntnr = Cmn.GetAncestorByClsNm(clickedElem, "InLnOrdWebPartLayout_Main")
		} else {
			if (chkCtlgPageInd()) {
				var mainIFrame = document.getElementById("MainIFrame");
				var ctlgPageElem = getObjFrmIFrameById(mainIFrame, "Catalog");
				mainCntnr = getObjFrmIFrameById(ctlgPageElem, "InLnOrdWebPart_Main" + partNbrTxt);
			} else {
				mainCntnr = Cmn.Get("InLnOrdWebPart_Main" + partNbrTxt);
			}
		}
		
		var qtyInpBx = Cmn.GetElementsByClsNm("InLnOrdWebPartLayout_InpBx", "input", mainCntnr)[0];
		var partNbrLnk = fndPartNbrLnkByClsNm(partNbrTxt, "PartNbrLnk", seqNbr) || fndPartNbrLnkByClsNm(partNbrTxt, "AddToOrdBxCreated", seqNbr);
		
		//do not trust mBxObj
		//get correct box based on part number from mCrtedBxObjs dictionary
		for (var i = 0; i < mCrtedBxObjs.length; i++) {
			if (mCrtedBxObjs[i].PartNbrLnk == partNbrLnk) {
				//then we found the right mBxObj, use this
				mBxObj = mCrtedBxObjs[i];
				break;
			}
		}
		
		var otherInpBxs = Cmn.GetElementsByClsNm("OtherValInpBx", "input", mainCntnr);
		
		if (isInLnSpec(partNbrLnk)) {
            if (otherInpBxs) {
				for (var i = 0; i < otherInpBxs.length; i++) {
					attrvals[attrvals.length] = otherInpBxs[i].value;
					var divId = Cmn.GetAncestorByClsNm(otherInpBxs[i], "SpecSrch_Attribute").id;
					var attrIdArray = divId.split("_")
					attrnms[attrnms.length] = attrIdArray[PUB_ATTR_ID_IDX];
				}
			}
		}
		
        // Join the attribute names and values into a query string
        // delimited by the proper character.
		if (attrnms && attrvals) {
			attrNmsQSTxt = attrnms.join(String.fromCharCode(2029));
			attrValsQSTxt = attrvals.join(String.fromCharCode(2029));
		}

        var cnxnObj = {
            success: hndlUpdtAttrAjaxResp,
            failure: hndlFailedUpdtAttrAjaxResp,
            cnxnParm: {
                respTyp: McMaster.CnxnMgr.WEB_PART_RESP_TYP_TXT,
                PartNbrTxt: partNbrTxt,
                PrsnttnID: prsnttnId,
                inLnBxMainCntnr: mainCntnr,
				AttrNms: attrnms,
				AttrVals: attrvals, 
				ClickedElem: clickedElem
            }
        };

        var partNbrLnk = fndPartNbrLnkByClsNm(partNbrTxt, "PartNbrLnk") || fndPartNbrLnkByClsNm(partNbrTxt, "AddToOrdBxCreated");
		if (isInLnSpec(partNbrLnk)) {
			isInLnSpecInd = true;
		}
        var attrCompItmIds = partNbrLnk.getAttribute("data-mcm-attr-comp-itm-ids");
        var fullPrsnttnId = getFullPrsnttnId(partNbrLnk);

        var url = INLN_ORD_HTTP_HANDLER_URL + "?" +
				  ACT_TXT + "=" +
				  UPDT_ATTR_QS_KY_TXT + "&" +
				  PART_NBR_QS_KY_TXT + "=" +
				  partNbrTxt + "&" +
				  IS_INLNSPEC + "=" +
				  isInLnSpecInd + "&" +
				  ATTR_COMP_IDS + "=" +
				  attrCompItmIds + "&" +
				  FULL_PRSNTTN_ID_KY_TXT + "=" +
				  fullPrsnttnId + "&" +
				  PRSNTTN_ID_KY_TXT + "=" +
				  prsnttnId + "&" +
				  ATTR_NM_QS_KY_TXT + "=" +
				  encodeURIComponent(attrNmsQSTxt) + "&" +
				  ATTR_VAL_QS_KY_TXT + "=" +
				  encodeURIComponent(attrValsQSTxt);

        if (qtyInpBx && qtyInpBx.value > 0) {
            url = url + "&" + QTY_TXT_QS_KY_TXT + "=" + qtyInpBx.value;
        }
        var inLnSpecDict = McMaster.SesnMgr.GetStVal(valDefs.InLnSpecUsrInps.KyTxt());
        url = inLnSpecDict[inLnSpecId].AddSpecUsrInpQS(url);

        // Use Connection Manager to call the web part's HTTP handler.
        // Store connection in global, public variable so InLnOrdWebPartLoader.AbortStaleReq
		// can query for and abort outdated requests
		Me.PrevCntxtSrchCnxn = McMaster.CnxnMgr.PerformAjaxCnxn(url, cnxnObj);

         //Track attribute click in inline ordering
		if (clickedElem==undefined) 
		{
		Cmn.TrkAct("InLnOrdSpecAttrChg&partnbr=" + partNbrTxt, "InLnOrd");
		} 
		else {        
		Cmn.TrkAct("InLnOrdSpecAttrChg&partnbr=" + partNbrTxt + "&AttrSelected=" + clickedElem.innerHTML, "InLnOrd");
		}
	}

    //-------------------------------------------------------------------------
    // <summary>
    // hide inline spec box
    // </summary>	
    //-------------------------------------------------------------------------
    var hideInLnSpecBx = function (partNbrLnk) {
        var parentRow = Cmn.GetAncestorByTagNm(partNbrLnk, "tr");
        var specChoiceLnks = Cmn.GetElementsByClsNm("SpecChoiceSlctd", "a", parentRow);
        for (var specChoiceLnkIdx = 0; specChoiceLnkIdx < specChoiceLnks.length; specChoiceLnkIdx++) {
            Cmn.ReplaceCls(specChoiceLnks[specChoiceLnkIdx], "SpecChoiceSlctd", "SpecChoiceVisitedLnk ");
        }

        var prceLnks = Cmn.GetElementsByClsNm("PrceLnkSlctd", "a", parentRow);
        for (var prceLnksIdx = 0; prceLnksIdx < prceLnks.length; prceLnksIdx++) {
            Cmn.ReplaceCls(prceLnks[prceLnksIdx], "PrceLnkSlctd", "PrceLnkVisited ");
        }

        if (isInLnSpec(partNbrLnk)) {
			var prsnttnId = getPrsnttnId(partNbrLnk);
			var partNbrTxt = partNbrLnk.innerHTML;
			var seqNbr = partNbrLnk.getAttribute("data-mcm-partnbr-seqnbr");
			var inLnSpecId = partNbrTxt + "_" + prsnttnId;
			if (seqNbr){
				inLnSpecId = inLnSpecId + '_' + seqNbr;
			}
			var inLnSpecDict = McMaster.SesnMgr.GetStVal(McMaster.SesnMgr.StValDefs.InLnSpecUsrInps.KyTxt());
			inLnSpecDict[inLnSpecId].RemAll();
			McMaster.SesnMgr.SetStVal(McMaster.SesnMgr.StValDefs.InLnSpecUsrInps.KyTxt(), inLnSpecDict);
			var stkmsgcntnr = Cmn.Get("InLnOrdWebPart_StkMsg" + partNbrTxt);
			if (stkmsgcntnr) {
				stkmsgcntnr.innerHTML = "";
			}
		}
    }

    //-------------------------------------------------------------------------
    // <summary>
    // update specinteractions for inline order spec
    // </summary>
    //-------------------------------------------------------------------------
    var updtInlnSpecInteractions = function (webPartObj) {
        SpecInteractions.AddAttrIdToNmDefs(webPartObj);

		//Remove event listeners
		SpecInteractions.RemoveEvntListeners(webPartObj);
		//Attach event listeners
		SpecInteractions.AttachEvntListeners(webPartObj, McMaster.MsgMgr.CntxtNms.INLN_ORD, InLnOrdWebPartLoader, true, mBxObj.MainCntnr);

		//Obtain session dictionary of SpecSrchInps
		var inLnSpecDict = McMaster.SesnMgr.GetStVal(McMaster.SesnMgr.StValDefs.InLnSpecUsrInps.KyTxt());
		var seqNbr = webPartObj.PartNbrLnk.getAttribute("data-mcm-partnbr-seqnbr");
		var inLnSpecId;
		
		if (webPartObj.PartNbrLnk.innerHTML == "") {
			inLnSpecId = webPartObj.MetaDat.PartNbrTxt + '_' + webPartObj.PrsnttnId;
		} else {
			inLnSpecId = webPartObj.PartNbrLnk.innerHTML + '_' + webPartObj.PrsnttnId;
		}
		
		//sequence number exists only for duplicate part number
		if (seqNbr){
			inLnSpecId = inLnSpecId + '_' + seqNbr;
		}

        //sync with server side decisions
        if (webPartObj.UsrInp) {
            inLnSpecDict[inLnSpecId].SyncWithServerUsrInp(webPartObj.UsrInp);
        }

        // If necessary, invalidate the explicitly expanded attribute in the SpecUsrInp state.
        if (webPartObj.InvalidatedLastExplicitlyExpandedAttrInd === true) {
            inLnSpecDict[inLnSpecId].RemExplicitlyExpandedAttr();
        }

        inLnSpecDict[inLnSpecId].RemAllProdFilters();
        McMaster.SesnMgr.SetStVal(valDefs.InLnSpecUsrInps.KyTxt(), inLnSpecDict);
    }

    //-------------------------------------------------------------------------
    // <summary>
    // Place the focus on either the contextual search box or the quantity box
    // </summary>
    //-------------------------------------------------------------------------
    var setCursorPos = function (bxObj) {
        var bxCntntRow = bxObj.BxCntntRow,
			specSrchInpBxs = Cmn.GetElementsByClsNm("SpecSrch_CntxtSrchBx", "input", bxCntntRow),
			inlnOrdInBxs = Cmn.GetElementsByClsNm("InLnOrdWebPartLayout_InpBx", "input", bxCntntRow);

        //Place the focus on either the contextual search box or the quantity box
		//or the title input box if there are any
        if (specSrchInpBxs.length > 0) {
            var inpBx = specSrchInpBxs[0];
            if (inpBx.setSelectionRange) {
                inpBx.focus();
                inpBx.setSelectionRange(inpBx.value.length, inpBx.value.length);
            } else if (inpBx.createTextRange) {
                // IE
                var range = inpBx.createTextRange();
                range.collapse(true);
                range.moveEnd('character', inpBx.value.length);
                range.moveStart('character', inpBx.value.length);
                range.select();
            }
        } else if (Cmn.GetElementsByClsNm("OtherValInpBx", "input", bxCntntRow)[0]){
			//Determine if there are any other input boxes already loaded (title input boxes)
			//If so, probably want to put the focus on the first empty one
			var inpBx = Cmn.GetElementsByClsNm("OtherValInpBx", "input", bxCntntRow);
			for (var j = 0; j < inpBx.length; j++) {
				if (inpBx[j].value.length == 0) {
					inpBx[j].focus();
					break;
				}
			}		
		} else if (Cmn.GetElementsByClsNm("InLnOrdWebPartLayout_ItmSpecTxtBx","textarea",bxCntntRow)[0]){
			//Determine if there are any spec boxes
			//If so, probably want to put the focus on the first empty one
			Cmn.GetElementsByClsNm("InLnOrdWebPartLayout_ItmSpecTxtBx","textarea",bxCntntRow)[0].focus();
		} else if (Cmn.GetElementsByClsNm("SizedInpBx","textarea",bxCntntRow)[0]){
			//Determine if there are any sized input boxes
			//If so, probably want to put the focus on the first empty one
			Cmn.GetElementsByClsNm("SizedInpBx","textarea",bxCntntRow)[0].focus();
		}else if (inlnOrdInBxs.length > 0) {
            inlnOrdInBxs[0].focus();
        }
    }

	//-------------------------------------------------------------------------	
	// <summary>
	// Unload spec
	// </summary>
	//-------------------------------------------------------------------------
	var unloadSpec = function () {
		var inLnSpecId = mBxObj.mWebPartObj.MetaDat.PartNbrTxt + '_' + mBxObj.mWebPartObj.PrsnttnId;
		var seqNbr = mBxObj.mWebPartObj.PartNbrLnk.getAttribute("data-mcm-partnbr-seqnbr");
		if (seqNbr){
			inLnSpecId = inLnSpecId + '_' + seqNbr;
		}
		var inLnSpecDict = McMaster.SesnMgr.GetStVal(McMaster.SesnMgr.StValDefs.InLnSpecUsrInps.KyTxt());
		if (inLnSpecDict) {
			var elem = inLnSpecDict[inLnSpecId];
			if (elem) {
				elem.RemAll();
			}
			McMaster.SesnMgr.SetStVal(McMaster.SesnMgr.StValDefs.InLnSpecUsrInps.KyTxt(), inLnSpecDict);
		}
	};

	//-------------------------------------------------------------------------
	// <summary>
	// Get the part number link on which the user clicked based on the 
	// class name passed through. 
	// </summary>
	// <param name="partNbrTxt">The part number text.</param>
	// <param name="clsNm">The class name on the part number link we're seeking.</param>
	// <remarks> The class name indicates whether or not the box has been opened.</remarks>
	//-------------------------------------------------------------------------
	var fndPartNbrLnkByClsNm = function (partNbrTxt, clsNm, seqNbr) {
		var slctdPartNbrIdx;
		var partNbrLnks = Cmn.GetElementsByClsNm(clsNm, "a");

        //find part number links in catalog page
        if (partNbrLnks.length == 0) {
            if (chkCtlgPageInd()) {
                var mainIFrame = document.getElementById("MainIFrame");
                var ctlgPageElem = getObjFrmIFrameById(mainIFrame, "Catalog");
                if (ctlgPageElem) {
                    partNbrLnks = getObjFrmIFrameByClsNm(ctlgPageElem, clsNm);
                }
            }
        }

        // Look through part number links and find the one with the 
        // passed in class name and part number text as innerHTML 
        // that is in a table.  We want to ignore 
        // links not in a table, since we can not open our box for them.
        for (var lnkIdx = 0; lnkIdx < partNbrLnks.length; lnkIdx++) {
            if (partNbrLnks[lnkIdx].innerHTML == partNbrTxt &&
				partNbrLnks[lnkIdx].parentNode.tagName == "TD") {
				
				if (seqNbr){
					if (seqNbr == partNbrLnks[lnkIdx].getAttribute("data-mcm-partnbr-seqnbr")){
						slctdPartNbrIdx = lnkIdx;
					}
				}else{
					slctdPartNbrIdx = lnkIdx;
				}
				
				break;
			}
		}
		return partNbrLnks[slctdPartNbrIdx];
	}

    //-------------------------------------------------------------------------
    // <summary>
    // Check catalog page or dynamic page
    // </summary>
    //-------------------------------------------------------------------------
    var chkCtlgPageInd = function () {
        var ctlgPageInd = false;
        var prodPageObj = Cmn.GetObj("ProdPageContent");
        if (prodPageObj) {
            //we are in dynamic page
        } else {
            ctlgPageInd = true;
        }
        return ctlgPageInd;
    }

    //-------------------------------------------------------------------------
    // Summary: Gets an object from the DOM
    // Remarks: Distinguishes between product page and dynamic catalog pages
    // Input: IDTxt - the ID of the element to find
    //-------------------------------------------------------------------------
    var getObjFrmIFrameById = function (iframe, elemID) {
        var rtnObj = null;

        if (iframe) {
            if (iframe.contentDocument) {
                rtnObj = iframe.contentDocument.getElementById(elemID);
            } else if (iframe.contentWindow) {
                // For IE6 and IE7.
                rtnObj = iframe.contentWindow.document.getElementById(elemID);
            }
        }
        return rtnObj;
    }

    //-------------------------------------------------------------------------
    // Summary: Gets an object from the DOM
    // Remarks: Distinguishes between product page and dynamic catalog pages
    // Input: tageNm - tag name
    //-------------------------------------------------------------------------
    var getObjFrmIFrameTagNm = function (iframe, tagNm) {
        var rtnObjs = null;

        if (iframe) {
            if (iframe.contentDocument) {
                rtnObjs = iframe.contentDocument.getElementsByTagName(tagNm);
            } else if (iframe.contentWindow) {
                // For IE6 and IE7.
                rtnObjs = iframe.contentWindow.document.getElementsByTagName(tagNm);
            }
        }
        return rtnObjs;
    }

    //-------------------------------------------------------------------------
    // Summary: Gets an object from the DOM
    // Remarks: Distinguishes between product page and dynamic catalog pages
    // Input: ClsNm - class name
    //-------------------------------------------------------------------------
    var getObjFrmIFrameByClsNm = function (iframe, clsNm) {
        var rtnObjs = null;

        if (iframe) {
            if (iframe.contentDocument) {
                if (iframe.contentDocument.getElementsByClassName) {
                    rtnObjs = iframe.contentDocument.getElementsByClassName(clsNm);
                } else if (iframe.contentDocument.querySelectorAll) {
                    //IE8 does not support find element by class names 
                    rtnObjs = iframe.contentDocument.querySelectorAll('.' + clsNm);
                }

            } else if (iframe.contentWindow) {
                // For IE6 and IE7.
                rtnObjs = iframe.contentWindow.Cmn.GetElementsByClsNm(clsNm);
            }
        }
        return rtnObjs;
    }

    //-------------------------------------------------------------------------
    // <summary>
    // Get presentation id given the part number link
    // </summary>
    // <param name="partNbrTxt">The part number text.</param>
    //-------------------------------------------------------------------------
    var getFullPrsnttnId = function (partNbrLnk) {
        // Search the DOM for the part number link selected if the selection 
        // was done from a full presentation
        var elem = partNbrLnk.parentNode;
        while (elem.className.indexOf("FullPrsnttn") == -1) {
            elem = elem.parentNode;
        }
        return elem.id.split("_")[1];
    };

    //---------------------------------------------------------------------
    // Summary: Gets the presentation id for the part number link (sub or full)
    //---------------------------------------------------------------------
    var getPrsnttnId = function (partNbrLnk) {
        var elem = partNbrLnk.parentNode;
        var prsnttnIdFoundInd = false;
        while (prsnttnIdFoundInd == false) {
            var clsNms = elem.className.split(" ");
            for (var i = 0; i < clsNms.length; i++) {
                //this image belongs to general info or spec info
                //we do not want to trigger image filtering
                if (clsNms[i].search(/PrsnttnStructure/i) >= 0) {
                    prsnttnIdFoundInd = true;
                    break;
                };
            };

            if (prsnttnIdFoundInd == false) {
                elem = elem.parentNode;
            }
        }

        if (elem) {
            //remove "FULL_" or "SUB_" prefix
            prsnttnId = elem.id.split("_")[1]; ;
        }

        return prsnttnId;
    };

    //-------------------------------------------------------------------------
    // <summary>
    // Checks if this is inline spec 
    // </summary>
    //-------------------------------------------------------------------------
    var isInLnSpec = function (partNbrLnk) {
        var rtnVal = false;
        try {
			if (partNbrLnk) {
				var attrCompIdsTxt = partNbrLnk.getAttribute("data-mcm-attr-comp-itm-ids");
				if (attrCompIdsTxt) {
					rtnVal = true;
				}
			}
		} catch (ex) {
			//do nothing
		}	
		return rtnVal;
    }

    //-------------------------------------------------------------------------
    // <summary>
    // Remove inline order box for newly converted presentations 
    // </summary>
    //-------------------------------------------------------------------------
    var remInLnOrdBx = function (bxHdrRow, bxCntnrRow, partNbrTxt, partNbrLnk) {
        // Grab the state values
        var inLnBxsCrtd = McMaster.SesnMgr.GetStVal(McMaster.SesnMgr.StValDefs.InLnOrdBxsCrtd.KyTxt());
        // Remove the part number from the state variable if there.
        var inLnBxs = reCastObjToArr(inLnBxsCrtd);
        for (var i = 0; i < inLnBxs.length; i++) {
            if (inLnBxs[i].PartNbrTxt == partNbrTxt) {
                inLnBxs.splice(i, 1);
                break;
            }
        }

        // Set the global variables associated with the javascript objects.
        var crtedBxs = reCastObjToArr(mCrtedBxObjs);
        // Session inexplicably clones arrays incorrectly when we're
        // in iFrames. Recast the (now) object back to an array.
        for (var i = 0; i < crtedBxs.length; i++) {
            if (crtedBxs[i].PartNbrTxt == partNbrTxt) {
                crtedBxs.splice(i, 1);
            }
        }
        mCrtedBxObjs = crtedBxs;

        //update the session state value
        McMaster.SesnMgr.SetStVal(McMaster.SesnMgr.StValDefs.InLnOrdBxsCrtd.KyTxt(), inLnBxs);

        //remove html elements
        Cmn.RemElem(bxHdrRow);
        Cmn.RemElem(bxCntnrRow);

        //remove css classes
        var classNms = partNbrLnk.className.split(" ");
        for (var i = 0; i < classNms.length; i++) {
            switch (classNms[i]) {
                case "PartNbrLnk":
                case "PartNbrSlctd":
                case "PartNbrVisitedLnk":
                    //keep them
                    break;
                default:
                    Cmn.RemCls(partNbrLnk, classNms[i]);
                    break;
            }
        }

        if (partNbrLnk.parentNode != undefined && partNbrLnk.parentNode.tagName == "TD") {
            Cmn.RemCls(partNbrLnk.parentNode, "AddToOrdBxHidden");
        }
    }
    //#End Region
}
}

if(this.InLnOrdWebPartJSObj){}else{InLnOrdWebPartJSObj=new function(){this.BxObj=function(c,b){this.mPartNbrLnk=c;this.mWebPartObj=b;this.PartNbrMetaDat=b.MetaDat;this.CntnrIDTxt=b.CntnrIDTxt;this.PartNbrSlctdMsgCntxtNm=b.PartNbrSlctdMsgCntxtNm;this.VisibilityInd=true;this.ClosedByForceInd=false;this.VisibleForSpecInd=false;this.PrimaryPartNbrTxts="";try{if(c){this.Id=c.getAttribute("data-mcm-itm-id");this.PartNbrLnk=c;this.PartNbrTxt=c.innerHTML;this.PartNbrCell=Cmn.GetAncestorByTagNm(c,"td");this.ParentRow=Cmn.GetAncestorByTagNm(c,"tr");this.TblCells=Cmn.GetElementsBy(function(e){return e;},"td",this.ParentRow);this.ParentTbl=Cmn.GetAncestorByTagNm(c,"table");this.InlnOrdSpecInd=a(c);}}catch(d){}this.BxHdrRow;this.LeftHdrCellMarkupTxt;this.LeftHdrCellColSpan;this.RightHdrCellMarkupTxt;this.RightHdrCellColSpan;this.BxCntntRow;this.BxCntntCellMarkupTxt;this.BxCntntCellColSpan;this.BxCntntCell;this.MainCntnr;this.MainCntnrMarkup;this.OrdHistMsgTxt="";this.MSDSLnkTxt="";this.ProdSpecLnkTxt="";this.VstdLnkInd=false;};this.SetMarkupProperties=function(c){c.BxHdrRow=Cmn.GetNxtSiblingBy(c.ParentRow,function(j){return Cmn.HasCls(j,"AddToOrdFlow_ItmBxFor"+c.Id);});c.BxCntntRow=Cmn.GetNxtSibling(c.BxHdrRow);c.BxCntntCell=Cmn.GetFrstChld(c.BxCntntRow);c.MainCntnr=Cmn.GetElementsByClsNm("InLnOrdWebPartLayout_Main","div",c.BxCntntCell)[0];var h=Cmn.GetElementsBy(function(j){return j;},"td",c.BxHdrRow);if(h.length==3){c.LeftHdrCellMarkupTxt=h[0].innerHTML;c.LeftHdrCellColSpan=h[0].colSpan;c.RightHdrCellMarkupTxt=h[2].innerHTML;c.RightHdrCellColSpan=h[2].colSpan;}if(c.BxCntntCell){c.BxCntntCellMarkupTxt=c.BxCntntCell.innerHTML;c.BxCntntCellColSpan=c.BxCntntCell.colSpan;}var e=Cmn.GetAncestorByClsNm(c.ParentRow,"CtlgPage"),d=Cmn.GetElementsByAttrVal("data-mcm-itm-id",c.Id,"a",e);if(d.length>1){var f=Cmn.GetElementsBy(function(j){return j;},"td",c.ParentRow),i=[],b;for(var g=0;g<f.length;g++){b=Cmn.GetElementsByClsNm("PartNbrLnk","a",f[g])[0];if(b&&b.getAttribute("data-mcm-itm-id")!=c.Id){i.push(b.getAttribute("data-mcm-itm-id"));}}c.PrimaryPartNbrTxts=i.join("|");}else{}};this.SetVisibleForSpecInd=function(b,c){b.VisibleForSpecInd=c;};this.BxObj.prototype.Clone=function(){var b=new InLnOrdWebPartJSObj.BxObj(this.mPartNbrLnk,this.mWebPartObj);b.mPartNbrLnk=this.mPartNbrLnk;b.mWebPartObj=this.mWebPartObj;b.PartNbrMetaDat=this.PartNbrMetaDat;b.CntnrIDTxt=this.CntnrIDTxt;b.PartNbrSlctdMsgCntxtNm=this.PartNbrSlctdMsgCntxtNm;b.VisibilityInd=this.VisibilityInd;b.ClosedByForceInd=this.ClosedByForceInd;b.VisibleForSpecInd=this.VisibleForSpecInd;b.PrimaryPartNbrTxts=this.PrimaryPartNbrTxts;if(b.mPartNbrLnk){b.Id=this.Id;b.PartNbrTxt=this.PartNbrTxt;b.PartNbrCell=this.PartNbrCell;b.ParentRow=this.ParentRow;b.TblCells=this.TblCells;b.ParentTbl=this.ParentTbl;b.InlnOrdSpecInd=this.InlnOrdSpecInd;}b.BxHdrRow=this.BxHdrRow;b.LeftHdrCellMarkupTxt=this.LeftHdrCellMarkupTxt;b.LeftHdrCellColSpan=this.LeftHdrCellColSpan;b.RightHdrCellMarkupTxt=this.RightHdrCellMarkupTxt;b.RightHdrCellColSpan=this.RightHdrCellColSpan;b.BxCntntRow=this.BxCntntRow;b.BxCntntCellMarkupTxt=this.BxCntntCellMarkupTxt;b.BxCntntCellColSpan=this.BxCntntCellColSpan;b.BxCntntCell=this.BxCntntCell;b.MainCntnr=this.MainCntnr;b.MainCntnrMarkup=this.MainCntnrMarkup;b.OrdHistMsgTxt=this.OrdHistMsgTxt;b.MSDSLnkTxt=this.MSDSLnkTxt;b.ProdSpecLnkTxt=this.ProdSpecLnkTxt;b.VstdLnkInd=this.VstdLnkInd;return b;};var a=function(b){var d=false;if(b){var c=b.getAttribute("data-mcm-attr-comp-itm-ids");if(c){d=true;}}return d;};};}

this.IntermediatePrsnttnWebPart||(IntermediatePrsnttnWebPart=new function(){this.WebPart_Load=function(a){var b=new McMaster.MsgMgr.Hdr(McMaster.MsgMgr.CntxtNms.INTERMEDIATE_PRSNTTN);a=new McMaster.MsgMgrMsgs.WebPartLoaded(b,a.CntnrIDTxt);McMaster.MsgMgr.PubMsg(a)};this.WebPart_Unload=function(a){var b=new McMaster.MsgMgr.Hdr(McMaster.MsgMgr.CntxtNms.INTERMEDIATE_PRSNTTN);a=new McMaster.MsgMgrMsgs.WebPartUnloaded(b,a.CntnrIDTxt);McMaster.MsgMgr.PubMsg(a)};this.Prsnttn_Click=function(a,b,c,d,f,g,h,
k){a=unescape(a);b=unescape(b);var l=new McMaster.MsgMgr.Hdr(McMaster.MsgMgr.CntxtNms.INTERMEDIATE_PRSNTTN),m=a,n=b,p=f,e=new SrchTrkr.SrchDat({usr:SrchTrkr.UsrActTyps.SLCT,resp:"unknown"});e.usr.srcNm="IntermediatePrsnttnWebPart";e.usr.elemTyp="the view all link"===d?SrchTrkr.ElemTyps.VIEW_ALL_PRODS_LNK:"an image"===d||"a caption"===d?SrchTrkr.ElemTyps.INTERMEDIATE_PRSNTTN:"a deep link"===d?SrchTrkr.ElemTyps.DEEP_SPEC:"Specification"===d?SrchTrkr.ElemTyps.SPEC:d;e.usr.slctdNm=m;e.usr.slctdTxt=p||
n;e.usr.elemTyp!=SrchTrkr.ElemTyps.VIEW_ALL_PRODS_LNK&&(e.usr.slctdElemXYPosn=h+","+k);a=new McMaster.MsgMgrMsgs.UsrInpTxtSubmitted(l,a,e);McMaster.MsgMgr.PubMsg(a);a=McMaster.SesnMgr.GetStVal(McMaster.SesnMgr.StValDefs.SrchTxt.KyTxt());c&&!0===c?Cmn.TrkAct("LPTrkID4SlctdPrsnttn="+b+"&PageNm="+g+"&BelowFold=was","LandingPage"):Cmn.TrkAct("LPTrkID4SlctdPrsnttn="+b+"&PageNm="+g+"&BelowFold=was not","LandingPage");null==f&&null!=b&&(f=b);d&&f&&(c="LPTrkID5SlctdPrsnttnElems="+b+"&PageNm="+g+("&PrsnttnAreaTypClicked="+
d),c+="&PrsnttnAreaTxtClicked="+f,c+="&PrsnttnNm="+b,c+="&SrchTerm="+a,Cmn.TrkAct(c,"LandingPage"),McMaster.SesnMgr.SetStVal(McMaster.SesnMgr.StValDefs.PreSlctdSpecCntxtNm.KyTxt(),McMaster.MsgMgr.CntxtNms.LANDING_PAGE))}});


this.IntermediatePageWebPart||(IntermediatePageWebPart=new function(){var u=null,l=null,z=!1,I=0,q,p=null,v=0,A=!1,s,J,w=0,K="",B="no",C=!1,D;this.WebPart_PreUnload=function(a){a=Cmn.forEach;var b=Cmn.HasCls,c=Cmn.RemEvntListener,d;McMaster.MsgMgr.RemSubscriber(McMaster.MsgMgrMsgs.FetchAheadDatRcvd,L);q&&0<q.length&&a(q,function(a){c(a,"mouseover");c(a,"mouseout")});a(s.concat(D),function(a){Cmn.Utilities.InArray(mListenedToCntnrClsNms,a.className)&&c(a,"click");if(b(a,"IntermediatePrsnttnLayout_Prsnttn_Img_Wth_DeepLnks")||
b(a,"IntermediatePrsnttnLayout_Prsnttn_Img_Wth_CpyAndDeepLnks")||b(a,"IntermediatePrsnttnLayout_DeepLnks_Wth_Cpy"))c(a,"mouseover"),c(a,"mouseout")});Cmn.IsIE6()&&(c("IntermediatePageWebPart_Page","mouseover"),c("IntermediatePageWebPart_Page","mouseout"));c(Cmn.GetObj("MainContent"),"scroll",E);a="did not";"yes"===B&&(a="did");A=!1;p&&(d=(new Date).getTime(),d=(d-I)/1E3,a="LPTrkID3LandingPageViewed="+p+"&ViewedSecs="+d.toFixed(0)+"&UserScrolled="+a,Cmn.TrkAct(a,"LandingPage"))};this.WebPart_Unload=
function(a){var b,c=!1;b=McMaster.MsgMgr;var d=McMaster.MsgMgrMsgs,e=McMaster.SesnMgr,g=e.RemStVal,f=e.StValDefs,h=f.IntermediatePageLoadFrmSesnInd;IntermediatePageWebPartLoader.AbortStaleReq();b.RemSubscriber(d.MainContentCntnrResized,function(){F()});(c=e.GetStVal(h.KyTxt()))||g(h.KyTxt());g(f.IntermediatePageSrchTxt.KyTxt());c=new b.Hdr(b.CntxtNms.INTERMEDIATE_PAGE);a=new d.WebPartUnloaded(c,a.CntnrIDTxt);b.PubMsg(a);if(!1===z){a=!0;b="LandingPgOrig="+p;if(!0===a&&(e=e.GetStVal(f.SrchCurrInpTxt.KyTxt())))if((e=
e.toLowerCase())&&e!==p.toLowerCase())b+="&NewSearch="+e,Cmn.TrkAct(b,"LandingPage"),a=!1;if(!0===a&&(e=McMaster.SesnMgr.GetStVal(McMaster.SesnMgr.StValDefs.SlctdSrchRsltTxt.KyTxt())))e=e.toLowerCase(),e!==p.toLowerCase()&&(b+="&NewSearch="+e,Cmn.TrkAct(b,"LandingPage")),a=!1;!0===a&&1===McMaster.SesnMgr.GetStVal(McMaster.SesnMgr.StValDefs.HomePageSlctdEntryScrollTop.KyTxt())&&(Cmn.TrkAct(b+"&NewSearch=the home page","LandingPage"),a=!1)}};this.WebPart_AssocFilesLoad=function(a){var b,c=McMaster.MsgMgr;
b=document.createElement("div");b.innerHTML=a.MarkupTxt;for(var d=!1,e=Cmn.GetElementsByClsNm("LandingPagePrsnttnGrp","div",b),g=e.length,f=0;f<g;f++)if("Landing_Page_PrsnttnGrp_Hdr_Cntnr_Nut_Type"===e[f].id||"Landing_Page_PrsnttnGrp_Hdr_Cntnr_Environment_and_Material"===e[f].id){d=!0;break}specialLandingPgInd=d;if(!1===specialLandingPgInd&&(d=0,e={},e=McMaster.SesnMgr.GetStVal(McMaster.SesnMgr.StValDefs.FndAgainSearchTermsToHighlight.KyTxt()),!1==Cmn.IsEmpty(e)&&(g=Cmn.GetElementsByClsNm("IntermediatePrsnttn",
"div",b),d=g.length,g&&0<d)))for(f=0;f<d;f++){var h=Cmn.GetElementsByClsNm("IntermediatePrsnttn_SrchTrm","div",g[f])[0].innerHTML;e[h]&&(h=Cmn.GetElementsByClsNm("ImgCaption","span",g[f]),Cmn.GetChildrenByClsNm(g[f],"IntermediatePrsnttn_Anchor"),Cmn.SetStyle(h,"color","#800080"),Cmn.AddCls(h,"IntermediatePrsnttn_Highlight_Activated_Cls"))}Cmn.GetObj(a.CntnrIDTxt).innerHTML="";Cmn.GetObj(a.CntnrIDTxt).appendChild(b);b=new c.Hdr(c.CntxtNms.INTERMEDIATE_PAGE);a=new McMaster.MsgMgrMsgs.WebPartLoaded(b,
a.CntnrIDTxt);c.PubMsg(a);mListenedToCntnrClsNms="IntermediatePrsnttnLayout_Prsnttn_Attr_Grp_List;IntermediatePrsnttnLayout_Prsnttn_Cpy_List;IntermediatePrsnttnLayout_DeepLnks_List;IntermediatePrsnttnLayout_Prsnttn_Img_List;IntermediatePrsnttnLayout_Prsnttn_Img_Wth_CpyAndDeepLnks;IntermediatePrsnttnLayout_Prsnttn_Img_Wth_Cpy;IntermediatePrsnttnLayout_Prsnttn_Img_Wth_DeepLnks;IntermediatePrsnttnLayout_DeepLnks_Wth_Cpy;IntermediatePrsnttnLayout_Img_Only;PageHdr IntermediatePageLayout_PageHdr;WebToolsetToolWebPart_Cntnr WebToolsetToolWebPart_Aligned_LEFT WebToolsetToolWebPart_TxtTool_Cntnr".split(";")};
this.WebPart_LoadCmpl=function(a){var b=[],c,d=0,e;c=McMaster.SesnMgr.GetStVal(McMaster.SesnMgr.StValDefs.IntermediatePageLoadFrmSesnInd.KyTxt());Cmn.OnContentReady("IntermediatePageWebPart_Page",function(){Q()});p=a.PageIDTxt;z=!1;B="no";Cmn.AddEvntListener(Cmn.GetObj("MainContent"),"scroll",E);if(p){e=p.toLowerCase();McMaster.SesnMgr.GetStVal(McMaster.SesnMgr.StValDefs.IntermediatePagePrevSrchTxt.KyTxt())&&(b=McMaster.SesnMgr.GetStVal(McMaster.SesnMgr.StValDefs.IntermediatePagePrevSrchTxt.KyTxt()));
b[b.length]=e;if(1<b.length){for(var g=0;g<b.length;g++)b[g]===e&&d++;1<d&&Cmn.TrkAct("LPTrkID0RtnView="+e+"&TimesViewed="+d,"LandingPage")}McMaster.SesnMgr.SetStVal(McMaster.SesnMgr.StValDefs.IntermediatePagePrevSrchTxt.KyTxt(),b)}c||McMaster.SesnMgr.SetStVal(McMaster.SesnMgr.StValDefs.IntermediatePageSrchTxt.KyTxt(),a.PageIDTxt);McMaster.MsgMgr.AddSubscriber(McMaster.MsgMgrMsgs.FetchAheadDatRcvd,L)};var L=function(a){if(a.MsgPayload().SrchTxt){var b=new McMaster.MsgMgr.Hdr(McMaster.MsgMgr.CntxtNms.INTERMEDIATE_PAGE);
a=new McMaster.MsgMgrMsgs.SrchFetchAheadDatRcvd(b,a.MsgPayload().SrchTxt,a.MsgPayload().SpecSrchInp,a.MsgPayload().FetchAheadGrpId,a.MsgPayload().CurrWebPartIdTxt);McMaster.MsgMgr.PubMsg(a)}};this.FeedbackLnk_Click=function(){var a;a=new McMaster.MsgMgr.Hdr(McMaster.MsgMgr.CntxtNms.INTERMEDIATE_PAGE);a=new McMaster.MsgMgrMsgs.CntctUsSlctd(a);McMaster.MsgMgr.PubMsg(a)};var Q=function(){var a=Cmn.AddEvntListener,b=Cmn.forEach,c;q=Cmn.GetElementsByClsNm("IntermediatePrsnttn_DeepLnksWthImg","ul","IntermediatePageWebPart_Page").concat(Cmn.GetElementsByClsNm("IntermediatePrsnttn_DeepLnksWthImgAndCpy",
"ul","IntermediatePageWebPart_Page")).concat(Cmn.GetElementsByClsNm("IntermediatePrsnttn_DeepLnksWthCpy","ul","IntermediatePageWebPart_Page"));s=Cmn.GetElementsBy(function(a){return"IntermediatePageWebPart_Prsnttns"===a.id.substring(0,a.id.lastIndexOf("_"))},"div","IntermediatePageWebPart_Page");J=Cmn.GetElementsByClsNm("LandingPagePrsnttnGrp","div","IntermediatePageWebPart_Page");D=Cmn.GetElementsBy(function(a){return"WebToolsetToolWebPart_Cntnr WebToolsetToolWebPart_Aligned_LEFT WebToolsetToolWebPart_TxtTool_Cntnr"===
a.className},"div","IntermediatePageWebPart_Page");c=s[0].className;b(s.concat(D),function(b){Cmn.Utilities.InArray(mListenedToCntnrClsNms,b.className)&&a(b,"click",R);if(Cmn.HasCls(b,"IntermediatePrsnttnLayout_Prsnttn_Img_Wth_DeepLnks")||Cmn.HasCls(b,"IntermediatePrsnttnLayout_Prsnttn_Img_Wth_CpyAndDeepLnks")||Cmn.HasCls(b,"IntermediatePrsnttnLayout_DeepLnks_Wth_Cpy"))a(b,"mouseover",S),a(b,"mouseout",T);!0!==A&&"IntermediatePageWebPart_Prsnttns"===b.id.substring(0,b.id.lastIndexOf("_"))&&b.className!==
c&&(A=!0)});q&&0<q.length&&b(q,function(b){a(b,"mouseover",U);a(b,"mouseout",V)});Cmn.IsIE6()&&(a("IntermediatePageWebPart_Page","mouseover",W),a("IntermediatePageWebPart_Page","mouseout",X));F();b=McMasterCom.Nav.GetTopFrame();new b.PerfTracker.Evnt(b.PerfTracker.EvntNms.IntLayoutCmpl,b.PerfTracker.PgCntxtNms.DynCntnt);McMaster.MsgMgr.AddSubscriber(McMaster.MsgMgrMsgs.MainContentCntnrResized,function(){F()});b=new McMaster.MsgMgr.Hdr(McMaster.MsgMgr.CntxtNms.INTERMEDIATE_PAGE);b=new McMaster.MsgMgrMsgs.IntermediatePageLoaded(b);
McMaster.MsgMgr.PubMsg(b);I=(new Date).getTime();setTimeout(Y,200)},F=function(){var a=Cmn.forEach,b;v=w=0;C=!1;a(s,function(a){M(a);1===s.length&&Cmn.SetStyle(a,"visibility","visible")});1!==s.length&&(C=!0,Z(s));b=Cmn.GetElementsByClsNm("WebToolsetWebPart_Cntnr","div","IntermediatePageWebPart_FeedbackLnk")[0].offsetWidth;(b=Shell.GetMainContentWidth()-19)&&a(J,function(a){Cmn.SetStyle(a,"width",b+"px")})},Z=function(a){w=0;Cmn.forEach(a,function(a){M(a);Cmn.SetStyle(a,"visibility","visible")})},
M=function(a){var b;b=Cmn.GetWidth(Cmn.GetObj("MainContent"))-25-18;switch(a.className){case "IntermediatePrsnttnLayout_Prsnttn_Img_List":n(a,142,b);break;case "IntermediatePrsnttnLayout_Prsnttn_Img_Wth_Cpy":n(a,284,b);break;case "IntermediatePrsnttnLayout_Prsnttn_Img_Wth_CpyAndDeepLnks":n(a,284,b);break;case "IntermediatePrsnttnLayout_Prsnttn_Img_Wth_DeepLnks":n(a,254,b);break;case "IntermediatePrsnttnLayout_DeepLnks_List":n(a,284,b);break;case "IntermediatePrsnttnLayout_DeepLnks_Wth_Cpy":n(a,284,
b);break;case "IntermediatePrsnttnLayout_Prsnttn_Attr_Grp_List":n(a,187,b);break;case "IntermediatePrsnttnLayout_Prsnttn_Cpy_List":n(a,284,b);break;case "IntermediatePrsnttnLayout_Img_Only":n(a,142,b)}},n=function(a,b,c){var d,e,g=Cmn.forEach,f=Cmn.GetElementsByClsNm,h=Cmn.SetStyle,l,m,p,k,n,r,u=a.className,q,t;h(a,"width","");k=f("IntermediatePrsnttn","div",a);g(k,function(a){h(a,"height","");w++;if("IntermediatePrsnttnLayout_Prsnttn_Img_Wth_Cpy"===u&&(l=f("PrsnttnCpyParagraph","div",a)[0],(d=f("IntermediatePrsnttn_Anchor",
"a",a)[0])&&l))m=282-Cmn.GetWidth(d)-2-10-10,h(l,"width",m+"px")});e=$(c,b,k.length);if(!0===C||1===s.length){r=aa(k);for(t=q=0;t<k.length;t+=e)q+=e,p=k.slice(t,q),n=Math.max(ba(p),r),g(p,function(a){h(a,"height",n+"px");switch(u){case "IntermediatePrsnttnLayout_Prsnttn_Img_Wth_CpyAndDeepLnks":N(a,n);G(a);break;case "IntermediatePrsnttnLayout_Prsnttn_Img_Wth_DeepLnks":G(a);break;case "IntermediatePrsnttnLayout_DeepLnks_Wth_Cpy":G(a);break;case "IntermediatePrsnttnLayout_Prsnttn_Img_Wth_Cpy":N(a,n);
break;case "IntermediatePrsnttnLayout_Prsnttn_Attr_Grp_List":Cmn.IsIE6()&&h(a,"width",b+"px");break;case "IntermediatePrsnttnLayout_Img_Only":Cmn.IsIE6()&&h(a,"width",b+"px")}});k=null;e*=b;e=Cmn.IsIE6()?e+20:e+10<c?e+10:e+5<c?e+5:e+1;h(a,"width",e+"px")}},N=function(a,b){var c,d;if(d=Cmn.GetElementsByClsNm("PrsnttnImg","img",a)[0])c=b-2-20-5-d.height,Cmn.SetStyle(d,"padding-bottom",Math.max(0,c)+"px")},G=function(a){var b,c=0;a=Cmn.GetElementsByClsNm("PrsnttnFilterLnk","a",a);Cmn.forEach(a,function(a){b=
Cmn.GetWidth(a);b>c&&(c=b)});c+=1;Cmn.forEach(a,function(a){Cmn.SetStyle(a,"width",c+"px")})},Y=function(){var a,b,c,d,e=0,g;d=Cmn.GetObj("MainContent");b=Cmn.ChkForScrollBar(d,"vertical");e=0;Cmn.forEach(s,function(b){c=Cmn.GetElementsByClsNm("IntermediatePrsnttn","div",b);Cmn.forEach(c,function(b){a=b.offsetTop+b.offsetHeight-10;a>d.offsetHeight&&e++})});g="not displayed";!0===b&&(g="displayed");p&&(b="LPTrkID2NbrElemsBelowFold="+e+"&PageNm="+p+"&VertScrollBar="+g+"&NbrGrps="+s.length.toString()+
"&NbrElems="+w,Cmn.TrkAct(b,"LandingPage"))},E=function(){Cmn.RemEvntListener(Cmn.GetObj("MainContent"),"scroll",E);B="yes"},$=function(a,b,c){a=Math.floor(Math.max(1,a/b));a=Math.ceil(c/a);1===a&&1034<c*b&&(a=2);c=Math.ceil(c/a);a=c*b;a>v&&(v=a);b=v/b;b>c&&(c=b);return c},aa=function(a){var b;b=Cmn.map(a,function(a){return Cmn.GetHeight(a)});a=(Array.max(b)-Array.min(b))/2+Array.min(b);b=null;return a},ba=function(a){var b;b=Cmn.map(a,function(a){return Cmn.GetHeight(a)});a=Array.max(b);b=null;return a},
S=function(a){a&&(Cmn.StopEvnt(a),a=Cmn.GetEvntTarget(a),"IntermediatePageWebPart_Prsnttns"!==a.id.substring(0,a.id.lastIndexOf("_"))&&(a=Cmn.HasCls(a,"IntermediatePrsnttn")?a:Cmn.GetAncestorByClsNm(a,"IntermediatePrsnttn"),m(a,a,!0,"#FFFFB5"),k(a,!0,!1,"transparent")))},T=function(a){a&&(Cmn.StopEvnt(a),a=Cmn.GetEvntTarget(a),"IntermediatePageWebPart_Prsnttns"!==a.id.substring(0,a.id.lastIndexOf("_"))&&(a=Cmn.HasCls(a,"IntermediatePrsnttn")?a:Cmn.GetAncestorByClsNm(a,"IntermediatePrsnttn"),m(a,a,
!1,"#FFFFFF"),k(a,!1,!0,"transparent")))},U=function(a){a&&(Cmn.StopEvnt(a),a=Cmn.GetAncestorByClsNm(Cmn.GetEvntTarget(a),"IntermediatePrsnttn"),m(a,a,!1,"#FFFFFF"),k(a,!0,!1,"transparent"))},V=function(a){a&&(a=Cmn.GetEvntTarget(a),m(a,Cmn.GetAncestorByClsNm(a,"IntermediatePrsnttn"),!0,"#FFFFB5"))},W=function(a){if(a){var b=Cmn.GetAncestorByClsNm,c=Cmn.HasCls,d,e;Cmn.StopEvnt(a);a=Cmn.GetEvntTarget(a);if(c(a,"WebToolsetToolWebPart_Cntnr WebToolsetToolWebPart_Aligned_LEFT WebToolsetToolWebPart_TxtTool_Cntnr"))r(a,
!0,"#FFFFB5");else if((d=c(a,"IntermediatePrsnttn")?a:b(a,"IntermediatePrsnttn"))&&(e=Cmn.GetAncestorBy(d,function(a){return"IntermediatePageWebPart_Prsnttns"===a.id.substring(0,a.id.lastIndexOf("_"))})),e)switch(e=e.className,e){case "IntermediatePrsnttnLayout_Prsnttn_Img_List":if(c(a,"PrsnttnImg")||c(a,"ImgCaption")||c(a,"IntermediatePrsnttn_Anchor")||c(a,"IntermediatePrsnttn"))m(a,d,!0),O(a,d,!0);break;case "IntermediatePrsnttnLayout_Prsnttn_Img_Wth_Cpy":if(c(a,"PrsnttnImg")||c(a,"PrsnttnCpyParagraph")||
c(a,"ImgCaption")||c(a,"IntermediatePrsnttn_Anchor")||c(a,"IntermediatePrsnttn"))k(d,!0,!1,"#FFFFB5"),m(a,d,!0);break;case "IntermediatePrsnttnLayout_Prsnttn_Img_Wth_CpyAndDeepLnks":(c(a,"PrsnttnImg")||c(a,"PrsnttnCpyParagraph")||c(a,"ImgCaption")||c(a,"IntermediatePrsnttn_Anchor")||c(a,"IntermediatePrsnttn"))&&k(d,!0,!1,"transparent");c(a,"ImgCaption")&&m(a,d,!0);break;case "IntermediatePrsnttnLayout_Prsnttn_Img_Wth_DeepLnks":(c(a,"PrsnttnImg")||c(a,"PrsnttnCpyParagraph")||c(a,"ImgCaption")||c(a,
"IntermediatePrsnttn_Anchor")||c(a,"IntermediatePrsnttn"))&&k(d,!0,null,"transparent");c(a,"ImgCaption")&&m(a,d,!0);break;case "IntermediatePrsnttnLayout_DeepLnks_List":c(a,"ImgCaption")&&r(a,!0,"#FFFFB5");break;case "IntermediatePrsnttnLayout_DeepLnks_Wth_Cpy":(c(a,"PrsnttnCpyParagraph")||c(a,"ImgCaption")||c(a,"IntermediatePrsnttn_Anchor")||c(a,"IntermediatePrsnttn"))&&k(d,!0,!1,"transparent");c(a,"ImgCaption")&&m(a,d,!0);break;case "IntermediatePrsnttnLayout_Prsnttn_Attr_Grp_List":"LI"===a.nodeName&&
b(a,"ChooseSpecsLayout_AttrGrp")&&r(a,!0,"#FFFFB5");break;case "IntermediatePrsnttnLayout_Img_Only":"LI"===a.nodeName&&b(a,"ChooseSpecsLayout_AttrGrp")&&r(a,!0,"#FFFFB5")}}},X=function(a){var b=Cmn.GetAncestorByClsNm,c=Cmn.HasCls,d,e;if(a)if(Cmn.StopEvnt(a),a=Cmn.GetEvntTarget(a),c(a,"WebToolsetToolWebPart_Cntnr WebToolsetToolWebPart_Aligned_LEFT WebToolsetToolWebPart_TxtTool_Cntnr"))r(a,!1,"transparent");else if((d=c(a,"IntermediatePrsnttn")?a:b(a,"IntermediatePrsnttn"))&&(e=Cmn.GetAncestorBy(d,
function(a){return"IntermediatePageWebPart_Prsnttns"===a.id.substring(0,a.id.lastIndexOf("_"))})),e)switch(e=e.className,e){case "IntermediatePrsnttnLayout_Prsnttn_Img_List":if(c(a,"PrsnttnImg")||c(a,"ImgCaption")||c(a,"IntermediatePrsnttn_Anchor")||c(a,"IntermediatePrsnttn"))m(a,d,!1),O(a,d,!1);break;case "IntermediatePrsnttnLayout_Prsnttn_Img_Wth_Cpy":if(c(a,"PrsnttnImg")||c(a,"PrsnttnCpyParagraph")||c(a,"ImgCaption")||c(a,"IntermediatePrsnttn_Anchor")||c(a,"IntermediatePrsnttn"))k(d,!1),m(a,d,
!1);break;case "IntermediatePrsnttnLayout_Prsnttn_Img_Wth_CpyAndDeepLnks":(c(a,"PrsnttnImg")||c(a,"PrsnttnCpyParagraph")||c(a,"ImgCaption")||c(a,"IntermediatePrsnttn_Anchor")||c(a,"IntermediatePrsnttn"))&&k(d,!1,!0);c(a,"ImgCaption")&&m(a,d,!1);break;case "IntermediatePrsnttnLayout_Prsnttn_Img_Wth_DeepLnks":(c(a,"PrsnttnImg")||c(a,"ImgCaption")||c(a,"IntermediatePrsnttn_Anchor")||c(a,"IntermediatePrsnttn"))&&k(d,!1,!0);c(a,"ImgCaption")&&m(a,d,!1);break;case "IntermediatePrsnttnLayout_DeepLnks_List":c(a,
"ImgCaption")&&r(a,!1,"transparent");break;case "IntermediatePrsnttnLayout_DeepLnks_Wth_Cpy":if(c(a,"PrsnttnFilterLnk")||c(a,"PrsnttnCpyParagraph")||c(a,"ImgCaption")||c(a,"IntermediatePrsnttn_Anchor")||c(a,"IntermediatePrsnttn"))k(d,!1,!0),m(a,d,!1);break;case "IntermediatePrsnttnLayout_Prsnttn_Attr_Grp_List":"LI"===a.nodeName&&b(a,"ChooseSpecsLayout_AttrGrp")&&r(a,!1,"transparent");break;case "IntermediatePrsnttnLayout_Img_Only":"LI"===a.nodeName&&b(a,"ChooseSpecsLayout_AttrGrp")&&r(a,!1,"transparent")}},
m=function(a,b,c,d){(a=Cmn.HasCls(a,"ImgCaption")?a:Cmn.GetElementsByClsNm("ImgCaption","span",b)[0])&&r(a,c,d)},r=function(a,b,c){var d={"text-decoration":"underline",color:"#000000",cursor:"pointer"},e={"text-decoration":"none",color:"#006699",cursor:"auto"};Cmn.HasCls(a,"IntermediatePrsnttn_Highlight_Activated_Cls")&&(e={"text-decoration":"none",color:"#764F9A",cursor:"auto"});b=!0===b?d:e;c&&(b["background-color"]=c);Cmn.SetStyle(a,b)},k=function(a,b,c,d){var e={border:"1px solid #DDDDDD",cursor:"pointer"},
g={border:"1px solid","background-color":"transparent",cursor:"auto"};!0===b?(b=e,b["border-color"]="#DDDDDD"):(b=g,b["border-color"]=c?"#DDDDDD #FFFFFF #FFFFFF":"#FFFFFF");d&&(b["background-color"]=d);Cmn.SetStyle(a,b)},O=function(a,b,c){var d={"background-color":"#FFFFB5"},e={"background-color":"transparent"};(a=Cmn.HasCls(a,"IntermediatePrsnttn_Anchor")?a:Cmn.GetElementsByClsNm("IntermediatePrsnttn_Anchor","a",b)[0])&&Cmn.SetStyle(a,!0===c?d:e)},R=function(a){if(a){var b=SpecSrchInp.Get(),c=Cmn.GetElementsByClsNm,
d=Cmn.HasCls,e,g,f,h,k;Cmn.StopEvnt(a);u=l=null;z=!0;f=Cmn.GetEvntTarget(a);g=Cmn.GetEvntTarget(a);a:for(;f&&"IntermediatePage"!==f.className;){switch(!0){case d(f,"IntermediatePrsnttn_SrchTrm")||d(f,"IntermediatePrsnttn"):if(Cmn.GetAncestorByClsNm(f,"IntermediatePrsnttnLayout_DeepLnks_List"))break a;else e=d(f,"IntermediatePrsnttn")?c("IntermediatePrsnttn_Anchor","a",f):c("IntermediatePrsnttn_Anchor","a",Cmn.GetAncestorByClsNm(elem,"IntermediatePrsnttn"));break;case "li"===f.nodeName.toUpperCase():e=
c("PrsnttnFilterLnk","a",f)}e&&0<e.length&&(f=e[0],e=null);a=Cmn.GetTxtContent(f);if(d(f,"WebToolsetToolWebPart_Cntnr WebToolsetToolWebPart_Aligned_LEFT WebToolsetToolWebPart_TxtTool_Cntnr"))if(k=Cmn.GetElementsByClsNm("IntermediatePrsnttn_OptOutLnkTrm","div",Cmn.GetObj("IntermediatePageWebPart_Page"))[0],h=Cmn.GetElementsByClsNm("IntermediatePrsnttn_SrchTrm","div",Cmn.GetObj("IntermediatePageWebPart_Page"))[0],k){c=k;d=Cmn.GetTxtContent;e=Cmn.HasCls;g="";"DIV"===c.nodeName&&e(c,"IntermediatePrsnttn_OptOutLnkTrm")&&
(g=d(c));c=g;l="the view all link";a&&(u=a);x(b,f,c,Cmn.GetTxtContent(f));break a}else if(h){c=H(h);l="the view all link";a&&(u=a);x(b,f,c,Cmn.GetTxtContent(f));break a}if(d(f,"IntermediatePrsnttn_Anchor")){b=!0;null==l&&(l="the general presentation area");t(f);y(f,b);break a}else if(d(f,"PrsnttnFilterLnk")){b=!0;null==l&&(l="a deep link");a&&(u=a);t(f);y(f,b);break a}else if(d(f,"SpecLayout_VldVal")){b=!1;null==l&&(l="Specification");a&&(u=a);t(f);y(f,b);break a}else if(d(f,"SpecLayout_VldVal")){b=
!1;null==l&&(l="Specification");a&&(u=a);t(f);y(f,b);break a}else if(d(f,"LandingPagePrsnttnGrp_Anchor")){x(b,f,H(f),P(f));t(f);break a}else f=f.parentNode;null==l&&g&&(d(g,"ImgCaption")?l="a caption":d(g,"PrsnttnImg")?l="an image":d(g,"PrsnttnCpyParagraph")&&(l="the paragraph copy"))}}},y=function(a,b){var c,d;if(c=H(a)){if(!0===b){d=null;var e,g;if(e=a.getAttribute("href"))if(g=e.split("SPXX"),1<g.length){e=YAHOO.lang.JSON.parse(g[1]);d=SpecSrchInp.Get();for(var f in e)if(e.hasOwnProperty(f)){d.AddPubAttr(f);
for(var h in e[f])e[f].hasOwnProperty(h)&&d.AddPubVal(f,h,e[f][h])}}else g=e.split("#"),K=decodeURI(g[1]);d||(c=K)}else if(d=null,f=a.id.split("_"),(f=parseInt(f[f.length-1],10))&&!isNaN(f))if(h=Cmn.GetAncestorByTagNm(a,"ul").id.split("_"),(h=parseInt(h[h.length-1],10))&&!isNaN(h))d=SpecSrchInp.Get(),d.AddPubAttr(h),d.AddPubVal(h,f,"PreSlctd");x(d,a,c,P(a))}},H=function(a){var b=Cmn.GetTxtContent,c=Cmn.HasCls,d="";"DIV"===a.nodeName&&c(a,"IntermediatePrsnttn_SrchTrm")?d=b(a):"A"===a.nodeName&&c(a,
"LandingPagePrsnttnGrp_Anchor")?d=a.getAttribute("href"):(srchTrmElems=Cmn.GetElementsByClsNm("IntermediatePrsnttn_SrchTrm","div",Cmn.GetAncestorByClsNm(a,"IntermediatePrsnttn")))&&0<srchTrmElems.length&&(d=b(srchTrmElems[0]).replace(" ","-","g"));return d},P=function(a){var b=Cmn.GetTxtContent,c,d=null;if("A"===a.nodeName&&Cmn.HasCls(a,"LandingPagePrsnttnGrp_Anchor"))d=b(a);else if((c=Cmn.GetElementsByClsNm("ImgCaption","span",Cmn.GetAncestorByClsNm(a,"IntermediatePrsnttn")))&&0<c.length)d=b(c[0]),
"rgb(118, 79, 154)"!=Cmn.GetStyle(c[0],"color")&&Cmn.HasCls(c[0],"IntermediatePrsnttn_Highlight_CtrlGrp_CLS");null==d&&(d=b(a));return d},x=function(a,b,c,d){var e,g,f=McMaster.LoadMgr;e=McMaster.SesnMgr;var h=e.SetStVal,k=e.StValDefs,m=!1;e=p;g=Cmn.GetObj("MainContent");b.offsetTop+b.offsetHeight>g.offsetHeight&&(m=!0);var n=g=0;b&&(g=Cmn.GetXOffset(b),n=Cmn.GetYOffset(b));null!=a&&(a.UpdateSession(),h(k.SysSlctdSpecFiltersInd.KyTxt(),!0));f.UnloadCntnr("MainContent");f.ShowCntnr("MainContent");
f.DisplWaitIcon("MainContent");IntermediatePrsnttnWebPart.Prsnttn_Click(c,d,m,l,u,e,g,n)},t=function(a){var b=McMasterCom.Nav.GetTopFrame(),c=new b.PerfTracker.EvntPayload;c.Add("clickedElem",l);c.Add("elemNm",a.hash);new b.PerfTracker.Evnt(b.PerfTracker.EvntNms.IntPgClick,b.PerfTracker.PgCntxtNms.DynCntnt,c);McMaster.SesnMgr.SetStVal(McMaster.SesnMgr.StValDefs.PerfTrackingBypassFastTrkInd.KyTxt(),!0);try{var d=Cmn.GetObj("IntermediatePageWebPart_Page");pos=-1;for(var e=d.getElementsByTagName("a"),
b=5;b<e.length;b++)if(e[b]===a){pos=b-4;break}var g=Cmn.GetYOffset(a),f=Cmn.GetHeight(Cmn.GetObj("MainContent")),e=!0;g>f&&(e=!1);g={SlctnCntxt:"IntermediatePage"};g.SlctnNmTxt=a.hash;g.SlctnPosNbr=pos;g.SlctnAbvFoldInd=e;Cmn.TrkAct(g,"IntermediatePage")}catch(h){}}});


if (this.SpecInteractions){
} else {

SpecInteractions = new function () {

    // Global variable as to whether the cursor is currently a pointer (hand)
    var mCursorIsPointerInd = false;

    // A message header for messages published within the context of specifications
    var MSG_HDR = new McMaster.MsgMgr.Hdr(McMaster.MsgMgr.CntxtNms.SPEC);

    // Provide a reference to this object
    var me = this;

    // An attribute id to attribute name lookup object
    var mAttrNmLookupObj = new CmnColls.HashTable();

    // The dropdown menu that's currently open
    var mOpenDropDownMenu = null;

    // Contextual search timeout object
    var mContextualSrchTimeout = null;
    var mLnSeqRegex = new RegExp(/^OrdPadProdsWebPart_LnSeq[0-9]+$/);
    var mNbrRegex = new RegExp(/\d+/);
    // time, in ms, to wait to respond to a [backspace] press in contextual search
    var CONTEXTUAL_SRCH_KEYSTROKE_BACKSPACE_TIMEOUT_MS_NBR = 250;

    // time, in ms, to wait to respond to a keystroke in contextual search
    var CONTEXTUAL_SRCH_KEYSTROKE_DEFLT_TIMEOUT_MS_NBR = 150;

    // Indicator of whether event listeners have been attached to the Spec Search pane in the Shell
    var mEvntsAttachedInd = false;

    var MAIN_CONTENT_CNTNR_NM = "MainContent";
    //ANALYTICS
    this.mTrkAct = null;
    this.mTrkAttr = null;
    this.mTrkVal = null;
    this.mTrkTrip = false;

    //class names
    var SPEC_SRCH_ATTR_CLS_NM = "SpecSrch_Attribute";
    var LANDING_PG_ATTR_CLS_NM = "LandingPage_ValPrsnttn"; 
    
    //Tracking actions
    var ACT = {
        CLICK_VLD: 'Selected spec',
        CLICK_SLCTD: 'Deselected spec',
        EXPAND_ATTRGRP: 'Expanded',
        CLEAR_ALL: 'Cleared all selected specs'
    };
	
	//Context Names
	var CNTXT = {
		LANDING_PAGE: 'LandingPage',
		CHOOSE_SPECS: 'ChooseSpecs',
		IN_LN_ORD: 'InLnOrd'
	};


    var VAL_SPEC_PAR_ELEM_ID_CD = {
        CAPTION: 'T',
        IMG: 'I'
    };
	
	//Sized input box constants
	var ZERO_WIDTH_SPACE = String.fromCharCode(parseInt(0x200B))
	  , UNICODE_CARRIAGE_RETURN = 13
	  , UNICODE_LINE_FEED = 10
	  , UNICODE_BACKSPACE = 8
	  , UNICODE_DELETE = 46
	  , UNICODE_CHARS_GRP1_STRT = 32
	  , UNICODE_CHARS_GRP1_END = 126
	  , UNICODE_CHARS_GRP2_STRT = 160
	  , UNICODE_CHARS_GRP2_END = 65535
	  , LEFT_ARROW_KEYCODE = 37
	  , RIGHT_ARROW_KEYCODE = 39;

    //Session State shortcuts
    var GetStVal = McMaster.SesnMgr.GetStVal;
    var StValDefs = McMaster.SesnMgr.StValDefs;

    //---------------------------------------------------------------------
    // Summary: Attaches event listeners
    // Input: webPartOjb - The web part object from the server that's 
    //           done loading.
    //        cntxtNm - The context in which the interaction occurred.
    //           This is used for web reports tracking.
    //        webPartLoader (optional) - The web part's loader. We use some 
    //           of its methods, such as for determining how to handle  
    //           requests that are already in flight. 
    //        maintainScrollPosnInd - Denotes whether we need to keep
    //           the selected value in the same position when the page
    //           gets re-loaded.
    //---------------------------------------------------------------------
    this.AttachEvntListeners = function (webPartObj, cntxtNm, webPartLoader, maintainScrollPosnInd, inLnCntnr) {

		if (inLnCntnr) {
			cntnr = inLnCntnr;
		} else {
			cntnr = Cmn.GetObj(webPartObj.CntnrIDTxt);
        }
		
        if (cntnr){
            //found
        }else{
            if (McMasterCom.Nav.GetTopFrame().MainIFrame){
                if (McMasterCom.Nav.GetTopFrame().MainIFrame.Catalog){
                    cntnr = McMasterCom.Nav.GetTopFrame().MainIFrame.Catalog.Cmn.GetObj(webPartObj.CntnrIDTxt);
                }
            }
        }

        Cmn.AddEvntListener(cntnr, "click", function (evnt) {
            me.HndlClickEvnt(evnt, cntxtNm, webPartLoader, maintainScrollPosnInd);
        });

        Cmn.AddEvntListener(cntnr, "keyup", function (evnt) {
            me.HndlCntxtSrch(evnt, cntxtNm, webPartLoader);
        });

        Cmn.AddEvntListener(cntnr, "mouseover", function (evnt) {
            hndlMouseOvrEvnt(evnt, cntxtNm, webPartLoader, cntnr);
        });

        Cmn.AddEvntListener(cntnr, "mouseout", function (evnt) {
            hndlMouseOutEvnt(evnt, cntxtNm, webPartLoader, cntnr);
        });

        Cmn.AddEvntListener(cntnr, "select", me.HndlSelectEvnt);
        Cmn.AddEvntListener(cntnr, "selectstart", me.HndlSelectEvnt);
		
		this.AttachDocEvntListeners();
    };
	
	this.AttachDocEvntListeners = function () {
        Cmn.AddEvntListener(document, "click", SpecSrchWebPart.SpecInfo.ClickHandler);
    };

    //---------------------------------------------------------------------
    // Summary: Removes event listenters
    // Input: The web part that's been unloaded.
    //---------------------------------------------------------------------
    this.RemoveEvntListeners = function (webPartObj) {

        var cntnr = Cmn.GetObj(webPartObj.CntnrIDTxt);
        if (cntnr){
            //found
        }else{
            if (McMasterCom.Nav.GetTopFrame().MainIFrame){
                if (McMasterCom.Nav.GetTopFrame().MainIFrame.Catalog){
                    cntnr = McMasterCom.Nav.GetTopFrame().MainIFrame.Catalog.Cmn.GetObj(webPartObj.CntnrIDTxt);
                }
            }
        }
        
        Cmn.RemEvntListeners(cntnr, "click");
        Cmn.RemEvntListeners(cntnr, "keyup");
        Cmn.RemEvntListeners(cntnr, "mouseover");
        Cmn.RemEvntListeners(cntnr, "mouseout");
        Cmn.RemEvntListeners(cntnr, "select");
        Cmn.RemEvntListeners(cntnr, "selectstart");
		
		this.RemoveDocEvntListeners();
	};
	
	this.RemoveDocEvntListeners = function () {
        Cmn.RemEvntListeners(document, "click");
    };

    //---------------------------------------------------------------------
    // Summary: Adds attribute id to attribute name definitions to the
    //          global dictionary.
    // Input: The web part that's been loaded.
    //---------------------------------------------------------------------
    this.AddAttrIdToNmDefs = function (webPartObj) {

        var attrIdToNmDefs = webPartObj.AttrIdToNmDict;
        var attrIds = Cmn.Utilities.Keys(attrIdToNmDefs);

        Cmn.forEach(attrIds, function (attrId) {
            mAttrNmLookupObj.Add(attrId, attrIdToNmDefs[attrId]);
        });
    };

    //------------------------------------------------------------
    // <summary>
    // Creates the tracking request for webreports.
    // </summary>
    //------------------------------------------------------------
    this.Webreports_TrkAct = function (cntxtNm, act, attr, val, trip, prodAttrId, prodValId, inpElem) {

        var loadFrmSesnInd = GetStVal(StValDefs.ChooseSpecsLoadFrmSesnInd.KyTxt());

        //Subsequent clicks on landing pages do not trigger a 204. It's because the 
        //loadFrmSesnInd is true. 
        if (cntxtNm.toUpperCase() == "LANDINGPAGE") {
            loadFrmSesnInd=false;
        }
        
        if (loadFrmSesnInd) {
            //don't track a session change
        } else if (trip) {
            //track with round trip duration so update
            //global tracking variables to hold it
            this.mTrkTrip = true;
            this.mTrkAct = act;
            this.mTrkAttr = (attr) ? attr : null;
            this.mTrkVal = (val) ? val : null;

        } else {
            //track the action performed.
            var actDscObj = {};
            actDscObj.Action = act;
            actDscObj.SrchTxt = GetStVal(StValDefs.SlctdSrchRsltTxt.KyTxt());
            if (attr) { actDscObj.Attribute = attr; }
            if (val) { actDscObj.Value = val; }
            Cmn.TrkAct(actDscObj, cntxtNm);

            // TrkSrch
            trkSrchValSlct(act, attr, val, cntxtNm, prodAttrId, prodValId, inpElem);
        }
    };


    //---------------------------------------------------------------
    // Summary: Creates the tracking request for custom tracking 
    //          messages.
    //
    // Input:   context name, tracking action and the message you
    //          want to track.
    //---------------------------------------------------------------
    this.Webreports_TrkCustomAct = function (cntxtNm, trkAct, trkMsg) {

        var srchTxt = GetStVal(StValDefs.SlctdSrchRsltTxt.KyTxt());
        var str = "Action=" + trkAct + "&SrchTxt=" + srchTxt;
        Cmn.TrkAct(str + trkMsg, cntxtNm);
    };
    
    //------------------------------------------------------------
    // Summary: creates a webreports tracking request for
    //          contextual search events.
    //------------------------------------------------------------
    this.Webreports_TrkContextualSrch = function (cntxtNm, attrId, cntxtSrchArgTxt, usrInpVal, prodAttrId) {

        var srchTxt = GetStVal(StValDefs.SlctdSrchRsltTxt.KyTxt());
        var msg = "Contextual search in " + srchTxt + " for " + me.GetAttrNm(attrId);

        if (cntxtSrchArgTxt.length > 0) {
            msg += ": " + cntxtSrchArgTxt;
        } else {
            msg += " was cleared out";
        }

        var actDscObj = {};
        actDscObj.action = msg;
        Cmn.TrkAct(actDscObj, cntxtNm);
        
        var srchTrkInfo = new SrchTrkr.SrchDat({ usr: SrchTrkr.UsrActTyps.KEY });
        srchTrkInfo.usr.elemTyp = SrchTrkr.ElemTyps.CNTXT_SRCH_BX;
        srchTrkInfo.usr.srcNm = getSrcNmFrmCntxt(cntxtNm);
        srchTrkInfo.usr.entryTxt = decodeURIComponent(usrInpVal);
        srchTrkInfo.usr.srchCntxt = decodeURIComponent(srchTxt);
        srchTrkInfo.usr.spec = { attr: me.GetAttrNm(attrId) };
		srchTrkInfo.usr.specIDs = { attrID: prodAttrId };
        srchTrkInfo.Trk();
    };

    //------------------------------------------------------------
    // <summary>
    // Creates the tracking request for webreports that will include
    // the duration of the web part's action in addition to the 
    // usual data
    // </summary>
    //------------------------------------------------------------
    this.Webreports_TrkTrip = function (cntxtNm) {

        if (this.mTrkTrip) {
            var srchTxt = GetStVal(StValDefs.SlctdSrchRsltTxt.KyTxt());
            var url = 'Action=' + encodeURIComponent(this.mTrkAct) + '&SrchTxt=' + encodeURIComponent(srchTxt);

            if (this.mTrkAttr) {
                url = url + '&Attribute=' + encodeURIComponent(this.mTrkAttr);
            }

            if (this.mTrkVal) {
                url = url + '&Value=' + encodeURIComponent(this.mTrkVal);
            }
            Cmn.TrkAct(url, cntxtNm);
        } else {
            //do nothing
        }

        //reset global tracking variables
        this.mTrkAct = null;
        this.mTrkAttr = null;
        this.mTrkVal = null;
        this.mTrkTrip = false;
    };

    //------------------------------------------------------------
    // <summary>
    // Retrieves the attribute name.
    // </summary>
    //------------------------------------------------------------
    this.GetAttrNm = function (attrId) {
        return mAttrNmLookupObj.table[attrId];
    };

    //------------------------------------------------------------
    // <summary>
    // Retrieves the attribute id from the given element.
    // </summary>
    //------------------------------------------------------------
    this.GetAttrId = function (inpElem) {
        return getPubAttrIdFrmTxt(inpElem.id);
    };

    //------------------------------------------------------------
    // Summary: Returns the attribute containing the given value
    //------------------------------------------------------------
    this.GetAttrByInnerElem = function (inpElem) {
        return getAttrByInnerElem(inpElem,SPEC_SRCH_ATTR_CLS_NM);
    };

    //------------------------------------------------------------
    // Summary: Returns true if the given element is in a dropdown menu
    //------------------------------------------------------------
    this.GetElemIsInDropDwnMenu = function (inpElem) {
        return getInpElemIsDropDwnVal(inpElem,SPEC_SRCH_ATTR_CLS_NM);
    };

    //------------------------------------------------------------
    // Summary: Returns the element that's visible for the given ID.
    // Input:   An element ID
    // Returns: The element with the given ID, or its complementary
    //          element -- whichever one is visible at the time.
    //------------------------------------------------------------          
    this.GetVisibleElemById = function (idTxt) {
        return getVisibleElemById(idTxt);
    };

    //------------------------------------------------------------
    // Summary: Returns the html element that complements the
    //          display state of the passed-in attribute container.
    // Input:   An element ID
    //------------------------------------------------------------          
    this.GetComplementaryElemById = function (idTxt) {
        return getComplementaryElemById(idTxt);
    };

	//------------------------------------------------------------
    // Summary: Returns the caption for the given image element
    //			or vice versa.
    //------------------------------------------------------------          
	this.GetComplementaryImgTxtElemById = function(inpElem) {
		 return getComplementaryImgTxtElemById(inpElem);
	};
	
    //------------------------------------------------------------
    // Summary: Handles the event "mousedown" and interprets
    //          the element id
    // Input:   The YUI event
    //          cntxtNm - context for the specification (spec search,
    //             landing page, etc). Largely used for web reports.
    //          webPartLoader (optional) - The loader for this web
    //               part. If it exists, call the method on the loader
    //               that determines whether a request is already in 
    //               flight. If so, ignore the current click event.
    //          maintainScrollPosnInd - Denotes whether we need to keep
    //               the selected value in the same position when the page
    //               gets re-loaded.
    //------------------------------------------------------------
    this.HndlClickEvnt = function (e, cntxtNm, webPartLoader, maintainScrollPosnInd) {

        if (webPartLoader && typeof webPartLoader.ReqInFlight === "function" && webPartLoader.ReqInFlight()) {
            // Don't respond to clicks when a request is in flight
        } else if (e) {
            // Check to see if the element OR one of its ancestors is clickable
            var targetElem = Cmn.GetEvntTarget(e);

            if (cntxtNm.toUpperCase() == "LANDINGPAGE") {

                if (targetElem && (targetElem.nodeName.toUpperCase() != "DIV" && targetElem.nodeName.toUpperCase() != "LI")) {

                    while (targetElem.parentNode) {
                        if (targetElem && (targetElem.nodeName.toUpperCase() != "DIV" && targetElem.nodeName.toUpperCase() != "LI")) {
                            targetElem = targetElem.parentNode;
                        } else {
                            break;
                        }
                    }
                }

            }

            var vldInpElem = getVldClickElem(targetElem) || Cmn.GetAncestorBy(targetElem, getVldClickElem);

            // If it's clickable then process the click event
            if (vldInpElem) {
                procssClckEvnt(vldInpElem, cntxtNm, maintainScrollPosnInd);

                if (SpecSrchWebPart.planningtimestamp) {
                    var now = new Date();
                    var delta = now - SpecSrchWebPart.planningtimestamp;
                    Cmn.TrkAct("FirstClick&delta=" + delta + "&type=specsrch");
                    SpecSrchWebPart.planningtimestamp = null
                }
            }

            // Check to see whether the selected element was a dropdown button
            if (vldInpElem && getInpElemIsDropDwnBtn(vldInpElem)) {
                // The dropdown button already took care of updating the dropdown menu
            } else {
                // Close any open dropdown menu
                SpecInteractions.ToggleDropDwnMenu(mOpenDropDownMenu);
            }
        }
    };

    //------------------------------------------------------------
    // Summary: Handles text selection (highlighting) events
    // Input:   The YUI event
    //------------------------------------------------------------
    this.HndlSelectEvnt = function (e) {

        if (e) {
            // Get the element being selected
            var targetElem = Cmn.GetEvntTarget(e);
            var vldInpElem = getVldClickElem(targetElem) || Cmn.GetAncestorBy(targetElem, getVldClickElem);

            // Prevent clickable elements from accidentally being selected.
            if (vldInpElem) {
                Cmn.PreventDeflt(e);
            }
        }
    };

    //------------------------------------------------------------
    // Summary: captures and processes the input for contextual
    //          search input
    // Input:   The keystroke event unique to each input element
    //------------------------------------------------------------
    this.HndlCntxtSrch = function (e, cntxtNm, webPartLoader) {

        if (e) {
            // You can type into contextual search boxes
            var targetElem = Cmn.GetEvntTarget(e);
            var vldInpElem = getVldCntxtSrchBx(targetElem) || Cmn.GetAncestorBy(targetElem, getVldCntxtSrchBx);

            // If it's a contextual search box, then perform the contextual search
            if (vldInpElem) {
                if (cntxtNm == "InLnOrd") {
                    procssInLnCntxtSrch(vldInpElem, e.keyCode, cntxtNm, webPartLoader);
                } else if (cntxtNm == "OrdPad") {
                    procssOrdPadLnCntxtSrch(vldInpElem, e.keyCode, cntxtNm, webPartLoader);
                } else if (cntxtNm == McMaster.MsgMgr.CntxtNms.ITM_PRSNTTN){
					procssItmPrsnttnCntxtSrch(vldInpElem, e.keyCode, cntxtNm, webPartLoader);
				}else {
                    procssCntxtSrch(vldInpElem, e.keyCode, cntxtNm, webPartLoader);
                }
            }
        }
    };

	// <summary>Wrapper for typing but not pasting.</summary>
	// <param name="box">HTML textarea to monitor.</param>
	// <param name="event">DOM Event</param>
	// <returns> void </returns>
	this.SizedInpTyping = function(box,event){
		var txt = box.value;
		var charPerLnLmt = box.getAttribute("data-mcm-cols");
		charPerLnLmt = parseInt(charPerLnLmt) ? parseInt(charPerLnLmt) : 0;
		var lnLmt = box.getAttribute("data-mcm-rows");
		lnLmt = parseInt(lnLmt) ? parseInt(lnLmt) : 0;
		var wrapInd = false;
		// get text that has been highlighted
		var sel = getSelection(box);
		
		// In keydown/keypress character hasn't been entered yet. Do so here.
		if (event.type === "keydown"){
			var key = event.keyCode;
			if (key == UNICODE_BACKSPACE || key == UNICODE_DELETE){
				txt = applyDeletion(key,sel,txt);
				wrapInd = true;
			}
		} else if (event.type === "keypress"){
			var key = getKey(event.keyCode, event.charCode, event.which);
			if (key == UNICODE_CARRIAGE_RETURN || 
				(UNICODE_CHARS_GRP1_STRT <= key && key <= UNICODE_CHARS_GRP1_END) ||
				(UNICODE_CHARS_GRP2_STRT <= key && key <= UNICODE_CHARS_GRP2_END)){
				txt = applyPrintableChar(key,sel,txt);
				wrapInd = true;
			}
		}
		
		if (wrapInd) {
			// Store the number of softbreaks before re-wrapping.
			var crsrOffset = countAllSubstr(ZERO_WIDTH_SPACE + "\n",txt,sel.start);
			// Wrap the text.
			txt = wrapAlgthm(txt,charPerLnLmt);
			// Update number of softbreaks in case cursor must move.
			crsrOffset = countAllSubstr(ZERO_WIDTH_SPACE + "\n", txt, sel.start) - crsrOffset;
			
			// Only use wrapped text if it is within line limit.
			if (verifyDimensions(txt,lnLmt)){
				box.value = txt;
				//update cursor position
				if (event.type === "keydown" && key == UNICODE_DELETE){
					setCursorPosn(box,sel.start);
				} else {
					setCursorPosn(box,sel.start+crsrOffset*2);
				}
			}
			Cmn.PreventDeflt(event);
		}
	}
	
	// <summary>Moves cursor to make soft wrapping invisible.</summary>
	// <param name="box">HTML textarea sized input box </param>
	// <returns> void </returns>
	this.SizedInpArrowKeys = function(box, event){
		var key = event.keyCode;
		var txt = box.value;
		var crsr = box.selectionEnd; // we only need the end=the moving part
		var dir = ""; //direction to shift the cursor
		
		// Helper function for moving cursor by one.
		var shiftCursorOnce = function(box,dir){
			if (dir === "left"){
				box.setSelectionRange(box.selectionStart === box.selectionEnd ? 
										box.selectionStart - 1 : box.selectionStart,
										box.selectionEnd - 1);
			} else if (dir === "right"){
				box.setSelectionRange(box.selectionStart === box.selectionEnd ? 
										box.selectionStart + 1 : box.selectionStart,
										box.selectionEnd + 1);
			}
		}
		
		if(key === LEFT_ARROW_KEYCODE){
			if (crsr >= 1 && txt[crsr] === "\n" && txt[crsr-1] === ZERO_WIDTH_SPACE){
				// if we start inside the softbreak move the cursor left
				shiftCursorOnce(box,"left");
				if (crsr > 1 && txt[crsr-2] === ZERO_WIDTH_SPACE){
					//if there's also a hidden space move the cursor left again
					shiftCursorOnce(box,"left");
				}
			}
			dir = "left";
		} else if(key === RIGHT_ARROW_KEYCODE){
			if (crsr + 1 < txt.length && txt[crsr] === ZERO_WIDTH_SPACE){
				//if we start to the left of a zero width space
				if (txt[crsr+1] === "\n"){
					//if we start to the left of a soft-wrap
					shiftCursorOnce(box,"right");
				} else if(crsr + 2 < txt.length && 
							txt[crsr+1] === ZERO_WIDTH_SPACE && txt[crsr+2] === "\n"){
					//if we start to the left of a zws + softwrap
					shiftCursorOnce(box,"right");
					shiftCursorOnce(box,"right");
				}
			}
			dir = "right";
		}
		if (crsr >= 1 && txt[crsr] === ZERO_WIDTH_SPACE && txt[crsr-1] === ZERO_WIDTH_SPACE
					&& txt.length > crsr+1 && txt[crsr+1] === "\n"){
			// if we start between a hidden space and a softbreak
			shiftCursorOnce(box,dir);
			// (key is arrowLeft or arrowRight) checked inside function
		}
	
	}
	
	// <summary>Wrapper for paste and word wrapping.</summary>
	// <param name="box">HTML textarea to monitor.</param>
	// <returns> void </returns>
	this.SizedInpPaste = function(box){
		// Capture state of the box before paste happens.
		var charPerLnLmt = box.getAttribute("data-mcm-cols");
		charPerLnLmt = parseInt(charPerLnLmt) ? parseInt(charPerLnLmt) : 0;
		var lnLmt = box.getAttribute("data-mcm-rows");
		lnLmt = parseInt(lnLmt) ? parseInt(lnLmt) : 0;
		var prevTxt = box.value;
		var prevLen = box.value.length;
		// get text that has been highlighted
		var sel = getSelection(box);
				
		// Move cursor outside of a soft break to keep it invisible to users.
		// This is not as strict as it could be, but it doens't need to be strict.
		if (sel.start > 0 && prevTxt[sel.start] === "\n" && prevTxt[sel.start-1] === ZERO_WIDTH_SPACE){
			sel.start --;
		}
		if (sel.end > 0 && prevTxt[sel.end] === "\n" && prevTxt[sel.end-1] === ZERO_WIDTH_SPACE){
			sel.end --;
		}	
		box.setSelectionRange(sel.start,sel.end);
		
		var sel = box.value.slice(sel.start,sel.end);
		// Sleep until after the paste has happened so we can read what was pasted.
		// Otherwise we'd have to look into the clipboard which is difficult.
		window.setTimeout(function(){
			var newTxt = box.value;
			var pastedTxt = newTxt.slice(sel.start, newTxt.length - (prevLen - sel.length));
			// Wrap new contents of box
			var txt = wrapAlgthm(newTxt,charPerLnLmt);
			if (verifyDimensions(txt,lnLmt)){
				box.value = txt;
				//update cursor position
				setCursorPosn(box,sel.start + pastedTxt.length);
			} else {
				box.value = prevTxt;
				setCursorPosn(box,sel.start);
			}
		});
	}
	
	//------------------------------------------------------------
    // Summary: trkSrchValSlct
    // Input:   Tracks value clicks for SrchTrkr.
    //------------------------------------------------------------
    var trkSrchValSlct = function (act, attr, val, cntxtNm, prodAttrId, prodValId, inpElem) {
		
		// Determine the customer's action 
		if (act === "Selected spec" || act === "Expanded" || act === "Collapsed") {
            var srchTrkInfo = new SrchTrkr.SrchDat({ usr: SrchTrkr.UsrActTyps.SLCT });
        } else if (act === "Deselected spec") {
            var srchTrkInfo = new SrchTrkr.SrchDat({ usr: SrchTrkr.UsrActTyps.DESLCT });
        } else if (act) {
            var srchTrkInfo = new SrchTrkr.SrchDat({ usr: act });
        }
		
		// Determine the type of element that was acted upon
		if (act === "Expanded") {
			srchTrkInfo.usr.elemTyp = SrchTrkr.ElemTyps.ATTR_SHOW_LNK;
		} else if (act === "Collapsed") {
			srchTrkInfo.usr.elemTyp = SrchTrkr.ElemTyps.ATTR_HIDE_LNK;
		} else {
			srchTrkInfo.usr.elemTyp = SrchTrkr.ElemTyps.SPEC;
		}
		
		// Create the search tracker object
        if (srchTrkInfo) {
			srchTrkInfo.usr.srcNm = getSrcNmFrmCntxt(cntxtNm);
            srchTrkInfo.usr.spec = { attr: attr, val: val };
			if (prodAttrId) {
				srchTrkInfo.usr.specIds = { attrId: prodAttrId, valId: prodValId};
			}
			if (inpElem && srchTrkInfo.usr.elemTyp === SrchTrkr.ElemTyps.SPEC) {
				srchTrkInfo.usr.slctdElemXYPosn = Cmn.GetXOffset(inpElem) + "," + Cmn.GetYOffset(inpElem);
			}
            srchTrkInfo.Trk();
        }
    }


    //------------------------------------------------------------
    // Summary: Returns true if you can type into the given input element.
    // Input:   Markup element
    //------------------------------------------------------------
    var getVldCntxtSrchBx = function (inpElem) {

        if (Cmn.HasCls(inpElem, "SpecSrch_CntxtSrchBx")) {
            return inpElem;
        } else {
            return null;
        }
    };

    //------------------------------------------------------------
    // Summary: Performs the contextual search.
    // Input:   Markup element
    //------------------------------------------------------------
    var procssCntxtSrch = function (inpElem, inpKeyCode, cntxtNm, webPartLoader) {

        var prodAttrId = getProdAttrIdFrmTxt(inpElem.id);
        var pubAttrId = getPubAttrIdFrmTxt(inpElem.id);

        var rootProdAttrId = prodAttrId;
        var rootPubAttrId = pubAttrId;
        var relAttribute = inpElem.getAttribute("rel");
        if (relAttribute) {
            var attrIds = relAttribute.split(":")[1];
            rootProdAttrId = attrIds.split("_")[0];
            rootPubAttrId = attrIds.split("_")[1];
        }

        // When a contextual search is performed, we want the first value selection
        // to collapse the attribute. If the customer expands the attribute and changes 
        // the contextual search, we want to prevent subsequent interactions with the
        // attribute from collapsing it. We will instead collapse when the customer 
        // has moved on to a different attribute.   
        if (Cmn.Utilities.Empty(SpecSrchInp.Get().GetAttrSlctdVals(rootProdAttrId, cntxtNm))) {
            //Do nothing
        } else {
            SpecSrchInp.Get().SetExplicitlyExpandedAttr(rootPubAttrId).UpdateSession();
        }


        //If the escape key was hit then clear out the contextual search box
        if (inpKeyCode == 27) {
            inpElem.value = "";

            //Immediately abort any stale requests
            if (webPartLoader && typeof webPartLoader.AbortStaleReq === "function") {
                webPartLoader.AbortStaleReq();
            }
        }

        //Get the contextual search argument
        var cntxtSrchArgTxt = inpElem.value;

        //If there's a difference in the argument string, one should trigger a push
        // This is also to filter out keystrokes like the Alt or Ctrl key
        var sesnSpecInp = SpecSrchInp.Get();
        if (sesnSpecInp.GetCntxtSrchChgd(prodAttrId, cntxtSrchArgTxt, cntxtNm)) {
            //Immediately abort any stale requests
            if (webPartLoader && typeof webPartLoader.AbortStaleReq === "function") {
                webPartLoader.AbortStaleReq();
            }

            //Reset the load indicator because an action has occurred
            McMaster.SesnMgr.SetStVal(StValDefs.ChooseSpecsLoadFrmSesnInd.KyTxt(), false);

            //Save the position of the contextual search box so that we can keep it in view
            SpecSrchWebPart.MaintainFocus.SavePosn(inpElem);

            if (mContextualSrchTimeout) {
                // there's already a request queued up. it's stale.  clear it out.
                clearTimeout(mContextualSrchTimeout);
                mContextualSrchTimeout = null;
            }

            // Immediately update the contextual search information
            // Even though a subsequent keystroke might come quickly and prevent the contextual search
            // for this argument from actually being performed, we'll still save the data off in
            // Session Manager.  It can be useful for "rolling back" from a null result set to a previous
            // search argument.
            //
            // Example:
            //  1. User types "1" - saved to session, not sent to server
            //  2. User quickly types "x" - saved to session.
            //  3. User pauses.  Contextual search for "1x" performed.  No results found.  Server rolls back to "1".
            sesnSpecInp.AddCntxtSrch(prodAttrId, pubAttrId, cntxtSrchArgTxt, cntxtNm).UpdateSession();

            var tempFunc = function () {
                //Begin a new set of timers
				var top = McMasterCom.Nav.GetTopFrame();
                var trkEvnt = new top.PerfTracker.Evnt(top.PerfTracker.EvntNms.SpecIntCntxtSrch, top.PerfTracker.PgCntxtNms.DynCntnt);
                // Publish the spec selected message
                sesnSpecInp.PubMsg();

                //Track the contextual search
                me.Webreports_TrkContextualSrch(cntxtNm, rootPubAttrId, cntxtSrchArgTxt, inpElem.value, rootProdAttrId);
            };

            if (inpKeyCode == 8) {
                // backspace
                // use longer timeout
                mContextualSrchTimeout = setTimeout(tempFunc, CONTEXTUAL_SRCH_KEYSTROKE_BACKSPACE_TIMEOUT_MS_NBR);
            } else {
                mContextualSrchTimeout = setTimeout(tempFunc, CONTEXTUAL_SRCH_KEYSTROKE_DEFLT_TIMEOUT_MS_NBR);
            }

        } else if (inpKeyCode == 9) {
            // Key code for a tab so that we remember where the user was inputting text
            // while they tab around. 
            // Save the position of the contextual search box so that we can keep it in view
            SpecSrchWebPart.MaintainFocus.SavePosn(inpElem);
        } else {
            // value of contextual search box has not changed
            // ignore
        }
    };
    //------------------------------------------------------------
    // Summary: Performs the contextual search.
    // Input:   Markup element
    //------------------------------------------------------------
    var procssItmPrsnttnCntxtSrch = function (inpElem, inpKeyCode, cntxtNm, webPartLoader) {
        var prodAttrId = getProdAttrIdFrmTxt(inpElem.id);
        var pubAttrId = getPubAttrIdFrmTxt(inpElem.id);
        var rootProdAttrId = prodAttrId;
        var rootPubAttrId = pubAttrId;
        var relAttribute = inpElem.getAttribute("rel");
		if (relAttribute) {
            var attrIds = relAttribute.split(":")[1];
            rootProdAttrId = attrIds.split("_")[0];
            rootPubAttrId = attrIds.split("_")[1];
        }
		
		var partNbrLnks = Cmn.GetElementsByClsNm("PartNbr");	
		var partNbrLnk;
		if (partNbrLnks.length > 0){
			for (var i=0; i<partNbrLnks.length; i++){
				if (!Cmn.HasCls(partNbrLnks[i], "printver")){
					partNbrLnk = partNbrLnks[i];
					break;
				}
			}
		}
		var attrcompitmids = partNbrLnk.getAttribute("data-mcm-attr-comp-itm-ids");
        // When a contextual search is performed, we want the first value selection
        // to collapse the attribute. If the customer expands the attribute and changes 
        // the contextual search, we want to prevent subsequent interactions with the
        // attribute from collapsing it. We will instead collapse when the customer 
        // has moved on to a different attribute.   
        if (Cmn.Utilities.Empty(SpecSrchInp.Get().GetAttrSlctdVals(rootProdAttrId, cntxtNm))) {
            //Do nothing
        } else {
            SpecSrchInp.Get().SetExplicitlyExpandedAttr(rootPubAttrId).UpdateSession();
        }
        //If the escape key was hit then clear out the contextual search box
        if (inpKeyCode == 27) {
            inpElem.value = "";
            //Immediately abort any stale requests
			if (webPartLoader && typeof webPartLoader.AbortStaleReq === "function") {
				webPartLoader.AbortStaleReq();
            }
        }
        //Get the contextual search argument
        var cntxtSrchArgTxt = inpElem.value;
        //If there's a difference in the argument string, one should trigger a push
        // This is also to filter out keystrokes like the Alt or Ctrl key
        var sesnSpecInp = SpecSrchInp.Get();
        if (sesnSpecInp.GetCntxtSrchChgd(prodAttrId, cntxtSrchArgTxt, cntxtNm)) {
            //Immediately abort any stale requests
            if (webPartLoader && typeof webPartLoader.AbortStaleReq === "function") {
				webPartLoader.AbortStaleReq();
            }
            //Reset the load indicator because an action has occurred
            McMaster.SesnMgr.SetStVal(StValDefs.ChooseSpecsLoadFrmSesnInd.KyTxt(), false);
            //Save the position of the contextual search box so that we can keep it in view
            SpecSrchWebPart.MaintainFocus.SavePosn(inpElem);
            if (mContextualSrchTimeout) {
                // there's already a request queued up. it's stale.  clear it out.
                clearTimeout(mContextualSrchTimeout);
                mContextualSrchTimeout = null;
            }
            // Immediately update the contextual search information
            // Even though a subsequent keystroke might come quickly and prevent the contextual search
            // for this argument from actually being performed, we'll still save the data off in
            // Session Manager.  It can be useful for "rolling back" from a null result set to a previous
            // search argument.
            //
            // Example:
            //  1. User types "1" - saved to session, not sent to server
            //  2. User quickly types "x" - saved to session.
            //  3. User pauses.  Contextual search for "1x" performed.  No results found.  Server rolls back to "1".
            sesnSpecInp.AddCntxtSrch(prodAttrId, pubAttrId, cntxtSrchArgTxt, cntxtNm).UpdateSession();
            var tempFunc = function () {
				var attrNmsTxt = McMaster.SesnMgr.GetStVal(McMaster.SesnMgr.StValDefs.OldStylAttrNms.KyTxt());
                var attrValsTxt = McMaster.SesnMgr.GetStVal(McMaster.SesnMgr.StValDefs.OldStylValTxts.KyTxt());
				var qtyInpBx = Cmn.GetElementsByClsNm("InLnOrdWebPartLayout_InpBx", "input", Cmn.GetObj("ItmPrsnttnWebPart"))[0];
                //Begin a new set of timers
				var top = McMasterCom.Nav.GetTopFrame();
                var trkEvnt = new top.PerfTracker.Evnt(top.PerfTracker.EvntNms.SpecIntCntxtSrch, top.PerfTracker.PgCntxtNms.DynCntnt);
				//Publish spec selected message
				var msgHdr = new McMaster.MsgMgr.Hdr(McMaster.MsgMgr.CntxtNms.ITM_PRSNTTN);
			    McMaster.MsgMgr.PubMsg(new McMaster.MsgMgrMsgs.ItmPrsnttnSpecSlctd(msgHdr, attrNmsTxt, attrValsTxt, null, qtyInpBx.value, false, attrcompitmids));    
                //Track contextual search
			    me.Webreports_TrkContextualSrch(cntxtNm, rootPubAttrId, cntxtSrchArgTxt, inpElem.value, rootProdAttrId);
            };
            if (inpKeyCode == 8) {
                // backspace
                // use longer timeout
                mContextualSrchTimeout = setTimeout(tempFunc, CONTEXTUAL_SRCH_KEYSTROKE_BACKSPACE_TIMEOUT_MS_NBR);
            } else {
                mContextualSrchTimeout = setTimeout(tempFunc, CONTEXTUAL_SRCH_KEYSTROKE_DEFLT_TIMEOUT_MS_NBR);
            }
        } else if (inpKeyCode == 9) {
            // Key code for a tab so that we remember where the user was inputting text
            // while they tab around. 
            // Save the position of the contextual search box so that we can keep it in view
            SpecSrchWebPart.MaintainFocus.SavePosn(inpElem);
        } else {
            // value of contextual search box has not changed
            // ignore
        }
    };
    //------------------------------------------------------------
    // Summary: Performs the contextual search.
    // Input:   Markup element
    //------------------------------------------------------------
    var procssInLnCntxtSrch = function (inpElem, inpKeyCode, cntxtNm, webPartLoader) {

        var prodAttrId = getProdAttrIdFrmTxt(inpElem.id);
        var pubAttrId = getPubAttrIdFrmTxt(inpElem.id);

        var rootProdAttrId = prodAttrId;
        var rootPubAttrId = pubAttrId;
        var relAttribute = inpElem.getAttribute("rel");
        if (relAttribute) {
            var attrIds = relAttribute.split(":")[1];
            rootProdAttrId = attrIds.split("_")[0];
            rootPubAttrId = attrIds.split("_")[1];
        }
        var inLnSpecId = Cmn.GetAncestorByClsNm(inpElem, "InLnOrdWebPartAttrCntnr").getAttribute("data-InLnSpecId");
        var inLnSpecDict = McMaster.SesnMgr.GetStVal(StValDefs.InLnSpecUsrInps.KyTxt());
        //inLnSpecInp = inLnSpecDict[inLnSpecId];
        // McMaster.SesnMgr.SetStVal(StValDefs.InLnSpecUsrInps.KyTxt(), inLnSpecDict);

        // When a contextual search is performed, we want the first value selection
        // to collapse the attribute. If the customer expands the attribute and changes 
        // the contextual search, we want to prevent subsequent interactions with the
        // attribute from collapsing it. We will instead collapse when the customer 
        // has moved on to a different attribute.   
        if (Cmn.Utilities.Empty(inLnSpecDict[inLnSpecId].GetAttrSlctdVals(rootProdAttrId, cntxtNm))) {
            //Do nothing
        } else {
            inLnSpecDict[inLnSpecId].SetExplicitlyExpandedAttr(rootPubAttrId);
        }


        //If the escape key was hit then clear out the contextual search box
        if (inpKeyCode == 27) {
            inpElem.value = "";

            //Immediately abort any stale requests
            if (webPartLoader && typeof webPartLoader.AbortStaleReq === "function") {
                webPartLoader.AbortStaleReq();
            }
        }

        //Get the contextual search argument
        var cntxtSrchArgTxt = inpElem.value;

        //If there's a difference in the argument string, one should trigger a push
        // This is also to filter out keystrokes like the Alt or Ctrl key
        //var sesnSpecInp = inLnSpecInp;
        if (inLnSpecDict[inLnSpecId].GetCntxtSrchChgd(prodAttrId, cntxtSrchArgTxt, cntxtNm)) {
            //Immediately abort any stale requests
            if (webPartLoader && typeof webPartLoader.AbortStaleReq === "function") {
                webPartLoader.AbortStaleReq();
            }

            //Reset the load indicator because an action has occurred
            McMaster.SesnMgr.SetStVal(StValDefs.ChooseSpecsLoadFrmSesnInd.KyTxt(), false);

            //Save the position of the contextual search box so that we can keep it in view
            SpecSrchWebPart.MaintainFocus.SavePosn(inpElem);

            if (mContextualSrchTimeout) {
                // there's already a request queued up. it's stale.  clear it out.
                clearTimeout(mContextualSrchTimeout);
                mContextualSrchTimeout = null;
            }

            // Immediately update the contextual search information
            // Even though a subsequent keystroke might come quickly and prevent the contextual search
            // for this argument from actually being performed, we'll still save the data off in
            // Session Manager.  It can be useful for "rolling back" from a null result set to a previous
            // search argument.
            //
            // Example:
            //  1. User types "1" - saved to session, not sent to server
            //  2. User quickly types "x" - saved to session.
            //  3. User pauses.  Contextual search for "1x" performed.  No results found.  Server rolls back to "1".
            //sesnSpecInp.AddCntxtSrch(prodAttrId, pubAttrId, cntxtSrchArgTxt, cntxtNm).UpdateSession();
            inLnSpecDict[inLnSpecId].AddCntxtSrch(prodAttrId, pubAttrId, cntxtSrchArgTxt, cntxtNm);
            McMaster.SesnMgr.SetStVal(StValDefs.InLnSpecUsrInps.KyTxt(), inLnSpecDict);
            var tempFunc = function () {
                //Begin a new set of timers
				var top = McMasterCom.Nav.GetTopFrame();
                var trkEvnt = new top.PerfTracker.Evnt(top.PerfTracker.EvntNms.SpecIntCntxtSrch, top.PerfTracker.PgCntxtNms.DynCntnt);
				
				var itmBx = Cmn.GetAncestorByClsNm(inpElem, "AddToOrdFlow_ItmBx");
				var partNbrTxt;
				var partNbrRow; 
				if (itmBx){
					partNbrRow = Cmn.GetPrevSibling(Cmn.GetPrevSibling(itmBx));
					var itmBxCell = itmBx.children[0];
					if (itmBxCell){
						var lastIdx = itmBxCell.id.split("_").length - 1;
						partNbrTxt = itmBxCell.id.split("_")[lastIdx];
					}
				}
				
				var partNbrLnk;
				if (partNbrTxt && partNbrRow){
					var testMthd = function(elem) {
						if (Cmn.HasCls(elem, "PartNbrLnk") &&
							elem.innerHTML == partNbrTxt){
								return true;
						}
					}
					partNbrLnk = Cmn.GetElementBy(testMthd, "A", partNbrRow);
				}
    
				InLnOrdWebPart.updtSpecAttr(inLnSpecId, partNbrLnk);

                //Track the contextual search
                me.Webreports_TrkContextualSrch(cntxtNm, rootPubAttrId, cntxtSrchArgTxt, inpElem.value, rootProdAttrId);
            };

            if (inpKeyCode == 8) {
                // backspace
                // use longer timeout
                mContextualSrchTimeout = setTimeout(tempFunc, CONTEXTUAL_SRCH_KEYSTROKE_BACKSPACE_TIMEOUT_MS_NBR);
            } else {
                mContextualSrchTimeout = setTimeout(tempFunc, CONTEXTUAL_SRCH_KEYSTROKE_DEFLT_TIMEOUT_MS_NBR);
            }

        } else if (inpKeyCode == 9) {
            // Key code for a tab so that we remember where the user was inputting text
            // while they tab around. 
            // Save the position of the contextual search box so that we can keep it in view
            SpecSrchWebPart.MaintainFocus.SavePosn(inpElem);
        } 
    };
    //------------------------------------------------------------
    // Summary: Performs the contextual search.
    // Input:   Markup element
    //------------------------------------------------------------
    var procssOrdPadLnCntxtSrch = function (inpElem, inpKeyCode, cntxtNm, webPartLoader) {

        var prodAttrId = getProdAttrIdFrmTxt(inpElem.id);
        var pubAttrId = getPubAttrIdFrmTxt(inpElem.id);

        var rootProdAttrId = prodAttrId;
        var rootPubAttrId = pubAttrId;
        var relAttribute = inpElem.getAttribute("rel");
        if (relAttribute) {
            var attrIds = relAttribute.split(":")[1];
            rootProdAttrId = attrIds.split("_")[0];
            rootPubAttrId = attrIds.split("_")[1];
        }
        var partNbrCol = Cmn.GetPrevSibling(Cmn.GetAncestorByClsNm(inpElem, "OrdPadProdsWebPartLayout_PartDscCell"));
        var partNbrTxt = Cmn.GetFrstChld(Cmn.GetFrstChldByClsNm(partNbrCol, "OrdPadProdsWebPart_ShowOnPending")).value;
        var lnSeqNbr = getLnSeqFrmLnElem(inpElem);
        var ordPadSpecId = partNbrTxt + "_" + lnSeqNbr;
        if (McMaster.SesnMgr.GetStVal(McMaster.SesnMgr.StValDefs.OrdLnSpecUsrInps.KyTxt()) == null) {
            var ordLnSpecInpDict = {};
            ordLnSpecInpDict[ordPadSpecId] = SpecSrchInp.RemAll();
            McMaster.SesnMgr.SetStVal(StValDefs.OrdLnSpecUsrInps.KyTxt(), ordLnSpecInpDict);
        }
        var ordLnSpecInpDict = McMaster.SesnMgr.GetStVal(McMaster.SesnMgr.StValDefs.OrdLnSpecUsrInps.KyTxt());
        if (ordPadSpecId in ordLnSpecInpDict) {
        } else {
            ordLnSpecInpDict[ordPadSpecId] = SpecSrchInp.RemAll();
        }


        // When a contextual search is performed, we want the first value selection
        // to collapse the attribute. If the customer expands the attribute and changes 
        // the contextual search, we want to prevent subsequent interactions with the
        // attribute from collapsing it. We will instead collapse when the customer 
        // has moved on to a different attribute.   
        if (Cmn.Utilities.Empty(ordLnSpecInpDict[ordPadSpecId].GetAttrSlctdVals(rootProdAttrId, cntxtNm))) {
            //Do nothing
        } else {
            ordLnSpecInpDict[ordPadSpecId].SetExplicitlyExpandedAttr(rootPubAttrId);
        }


        //If the escape key was hit then clear out the contextual search box
        if (inpKeyCode == 27) {
            inpElem.value = "";

            //Immediately abort any stale requests
            if (webPartLoader && typeof webPartLoader.AbortStaleReq === "function") {
                webPartLoader.AbortStaleReq();
            }
        }

        //Get the contextual search argument
        var cntxtSrchArgTxt = inpElem.value;

        //If there's a difference in the argument string, one should trigger a push
        // This is also to filter out keystrokes like the Alt or Ctrl key
        //var sesnSpecInp = inLnSpecInp;
        if (ordLnSpecInpDict[ordPadSpecId].GetCntxtSrchChgd(prodAttrId, cntxtSrchArgTxt, cntxtNm)) {
            //Immediately abort any stale requests
            if (webPartLoader && typeof webPartLoader.AbortStaleReq === "function") {
                webPartLoader.AbortStaleReq();
            }

            //Reset the load indicator because an action has occurred
            McMaster.SesnMgr.SetStVal(StValDefs.ChooseSpecsLoadFrmSesnInd.KyTxt(), false);

            //Save the position of the contextual search box so that we can keep it in view
            SpecSrchWebPart.MaintainFocus.SavePosn(inpElem);

            if (mContextualSrchTimeout) {
                // there's already a request queued up. it's stale.  clear it out.
                clearTimeout(mContextualSrchTimeout);
                mContextualSrchTimeout = null;
            }

            // Immediately update the contextual search information
            // Even though a subsequent keystroke might come quickly and prevent the contextual search
            // for this argument from actually being performed, we'll still save the data off in
            // Session Manager.  It can be useful for "rolling back" from a null result set to a previous
            // search argument.
            //
            // Example:
            //  1. User types "1" - saved to session, not sent to server
            //  2. User quickly types "x" - saved to session.
            //  3. User pauses.  Contextual search for "1x" performed.  No results found.  Server rolls back to "1".
            //sesnSpecInp.AddCntxtSrch(prodAttrId, pubAttrId, cntxtSrchArgTxt, cntxtNm).UpdateSession();
            ordLnSpecInpDict[ordPadSpecId].AddCntxtSrch(prodAttrId, pubAttrId, cntxtSrchArgTxt, cntxtNm);
            McMaster.SesnMgr.SetStVal(StValDefs.OrdLnSpecUsrInps.KyTxt(), ordLnSpecInpDict);
            var tempFunc = function () {
                //Begin a new set of timers
				var top = McMasterCom.Nav.GetTopFrame();
                var trkEvnt = new top.PerfTracker.Evnt(top.PerfTracker.EvntNms.SpecIntCntxtSrch, top.PerfTracker.PgCntxtNms.DynCntnt);
                var MSG_HDR = new McMaster.MsgMgr.Hdr(McMaster.MsgMgr.CntxtNms.ORD_PAD);
                McMaster.MsgMgr.PubMsg(new McMaster.MsgMgrMsgs.OrdPadLnSpecSlctd(MSG_HDR, lnSeqNbr, partNbrTxt));

                //Track the contextual search
                me.Webreports_TrkContextualSrch(cntxtNm, rootPubAttrId, cntxtSrchArgTxt, inpElem.value, rootProdAttrId);
            };

            if (inpKeyCode == 8) {
                // backspace
                // use longer timeout
                mContextualSrchTimeout = setTimeout(tempFunc, CONTEXTUAL_SRCH_KEYSTROKE_BACKSPACE_TIMEOUT_MS_NBR);
            } else {
                mContextualSrchTimeout = setTimeout(tempFunc, CONTEXTUAL_SRCH_KEYSTROKE_DEFLT_TIMEOUT_MS_NBR);
            }

        } else if (inpKeyCode == 9) {
            // Key code for a tab so that we remember where the user was inputting text
            // while they tab around. 
            // Save the position of the contextual search box so that we can keep it in view
            SpecSrchWebPart.MaintainFocus.SavePosn(inpElem);
        } else {
            // value of contextual search box has not changed
            // ignore
            McMaster.SesnMgr.SetStVal(StValDefs.OrdLnSpecUsrInps.KyTxt(), ordLnSpecInpDict);
            var MSG_HDR = new McMaster.MsgMgr.Hdr(McMaster.MsgMgr.CntxtNms.ORD_PAD);
            McMaster.MsgMgr.PubMsg(new McMaster.MsgMgrMsgs.OrdPadLnSpecSlctd(MSG_HDR, lnSeqNbr, partNbrTxt));
        }
    };
    //------------------------------------------------------------
    // Summary: Handles the mouseover event
    // Input:   The YUI event
    //          e - the event object
    //          webPartLoader - The loader for this web
    //               part. If it exists, call the method on the loader
    //               that determines whether a request is already in 
    //               flight. If so, ignore the current mouseover event.
    //          cntnr - the container in which the web part is loaded
    //------------------------------------------------------------
    var hndlMouseOvrEvnt = function (e, cntxtNm, webPartLoader, cntnr) {
        if (webPartLoader && typeof webPartLoader.ReqInFlight === "function" && webPartLoader.ReqInFlight()) {
            // Don't listen to mouseover events when a request is in flight
        } else {
            var contInd = true;
            if (cntxtNm.toUpperCase() == "LANDINGPAGE") {
                var targetElem = Cmn.GetEvntTarget(e);
                var relTargetElem = Cmn.GetEvntRelatedTarget(e);

                if ((Cmn.GetAncestorByClsNm(targetElem, "LandingPage_DeepLnksCntnr") || Cmn.HasCls(targetElem, "LandingPage_DeepLnksCntnr")) && !(Cmn.GetAncestorByClsNm(targetElem, "LandingPage_DeepLnkVal") || Cmn.HasCls(targetElem, "LandingPage_DeepLnkVal"))) {
                    contInd = false;
                }
                //                while (relTargetElem && relTargetElem != targetElem && relTargetElem.nodeName.toUpperCase() != 'DIV' && relTargetElem.nodeName.toUpperCase() != 'LI'
                //                && !(Cmn.HasCls("LandingPage_DeepLnksList", relTargetElem))) {
                //                    relTargetElem = relTargetElem.parentNode;
                //                }
                //                if (relTargetElem == targetElem){
                //                    contInd = false;
                //                }
                //                if (relTargetElem && targetElem && Cmn.HasCls("LandingPage_DeepLnksList", relTargetElem) &&
                //                    Cmn.IsAncestor(relTargetElem, targetElem)){
                //                    contInd = false;
                //                }
            }
            if (contInd) {

                // Handler the mouseover
                hndlHoverEvnt(e, cntxtNm, true, cntnr);
            }
        }
    };

    //------------------------------------------------------------
    // Summary: Handles the mouseout event
    // Input:   The YUI event
    //          e - the event object        
    //          webPartLoader - The loader for this web
    //               part. If it exists, call the method on the loader
    //               that determines whether a request is already in 
    //               flight. If so, ignore the current mouseout event.
    //          cntnr - the container in which the web part is loaded       
    //------------------------------------------------------------
    var hndlMouseOutEvnt = function (e, cntxtNm, webPartLoader, cntnr) {

        if (webPartLoader && typeof webPartLoader.ReqInFlight === "function" && webPartLoader.ReqInFlight()) {
            // Don't listen to mouseout events when a request is in flight
        } else {

            var contInd = true;
            if (cntxtNm.toUpperCase() == "LANDINGPAGE") {
                var targetElem = Cmn.GetEvntTarget(e);
                var relTargetElem = Cmn.GetEvntRelatedTarget(e);

                //                if (Cmn.GetAncestorByClsNm(targetElem, "LandingPage_DeepLnksList") && Cmn.GetAncestorByClsNm(targetElem, "LandingPage_DeepLnksList")){
                //                
                //                }
                while (relTargetElem && relTargetElem != targetElem && relTargetElem.nodeName.toUpperCase() != 'DIV' && relTargetElem.nodeName.toUpperCase() != 'LI'
                && !(getVldClickElem(relTargetElem) || Cmn.GetAncestorBy(relTargetElem, getVldClickElem))) {
                    //&& !(Cmn.HasCls("LandingPage_DeepLnksList", relTargetElem))) {
                    relTargetElem = relTargetElem.parentNode;
                }
                if (relTargetElem == targetElem) {
                    contInd = false;
                }
                //                if (relTargetElem && targetElem && Cmn.HasCls("LandingPage_DeepLnksList", relTargetElem) &&
                //                    Cmn.IsAncestor(relTargetElem, targetElem)){
                //                    contInd = false;
                //                }
            }
            if (contInd) {
                // Handler the mousout
                hndlHoverEvnt(e, cntxtNm, false, cntnr);
            }
        }
    };

    //------------------------------------------------------------
    // Summary: Handles the mouseover and mouseout events
    // Input:   The YUI event
    //------------------------------------------------------------
    var hndlHoverEvnt = function (e, cntxtNm, hoverInd, cntnr) {

        if (e) {
            // An element is only "hoverable" if it's "clickable"
            var targetElem = Cmn.GetEvntTarget(e);

            var relTargetElem = Cmn.GetEvntRelatedTarget(e);

            if (cntxtNm.toUpperCase() == "LANDINGPAGE") {

                if (targetElem && (targetElem.nodeName.toUpperCase() != "DIV" && targetElem.nodeName.toUpperCase() != "LI")) {

                    while (targetElem.parentNode) {
                        if (targetElem && (targetElem.nodeName.toUpperCase() != "DIV" && targetElem.nodeName.toUpperCase() != "LI")) {
                            targetElem = targetElem.parentNode;
                        } else {
                            break;
                        }
                    }
                }
            }


            var vldInpElem = getVldClickElem(targetElem) || Cmn.GetAncestorBy(targetElem, getVldClickElem);

            // If it's hoverable then process the hover event
            if (vldInpElem) {
                // Process the event
                procssHoverEvnt(vldInpElem, cntxtNm, hoverInd);

                // Handle cursor behavior.  The cursor should be a pointer because the
                // user has just moused over a valid input element.  If the cursor isn't
                // already a pointer, change it.
                if (hoverInd && mCursorIsPointerInd === false) {
                    Cmn.SetStyle(cntnr, "cursor", "pointer");
                    mCursorIsPointerInd = true;
                }
            } else {
                // If the user has moused over something and it's NOT a valid
                // input element, then we know we need to change the cursor
                // BACK to the default.  Only do this if the cursor hasn't
                // already been changed back.
                if (hoverInd && mCursorIsPointerInd) {
                    Cmn.SetStyle(cntnr, "cursor", "");
                    mCursorIsPointerInd = false;
                }
            }
        }
    };

    //------------------------------------------------------------
    // Summary: Validates a clickable element or retrieves the 
    //          correct relative node.
    // Input:   The event's target element
    // Returns: A valid clickable element
    //------------------------------------------------------------
    var getVldClickElem = function (inpElem) {

        var rtnElem = null;

        if (inpElem) {
            switch (true) {
                case (getInpElemIsVal(inpElem)):
                case (getInpElemIsDropDwnBtn(inpElem)):
                case (getInpElemIsSpecInfoLnk(inpElem)):
                case (getInpElemIsClearAllLnk(inpElem)):
                case (getInpElemIsToggleLnk(inpElem)):
                case (getInpElemIsOptOutLnk(inpElem)):

                    if (getInpElemIsOptOutLnk(inpElem)) {
                        var envrNm = Cmn.GetEnvrNm();
                        if (envrNm == Cmn.APPL_ENVR_NMS.PUBDEV
                            || envrNm == Cmn.APPL_ENVR_NMS.PUBQUAL
                            || envrNm == Cmn.APPL_ENVR_NMS.PUB) {
                            rtnElem = inpElem;
                        } else {
                            //If we're handling the "Product Count" element and the
                            //environment is external, it won't be a clickable element.
                            //The "Opt-out" feature is only available internally.
                        }
                    } else {
                        rtnElem = inpElem;
                    }

                    break;

                case (getInpElemIsDeepLnkAttrInd(inpElem)):
                    //The clickable element (the valSpec's parent) is not
                    //an ancestor to the target element, so we have to 
                    //explicitly get the parent.
                    rtnElem = getParLnkWithDeepLnkAttrElem(inpElem, VAL_SPEC_PAR_ELEM_ID_CD.CAPTION);
                    break;

                default:
                    // no other elements are clickable;
            }
        }

        return rtnElem;
    };

    //------------------------------------------------------------
    // Summary: Processes the click event to update visuals as
    //          needed, send the appropriate values to session,
    //          and publish the needed messages
    // Input:   Validated click(ed) element
    //          maintainScrollPosnInd - Denotes whether we need to keep
    //               the selected value in the same position when the page
    //               gets re-loaded.
    //------------------------------------------------------------
    var procssClckEvnt = function (inpElem, cntxtNm, maintainScrollPosnInd) {

        //Process the click event
        switch (true) {
            case (getInpElemIsVal(inpElem)):
                //Process the val click event
                procssValClckEvnt(inpElem, cntxtNm, maintainScrollPosnInd);
				// Track the attribute that has been chosen
				if (cntxtNm == 'ChooseSpecs') {
					trkSlctdVal(inpElem);
				}
                break;

            case (getInpElemIsDropDwnBtn(inpElem)):
                //Toggle the dropdown
                procssDropDwnBtnClick(inpElem);
                break;

            case (getInpElemIsSpecInfoLnk(inpElem)):
                //The visitor has clicked on a general info link
                SpecSrchWebPart.SpecInfo.Click(inpElem, cntxtNm);
                break;

            case (getInpElemIsClearAllLnk(inpElem)):
                //The visitor has clicked the "Clear All" link
                procssClearAllLnkClick(inpElem, cntxtNm);
                break;

            case (getInpElemIsToggleLnk(inpElem)):
                // Click was on a show/hide link
                toggleAttrDisplSt(inpElem, cntxtNm);
                // Publish a message that the hide/show link has been selected
                var MSG_HDR = new McMaster.MsgMgr.Hdr(McMaster.MsgMgr.CntxtNms.SPEC);
                McMaster.MsgMgr.PubMsg(new McMaster.MsgMgrMsgs.SpecToggleLnkSlctd(MSG_HDR));
                break;

            case (getInpElemIsOptOutLnk(inpElem)):

                var envrNm = Cmn.GetEnvrNm();

                if (envrNm == Cmn.APPL_ENVR_NMS.PUBDEV || envrNm == Cmn.APPL_ENVR_NMS.PUBQUAL
                    || envrNm == Cmn.APPL_ENVR_NMS.PUB) {

                    //Publish a message that the opt out link has been selected
                    var srchTxt = McMaster.SesnMgr.GetStVal(StValDefs.SlctdSrchRsltTxt.KyTxt());
                    var MSG_HDR = new McMaster.MsgMgr.Hdr(McMaster.MsgMgr.CntxtNms.LANDING_PAGE);
                    McMaster.MsgMgr.PubMsg(new McMaster.MsgMgrMsgs.DynamicContentSlctd(MSG_HDR));
                } else {
                    //The "opt-out to catalog pages" feature is only activated for internal
                    //environments.
                }
                break;

            default:
                //Do nothing
                break;
        }
    };


    //------------------------------------------------------------
    // Summary: Toggles the state of the attribute associated with
    //          the clicked element (e.g. swaps to collapsed
    //          values if the current state is expanded).
    // Input:   Validated click(ed) element
    //------------------------------------------------------------      
    var toggleAttrDisplSt = function (inpElem, cntxtNm) {

        var attrCntnr = getAttrByInnerElem(inpElem);
        if (attrCntnr) {
            //If this attribute has an open SpecInfo presentation, get it.
            var openSpecInfo = SpecSrchWebPart.SpecInfo.GetOpenSpecInfoByAttrElem(attrCntnr);

            //Close all SpecInfo presentations.
            SpecSrchWebPart.SpecInfo.CloseAll();

            //Toggle the display of the attributes.
            var complementaryDisplStAttrCntnr = getComplementaryElemById(attrCntnr.id);
            Cmn.ReplaceCls(attrCntnr, "SpecSrch_AttrShow", "SpecSrch_AttrHide");
            Cmn.ReplaceCls(complementaryDisplStAttrCntnr, "SpecSrch_AttrHide", "SpecSrch_AttrShow");

            //If the attribute to display is a scrollable list, 
            //then scroll to the first selected value in the list
            scrollSlctdValsIntoView(complementaryDisplStAttrCntnr);

            //Track when customers manually expand/collapse attributes
            var pubAttrId = getPubAttrIdFrmTxt(attrCntnr.id);
            var prodAttrId = getProdAttrIdFrmTxt(attrCntnr.id);
            var trkAttrGrpNm = me.GetAttrNm(pubAttrId);
            var trkAct = "";
            if (attrCntnr.id.Contains("_C_")) {
                // CURRENT state of attribute container is COLLAPSED
                // The action just taken by the customer will EXPAND the attribute.         
                trkAct = "Expanded";
                // Record that the attribute was explicitly expanded            
                SpecSrchInp.Get().SetExplicitlyExpandedAttr(pubAttrId).UpdateSession();
            } else {
                trkAct = "Collapsed";

                // Note that the attribute was explicitly collapsed         
                SpecSrchInp.Get().RemExplicitlyExpandedAttr(pubAttrId).UpdateSession();
            }

            //If the customer clicked the "Show" link and a specInfo presentation was open at the time,
            //re-open the specInfo presentation such that it includes information for the new set of
            //values that are in scope.
            if (Cmn.GetTxtContent(inpElem) === "Show" && openSpecInfo) {
                SpecSrchWebPart.SpecInfo.LoadSpecInfo(openSpecInfo, null, cntxtNm);
            }

            SpecInteractions.Webreports_TrkAct(cntxtNm, trkAct, trkAttrGrpNm, null, false, prodAttrId, null, inpElem);
        }
    };
	
	
	//------------------------------------------------------------
    // Summary: Called when the user selects a value and publishes
	//			information a message containing information about
	//			that value.
    // Input:   Validated click(ed) element
    //------------------------------------------------------------
	var trkSlctdVal = function (inpElem) {
	
			// The values we want to track.
			var slctdAttrNmTxt = '';
			var slctdAttrPosNbr = 0;
			var slctdAttrAbvFoldInd = true;
		
			// Find the attribute corresponding to the clicked element.
			var slctdAttr = Cmn.GetAncestorByClsNm(inpElem, 'SpecSrch_Attribute');
			
			// Find the name of that attribute.
			var slctdAttrNmElems = Cmn.GetElementsByClsNm('SpecSrch_Lbl', 'th', slctdAttr);
			if (slctdAttrNmElems.length > 0) slctdAttrNmTxt = Cmn.GetTxtContent(slctdAttrNmElems[0]);
			
			// Find the position of the attribute amongst all attributes on the page.
			var allAttrs = Cmn.GetElementsByClsNm('SpecSrch_Attribute', 'div');
			for (i=0;i<allAttrs.length;i++) {
				if(allAttrs[i] == slctdAttr) {
					slctdAttrPosNbr = i + 1;
				}
			}
			
			// Determine whether the attribute was visible when the page loaded.
			
			var topPxNbr = slctdAttr.offsetTop; 
					// pixels from the top of the spec search to the top of the selected attribute
			var visiblePxNbr = 0;
			var specSrchInnerArr = Cmn.GetElementsByClsNm('SpecSrch_Inner');
			if (specSrchInnerArr.length > 0) visiblePxNbr = specSrchInnerArr[0].offsetHeight;
					// pixels from the top of the spec search to the bottom of the page
			if (topPxNbr < visiblePxNbr) {
				slctdAttrAbvFoldInd = true;
			} else {
				slctdAttrAbvFoldInd = false;
			}
			
			// Publish a message.
			var hdr = new McMaster.MsgMgr.Hdr(McMaster.MsgMgr.CntxtNms.SPEC);
			var msg = new McMaster.MsgMgrMsgs.ProdInfoSlctd(hdr, 'SpecSrch', slctdAttrNmTxt, slctdAttrPosNbr, slctdAttrAbvFoldInd)
			McMaster.MsgMgr.PubMsg(msg);
			
	};

    //------------------------------------------------------------
    // Summary: Scrolls selected values into view within the given container.
    // Input:   Validated click(ed) element
    //------------------------------------------------------------
    var scrollSlctdValsIntoView = function (cntnrElem) {

        if (cntnrElem) {
            //If the attribute to display is a scrollable list, 
            //then scroll to the first selected value in the list
            var scrollCntnrs = Cmn.GetElementsByClsNm("SpecSrch_ScrollCntnr", "div", cntnrElem);
            for (cntnrIdx = 0; cntnrIdx < scrollCntnrs.length; cntnrIdx++) {
                var currCntnr = scrollCntnrs[cntnrIdx];
                var slctdVals = Cmn.GetElementsByClsNm("SpecSrch_SlctdVal", "td", currCntnr)
                                 || Cmn.GetElementsByClsNm("SpecSrch_SlctdVal", "tr", currCntnr);
                if (slctdVals && slctdVals.length > 0) {
                    Cmn.SetVerticalScrollPosn(currCntnr, (slctdVals[0].offsetTop - (currCntnr.offsetHeight / 3)));
                }
            }
        }
    };

    var getInpElem = function (inpElem, cntxtNm) {
        if (cntxtNm.toUpperCase() == "LANDINGPAGE") {
            while (inpElem) {
                if (inpElem.tagName == "li" || Cmn.HasCls(inpElem, LANDING_PG_ATTR_CLS_NM)) {
                    break;
                }
                inpElem = inpElem.parentNode;
            }
        }
        return inpElem;
    }

    var getLegacyCntntTrm = function (inpElem, cntxtNm) {
        var rtnTrmTxt = "";
        if (cntxtNm.toUpperCase() == "LANDINGPAGE") {
            if (inpElem) {
                var cntntTrm = inpElem.getAttribute("legacyCntntTrm");
                if (cntntTrm) {
                    rtnTrmTxt = cntntTrm;
                }
            }
        }
        return rtnTrmTxt;
    }


    //---------------------------------------------------------------------------
    // Summary: Completes processing of clickable element.
    // Input:   currSpecUsrInp      - spec search user inputs
    //          slctdElem        - The node that encapsulates the clickable element 
    //                             associated with the element selected by the user.
    //          srchTrmTxt       - Search term.
    //          imgCaptionTxt    - Image caption.
    //---------------------------------------------------------------------------
    var procssLegacySrchTrmClick = function (slctdElem, srchTrmTxt) {

        var elemHgt
              , landingPageNm
              , mainContentCntnr
              , McMaster_LoadMgr = McMaster.LoadMgr
              , McMaster_SesnMgr = McMaster.SesnMgr
              , McMaster_SesnMgr_SetStVal = McMaster_SesnMgr.SetStVal
              , McMaster_SesnMgr_StValDefs = McMaster_SesnMgr.StValDefs
              , belowTheFoldInd = false
              ;



        // Determine the height offset of the element that was selected so we can determine if 
        // it was above or below the fold (a.k.a - They had to scroll to find it to click on it).               
        mainContentCntnr = Cmn.GetObj(MAIN_CONTENT_CNTNR_NM);
        elemHgt = (slctdElem.offsetTop + slctdElem.offsetHeight);

        if (elemHgt > mainContentCntnr.offsetHeight) {
            belowTheFoldInd = true;
        }


        // Display the 'wait' indicator
        McMaster_LoadMgr.UnloadCntnr(MAIN_CONTENT_CNTNR_NM);
        McMaster_LoadMgr.ShowCntnr(MAIN_CONTENT_CNTNR_NM);
        McMaster_LoadMgr.DisplWaitIcon(MAIN_CONTENT_CNTNR_NM);

        // Create a message header
        var hdr = new McMaster.MsgMgr.Hdr(McMaster.MsgMgr.CntxtNms.INTERMEDIATE_PRSNTTN);

        // Create a Search Submitted Message                
        var msg = new McMaster.MsgMgrMsgs.UsrInpTxtSubmitted(hdr, srchTrmTxt, "slct");

        // Publish the message
        McMaster.MsgMgr.PubMsg(msg);

        var srchTxt = McMaster.SesnMgr.GetStVal(McMaster.SesnMgr.StValDefs.SrchTxt.KyTxt());
    }

    //------------------------------------------------------------
    // Summary: Processes the act of selecting a value.
    // Input:   Validated click(ed) element
    //          maintainScrollPosnInd - Denotes whether we need to keep
    //               the selected value in the same position when the page
    //               gets re-loaded.
    //------------------------------------------------------------
    var procssValClckEvnt = function (inpElem, cntxtNm, maintainScrollPosnInd) {
        var prodAttrId = getProdAttrIdFrmTxt(inpElem.id);
        var prodValId = getProdValIdFrmTxt(inpElem.id);

        var pubAttrId = getPubAttrIdFrmTxt(inpElem.id);
        var pubValId = getPubValIdFrmTxt(inpElem.id);

        var legacyCntntTrm = getLegacyCntntTrm(inpElem, cntxtNm);
        if (legacyCntntTrm) {
            procssLegacySrchTrmClick(inpElem, legacyCntntTrm);
        } else {
            //Track the click-action
            var tmpAttrValNm = getCaptionLnkByInpElem(inpElem,cntxtNm).innerHTML.replace("<br>", " " );
            var trkAttrValNm = tmpAttrValNm.replace(/<.*?>/ig,"");
			trkAttrValNm = trkAttrValNm.replace("&nbsp;", "");
                                    
            var trkAttrGrpNm = me.GetAttrNm(pubAttrId);
            var trkAct = (SpecSrchInp.Get().ValExists(prodAttrId, prodValId, cntxtNm)) ? ACT.CLICK_SLCTD : ACT.CLICK_VLD;
            
            //If we clicked on a deep link we want to include it's container's attribute and value
            if ( Cmn.HasCls(inpElem, "LandingPage_DeepLnkVal") ) {
                var trkMsg = crteDeepLnkTrkMsg(inpElem,trkAttrValNm,trkAttrGrpNm);
                SpecInteractions.Webreports_TrkCustomAct(cntxtNm, trkAct, trkMsg);

                // TrkSrch wrapper
                trkSrchValSlct(trkAct, trkAttrGrpNm, trkAttrValNm, cntxtNm, prodAttrId, prodValId, inpElem);

            } else {
				var clsNm = SPEC_SRCH_ATTR_CLS_NM;
                if (cntxtNm == "LandingPage") {
					clsNm = LANDING_PG_ATTR_CLS_NM;
				}
				var ancstr = getAttrByInnerElem(inpElem, clsNm);
				var ancstrTrkAttrGrpNm = getClickedValParGrpNm(inpElem, ancstr);
                if (ancstrTrkAttrGrpNm !== trkAttrGrpNm) {
                	trkAttrGrpNm = ancstrTrkAttrGrpNm + " " + trkAttrGrpNm;
                }
                // TrkSrch is called from here as well
                SpecInteractions.Webreports_TrkAct(cntxtNm, trkAct, trkAttrGrpNm, trkAttrValNm.Trim(), false, prodAttrId, prodValId, inpElem);
            }
            
            //Reset the load indicator because an action has occurred
            McMaster.SesnMgr.SetStVal(StValDefs.ChooseSpecsLoadFrmSesnInd.KyTxt(), false);

            //Performance timer - Track the start of the click event
			var top = McMasterCom.Nav.GetTopFrame();
            var trkEvntPayload = new top.PerfTracker.EvntPayload();
            trkEvntPayload.Add("attrGrpNm", trkAttrGrpNm);
            trkEvntPayload.Add("attrValNm", trkAttrValNm);
            var trkEvnt = new top.PerfTracker.Evnt(top.PerfTracker.EvntNms.SpecIntValClick, top.PerfTracker.PgCntxtNms.DynCntnt, trkEvntPayload);

            //Figure out if the selected value is in a dropdown
            //before deciding what to do next
            if (getInpElemIsDropDwnVal(inpElem)) {
                // Process the dropdown click
                procssDropDwnValClick(prodAttrId, pubAttrId, prodValId, pubValId, inpElem, cntxtNm);
            } else if (prodAttrId && prodValId && cntxtNm != "InLnOrd" & cntxtNm != "OrdPad" & cntxtNm != McMaster.MsgMgr.CntxtNms.ITM_PRSNTTN) {
                // The visitor is interacting with a normal attribute.  
                // Toggle the filter, save it off to session, and publish a message
                SpecSrchInp.Get().ToggleVal(prodAttrId, pubAttrId, prodValId, pubValId, cntxtNm).UpdateSession().PubMsg();
            } else if (prodAttrId && prodValId && cntxtNm == McMaster.MsgMgr.CntxtNms.ITM_PRSNTTN){
				var attrNmsTxt = McMaster.SesnMgr.GetStVal(McMaster.SesnMgr.StValDefs.OldStylAttrNms.KyTxt());
                var attrValsTxt = McMaster.SesnMgr.GetStVal(McMaster.SesnMgr.StValDefs.OldStylValTxts.KyTxt());
				var qtyInpBx = Cmn.GetElementsByClsNm("InLnOrdWebPartLayout_InpBx", "input", Cmn.GetObj("ItmPrsnttnWebPart"))[0];
				var partNbrLnks = Cmn.GetElementsByClsNm("PartNbr");	
				var partNbrLnk;
				if (partNbrLnks.length > 0){
					for (var i=0; i<partNbrLnks.length; i++){
						if (!Cmn.HasCls(partNbrLnks[i], "printver")){
							partNbrLnk = partNbrLnks[i];
							break;
						}
					}
				}
				// The visitor is interacting with a normal attribute.  
                // Toggle the filter, save it off to session.
				SpecSrchInp.Get().ToggleVal(prodAttrId, pubAttrId, prodValId, pubValId, cntxtNm).UpdateSession();
				
				//Publish spec selected message
				var msgHdr = new McMaster.MsgMgr.Hdr(McMaster.MsgMgr.CntxtNms.ITM_PRSNTTN);
			    McMaster.MsgMgr.PubMsg(new McMaster.MsgMgrMsgs.ItmPrsnttnSpecSlctd(msgHdr, attrNmsTxt, attrValsTxt, null, qtyInpBx.value, false, partNbrLnk.getAttribute("data-mcm-attr-comp-itm-ids")));    
				
            } else if (prodAttrId && prodValId && cntxtNm == "InLnOrd") {
                // The visitor is interacting with a normal attribute.  
                // Toggle the filter, save it off to session, and publish a message
                var CmnObjJs = null;
                if (chkCtlgPageInd()){
                    CmnObjJs = McMasterCom.Nav.GetTopFrame().MainIFrame.Catalog.Cmn;
                }else{
                    CmnObjJs = Cmn;
                }
                
                var seqNbr = CmnObjJs.GetAncestorByClsNm(inpElem, "InLnOrdWebPartAttrCntnr").getAttribute("data-mcm-partnbr-seqnbr");
                var inLnSpecId = CmnObjJs.GetAncestorByClsNm(inpElem, "InLnOrdWebPartAttrCntnr").getAttribute("data-inlnspecid");

                var inLnSpecDict = McMaster.SesnMgr.GetStVal(StValDefs.InLnSpecUsrInps.KyTxt());
                inLnSpecDict[inLnSpecId].ToggleVal(prodAttrId, pubAttrId, prodValId, pubValId, cntxtNm);
                
                var partNbrTxt = inLnSpecId.split('_')[0];
                var partNbrLnk = fndPartNbrLnkByClsNm(partNbrTxt, "AddToOrdBxCreated", seqNbr)
                var tblRow = CmnObjJs.GetAncestorByTagNm(CmnObjJs.GetAncestorByClsNm(partNbrLnk, "ItmTblCellPartNbr"), 'tr');
                var prdGrp = CmnObjJs.GetAncestorByClsNm(partNbrLnk, "ItmTblCellPartNbr").getAttribute("data-mcm-prodgrps")
                var parentRows = CmnObjJs.GetElementsByClsNm("ItmTblSpecLnk", "td", tblRow);

                for (var parentRowIdx = 0; parentRowIdx < parentRows.length; parentRowIdx++) {
                    var parentRow = parentRows[parentRowIdx];
                    if (parentRow.getAttribute("data-mcm-prodgrps")==prdGrp) {
                        var specChoiceSlctdLnks = CmnObjJs.GetElementsByClsNm("SpecChoiceSlctd", "a", parentRow);
                        var specChoiceLnks = CmnObjJs.GetElementsByClsNm("SpecChoiceLnk", "a", parentRow);
                        if (specChoiceLnks.length > 0) {
                            if (specChoiceLnks[0].getAttribute("data-mcm-prod-attr-id") == prodAttrId) {
                                for (var specChoiceLnkIdx = 0; specChoiceLnkIdx < specChoiceSlctdLnks.length; specChoiceLnkIdx++) {
                                    CmnObjJs.ReplaceCls(specChoiceSlctdLnks[specChoiceLnkIdx], "SpecChoiceSlctd", "SpecChoiceVisitedLnk ");
                                }
                                if (inLnSpecDict[inLnSpecId].ValExists(prodAttrId, prodValId, cntxtNm)) {
                                    for (var specChoiceLnkIdx = 0; specChoiceLnkIdx < specChoiceLnks.length; specChoiceLnkIdx++) {
                                        if (prodValId == specChoiceLnks[specChoiceLnkIdx].getAttribute("data-mcm-prod-attrval-id")) {
                                            CmnObjJs.AddCls(specChoiceLnks[specChoiceLnkIdx], "SpecChoiceSlctd");
                                            CmnObjJs.RemCls(specChoiceLnks[specChoiceLnkIdx], "SpecChoiceVisitedLnk");
                                        }
                                    }
                                } else {
                                    for (var specChoiceLnkIdx = 0; specChoiceLnkIdx < specChoiceLnks.length; specChoiceLnkIdx++) {
                                        if (prodValId == specChoiceLnks[specChoiceLnkIdx].getAttribute("data-mcm-prod-attrval-id")) {
                                            CmnObjJs.RemCls(specChoiceSlctdLnks[specChoiceLnkIdx], "SpecChoiceSlctd");
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
				
				parentRows = CmnObjJs.GetElementsByClsNm("ItmTblCellPrce", "td", tblRow);
				
				for (var parentRowIdx = 0; parentRowIdx < parentRows.length; parentRowIdx++) {
                    var parentRow = parentRows[parentRowIdx];
                    if (parentRow.getAttribute("data-mcm-prodgrps") == prdGrp) {
                        var prceSlctdLnk = CmnObjJs.GetElementsByClsNm("PrceLnkSlctd", "a", parentRow)[0];
                        var prceLnk = CmnObjJs.GetElementsByClsNm("PrceLnk", "a", parentRow)[0];
                        if (prceLnk) {
							var prodAttrIds = prceLnk.getAttribute("data-mcm-prod-attr-id").split(",")
							var prodValIds = new Array;
                            CmnObjJs.ReplaceCls(prceSlctdLnk, "PrceLnkSlctd", "PrceLnkVisited ");
                            
							for (var i = 0; i < prodAttrIds.length; i++) {
							    var valId = Cmn.Utilities.Keys(inLnSpecDict[inLnSpecId].GetAttrSlctdVals(prodAttrIds[i], cntxtNm))[0]
							    if (valId){
							        prodValIds[i] = valId;
							    }
							}
                            if (prodValIds.join(",") == prceLnk.getAttribute("data-mcm-prod-attrval-id")) {
                                CmnObjJs.AddCls(prceLnk, "PrceLnkSlctd");
                                CmnObjJs.RemCls(prceLnk, "PrceLnkVisited");
                            } else {
                                CmnObjJs.RemCls(prceSlctdLnk, "PrceLnkSlctd");
                            }
                        }
                    }
                }
				
                McMaster.SesnMgr.SetStVal(StValDefs.InLnSpecUsrInps.KyTxt(), inLnSpecDict);
                InLnOrdWebPart.updtSpecAttr(inLnSpecId, inpElem);

            } else if (prodAttrId && prodValId && cntxtNm == "OrdPad") {
                // The visitor is interacting with a normal attribute.  
                // Toggle the filter, save it off to session, and publish a message

                var partNbrCol = Cmn.GetPrevSibling(Cmn.GetAncestorByClsNm(inpElem, "OrdPadProdsWebPartLayout_PartDscCell"));
                var partNbrTxt = Cmn.GetFrstChld(Cmn.GetFrstChldByClsNm(partNbrCol, "OrdPadProdsWebPart_ShowOnPending")).value;
                var lnSeqNbr = getLnSeqFrmLnElem(inpElem);
                var ordPadSpecId = partNbrTxt + "_" + lnSeqNbr;
                if (McMaster.SesnMgr.GetStVal(McMaster.SesnMgr.StValDefs.OrdLnSpecUsrInps.KyTxt()) == null) {
                    var ordLnSpecInpDict = {};
                    ordLnSpecInpDict[ordPadSpecId] = SpecSrchInp.Get().RemAll();
                    McMaster.SesnMgr.SetStVal(StValDefs.OrdLnSpecUsrInps.KyTxt(), ordLnSpecInpDict);
                }
                var ordLnSpecInpDict = McMaster.SesnMgr.GetStVal(McMaster.SesnMgr.StValDefs.OrdLnSpecUsrInps.KyTxt());
                if (ordPadSpecId in ordLnSpecInpDict) {
                    ordLnSpecInpDict[ordPadSpecId].ToggleVal(prodAttrId, pubAttrId, prodValId, pubValId, cntxtNm);
                } else {
                    //SpecSrchInp.Get().RemAll().UpdateSession();
                    ordLnSpecInpDict[ordPadSpecId] = SpecSrchInp.Get().RemAll();
                    ordLnSpecInpDict[ordPadSpecId].ToggleVal(prodAttrId, pubAttrId, prodValId, pubValId, cntxtNm);
                }

                McMaster.SesnMgr.SetStVal(StValDefs.OrdLnSpecUsrInps.KyTxt(), ordLnSpecInpDict);
                var MSG_HDR = new McMaster.MsgMgr.Hdr(McMaster.MsgMgr.CntxtNms.ORD_PAD);
                McMaster.MsgMgr.PubMsg(new McMaster.MsgMgrMsgs.OrdPadLnSpecSlctd(MSG_HDR, lnSeqNbr, partNbrTxt));

            }


            //Update the input element to reflect the selection or deselection
            toggleChkMark(inpElem);

            //Remember the position of the specification that was selected
            if (maintainScrollPosnInd) {
                SpecSrchWebPart.MaintainFocus.SavePosn(inpElem);
            }
        }
    };

    //------------------------------------------------------------
    // Summary: Creates a message that tracks a deep link click
    //          We pass in the deep link attribute and value that's
    //          was clicked on. 
    //          Then we travel up the dom to find it's container
    //          and grab it's attribute and value.
    //          Then format the tracking message
    //------------------------------------------------------------
    var crteDeepLnkTrkMsg = function(inpElem, trkAttrValNm, trkAttrGrpNm) {
		
        var ancstr = getAttrByInnerElem(inpElem, LANDING_PG_ATTR_CLS_NM);
		var ancstrTrkAttrGrpNm = getClickedValParGrpNm(inpElem, ancstr);   
        var elems = Cmn.GetElementsByClsNm("PrsnttnHdrCntnr","div",ancstr);
        var ancstrTrkAttrGrpVal= Cmn.GetTxtContent(getCaptionLnkByInpElem(elems[0],"LandingPage"));  

        var trkMsg = "&Attribute=" + ancstrTrkAttrGrpNm 
                      + "&Value=" + ancstrTrkAttrGrpVal 
                      + "&Attribute=" + trkAttrGrpNm + "&Value=" + trkAttrValNm.Trim();
        
        return trkMsg;
    };
    
    //------------------------------------------------------------
    // Summary: 
    //------------------------------------------------------------
	var getClickedValParGrpNm = function(inpElem, ancstr) {
		
		var grpNm = "";
		if (inpElem && ancstr){
			var ancstrPubAttrId = getPubAttrIdFrmTxt(ancstr.id);
			grpNm = me.GetAttrNm(ancstrPubAttrId);   
		}
	 	
	 	return grpNm
	 };    
	 
    //------------------------------------------------------------
    // Summary: Processes the act of selecting a value in a dropdown.
    //------------------------------------------------------------
    var procssDropDwnValClick = function (prodAttrId, pubAttrId, prodValId, pubValId, inpElem, cntxtNm) {

        //Get a copy of the spec search input
        var sesnSpecInp = SpecSrchInp.Get();

        //Get the value of the option selected
        var newValTxt = inpElem.innerHTML;
        var ANY_VAL_TXT = "(Any)";

        //Figure out what to update
        if (newValTxt === ANY_VAL_TXT) {
            //The "(Any)" value is selected so clear out the attribute
            sesnSpecInp.RemAttr(prodAttrId, cntxtNm);
        } else if (prodAttrId && sesnSpecInp.ValExists(prodAttrId, prodValId, cntxtNm)) {
            //The visitor is deselecting a value that was already selected
            sesnSpecInp.RemAttr(prodAttrId, cntxtNm);
            newValTxt = ANY_VAL_TXT;
        } else if (prodAttrId && prodValId) {
            //The visitor is changing their selection.  First clear out 
            //all other filters in the attribute, since dropdowns are by 
            //nature single-select attributes, then toggle the value
            sesnSpecInp.RemAttr(prodAttrId, cntxtNm);
            sesnSpecInp.ToggleVal(prodAttrId, pubAttrId, prodValId, pubValId, cntxtNm);
        } else {
            //Do nothing.
        }

        // Update the value displayed in the dropdown menu
        var dropDownMnu = Cmn.GetAncestorBy(inpElem, getInpElemIsDropDwnMenu);
        var dropDownBtn = Cmn.GetPrevSibling(dropDownMnu, getInpElemIsDropDwnMenu);
        dropDownBtn.innerHTML = newValTxt;

        // Update session and publish the spec selected message
        sesnSpecInp.UpdateSession().PubMsg();
    };

    //------------------------------------------------------------
    // Summary: Handles processing of a "clear all" link click.
    // Input:   Validated click(ed) element
    //------------------------------------------------------------
    var procssClearAllLnkClick = function (inpElem, cntxtNm) {

        //Publish Spec Search Clear All Clicked message
        McMaster.MsgMgr.PubMsg(new McMaster.MsgMgrMsgs.ChooseSpecsClearAllClick(MSG_HDR));

        //reset the load indicator because an action has occurred
        McMaster.SesnMgr.SetStVal(StValDefs.ChooseSpecsLoadFrmSesnInd.KyTxt(), false);

        //Performance timer - Track the start of the click event
		var top = McMasterCom.Nav.GetTopFrame();
        var trkEvnt = new top.PerfTracker.Evnt(top.PerfTracker.EvntNms.SpecIntClrAll, top.PerfTracker.PgCntxtNms.DynCntnt);

        // Set up a round-trip web reports performance tracker.
        SpecInteractions.Webreports_TrkAct(cntxtNm, ACT.CLEAR_ALL, null, null, true, null, null, inpElem);

        //Immediately hide the "clear all" link to provide instant feedback
        Cmn.SetStyle(inpElem, "display", "none");

        //Scroll to the top of the specification search pane
        var specSrchCntnr = Cmn.GetObj("SpecSrch_Inner");
        Cmn.SetVerticalScrollPosn(specSrchCntnr, 0);

        //Close any open specification information presentations.
        SpecSrchWebPart.SpecInfo.Unload();

        // Commented out prior to product page change.      
        //            var loadFrmSesnInd = GetStVal(StValDefs.ChooseSpecsLoadFrmSesnInd.KyTxt());
        //            if (!loadFrmSesnInd) {
        //clear the filters and update session 
        SpecSrchInp.Get().RemAll().UpdateSession();
        //clear dynamic page presentation stats
        McMaster.SesnMgr.RemStVal(StValDefs.DynamicPagePrsnttnStats.KyTxt());
        //publish a "specification selected" message
        McMaster.MsgMgr.PubMsg(new McMaster.MsgMgrMsgs.SpecSlctd(MSG_HDR));
        //            }

        //Web reports tracking
        SpecInteractions.Webreports_TrkTrip(cntxtNm);

        var srchTrkInfo = new SrchTrkr.SrchDat({ usr: SrchTrkr.UsrActTyps.SLCT });
        srchTrkInfo.usr.elemTyp = SrchTrkr.ElemTyps.CLR_ALL_SPECS_LNK;
        srchTrkInfo.usr.srcNm = getSrcNmFrmCntxt(cntxtNm);
        srchTrkInfo.Trk();
    };

    //------------------------------------------------------------
    // Summary: Handles clicks for dropdown buttons.
    // Input:   inpElem  - Validated clicked element
    //------------------------------------------------------------
    var procssDropDwnBtnClick = function (inpElem) {

        // Get the corresponding dropdown menu for the button that was selected
        var dropDownMenu = Cmn.GetNxtSiblingBy(inpElem, getInpElemIsDropDwnMenu);

        // If another dropdown menu is already open, close it
        if (mOpenDropDownMenu && dropDownMenu !== mOpenDropDownMenu) {
            SpecInteractions.ToggleDropDwnMenu(mOpenDropDownMenu);
        }

        // Open the dropdown menu
        SpecInteractions.ToggleDropDwnMenu(dropDownMenu);

        // Handle instances where the menu is scrolled off the screen
        procssDropDwnScrolledOffScreen(inpElem, dropDownMenu);

        // Scroll to the first selected value in the list
        scrollSlctdValsIntoView(dropDownMenu.parentNode);
    };

    //------------------------------------------------------------
    // Summary: Handles instances where a dropdown menu is
    //          scrolled off the bottom of the screen
    // Input:   dropDownBtn, dropDownMenu  - Dropdown button and menu
    //------------------------------------------------------------
    var procssDropDwnScrolledOffScreen = function (dropDownBtn, dropDownMenu) {

        // Reset the dropdown menu
        dropDownMenu.style.top = "";

        // Gather information about the spec search pane
        var cntnr = Cmn.GetObj("SpecSrch_Inner");
        var cntnrHeight = (cntnr.offsetHeight);
        var cntnrScrollPosn = Cmn.GetVerticalScrollPosn(cntnr);

        // Gether information about the dropdown button
        var dropDownBtnTop = Cmn.GetYOffset(dropDownBtn) - Cmn.GetYOffset(cntnr);
        var dropDownBtnHeight = dropDownBtn.offsetHeight;
        var dropDownBtnBottom = dropDownBtnTop + dropDownBtnHeight;

        // Gather information about the position of the dropdown menu
        var dropDownMenuTop = dropDownBtnBottom - 1; // remove one pixel so the borders overlap
        var dropDownMenuHeight = dropDownMenu.offsetHeight;
        var dropDownMenuBottom = dropDownMenuTop + dropDownMenuHeight;
        var relativeMenuBottom = dropDownMenuBottom - cntnrScrollPosn;
        var menuIsOffScreenInd = (relativeMenuBottom > cntnrHeight);

        // Determine the position of the dropdown menu based on whether it's off the screen
        if (menuIsOffScreenInd) {
            // If the dropdown menu is hanging off the screen, shift it up
            dropDownMenu.style.top = (dropDownBtnTop - dropDownMenuHeight + 1) + "px"; // remove one pixel so the borders overlap
        } else {
            // If the dropdown menu is not hanging off the screen, position it below the button
            dropDownMenu.style.top = (dropDownMenuTop) + "px";
        }
    };

    //------------------------------------------------------------
    // Summary: Toggles a dropdown menu's visibiility.
    // Input:   inpElem  - Validated clicked element
    //------------------------------------------------------------
    this.ToggleDropDwnMenu = function (dropDownMenu) {

        if (dropDownMenu) {
            var menuHiddenClsNm = 'SpecSrch_DropDownMenuHidden',
                    menuVisibleClsNm = 'SpecSrch_DropDownMenuVisible';

            // Swap the hidden/visibility classes
            swapClsNms(dropDownMenu, menuHiddenClsNm, menuVisibleClsNm);

            // Update the open dropdown menu
            if (Cmn.HasCls(dropDownMenu, menuVisibleClsNm)) {
                mOpenDropDownMenu = dropDownMenu;
            } else {
                mOpenDropDownMenu = null;
            }
        }
    };

    //------------------------------------------------------------
    // Summary: Processes the hover event to let a visitor know
    //          that an element on the page is interactive.
    // Input:   inpElem  - Validated hover(ed) element
    //          hoverInd - True if the mouse is currently hovering over it
    //------------------------------------------------------------
    var procssHoverEvnt = function (inpElem, cntxtNm, hoverInd) {

        var hoverAction = (hoverInd) ? Cmn.AddCls : Cmn.RemCls;
        var pointerClsNm = "SpecSrch_Pointer";

        // Toggle the pointer
        if (inpElem) {
            hoverAction(inpElem, pointerClsNm);
        }

        // Handle other specific mouseover behaviors
        if (Cmn.HasCls(inpElem, "SpecSrch_Value") || Cmn.HasCls(inpElem, LANDING_PG_ATTR_CLS_NM) || Cmn.HasCls(inpElem, "LandingPage_DeepLnkVal")) {
            // Handle values
            var imgLnk = getImgLnkByInpElem(inpElem, cntxtNm);
            var captionLnk = getCaptionLnkByInpElem(inpElem, cntxtNm);
            //            var deepLnkAttr = getDeepLnkAttrByInpElem(inpElem);
            var compositeRowElems = getCompositeRowElems(inpElem);
            //            var parCaptionLnk = getParLnkWithDeepLnkAttrElem(deepLnkAttr, VAL_SPEC_PAR_ELEM_ID_CD.CAPTION);
            //            var parImgLnk = getParLnkWithDeepLnkAttrElem(deepLnkAttr, VAL_SPEC_PAR_ELEM_ID_CD.IMG);
            //            


            // Handle the image, caption, and other elements (i.e. the "Any" dropdown value)
            var hoverClassNm = "SpecSrch_Value_Hover";
            if (compositeRowElems && compositeRowElems.length > 0) {
                // composite table value
                for (var i = 0; i < compositeRowElems.length; i++) {
                    hoverAction(compositeRowElems[i], hoverClassNm);
                }
            } else {
                if (imgLnk) {
                    if (cntxtNm && cntxtNm.toLowerCase() == "landingpage") {
                        //                        switch (true) {
                        ////                            case (Cmn.HasCls(imgLnk, "SpecSrch_SideBySideImgSpacing")):
                        ////                                hoverAction(imgLnk, "LandingPage_SideBySideImg_Hover");
                        ////                                break;
                        ////                            case (Cmn.HasCls(imgLnk, "SpecSrch_StackedImgSpacing")):
                        ////                                hoverAction(imgLnk, "LandingPage_StackedImg_Hover");
                        ////                                break;
                        ////                            case (Cmn.HasCls(imgLnk, "LandingPage_ComplexStackedImg")):
                        ////                                hoverAction(imgLnk, "LandingPage_ComplexStackedImg_Hover");
                        ////                                break;
                        //                            default:
                        //                                hoverAction(imgLnk, hoverClassNm);
                        //                        }
                    } else {
                        hoverAction(imgLnk, hoverClassNm);
                    }
                }


                if (captionLnk) {
                    if (cntxtNm && cntxtNm.toLowerCase() == "landingpage") {
                        switch (true) {
                            //                            case (Cmn.HasCls(captionLnk, "SpecSrch_SideBySideTxtPadding")):                        
                            //                                hoverAction(captionLnk, "LandingPage_SideBySideTxt_Hover");                        
                            //                                break;                        
                            //                            case (Cmn.HasCls(captionLnk, "LandingPage_StackedTxt")):                        
                            //                                hoverAction(captionLnk, "LandingPage_StackedTxt_Hover");                        
                            //                                break;                        
                            //                            case (Cmn.HasCls(captionLnk, "LandingPage_ComplexStackedTop")):                        
                            //                                hoverAction(captionLnk, "LandingPage_ComplexStackedTop_Hover");                        
                            //                                break;                        
                            //                            case (Cmn.HasCls(captionLnk, "LandingPage_DeepLnkVal")):                        
                            //                                hoverAction(captionLnk, "LandingPage_DeepLnkVal_Hover");                        
                            //                                break;                        
                            case (Cmn.HasCls(inpElem, "LandingPage_NoDeepLnks")):
                                break;
                            default:
                                hoverAction(captionLnk, "LandingPage_Val_Hover");
                        }
                    } else {
                        hoverAction(captionLnk, hoverClassNm);
                    }
                }


                //                if (deepLnkAttr) {
                //                    if (cntxtNm && cntxtNm.toLowerCase() == "landingpage") {
                //                        hoverAction(deepLnkAttr, "LandingPage_DeepLnkAttr_Hover");
                //                    }
                //                }
                //                
                //                if (parCaptionLnk) {
                //                    if (Cmn.HasCls(parCaptionLnk, "LandingPage_ComplexStackedTop")) {
                //                        hoverAction(parCaptionLnk, "LandingPage_ComplexStackedTop_Hover_Border");
                //                    }        
                //                }

                //                if (parImgLnk) {
                //                    if (Cmn.HasCls(parImgLnk, "LandingPage_ComplexStackedImg")) {
                //                        hoverAction(parImgLnk, "LandingPage_ComplexStackedImg_Hover");
                //                    }        
                //                }


                if (imgLnk == null && captionLnk == null && compositeRowElems.length === 0 && inpElem && deepLnkAttr == null && parCaptionLnk == null && parImgLnk == null) {
                    hoverAction(inpElem, hoverClassNm);
                }
            }

        } else if (Cmn.HasCls(inpElem, "SpecSrch_ClearAllLnk")) {
            // Handle the "clear all" link
            hoverAction(inpElem, "SpecSrch_ClearAllLnk_Hover");

        } else if (Cmn.HasCls(inpElem, "SpecSrch_MoreLnk")) {
            // Figure out what action should be applied
            var hoverAction = (hoverInd) ? Cmn.AddCls : Cmn.RemCls;
            var hoverClassNm = "SpecSrch_MoreLnk_Hover";
            hoverAction(inpElem, hoverClassNm);

        } else if (Cmn.HasCls(inpElem, "SpecSrch_GenInfoLnk")) {
            // Handle general info links
            if (hoverInd) {
                if (Cmn.HasCls(inpElem, "SpecSrch_GenInfoLnk_Slctd")) {
                    Cmn.ReplaceCls(inpElem, "SpecSrch_GenInfoLnk_Slctd", "SpecSrch_GenInfoLnk_Hover_Slctd");
                } else {
                    Cmn.AddCls(inpElem, "SpecSrch_GenInfoLnk_Hover");
                }
            } else {
                if (Cmn.HasCls(inpElem, "SpecSrch_GenInfoLnk_Hover_Slctd")) {
                    Cmn.ReplaceCls(inpElem, "SpecSrch_GenInfoLnk_Hover_Slctd", "SpecSrch_GenInfoLnk_Slctd");
                } else {
                    Cmn.RemCls(inpElem, "SpecSrch_GenInfoLnk_Hover");
                }
            }
        } else if (Cmn.HasCls(inpElem, "WebToolsetToolWebPart_TxtTool_Cntnr")) {
            hoverAction(inpElem, "WebToolsetToolWebPart_TxtTool_Cntnr_Hover");
        }
    };

    //------------------------------------------------------------
    // Summary: Toggles the checkmark on a specification
    // Input:   Markup element
    //------------------------------------------------------------
    var toggleChkMark = function (inpElem) {

        var chkMarkElem = getCompositeValChkMarkElem(inpElem)
                           || getImgLnkByInpElem(inpElem)
                           || getCaptionLnkByInpElem(inpElem);

        //Assign a special selected value style for touch devices.
        if (Cmn.IsTouchAware() === true && Cmn.HasCls(inpElem, "SpecSrch_Img") === false) {
            toggleClsNm(chkMarkElem, "Touch_SpecSrch_SlctdVal");
        } else {
            toggleClsNm(chkMarkElem, "SpecSrch_SlctdVal");
        }
    };

    //------------------------------------------------------------
    //------------------------------------------------------------
    // Summary: Toggles the class name on a specification
    // Input:   Markup element
    //------------------------------------------------------------
    var toggleClsNm = function (inpElem, aClsNm) {

        if (Cmn.HasCls(inpElem, aClsNm)) {
            Cmn.RemCls(inpElem, aClsNm);
        } else {
            Cmn.AddCls(inpElem, aClsNm);
        }
    };

    //------------------------------------------------------------
    // Summary: Swaps one class name for another.
    // Input:   Markup element and two CSS class names
    //------------------------------------------------------------
    var swapClsNms = function (inpElem, aClsNm, bClsNm) {
        switch (true) {
            case (Cmn.HasCls(inpElem, aClsNm)):
                Cmn.ReplaceCls(inpElem, aClsNm, bClsNm);
                break;
            case (Cmn.HasCls(inpElem, bClsNm)):
                Cmn.ReplaceCls(inpElem, bClsNm, aClsNm);
                break;
            default:
                //do nothing
        }
    };

    //------------------------------------------------------------
    // Summary: Returns true if the given element is a value.
    // Input:   Markup element
    //------------------------------------------------------------
    var getInpElemIsVal = function (inpElem) {
        var rtnInd = false;
        if (Cmn.HasCls(inpElem, "SpecSrch_Value") || Cmn.HasCls(inpElem, LANDING_PG_ATTR_CLS_NM)
         || Cmn.HasCls(inpElem, "LandingPage_DeepLnkVal")) {
			if (Cmn.HasCls(inpElem, "oldStylSpecVal") == false){
				rtnInd = true;
			}
        }
        return rtnInd;
    };

    //------------------------------------------------------------
    // Summary: Returns true if the given element is a dropdown button.
    // Input:   Markup element
    //------------------------------------------------------------
    var getInpElemIsDropDwnBtn = function (inpElem) {
        return (Cmn.HasCls(inpElem, "SpecSrch_DropDownBtn"));
    };

    //------------------------------------------------------------
    // Summary: Returns true if the given element is a dropdown menu.
    // Input:   Markup element
    //------------------------------------------------------------
    var getInpElemIsDropDwnMenu = function (inpElem) {
        return (Cmn.HasCls(inpElem, 'SpecSrch_DropDownMenu'));
    };

    //------------------------------------------------------------
    // Summary: Returns true if the given element is a value in a dropdown menu.
    // Input:   Markup element
    //------------------------------------------------------------
    var getInpElemIsDropDwnVal = function (inpElem) {
        return (!!Cmn.GetAncestorBy(inpElem, getInpElemIsDropDwnMenu));
    };

    //------------------------------------------------------------
    // Summary: Returns true if the given element is a specification
    //          information link
    // Input:   Markup element
    //------------------------------------------------------------
    var getInpElemIsSpecInfoLnk = function (inpElem) {
        return (Cmn.HasCls(inpElem, "SpecSrch_GenInfoLnk"));
    };

    //------------------------------------------------------------
    // Summary: Returns true if the given element is the 
    //          "Clear All" link
    // Input:   Markup element
    //------------------------------------------------------------
    var getInpElemIsClearAllLnk = function (inpElem) {
        return (Cmn.HasCls(inpElem, "SpecSrch_ClearAllLnk"));
    };

    //------------------------------------------------------------
    // Summary: Returns true if the given element is a toggle link,
    //          i.e. "show/hide" link.
    // Input:   Markup element
    //------------------------------------------------------------
    var getInpElemIsToggleLnk = function (inpElem) {
        return (Cmn.HasCls(inpElem, "SpecSrch_MoreLnk"));
    };

    //------------------------------------------------------------
    // Summary: Returns true if the given element or an ancestor
    //          is an opt-out link on a landing page.
    // Input:   Markup element
    //------------------------------------------------------------
    var getInpElemIsOptOutLnk = function (inpElem) {
        return (Cmn.HasCls(inpElem, "WebToolsetToolWebPart_TxtTool_Cntnr"));
    };


    //------------------------------------------------------------
    // Summary: Returns true if the given element or an ancestor
    //          is a deep link attribute.
    // Input:   Markup element
    //------------------------------------------------------------
    var getInpElemIsDeepLnkAttrInd = function (inpElem) {
        if (Cmn.HasCls(inpElem, "LandingPage_DeepLnkVal") ||
        Cmn.GetAncestorByClsNm(inpElem, "LandingPage_DeepLnkVal")) {
            return true;
        }
        if (Cmn.HasCls(inpElem, "LandingPage_ComplexStackedDeepLnks")) {
            return true;
        } else if (Cmn.GetAncestorByClsNm(inpElem, "LandingPage_ComplexStackedDeepLnks")) {
            return true;
        } else {
            return false;
        }
    };


    //------------------------------------------------------------
    // Summary: Retreives the deep link attribute element that's identified 
    //          by the given input element.
    // Input:   The input target element
    // Return:  A reference to the link containing that element's deep links.
    //------------------------------------------------------------
    var getDeepLnkAttrByInpElem = function (inpElem) {

        var rtnElem;

        if (Cmn.HasCls(inpElem, "LandingPage_DeepLnkVal")) {
            rtnElem = Cmn.GetAncestorByClsNm(inpElem, "LandingPage_ComplexStackedDeepLnks");
        } else {
            // If a value has deep links, then the input element should have a "rel" attribute that
            // allows us to get the deep link attribute element.
            var relAttribute = inpElem.getAttribute("rel");
            if (relAttribute) {
                var valSpecAttributeTxt = relAttribute.split(":")[1];
                var valSpecProdAttrId = valSpecAttributeTxt.split("_")[0];
                var valSpecPubAttrId = valSpecAttributeTxt.split("_")[1];

                deepLnkAttr = Cmn.GetObj("LP_E_" + valSpecProdAttrId + "_" + valSpecPubAttrId);
                rtnElem = Cmn.GetAncestorByClsNm(deepLnkAttr, "LandingPage_ComplexStackedDeepLnks");
            }
        }

        return rtnElem;
    };


    //------------------------------------------------------------
    // Summary: Retrieves the parent value's caption element 
    // Input:   Markup element
    //------------------------------------------------------------
    var getParLnkWithDeepLnkAttrElem = function (inpElem, parElemIdCode) {

        var rtnElem;

        var deepLnkAttrElem;
        if (Cmn.HasCls(inpElem, "LandingPage_ComplexStackedDeepLnks")) {
            deepLnkAttrElem = inpElem;
        } else {
            deepLnkAttrElem = Cmn.GetAncestorByClsNm(inpElem, "LandingPage_ComplexStackedDeepLnks");
        }

        if (Cmn.HasCls(inpElem, "LandingPage_DeepLnkVal")) {
            deepLnkAttrElem = inpElem;
        } else {
            deepLnkAttrElem = Cmn.GetAncestorByClsNm(inpElem, "LandingPage_DeepLnkVal");
        }


        if (deepLnkAttrElem) {
            // Get the first deep link value. The html for this element will have a rel attribute from which we can
            // get the parent caption link
            var firstDeepLnkValElem = Cmn.GetElementsByClsNm("LandingPage_DeepLnkVal", "div", deepLnkAttrElem)[0];
            if (firstDeepLnkValElem) {
                var relAttribute = firstDeepLnkValElem.getAttribute("rel");

                var parAttributeTxt = relAttribute.split(":")[1];
                var parValTxt = relAttribute.split(":")[3];

                var parProdAttrId = parAttributeTxt.split("_")[0];
                var parPubAttrId = parAttributeTxt.split("_")[1];

                var parProdValId = parValTxt.split("_")[0];
                var parPubValId = parValTxt.split("_")[1];

                parLnk = Cmn.GetObj("LP_E_" + parProdAttrId + "_" + parPubAttrId + "_" + parElemIdCode + "_" + parProdValId + "_" + parPubValId);
                if (parLnk) {
                    rtnElem = getVldClickElem(parLnk) || Cmn.GetAncestorBy(parLnk, getVldClickElem);
                }
            }
        }

        return rtnElem;
    };

    //------------------------------------------------------------  
    // <summary>
    // Get the part number link on which the user clicked based on the 
    // class name passed through. 
    // </summary>
    // <param name="partNbrTxt">The part number text.</param>
    // <param name="clsNm">The class name on the part number link we're seeking.</param>
    // <remarks> The class name indicates whether or not the box has been opened.</remarks>
    //------------------------------------------------------------
    var fndPartNbrLnkByClsNm = function (partNbrTxt, clsNm, seqNbr) {
        var slctdPartNbrIdx;
        
        var CmnObjJs = null;
        if (chkCtlgPageInd()){
            CmnObjJs = McMasterCom.Nav.GetTopFrame().MainIFrame.Catalog.Cmn;
        }else{
            CmnObjJs = Cmn;
        }
        
        var partNbrLnks = CmnObjJs.GetElementsByClsNm(clsNm, "a");

        // Look through part number links and find the one with the 
        // passed in class name and part number text as innerHTML 
        // that is in a table.  We want to ignore 
        // links not in a table, since we can not open our box for them.
        for (var lnkIdx = 0; lnkIdx < partNbrLnks.length; lnkIdx++) {
            if (partNbrLnks[lnkIdx].innerHTML == partNbrTxt &&
                partNbrLnks[lnkIdx].parentNode.tagName == "TD" && 
                seqNbr == partNbrLnks[lnkIdx].getAttribute("data-mcm-partnbr-seqnbr")) {
                slctdPartNbrIdx = lnkIdx;
                break;
            }
        }
        return partNbrLnks[slctdPartNbrIdx];
    }
    //------------------------------------------------------------
    // Summary: Retreives the product version of the attribute id 
    //          from the markup id
    // Input: element's id attribute
    // Return: String of specification's product attribute id
    //------------------------------------------------------------
    var getProdAttrIdFrmTxt = function (elemIdTxt) {
        return elemIdTxt.split('_')[2];
    };

    //------------------------------------------------------------
    // Summary: Retreives the publishing version of the attribute id 
    //          from the markup id
    // Input: element's id attribute
    // Return: String of specification's publishing attribute id
    //------------------------------------------------------------
    var getPubAttrIdFrmTxt = function (elemIdTxt) {
        return elemIdTxt.split('_')[3];
    };

    //------------------------------------------------------------
    // Summary: Retreives the prefix id text from the markup id
    //          of a value in a composite table.
    // Input: element's id attribute
    // Return: Prefix string of specification's attribute id
    //------------------------------------------------------------      
    var getCompositeValIdPrefixTxt = function (elemIdTxt) {
        // Split on delimiter
        var splitTxt = elemIdTxt.split("_");

        // remove the digit suffix
        splitTxt.pop();

        return splitTxt.join("_");
    };

    //------------------------------------------------------------
    // Summary: Retreives the product version of the value id 
    //          from the markup id
    // Input: element's id attribute
    // Return: String of specification's product value id
    //------------------------------------------------------------
    var getProdValIdFrmTxt = function (elemIdTxt) {
        return elemIdTxt.split('_')[5];
    };

    //------------------------------------------------------------
    // Summary: Retreives the publishing version of the value id 
    //          from the markup id
    // Input: element's id attribute
    // Return: String of specification's publishing value id
    //------------------------------------------------------------
    var getPubValIdFrmTxt = function (elemIdTxt) {
        return elemIdTxt.split('_')[6];
    };

    //------------------------------------------------------------
    // Summary: Retreives the type of value from the markup id
    // Input: element's id attribute
    // Return: A short string of the specification's type of data.
    //         This could be things like T(ext), I(mage), or
    //         T(ext)O(nly), etc.
    //------------------------------------------------------------
    var getValTypFrmTxt = function (elemIdTxt) {
        return elemIdTxt.split('_')[4];
    };

    //------------------------------------------------------------
    // Summary: Retreives an attribute given an element inside it.
    // Input:   An element within the attribute
    // Return:  A reference to the attribute containing that element.
    //------------------------------------------------------------
    var getAttrByInnerElem = function (inpElem, clsNm) {
 
        //default to spec search attribute class name   
        if (clsNm == undefined || clsNm.length === 0) {
            clsNm = SPEC_SRCH_ATTR_CLS_NM;   
        }
        
        if (Cmn.HasCls(inpElem, clsNm)) {
            // Return the element itself since it's the attribute
            return inpElem;
        } else {
            // Return the nearest ancestor that's an attribute
            return Cmn.GetAncestorByClsNm(inpElem, clsNm);
        }
    };

    //------------------------------------------------------------
    // Summary: Returns the element that's visible for the given ID.
    // Input:   An element ID
    // Returns: The element with the given ID, or its complementary
    //          element -- whichever one is visible at the time.
    //------------------------------------------------------------          
    getVisibleElemById = function (idTxt) {

        var elemA = Cmn.GetObj(idTxt),
                elemB = getComplementaryElemById(idTxt);

        if (getElemIsVisible(elemA)) {
            return elemA;
        } else if (getElemIsVisible(elemB)) {
            return elemB;
        } else {
            return null;
        }
    };

    //------------------------------------------------------------
    // Summary: Returns true if the given element is visible.
    // Input:   An HTML element
    //------------------------------------------------------------          
    var getElemIsVisible = function (elem) {

        var attr = (elem) ? getAttrByInnerElem(elem,SPEC_SRCH_ATTR_CLS_NM) : null;
        return (attr && Cmn.HasCls(attr, "SpecSrch_AttrShow") && attr.style.display !== "none");
    };

    //------------------------------------------------------------
    // Summary: Returns the html element that complements the
    //          display state of the passed-in attribute container.
    // Input:   Validated click(ed) element
    //------------------------------------------------------------          
    var getComplementaryElemById = function (idTxt) {

        var complementaryIdTxt = "";

        if (idTxt.indexOf("_C_") >= 0) {
            complementaryIdTxt = idTxt.replace("_C_", "_E_");
        } else {
            complementaryIdTxt = idTxt.replace("_E_", "_C_");
        }

        return Cmn.GetObj(complementaryIdTxt);
    };

    //------------------------------------------------------------
    // Summary: Returns the caption for the given image element, or vice versa.
    // Input:   Validated click(ed) element
    //------------------------------------------------------------          
    var getComplementaryImgTxtElemById = function (inpElem) {

        var complementaryIdTxt = "";

        if (inpElem.id.indexOf("_I_") >= 0) {
            complementaryIdTxt = inpElem.id.replace("_I_", "_T_");
        } else {
            complementaryIdTxt = inpElem.id.replace("_T_", "_I_");
        }

        var idEq = function (elem) {
            return elem.id == complementaryIdTxt
        }

        return Cmn.GetElementBy(idEq, null, Cmn.GetAncestorByTagNm(inpElem, "table"));
    };

    //------------------------------------------------------------
    // Summary: Retreives the image link that's identified 
    //          by the given input element.
    // Input:   The input target element
    // Return:  A reference to the link containing that element's image.
    //------------------------------------------------------------
    var getImgLnkByInpElem = function (inpElem, cntxtNm) {
        var imgElem = null;
        if (cntxtNm && cntxtNm.toUpperCase() == "LANDINGPAGE" && inpElem) {
            var imgElems = Cmn.GetElementsByClsNm("ImgsCntnr", "div", inpElem);
            if (imgElems && imgElems.length > 0) {
                imgElem = imgElems[0];
            }

        } else {
            if (inpElem.id.indexOf("_I_") >= 0) {
                // The given element was the image
                imgElem = inpElem;
            } else {
                // Return the image
                imgElem = getComplementaryImgTxtElemById(inpElem);
            }
        }
        return imgElem;
    };

    //------------------------------------------------------------
    // Summary: Retreives the caption link that's identified 
    //          by the given input element.
    // Input:   The input target element
    // Return:  A reference to the link containing that element's caption.
    //------------------------------------------------------------
    var getCaptionLnkByInpElem = function (inpElem, cntxtNm) {
        var captionElem = null;
        if (cntxtNm && cntxtNm.toUpperCase() == "LANDINGPAGE" && inpElem) {
            if (Cmn.HasCls(inpElem, "PrsnttnHdrCntnr")) {
                captionElem = inpElem;
            } else {
                var captionElems = Cmn.GetElementsByClsNm("PrsnttnHdrCntnr", "div", inpElem);
                if (captionElems && captionElems.length > 0) {
                    captionElem = captionElems[0];
                }
            }

        } else {
            if (inpElem.id.indexOf("_T_") >= 0) {
                // The given element is the caption
                captionElem = inpElem;
            } else {
                // Return the caption
                captionElem = getComplementaryImgTxtElemById(inpElem);
            }
        }
        
        return captionElem;
    };
    
    //------------------------------------------------------------
    // <summary>
    // Given an HTMLelement from an order line, determines the sequence
    // number of the order line.
    // </summary>
    // <param name="elemOrId">
    // An HTML element or the ID of an HTML element found within an order
    // line.
    // </param>
    // <returns>
    // The sequence number of the order line that contains the specified
    // element or -1 if no sequence is found.
    // </returns>
    //------------------------------------------------------------
    var getLnSeqFrmLnElem = function (elemOrId) {
        var rtnLnSeq = -1;
        var ordLnRow;

        ordLnRow = Cmn.GetAncestorByClsNm(elemOrId, "OrdPadProdsWebPart_LnRow")

        // This check is here to avoid errors when the calling code passes
        // an element in that actually isn't in an order line row.
        if (ordLnRow && ordLnRow.className) {
            var clsNms = ordLnRow.className.split(" ");

            for (var clsIdx = 0; clsIdx < clsNms.length; clsIdx++) {
                if (mLnSeqRegex.test(clsNms[clsIdx])) {
                    rtnLnSeq = clsNms[clsIdx].match(mNbrRegex)[0];
                    break;
                }
            }
        }

        return rtnLnSeq;
    };
    //------------------------------------------------------------
    // Summary: Retreives the elements associated with a visual
    //          row of values in a composite table (e.g. Overall Size).
    // Input:   The input target element
    // Return:  An array of associated elements.
    //------------------------------------------------------------
    var getCompositeRowElems = function (inpElem) {
        var rtnVal = [];

        if (isCompositeVal(inpElem)) {
            var prefixTxt = getCompositeValIdPrefixTxt(inpElem.id);

            // HACK
            // There's no way at the moment to know how many implicit
            // sibling composite table values are present.  The code
            // below is arbitrary.
            for (var i = 1; i <= 3; i++) {
                var siblingElem = Cmn.GetObj(prefixTxt + "_" + i);
                if (siblingElem) { rtnVal.push(siblingElem); }
            }
        }

        return rtnVal;
    };

    //------------------------------------------------------------
    // Summary: Returns the html element of the value in a composite
    //          that should have a checkmark.
    //          
    // Input:   The input target element
    // Return:  First element in composite table visual row.  If
    //          passed-in value is not a value in a composite table,
    //          returns null;
    //------------------------------------------------------------      
    var getCompositeValChkMarkElem = function (inpElem) {
        var rtnVal = null;

        if (isCompositeVal(inpElem)) {
            var prefixTxt = getCompositeValIdPrefixTxt(inpElem.id);
            var frstElemInRow = Cmn.GetObj(prefixTxt + "_1");
            if (frstElemInRow) { rtnVal = frstElemInRow; }
        }

        return rtnVal;
    };

    //------------------------------------------------------------
    // Summary: Retreives true if the passed-in value is part of a
    //          composite table.
    // Input:   The input target element
    // Return:  An array of associated elements.
    //------------------------------------------------------------      
    var isCompositeVal = function (inpElem) {
        return (inpElem.id.indexOf("compositevalue") >= 0);
    };

    //-------------------------------------------------------------------------
    // <summary>
    // Check catalog page or dynamic page
    // </summary>
    //-------------------------------------------------------------------------
    var chkCtlgPageInd = function(){
        var ctlgPageInd = false;
        var prodPageObj = Cmn.GetObj("ProdPageContent");
        if (prodPageObj) {
            //we are in dynamic page
        }else{
            ctlgPageInd = true;
        }
        return ctlgPageInd;
    }
	
	//-------------------------------------------------------------------------
    // <summary>
    // Determine the web part that the customer interacted with
    // </summary>
    //-------------------------------------------------------------------------
	var getSrcNmFrmCntxt = function(cntxtNm) {
	
		var srcNm = "";
	
		if (cntxtNm === CNTXT.LANDING_PAGE) {
			srcNm = "LandingPageWebPart";
		} else if (cntxtNm === CNTXT.CHOOSE_SPECS) {
			srcNm = "SpecSrchWebPart";
		} else if (cntxtNm === CNTXT.IN_LN_ORD) {
		    srcNm = "InLnOrdWebPart";
		} else {
			srcNm = "SpecInteractions";
		}
		
		return srcNm;
		
	};
	
	
	// <summary>Sets cursor to specified position within text elem. </summary>
	// <param name="elem">Input e.g. textarea</param>
	// <param name="posn">Zero based index in elem's current value. </param>
	var setCursorPosn = function(elem, posn){
		if(elem.setSelectionRange) {
			elem.focus();
			elem.setSelectionRange(posn,posn);
		} else if (elem.createTextRange) {
			var range = elem.createTextRange();
			range.collapse(true);
			range.moveEnd('character', posn);
			range.moveStart('character', posn);
			range.select();
		}
	}
	
	
	
	// <summary>Counts occurrences of substring.</summary>
	// <param name="find">The substring to search for.</param>
	// <param name="str">The text to be searched through.
	// Does not alter original str.</param>
	// <param name="until"> Non-inclusive char index to stop searching at. </param>
	// <returns>Count.</returns>
	var countAllSubstr = function(find,str,until){
		until = until || str.length;
		var start = 0;
		var count = 0;
		while(str.indexOf(find,start) >= 0){
			start = str.indexOf(find,start) + 1;
			if (start - 1 < until){
				count ++;
			}
		}
		return count;
	}
			
	// <summary>Gets character code from most recent key event.</summary>
	// <param name="keycd">event.keyCode</param>
	// <param name="chcd">event.charCode</param>
	// <param name="wch">event.which</param>
	// <returns>ASCII code for most recent key event.</returns>
	var getKey = function(kycd,chcd,wch){
		if (wch == null){
			return kycd;
		} else if (wch != 0 && chcd != 0){
			return wch;
		} else {
			return 0;
		}
	}
	
	// <summary>Checks that text fits within line restrictions.
	// A line is defined by the newline character only. </summary>
	// <param name="text">Text to verify.</param>
	// <param name="lnLmt">Maximum lines.</param>
	// <returns>True if text conforms to restrictions.</returns>
	var verifyDimensions = function(txt,lnLmt){
		// lnLmt is default to 0 if unlimited.
		return lnLmt ? txt.split("\n").length <= lnLmt : true;
	}
	
	// <summary>Explicitly enters a printable keystroke into a text field.</summary>
	// <param name="key">ASCII code of the key event.</param>
	// <param name="sel"> Object containing left and right indexes of selected text. </param>
	// <param name="txt">Original text to operate on. Does not modify original.</param>
	var applyPrintableChar = function(key,sel,txt){
		//valid for printable unicode characters
		leftCursorPosn = sel.start;
		rightCursorPosn = sel.end;
		var preTxt = txt.substring(0,leftCursorPosn);
		var postTxt = txt.substring(rightCursorPosn);
		if (key == UNICODE_CARRIAGE_RETURN) {
			// change carriage return to newline
			key = UNICODE_LINE_FEED;
		}
		// Move cursor outside of a soft break to keep it invisible to users.
		// This is not as strict as it could be, but it doens't need to be strict.
		if (leftCursorPosn > 0 && txt[leftCursorPosn] === "\n" && txt[leftCursorPosn-1] === ZERO_WIDTH_SPACE){
			preTxt = preTxt.slice(0,-1);
			sel.start --;
		}
		if (rightCursorPosn > 0 && txt[rightCursorPosn] === "\n" && txt[rightCursorPosn-1] === ZERO_WIDTH_SPACE){
			postTxt = ZERO_WIDTH_SPACE + postTxt;
			//for symmetry we should also shift sel.end here but we don't because it's never referenced again
		}
		sel.start ++;
		return preTxt + String.fromCharCode(key) + postTxt;
	}
	
	// <summary>Explicitly enters a printable keystroke into a text field.</summary>
	// <param name="key">ASCII code of the key event.</param>
	// <param name="sel"> Object containing left and right indexes of selected text. </param>
	// <param name="txt">Original text to operate on. Does not modify original.</param>
	// <returns>Text with characters deleted from proper locations.</returns>
	var applyDeletion = function(key, sel, txt){
		var leftCursorPosn = sel.start;
		var rightCursorPosn = sel.end;
		if (key == UNICODE_BACKSPACE){
			// backspace
			if (leftCursorPosn == rightCursorPosn) {
				var preTxt = txt.substring(0,leftCursorPosn-1);
				var postTxt = txt.substring(rightCursorPosn);
				sel.start --;
				// If backspacing a soft wrap, cleans up ZWS as well.
				// Makes our implementation of soft wrapping invisible to users.
				if (leftCursorPosn > 1 &&
					txt[leftCursorPosn-1] === "\n" && txt[leftCursorPosn-2] === ZERO_WIDTH_SPACE){
					preTxt = preTxt.slice(0,-1);
					sel.start --;
					// If deleting a soft wrap between words, deletes space between words.
					if (leftCursorPosn > 2 && 
						(txt[leftCursorPosn-3] === ZERO_WIDTH_SPACE || txt[leftCursorPosn-3] === " ")){
						preTxt = preTxt.slice(0,-1);
						sel.start --;
					}
				// Or if you're backspacing a ZWS inside a softwrap, delete the visible part (the previous char).
				} else if (leftCursorPosn > 1 &&
					txt[leftCursorPosn] === "\n" && txt[leftCursorPosn-1] === ZERO_WIDTH_SPACE){
					preTxt = preTxt.slice(0,-1);
					sel.start --;
					postTxt = postTxt.substring(1);
				}
			} else {
				var preTxt = txt.substring(0,leftCursorPosn);
				var postTxt = txt.substring(rightCursorPosn);
			}
			return preTxt + postTxt;
			
		} else if (key == UNICODE_DELETE){
			// delete 
			if (leftCursorPosn == rightCursorPosn){ 
				var preTxt = txt.substring(0,leftCursorPosn);
				var postTxt = txt.substring(leftCursorPosn+1);
			} else {
				var preTxt = txt.substring(0,leftCursorPosn);
				var postTxt = txt.substring(rightCursorPosn);
			}
			// If ZERO_WIDTH_SPACE<cursor>\n don't delete the ZWS. It effectively adds a space
			// to the end of the line if there's room and then repeated deletes don't do anything. Maybe the
			// expected behavior would be to delete the first char on the next line in addition to the \n but
			// I don't think it's worthwhile to worry about right now.
			return preTxt + postTxt;
		}
	}
	
	// <summary>Splits line into words, treating spaces as words also.</summary>
	// <param name="line">A string of characters containing no linebreaks.</param>
	// <returns>An array of each word and -space- in lines.</returns>
	var splitLineIntoWords = function(line){
		var charIdx = 0;
		var words = [];
		var word = "";
		while (charIdx < line.length){
			if (line[charIdx] != " "){
				//add each char to current word
				word += line[charIdx];
			} else {
				//We've reached a -space-:
				//Push current word onto array, reset
				//current word, push -space- onto array.
				words.push(word);
				word = "";
				words.push(line[charIdx]);
			}
			charIdx ++;
		}
		words.push(word);
		return words;
	}
	
	// <summary>Creates object holding the indexes of the beginning 
	// and end of a text selection. The .start field holds the lower index.
	// The .end field holds the upper index. </summary>
	// <param name="box"> The editable content that the selection was made in. </param>
	var getSelection = function(box){
		var sel = {start: box.selectionStart, end: box.selectionEnd};
		if (sel.start > sel.end) {
			var tmp = sel.start;
			sel.start = sel.end;
			sel.end = tmp;
		}
		return sel;
	}
	
	// <summary>Find and replace all.</summary>
	// <param name="find">The substring to search for.</param>
	// <param name="rplc">The replacement substring.</param>
	// <param name="str">The text to be searched through. 
	// Does not alter original str.</param>
	// <returns>String with all replacements made.</returns>
	var replaceAllSubstr = function(find,rplc,str){
		var rplcd = str.replace(find,rplc);
		while(rplcd != rplcd.replace(find,rplc)){
			rplcd = rplcd.replace(find,rplc);
		}
		return rplcd;
	}
	
	// <summary>Wraps text optimally from top to bottom, honoring user provided whitespace.</summary>
	// <param name="txt">Text to be wrapped. Original text is not modified.</param>
	// <param name="colLmt">Maximum characters per line.</param>
	// <returns>Our implementation of wrapped text.</returns>
	var wrapAlgthm = function(txt, colLmt){
		//If column limit is specified, we do the wrapping. Otherwise let the browser handle it.
		//make 0 constant
		if (colLmt > 0){
			// remove 'soft breaks' 
			var softBreak = ZERO_WIDTH_SPACE + "\n";
			
			txt = replaceAllSubstr(softBreak,"",txt);
			
			// convert hidden real spaces at beginning/end of lines back to visible spaces
			txt = replaceAllSubstr(ZERO_WIDTH_SPACE," ",txt);
			
			// split into lines to honor 'hard breaks'
			var lines = txt.split("\n");
			var newFrmt = [];
			for (var i = 0; i < lines.length; i ++){
				var bldLn = "";
				var spaceRem = colLmt;
				
				// split line into words. treat -space- as a word
				var words = splitLineIntoWords(lines[i]);
				
				// handles the actual wrapping
				for (var j = 0; j < words.length; j ++){
					if(words[j] == " ") {
						// add a space if it's not the first char
						if (spaceRem < colLmt && spaceRem >= 1) {
							bldLn += words[j];
						}
						// if -space- added at end of line, treat as soft break
						if (spaceRem == 0){
							bldLn += ZERO_WIDTH_SPACE;
							// add duplicate zwsp to tag it as a real -space-
							bldLn += ZERO_WIDTH_SPACE;
							newFrmt.push(bldLn);
							bldLn = "";
						}
						
					} else {
						if (words[j].length <= spaceRem){
							//fits on the line
							bldLn += words[j];
						} else if (words[j].length > spaceRem && words[j].length <= colLmt) {
							//wrap whole word to next line
							bldLn += ZERO_WIDTH_SPACE;
							newFrmt.push(bldLn);
							bldLn = words[j];
						} else {
							var reallyBigWord = words[j];
							while (reallyBigWord.length > colLmt){
								//word longer than line. 
								//fit what you can on current line, wrap the rest.
								bldLn += reallyBigWord.substring(0,spaceRem) + ZERO_WIDTH_SPACE;
								newFrmt.push(bldLn);
								reallyBigWord = reallyBigWord.substring(spaceRem);
								bldLn = "";
								spaceRem = colLmt - bldLn.length;
							}
							bldLn = reallyBigWord;
						} 
					}
					spaceRem = colLmt - bldLn.length;
				}
				newFrmt.push(bldLn);
			}
			return newFrmt.join("\n");
		} else {
			return txt;
		}
	}
	
	
};
}

this.SpecSrchWebPart||(SpecSrchWebPart=new function(){this.FromIntermediateLandingPageInd=!1;var g=McMaster.SesnMgr.GetStVal,r=McMaster.SesnMgr.SetStVal,f=McMaster.SesnMgr.StValDefs,l=McMaster.MsgMgr.CntxtNms.CHOOSE_SPECS;McMaster.MsgMgr.AddSubscriber(McMaster.MsgMgrMsgs.ChooseSpecsStatChg,function(a){SpecSrchWebPart.Stat_Chg(a)});McMaster.MsgMgr.AddSubscriber(McMaster.MsgMgrMsgs.SpecToggleLnkSlctd,function(){m()});this.WebPart_LoadCmpl=function(a){var b=McMasterCom.Nav.GetTopFrame();new b.PerfTracker.Evnt(b.PerfTracker.EvntNms.SpecSrchLdCmplBgn,
b.PerfTracker.PgCntxtNms.DynCntnt);if(0<a.UpdtedSpecUsrInp.PreSlctdAttrIds.length&&a.ParWebPart){var c,b={};for(i=0;i<a.UpdtedSpecUsrInp.SpecSrchAttrInps.length;i++)if(c=a.AttrIdToNmDict[a.UpdtedSpecUsrInp.SpecSrchAttrInps[i].SlctdVals[0].PubAttrId])b[c]=a.UpdtedSpecUsrInp.SpecSrchAttrInps[i].SlctdVals[0].PubValId;c=b=p(a,b);var b="",d;for(d in c)b+="&Attribute="+d+"&Value="+c[d].Trim();d=g(f.PreSlctdSpecCntxtNm.KyTxt());""===d&&(d=McMaster.MsgMgr.CntxtNms.SRCH_ENTRY_WEB_PART);0<b.length&&SpecInteractions.Webreports_TrkCustomAct(d,
"Selected Spec",b);r(f.PreSlctdSpecCntxtNm.KyTxt(),"");d=[];for(var b=[],e=c=0;e<a.UpdtedSpecUsrInp.SpecSrchAttrInps.length;e++){var q=a.UpdtedSpecUsrInp.SpecSrchAttrInps[e].ProdAttrId;if(q)for(var n=a.AttrIdToNmDict[a.UpdtedSpecUsrInp.SpecSrchAttrInps[e].SlctdVals[0].PubAttrId],h={},k=0;k<a.UpdtedSpecUsrInp.SpecSrchAttrInps[e].SlctdVals.length;k++)b[c]={attrID:q,valID:a.UpdtedSpecUsrInp.SpecSrchAttrInps[e].SlctdVals[k].ProdValId},h[n]=a.UpdtedSpecUsrInp.SpecSrchAttrInps[e].SlctdVals[k].PubValId,
h=p(a,h),d[c]={attr:n,val:h[n]},c+=1}c=new SrchTrkr.SrchDat({resp:SrchTrkr.RespTyps.SPEC_MTCH});c.resp.srcNm="SpecSrchWebPart";c.resp.mtchdSpec=d?!1==d?null:d:null;c.resp.mtchdSpecIDs=b?!1==b?null:b:null;c.Trk()}a.DisplInd?Cmn.Utilities.NotEmpty(a.AttrIdToNmDict)&&(SpecSrchWebPartLoader.Show(),g(f.ProdPageReloadingInd.KyTxt())&&(SpecInteractions.AddAttrIdToNmDefs(a),SpecInteractions.AttachEvntListeners(a,l,SpecSrchWebPartLoader,!0)),SpecSrchWebPart.MaintainFocus.UpdtPosn(),m()):SpecSrchWebPartLoader.Hide();
SpecSrchInp.Get().SyncWithServerUsrInp(a.UpdtedSpecUsrInp).UpdateSession();!0===a.InvalidatedLastExplicitlyExpandedAttrInd&&SpecSrchInp.Get().RemExplicitlyExpandedAttr().UpdateSession();SpecSrchInp.Get().RemAllProdFilters().UpdateSession();SpecSrchWebPart.SpecInfo.ApplyOpenSpecInfoLnkHighlighting();g(f.ChooseSpecsLoadFrmSesnInd.KyTxt())||ContentHistMgr.Take_Snapshot(ContentHistMgr.TYP.CHOOSE_SPECS_LOAD);b=McMasterCom.Nav.GetTopFrame();new b.PerfTracker.Evnt(b.PerfTracker.EvntNms.SpecSrchLdCmplEnd,
b.PerfTracker.PgCntxtNms.DynCntnt);McMaster.SesnMgr.GetStVal(McMaster.SesnMgr.StValDefs.ProdPageReloadingInd.KyTxt());this.planningtimestamp=new Date;McMaster.MsgMgr.AddSubscriber(McMaster.MsgMgrMsgs.FetchAheadDatRcvd,SpecSrchWebPartLoader.HndlFetchAheadDatRcvd)};this.WebPart_PreUnload=function(a){McMaster.MsgMgr.RemSubscriber(McMaster.MsgMgrMsgs.FetchAheadDatRcvd,SpecSrchWebPartLoader.HndlFetchAheadDatRcvd);g(f.ProdPageReloadingInd.KyTxt())&&(SpecSrchWebPart.SpecInfo.Unload(),SpecSrchWebPartLoader.Hide(),
SpecInteractions.RemoveEvntListeners(a))};this.WebPart_Unload=function(a){g(f.ProdPageReloadingInd.KyTxt())&&SpecSrchWebPartLoader.AbortStaleReq()};var m=function(a){var b=Cmn.GetElementsByClsNm("SpecSrch_Title","DIV",document.getElementById("SpecSrch_Cntnr"))[0],c=Cmn.GetElementsByClsNm("SpecSrch_AttrSeparator"),d=0,d=1<c.length?Cmn.GetWidth(c[1]):Cmn.GetWidth(Cmn.GetElementsByClsNm("SpecSrch_Pane")[0])-10;Cmn.SetStyle(b,"width",d+"px");a||setTimeout(function(){m(!0)},50)};this.Stat_Chg=function(a){if(!a.MsgPayload().ChooseSpecsAutoStatChgInd){var b=
g(f.SlctdSrchRsltTxt.KyTxt());"EXPANDED"==a.MsgPayload().ChooseSpecsSt?Cmn.TrkAct("Action=Opened&SrchTxt="+b,l):"COLLAPSED"==a.MsgPayload().ChooseSpecsSt&&Cmn.TrkAct("Action=Closed&SrchTxt="+b,l)}};var p=function(a,b){var c=document.createElement("div");c.innerHTML=a.ParWebPart.MarkupTxt;var c=Cmn.GetElementsByClsNm("SpecSrch_SlctdVal","td",c),d;for(d in b)for(i=0;i<c.length;i++)if(0<=c[i].id.indexOf(b[d])){var e="",e=0<=c[i].id.indexOf("_C_")&&0<=c[i].id.indexOf("_I_")?Cmn.GetTxtContent(SpecInteractions.GetComplementaryImgTxtElemById(c[i])):
Cmn.GetTxtContent(c[i]);b[d]=e}return b}});


(function(){if(this.SpecSrchWebPart.MaintainFocus){}else{var h;var i;var a;var f;var e;var b=false;var j;SpecSrchWebPart.MaintainFocus=function(){};SpecSrchWebPart.MaintainFocus.CntxtSrchChgd=function(){var l=false;if(h){var k=SpecInteractions.GetVisibleElemById(h);if(k&&Cmn.HasCls(k,"SpecSrch_CntxtSrchBx")){l=(j!==k.value);}}return l;};SpecSrchWebPart.MaintainFocus.Reset=function(){h=undefined;i=undefined;a=undefined;f=undefined;e=undefined;b=false;j=undefined;};SpecSrchWebPart.MaintainFocus.SavePosn=function(k){try{var k=k,l=SpecInteractions.GetAttrByInnerElem(k);a=c(k);f=c(l);e=g();h=k.id;i=l.id;j=k.value;b=true;}catch(m){}};SpecSrchWebPart.MaintainFocus.UpdtPosn=function(){if(h&&i){var n=SpecInteractions.GetVisibleElemById(h),t=SpecInteractions.GetVisibleElemById(i);}if(b){b=false;if(n&&Cmn.HasCls(n,"SpecSrch_CntxtSrchBx")){if(n.setSelectionRange){n.focus();n.setSelectionRange(n.value.length,n.value.length);if(document.createEvent){try{var l=document.createEvent("KeyboardEvent");l.initKeyEvent("keypress",false,true,null,false,false,false,false,0,32);n.dispatchEvent(l);var u=document.createEvent("KeyboardEvent");u.initKeyEvent("keypress",false,true,null,false,false,false,false,8,0);n.dispatchEvent(u);}catch(q){}}}else{if(n.createTextRange){var o=n.createTextRange();o.collapse(true);o.moveEnd("character",n.value.length);o.moveStart("character",n.value.length);o.select();}else{n.focus();}}}try{var r=c(n),k=c(t),m=(n&&r>0)?(r-a):(k-f),s=(Math.max(e+m,0));Cmn.SetVerticalScrollPosn(d(),s);}catch(p){}}else{Cmn.SetVerticalScrollPosn(d(),0);if(n&&t){h=n.id;i=t.id;j=n.value;}}};var d=function(){return Cmn.GetObj("SpecSrch_Inner");};var g=function(){return Cmn.GetVerticalScrollPosn(d());};var c=function(p){var m=0;if(!p){}else{if(SpecInteractions.GetElemIsInDropDwnMenu(p)){}else{m=Cmn.GetYOffset(p);var q=Cmn.GetAncestorByClsNm(p,"SpecSrch_ScrollCntnr");if(q){var k=(Cmn.GetVerticalScrollPosn(q)),l=(Cmn.GetYOffset(q)),o=(q.offsetHeight);specDistFromScrollTop=(p.offsetTop-k),specScrolledOutOfView=(specDistFromScrollTop>o);if(specScrolledOutOfView){var n=(o/2);Cmn.SetVerticalScrollPosn(q,specDistFromScrollTop-n);m=l+n;}else{m=l+specDistFromScrollTop;}}}}return m;};}})();

(function(){if(!SpecSrchWebPart.SpecInfo){var r=Cmn.Utilities,w=Cmn.forEach,m=r.Values,y=r.Keys,z=Cmn.map,A=Cmn.filter;SpecSrchWebPart.SpecInfo=function(){this.mGenInfoLnkId=this.mPrsnttnId=null;this.mOpen=!1;return this};SpecSrchWebPart.SpecInfo.mInfos={};SpecSrchWebPart.SpecInfo.mInfosByAttr={};SpecSrchWebPart.SpecInfo.mOpenInfos={};SpecSrchWebPart.SpecInfo.Constants={OUTER_PREFIX:"SpecInfoOuter_",ID_PREFIX:"SpecInfoPadding_"};SpecSrchWebPart.SpecInfo.Create=function(a,b){var d=new SpecSrchWebPart.SpecInfo;
d.mOpen=!1;d.mPrsnttnId=a;d.mGenInfoLnkId=b;return d};SpecSrchWebPart.SpecInfo.Get=function(a){var b;b=a.id.split("_");b=b[b.length-1];var d=SpecSrchWebPart.SpecInfo.mInfos[b],c;d?(c=d.RootAttrGrp(),c||(d=SpecSrchWebPart.SpecInfo.Create(b,a.id),SpecSrchWebPart.SpecInfo.mInfos[b]=d,c=d.RootAttrGrp())):(d=SpecSrchWebPart.SpecInfo.Create(b,a.id),SpecSrchWebPart.SpecInfo.mInfos[b]=d,c=d.RootAttrGrp());return SpecSrchWebPart.SpecInfo.mInfosByAttr[c.id]=d};SpecSrchWebPart.SpecInfo.GetOpenInfos=function(){return SpecSrchWebPart.SpecInfo.mOpenInfos};
SpecSrchWebPart.SpecInfo.ApplyOpenSpecInfoLnkHighlighting=function(){var a=SpecSrchWebPart.SpecInfo.GetOpenInfos();w(m(a),function(a){t(a.LinkElem())})};SpecSrchWebPart.SpecInfo.Unload=function(){SpecSrchWebPart.SpecInfo.CloseAll();SpecSrchWebPart.SpecInfo.mInfosByAttr={};SpecSrchWebPart.SpecInfo.mInfos={}};SpecSrchWebPart.SpecInfo.Click=function(a,b){var d=SpecSrchWebPart.SpecInfo.Get(a);if(d.IsOpen())n(d),SpecSrchWebPart.SpecInfo.TrkAct("Closed general information presentation",d,"Clicked GenInfo Link");
else{var c=McMasterCom.Nav.GetTopFrame();new c.PerfTracker.Evnt(c.PerfTracker.EvntNms.SpecInfoPrsnttnClick,c.PerfTracker.PgCntxtNms.DynCntnt);SpecSrchWebPart.SpecInfo.LoadSpecInfo(d,null,b);SpecSrchWebPart.SpecInfo.TrkAct("Opened general information presentation",d,"Clicked GenInfo Link")}};SpecSrchWebPart.SpecInfo.GetOpenSpecInfoByAttrElem=function(a){var b,d=Cmn.GetElementsByClsNm("SpecSrch_GenInfoLnk","a",a)[0];d||(a=SpecInteractions.GetComplementaryElemById(a.id),d=Cmn.GetElementsByClsNm("SpecSrch_GenInfoLnk",
"a",a)[0]);d&&(b=d.id.split("_")[4],b=SpecSrchWebPart.SpecInfo.GetOpenInfos()[b]);return b};SpecSrchWebPart.SpecInfo.LoadSpecInfo=function(a,b,d){var c=a.Id(),e=B(a,d),f=SpecSrchWebPart.SpecInfo.Constants.OUTER_PREFIX+c,g=SpecSrchWebPart.SpecInfo.Constants.ID_PREFIX+c,n="InvisibleShield_"+c,m="TransparentBorder_"+c;Cmn.GetObj(f);var p=Cmn.GetObj(g);p||(p=Cmn.CrteElement("div"),p.innerHTML='<div class="SpecLayout_GenInfo_InvisibleShield" id="'+n+'"></div><div class="SpecLayout_GenInfo_TransparentBorder" id="'+
m+'"></div><div class="SpecLayout_GenInfo" id="'+f+'"><div class="SpecLayout_GenInfo_Padding" id="'+g+'"></div></div>',Cmn.InsrtAfter(p,Cmn.GetObj("ShellLayout_MainContent_Inner")),Cmn.GetObj(f),p=Cmn.GetObj(g));var s=b||C(a),f=a.mGenInfoLnkId.split("_")[2];PrsnttnWebPartLoader.LoadSpecInfo(c,"full",function(){a.mOpen=!1;var c=b||Cmn.GetWidth(a.Elem());if(c<=s){if(a&&a.IsClosed()){SpecSrchWebPart.SpecInfo.mOpenInfos[a.Id()]=a;a.mOpen=!0;t(a.LinkElem());var e=SpecInteractions.GetComplementaryElemById(a.LinkElem().id);
e&&t(e);var q=void 0,l=a.RootAttrGrp(),f=a.Elem(),e=a.Container(),g=a.InvisibleShield(),n=a.TransparentBorder(),k=a.PaddingContainer(),m=Cmn.GetObj("ProdPageContent"),h=Cmn.GetObj("ShellLayout_ChooseSpecs_Toggle");Cmn.GetX(h);Cmn.GetHeight(Cmn.GetObj("ShellLayout_Header_Cntnr"));if(h=a.HeaderElem())Cmn.SetStyle(h,"width",c-10+"px"),h.nextSibling?Cmn.SetStyle(h.nextSibling,"padding-top","30px"):Cmn.SetStyle(h.parentNode,"padding-bottom","30px");Cmn.GetWidth(f)>c&&(Cmn.SetStyle(k,"width",c+"px"),f=
Cmn.GetHeight(e)+18,Cmn.SetStyle(k,"height",f+"px"),Cmn.SetStyle(k,"overflow-x","scroll"));q=q||Cmn.GetHeight(e);f=q+16;q=Cmn.GetHeight(m);h=q-77;Cmn.GetHeight(k);f>h?(f=h,Cmn.SetStyle(k,"height",f-16-2+"px"),Cmn.SetStyle(k,"width",c+18+"px"),Cmn.SetStyle(k,"overflow-y","scroll")):Cmn.SetStyle(k,"overflow-y","hidden");var c=Cmn.GetObj("SpecSrch_Inner"),k=c.scrollTop,p=c.offsetHeight,r=p-19,h=l.offsetTop,l=Cmn.GetNxtSibling(l),u=0,u=l?l.offsetTop-h+3:c.scrollHeight-h;u<=r&&(l=h+u,p=k+p,h<k+19?Cmn.SetVerticalScrollPosn(c,
h-19):l>p&&Cmn.SetVerticalScrollPosn(c,k+(l-p)));l=Cmn.GetX(Cmn.GetObj("ProdPageContent"));c=Cmn.GetY(Cmn.GetObj("ShellLayout_MainContent_Inner"));c=Cmn.GetY(a.LinkElem())+Cmn.GetHeight(a.LinkElem())-c;k=Cmn.GetHeight(a.HeaderElem())+7+1+1;c-=k;q=47>c?47:c+f>q-30?q-f-30:c;Cmn.SetStyle(g,"top","0px");Cmn.SetStyle(g,"left",l+"px");Cmn.SetStyle(g,"width",Cmn.GetWidth(m)-18+"px");Cmn.SetStyle(g,"height",Cmn.GetHeight(m)+"px");Cmn.SetStyle(n,"left",l+"px");Cmn.SetStyle(n,"top",q+"px");g=Cmn.GetHeight(e)+
14;n=Cmn.GetWidth(e)+14;Cmn.SetStyle(a.TransparentBorder(),"height",g+"px");Cmn.SetStyle(a.TransparentBorder(),"width",n+"px");Cmn.SetStyle(e,"left",l+8+"px");Cmn.SetStyle(e,"top",q+8+"px")}}else c<=v()?SpecSrchWebPart.SpecInfo.LoadSpecInfo(a,c,d):SpecSrchWebPart.SpecInfo.LoadSpecInfo(a,v(),d)},e,s,f)};SpecSrchWebPart.SpecInfo.ClickHandler=function(a){var b=Cmn.GetEvntTarget(a),d=g(b,"SpecLayout_GenInfo"),c=g(b,"SpecSrch_Attribute"),e=g(b,"SpecSrch_MoreLnk"),f=g(b,"SpecLayout_GenInfo_InvisibleShield"),
m=s(b,"ShellLayout_ChooseSpecs_Toggle"),r=s(b,"ShellLayout_SecondaryContentToggle_Cntnr"),t=s(b,"ChooseSpecsClearAll");d?(c=g(b,"SecondaryLnk"),e=SpecSrchWebPart.SpecInfo.Get(d),c?(n(e),SpecSrchWebPart.SpecInfo.TrkAct("Closed general information presentation",e,"Clicked Toggle Button")):"A"==b.tagName.toUpperCase()&&FullPrsnttnWebPart.HndlClickEvnt(a,d.id)):e||(c?SpecInteractions.GetAttrId(c)===SpecSrchInp.Get().UsrInps().LastExplicitlyExpandedAttr?SpecSrchWebPart.SpecInfo.CloseAllExcept(c):SpecSrchWebPart.SpecInfo.CloseAll():
(f||m||r||t)&&SpecSrchWebPart.SpecInfo.CloseAll())};SpecSrchWebPart.SpecInfo.CloseAll=function(a){a=a||m(SpecSrchWebPart.SpecInfo.mOpenInfos);w(m(a),function(a){a.IsOpen()&&(n(a),SpecSrchWebPart.SpecInfo.TrkAct("Closed general information presentation",a,"Clicked Outside of the Presentation"))})};SpecSrchWebPart.SpecInfo.CloseAllExcept=function(a){var b=SpecSrchWebPart.SpecInfo.GetOpenSpecInfoByAttrElem(a);a=SpecSrchWebPart.SpecInfo.GetOpenInfos();b&&(a=z(A(y(a),function(a){return a!=b.Id()}),function(a){return openInfos[a]}));
SpecSrchWebPart.SpecInfo.CloseAll(a)};SpecSrchWebPart.SpecInfo.CloseByAttr=function(a){n(SpecSrchWebPart.SpecInfo.mInfosByAttr[a])};SpecSrchWebPart.SpecInfo.TrkAct=function(a,b,d){var c=McMaster.SesnMgr.GetStVal,e=c(McMaster.SesnMgr.StValDefs.SlctdSrchRsltTxt.KyTxt()),c=b.LinkElem().text;b=SpecInteractions.GetAttrNm(b.TopLvlAttrId());a="Action="+encodeURIComponent(a)+"&SrchTxt="+encodeURIComponent(e);a=a+"&Attribute="+encodeURIComponent(b);a=a+"&GenInfoLinkName="+encodeURIComponent(c);a=a+"&Method="+
encodeURIComponent(d);Cmn.TrkAct(a,"ChooseSpec")};SpecSrchWebPart.SpecInfo.prototype.LinkElem=function(){var a=SpecInteractions.GetVisibleElemById(this.GenInfoLnkId());return a?a:Cmn.GetObj(this.GenInfoLnkId())};SpecSrchWebPart.SpecInfo.prototype.AttrIds=function(){return this.LinkElem().rel.split("|")[0].split(",")};SpecSrchWebPart.SpecInfo.prototype.ProdAttrIds=function(){return this.LinkElem().rel.split("|")[1].split(",")};SpecSrchWebPart.SpecInfo.prototype.TopLvlAttrId=function(){var a=this.AttrIds();
return a&&0<a.length?a[0]:null};SpecSrchWebPart.SpecInfo.prototype.TopLvlProdAttrId=function(){var a=this.ProdAttrIds();return a&&0<a.length?a[0]:null};SpecSrchWebPart.SpecInfo.prototype.HeaderElem=function(){return this.Elem()?this.Elem().firstChild.firstChild:null};SpecSrchWebPart.SpecInfo.prototype.Elem=function(){return Cmn.GetObj(this.ElemId())};SpecSrchWebPart.SpecInfo.prototype.ElemId=function(){return"Full_"+this.Id()};SpecSrchWebPart.SpecInfo.prototype.Container=function(){return Cmn.GetObj(SpecSrchWebPart.SpecInfo.Constants.OUTER_PREFIX+
this.Id())};SpecSrchWebPart.SpecInfo.prototype.InvisibleShield=function(){return Cmn.GetObj("InvisibleShield_"+this.Id())};SpecSrchWebPart.SpecInfo.prototype.TransparentBorder=function(){return Cmn.GetObj("TransparentBorder_"+this.Id())};SpecSrchWebPart.SpecInfo.prototype.PaddingContainer=function(){return Cmn.GetObj(SpecSrchWebPart.SpecInfo.Constants.ID_PREFIX+this.Id())};SpecSrchWebPart.SpecInfo.prototype.Id=function(){return this.mPrsnttnId};SpecSrchWebPart.SpecInfo.prototype.GenInfoLnkId=function(){return this.mGenInfoLnkId};
SpecSrchWebPart.SpecInfo.prototype.RootAttrGrp=function(){var a=Cmn.GetAncestorByClsNm(this.LinkElem(),"SpecSrch_Attribute");return Cmn.GetAncestorByClsNm(a,"SpecSrch_Attribute")||a};SpecSrchWebPart.SpecInfo.prototype.IsOpen=function(){return this.mOpen};SpecSrchWebPart.SpecInfo.prototype.IsClosed=function(){return!this.IsOpen()};var t=function(a){Cmn.HasCls(a,"SpecSrch_GenInfoLnk_Hover")?Cmn.ReplaceCls(a,"SpecSrch_GenInfoLnk_Hover","SpecSrch_GenInfoLnk_Hover_Slctd"):Cmn.AddCls(a,"SpecSrch_GenInfoLnk_Slctd")},
x=function(a){Cmn.HasCls(a,"SpecSrch_GenInfoLnk_Hover_Slctd")?Cmn.ReplaceCls(a,"SpecSrch_GenInfoLnk_Hover_Slctd","SpecSrch_GenInfoLnk_Hover"):Cmn.RemCls(a,"SpecSrch_GenInfoLnk_Slctd")},n=function(a){if(a&&a.IsOpen()){a.mOpen=!1;x(a.LinkElem());var b=SpecInteractions.GetComplementaryElemById(a.LinkElem().id);b&&x(b);SpecSrchWebPart.SpecInfo.mOpenInfos[a.Id()]&&delete SpecSrchWebPart.SpecInfo.mOpenInfos[a.Id()];a=Cmn.GetObj(SpecSrchWebPart.SpecInfo.Constants.OUTER_PREFIX+a.Id());Cmn.RemElem(a.parentNode)}},
g=function(a,b){if(a&&a!==document)for(;a&&a!==document.body;){if(Cmn.HasCls(a,b))return a;a=a.parentNode}return null},s=function(a,b){if(a&&a!==document)for(;a&&a!==document.body;){if(a.id===b)return a;a=a.parentNode}return null},B=function(a,b){var d=SpecSrchInp.Get(),c=a.ProdAttrIds();if(1!=c.length&&1<c.length){var e=a.TopLvlAttrId(),f=a.TopLvlProdAttrId();d.UsrInps().LastExplicitlyExpandedAttr===e||Cmn.Utilities.Empty(d.GetAttrSlctdVals(f,b))||(c=c.slice(1))}d.RemAttrs(c,b);return d},C=function(a){a=
v();var b=Cmn.GetObj("ProdPageContent"),b=Cmn.GetWidth(b);return Math.min(Math.max(b/2,400),a)},v=function(){var a=Cmn.GetObj("ProdPageContent");return Cmn.GetWidth(a)-60}}})();


this.LandingPageWebPart||(LandingPageWebPart=new function(){var c=McMaster.SesnMgr.GetStVal,d=McMaster.SesnMgr.StValDefs,e=McMaster.MsgMgr.CntxtNms.LANDING_PAGE;this.WebPart_LoadCmpl=function(a){var b=McMasterCom.Nav.GetTopFrame();new b.PerfTracker.Evnt(b.PerfTracker.EvntNms.LandingPgLdCmplBgn,b.PerfTracker.PgCntxtNms.DynCntnt);Cmn.Utilities.NotEmpty(a.AttrIdToNmDict)&&(SpecInteractions.AddAttrIdToNmDefs(a),SpecInteractions.AttachEvntListeners(a,e,ContentWebPartLoader,!1));SpecSrchInp.Get().SyncWithServerUsrInp(a.UpdtedSpecUsrInp).UpdateSession();
(b=a.InvalidatedUsrSelectionAttrId)&&0!==b&&SpecSrchInp.Get().RemAttr(b,e).UpdateSession();c(d.ChooseSpecsLoadFrmSesnInd.KyTxt())||ContentHistMgr.Take_Snapshot(ContentHistMgr.TYP.CONTENT_LOAD);a=a.CtlgPageNbrList;a instanceof Array&&0<a.length?(McMaster.SesnMgr.SetStVal(McMaster.SesnMgr.StValDefs.CurrCtlgPgNbr.KyTxt(),a[0]),McMaster.SesnMgr.SetStVal(McMaster.SesnMgr.StValDefs.CurrRelatedCtlgPgsTxt.KyTxt(),a.toString())):(McMaster.SesnMgr.RemStVal(McMaster.SesnMgr.StValDefs.CurrCtlgPgNbr.KyTxt()),
McMaster.SesnMgr.RemStVal(McMaster.SesnMgr.StValDefs.CurrRelatedCtlgPgsTxt.KyTxt()));b=McMasterCom.Nav.GetTopFrame();new b.PerfTracker.Evnt(b.PerfTracker.EvntNms.LandingPgLdCmplEnd,b.PerfTracker.PgCntxtNms.DynCntnt)};this.WebPart_PreUnload=function(a){SpecInteractions.RemoveEvntListeners(a);SpecInteractions.AttachDocEvntListeners()};this.WebPart_Unload=function(a){c(d.ProdPageReloadingInd.KyTxt())&&ContentWebPartLoader.AbortStaleReq()}});


this.DynamicPageWebPart||(DynamicPageWebPart=new function(){var k=McMaster.MsgMgr.CntxtNms.DYNAMIC_PAGE,g=[],h=Cmn.DetectBrowser();this.ContentCntnrWdth=null;this.AbbrPrsnttnListInd=this.AbbrPrsnttnCpyInd=!1;this.PrsnttnSeqDictionary=null;this.ColCnt=1;this.WebPart_Load=function(b){this.ContentCntnrWdth=b.ContentCntnrWdth;this.AbbrPrsnttnCpyInd=b.AbbrPrsnttnCpyInd;this.AbbrPrsnttnListInd=b.AbbrPrsnttnListInd;this.PrsnttnSeqDictionary=b.PrsnttnSeqDictionary;this.ColCnt=b.ColCnt;var a=b.PageNbrLst;
a instanceof Array&&0<a.length?(McMaster.SesnMgr.SetStVal(McMaster.SesnMgr.StValDefs.CurrCtlgPgNbr.KyTxt(),a[0]),McMaster.SesnMgr.SetStVal(McMaster.SesnMgr.StValDefs.CurrRelatedCtlgPgsTxt.KyTxt(),a.toString())):(McMaster.SesnMgr.RemStVal(McMaster.SesnMgr.StValDefs.CurrCtlgPgNbr.KyTxt()),McMaster.SesnMgr.RemStVal(McMaster.SesnMgr.StValDefs.CurrRelatedCtlgPgsTxt.KyTxt()));McMaster.MsgMgr.AddSubscriber(McMaster.MsgMgrMsgs.PageResizeReq,DynamicPageWebPart.ResizePrsnttnsAndScroll);Cmn.AddEvntListener(Cmn.GetObj(b.CntnrIDTxt),
"click",function(a){PrsnttnWebPart.HndlClickEvnt(a,b.CntnrIDTxt)});Cmn.AddEvntListener(Cmn.GetObj(b.CntnrIDTxt),"mouseover",function(a){PrsnttnWebPart.HndlMouseoverEvnt(a,b.CntnrIDTxt)});Cmn.AddEvntListener(Cmn.GetObj(b.CntnrIDTxt),"mouseout",function(a){PrsnttnWebPart.HndlMouseoutEvnt(a,b.CntnrIDTxt)});PrsnttnWebPart.CrteImgEvntHndlrs(b);McMaster.SesnMgr.SetStVal(McMaster.SesnMgr.StValDefs.HelpCntxtTxt.KyTxt(),"search");a=new McMaster.MsgMgr.Hdr(McMaster.MsgMgr.CntxtNms.DYNAMIC_PAGE);a=new McMaster.MsgMgrMsgs.WebPartLoaded(a,
b.CntnrIDTxt);McMaster.MsgMgr.PubMsg(a)};this.WebPart_Unload=function(b){McMaster.MsgMgr.RemSubscriber(McMaster.MsgMgrMsgs.PageResizeReq,DynamicPageWebPart.ResizePrsnttnsAndScroll);McMaster.SesnMgr.RemStVal(McMaster.SesnMgr.StValDefs.CurrCtlgPgNbr.KyTxt());McMaster.SesnMgr.RemStVal(McMaster.SesnMgr.StValDefs.CurrRelatedCtlgPgsTxt.KyTxt());ContentWebPartLoader.AbortStaleReq();var a=new McMaster.MsgMgr.Hdr(McMaster.MsgMgr.CntxtNms.DYNAMIC_PAGE);b=new McMaster.MsgMgrMsgs.WebPartUnloaded(a,b.CntnrIDTxt);
McMaster.MsgMgr.PubMsg(b)};this.WebPart_PreUnload=function(b){Cmn.RemEvntListener(Cmn.GetObj(b.CntnrIDTxt),"click");Cmn.RemEvntListener(Cmn.GetObj(b.CntnrIDTxt),"mouseover");Cmn.RemEvntListener(Cmn.GetObj(b.CntnrIDTxt),"mouseout");PrsnttnWebPart.UnloadImgEvntHndlrs(b)};this.WebPart_LoadCmpl=function(b){try{var a=McMasterCom.Nav.GetTopFrame();new a.PerfTracker.Evnt(a.PerfTracker.EvntNms.DynPgLdCmplBgn,a.PerfTracker.PgCntxtNms.DynCntnt);this.ResizePrsnttnsAndScroll();McMaster.SesnMgr.GetStVal(McMaster.SesnMgr.StValDefs.ContentLoadFrmSesnInd.KyTxt())||
ContentHistMgr.Take_Snapshot(ContentHistMgr.TYP.CONTENT_LOAD);var d=McMaster.SesnMgr.GetStVal(McMaster.SesnMgr.StValDefs.SlctdSrchRsltTxt.KyTxt());Cmn.TrkAct("Action=loaded&SrchTxt="+d,"DynamicPage");!0===b.FullPrsnttnInd&&(a=McMasterCom.Nav.GetTopFrame(),new a.PerfTracker.Evnt(a.PerfTracker.EvntNms.DynPgLdFullPrsnttn,a.PerfTracker.PgCntxtNms.DynCntnt));a=McMasterCom.Nav.GetTopFrame();new a.PerfTracker.Evnt(a.PerfTracker.EvntNms.DynPgLdCmplEnd,a.PerfTracker.PgCntxtNms.DynCntnt);McMaster.SesnMgr.GetStVal(McMaster.SesnMgr.StValDefs.ProdPageReloadingInd.KyTxt());
var e=b.AutoSlctdPartNbr;if(e){var c=new McMaster.MsgMgr.Hdr(McMaster.MsgMgr.CntxtNms.FULL_PRSNTTN),f=new McMaster.MsgMgrMsgs.PartNbrSlctd(c,e,!0);McMaster.MsgMgr.PubMsg(f)}this.planningtimestamp=new Date}catch(g){a=McMasterCom.Nav.GetTopFrame(),new a.PerfTracker.Evnt(a.PerfTracker.EvntNms.DynPgLdCmplErr,a.PerfTracker.PgCntxtNms.DynCntnt)}};this.Reset_Srch_Rslt_ID=function(){};this.HelpLnk_Click=function(b){var a=new McMaster.MsgMgr.Hdr(k);b=new McMaster.MsgMgrMsgs.HelpSlctd(a,b);McMaster.MsgMgr.PubMsg(b)};
this.ResizePrsnttnsAndScroll=function(){var b=!1,a=McMaster.SesnMgr.GetStVal(McMaster.SesnMgr.StValDefs.DynamicPageActvPrsnttnId.KyTxt());if(a){var d;d=Cmn.GetObj("Full_"+a);null==d&&(d=Cmn.GetObj("Sub_"+a),null==d&&(d=Cmn.GetObj("Abbr_"+a)));if(d&&(d.className.match("Full")||d.id.match("Sub"))){var e=!1,c;for(c in g)if(g.hasOwnProperty(c)&&a==g[c]){e=!0;break}if(e)g.splice(c,1);else if(a=Cmn.GetObj("ProdPageContent"),d&&a){e=Cmn.GetElementsByClsNm("WebToolsetWebPart_Cntnr","div",a);c=21;1==e.length&&
(c=e[0].offsetHeight,c-=1);e=d.offsetTop;if(d.parentNode&&"TD"==d.parentNode.tagName)for(var f=d;f.offsetParent;){e+=f.offsetParent.offsetTop;if("TABLE"==f.offsetParent.tagName)break;f=f.offsetParent}f=Cmn.GetObj("pageCntnr");"IE 6.0"==h?e=e+f.offsetTop+18:"IE 7.0"==h&&(e+=f.offsetTop);f=0;d.id.match("Sub")&&(f=l(d));d=e-c-f;c=a.scrollHeight-a.offsetHeight;d<c?a.scrollTop=d:(b=!0,a.scrollTop=c)}}}if(McMaster.SesnMgr.GetStVal(McMaster.SesnMgr.StValDefs.ContentLoadFrmSesnInd.KyTxt())&&(d=McMaster.SesnMgr.GetStVal(McMaster.SesnMgr.StValDefs.SnapShotScrollPos.KyTxt()),
a=McMaster.UrlMgr.CurrUrl(),a=McMaster.UrlMgr.GetSesnStKyTxtFrmHash(a),c=!1,a&&(c=McMaster.SesnMgr.IsVldSesnStKy(a)),c))for(c=0;c<d.length;c++)if(d[c][0]==a){if(a=Cmn.GetObj("ProdPageContent"))a.scrollTop=d[c][1];break}return b};this.ExplicitlyExpandedPrsnttnCnt=function(){var b=0,a=McMaster.SesnMgr.GetStVal(McMaster.SesnMgr.StValDefs.DynamicPagePrsnttnStats.KyTxt());Cmn.forEach(Cmn.Utilities.Values(a),function(a){"FULL"===a&&b++});return b};var l=function(b){for(var a=0,d=function(a){var b=!1;0<
a.id.length&&a.id.match("PrsnttnHdrCntnr")&&(b=!0);return b},e=0;e<b.childNodes.length;e++){var c=Cmn.GetChldrnBy(d,b.childNodes[e]);0<c.length&&PinnedPrsnttns&&(c=PinnedPrsnttns.FindPinnedElem("PinnedElem_"+c[0].id))&&(a=c.GetPrevStackHeight()-c.clonedElemHgtPxCnt())}return a}});


this.PrsnttnWebPart||(PrsnttnWebPart=new function(){this.DoNothing=function(b){Cmn.StopEvnt(b)};this.WebPart_AssocFilesLoad=function(b){"Abbr"===e(b.CntnrIDTxt)?AbbrPrsnttnWebPart.WebPart_AssocFilesLoad(b):FullPrsnttnWebPart.WebPart_AssocFilesLoad(b)};this.WebPart_LoadCmpl=function(b){"Abbr"!==e(b.CntnrIDTxt)&&FullPrsnttnWebPart.WebPart_LoadCmpl(b)};this.WebPart_PreUnload=function(b){"Full"===e(b.CntnrIDTxt)&&FullPrsnttnWebPart.WebPart_PreUnload(b)};this.CrteImgEvntHndlrs=function(b){e(b.CntnrIDTxt);
FullPrsnttnWebPart.CrteImgEvntHndlrs(b)};this.UnloadImgEvntHndlrs=function(b){e(b.CntnrIDTxt);FullPrsnttnWebPart.UnloadImgEvntHndlrs(b)};this.SlctPartNbrs=function(b,c){var a=[];"Full"===e(b)&&0<c.length&&(a=FullPrsnttnWebPart.SlctPartNbrs(b,c));return a};this.Highlight=function(b){Cmn.AddCls(Cmn.GetObj(b),"aboutBoxHighlighted")};this.UnHighlight=function(b){Cmn.RemCls(Cmn.GetObj(b),"aboutBoxHighlighted")};this.TriggerMoreInd=function(b){"over"==b?Cmn.ReplaceCls(Cmn.GetObj("pullTab"),"moreInd","moreIndTriggered"):
Cmn.ReplaceCls(Cmn.GetObj("pullTab"),"moreIndTriggered","moreInd")};this.TriggerLessInd=function(b){"over"==b?Cmn.ReplaceCls(Cmn.GetObj("pushTab"),"lessInd","lessIndTriggered"):Cmn.ReplaceCls(Cmn.GetObj("pushTab"),"lessIndTriggered","lessInd")};this.HndlClickEvnt=function(b,c){var a=null;if(b)for(a=YAHOO.util.Event.getTarget(b);a.id!==c;)if(Cmn.HasCls(a,"AbbrPrsnttn")||Cmn.HasCls(a,"AbbrGenInfo")||Cmn.HasCls(a,"GroupPrsnttn_PrsnttnNm")){if(Cmn.HasCls(a,"AbbrGenInfo"))a=McMasterCom.Nav.GetTopFrame(),
new a.PerfTracker.Evnt(a.PerfTracker.EvntNms.GenInfoAbbrPrsnttnClick,a.PerfTracker.PgCntxtNms.DynCntnt);else{var f=a,a="",e=0,d=!0;if(Cmn.HasCls(f,"AbbrPrsnttn")){d=Cmn.GetElementsByClsNm("AbbrPrsnttn_PrsnttnNm","h3",f);0<d.length&&(a=Cmn.GetTxtContent(d[0]));d=Cmn.GetElementsByClsNm("AbbrPrsnttn","div");for(i=0;i<d.length;i++)d[i]==f&&(e=i+1);f=f.offsetTop;d=Cmn.GetElementsByClsNm("ProdPageContent","div")[0].offsetHeight;d=f<d?!0:!1;f=new McMaster.MsgMgr.Hdr(McMaster.MsgMgr.CntxtNms.CONTENT);a=new McMaster.MsgMgrMsgs.ProdInfoSlctd(f,
"AbbrPrsnttn",a,e,d);McMaster.MsgMgr.PubMsg(a)}}AbbrPrsnttnWebPart.HndlMouseEvnt(b,c,"click");"CtlgPageShell_CtlgPage_Cntnr"!=c&&DynamicPageWebPart.planningtimestamp&&(a=new Date,a-=DynamicPageWebPart.planningtimestamp,Cmn.TrkAct("FirstClick&delta="+a+"&type=abbrprsnttn"),DynamicPageWebPart.planningtimestamp=null);break}else if(Cmn.HasCls(a,"FullPrsnttn")||Cmn.HasCls(a,"FullGenInfo")||Cmn.HasCls(a,"OverlayImg")){FullPrsnttnWebPart.HndlClickEvnt(b,c);"CtlgPageShell_CtlgPage_Cntnr"!=c&&DynamicPageWebPart.planningtimestamp&&
(a=new Date,a-=DynamicPageWebPart.planningtimestamp,Cmn.TrkAct("FirstClick&delta="+a+"&type=fullprsnttn"),DynamicPageWebPart.planningtimestamp=null);break}else if(Cmn.HasCls(a,"InLnOrdWebPart_CloseLnk"))break;else a=a.parentNode};this.HndlMouseoverEvnt=function(b,c){var a=null;if(b&&(a=YAHOO.util.Event.getTarget(b)))for(;a.id!==c;)if(Cmn.HasCls(a,"AbbrPrsnttn")||Cmn.HasCls(a,"AbbrGenInfo")||Cmn.HasCls(a,"GroupPrsnttn_PrsnttnNm")){AbbrPrsnttnWebPart.HndlMouseEvnt(b,c,"mouseover");break}else if(Cmn.HasCls(a,
"FullPrsnttn")||Cmn.HasCls(a,"FullGenInfo")){FullPrsnttnWebPart.HndlMouseOverEvnt(b,c);break}else if(a=a.parentNode,!a)break};this.HndlMouseoutEvnt=function(b,c){var a=null;if(b&&(a=YAHOO.util.Event.getTarget(b)))for(;a.id!==c;)if(Cmn.HasCls(a,"AbbrPrsnttn")||Cmn.HasCls(a,"AbbrGenInfo")||Cmn.HasCls(a,"GroupPrsnttn_PrsnttnNm")){AbbrPrsnttnWebPart.HndlMouseEvnt(b,c,"mouseout");break}else if(Cmn.HasCls(a,"FullPrsnttn")||Cmn.HasCls(a,"FullGenInfo")){FullPrsnttnWebPart.HndlMouseOutEvnt(b,c);break}else if(a=
a.parentNode,!a)break};var e=function(b){return b.substr(0,b.indexOf("_"))}});


if (this.AbbrPrsnttnWebPart) {
	// Continue
} else {

	//-------------------------------------------------------------------------
	// Class: AbbrPrsnttnWebPart
	// Summary: This shared class contains functionality used by 
	//			the Abbreviated Presentation Web Part.
	// Remarks: Note that the class is shared so all functionality is available
	//          without creating a specific instance.
	//-------------------------------------------------------------------------
AbbrPrsnttnWebPart = new function() {

    // Declarations

	//Environment constants
	var PUB_DEV = "pubdev",
		DEV = "wwwdev", 
		PUB_QUAL = "pubqual", 
		QUAL = "wwwqual", 
		PROD = "www", 
		PUB = "pub";
	
	var GEN_INFO_CLS_NM = "AbbrGenInfo";
	
    // click types
    var ABBR_PREFIX_NM = "Abbr_",
		ABBR_PRSNTTN_HIGHLIGHTED_CLS = "AbbrPrsnttn_PrsnttnNm_Highlighted",
		ABBR_PRSNTTN_CTRL_GRP_CLS = "AbbrPrsnttn_PrsnttnNm_CtrlGrp",
		CLICK = "click",
        MOUSE_OVER = "mouseover",
        MOUSE_OUT = "mouseout",
        mIsIE6Ind = Cmn.IsIE6();				
		
    // Public Methods
    //---------------------------------------------------------------------
    // Summary: Responsible for loading the abbreviated presentation
    // Remarks: Will be called once the webpart is loaded.
    // Input: The web part that's been loaded.
    //---------------------------------------------------------------------
    this.WebPart_AssocFilesLoad = function(webPartObj) {

        // Get the presentation ID
        var prsnttnId = webPartObj.CntnrIDTxt.substr(webPartObj.CntnrIDTxt.indexOf('_') + 1);

        // Instantiate dynamic table layout objects for the presentation
        // tables
        if (prsnttnId.length > 0) {
            var prsnttnNm = "Abbr_" + prsnttnId,
                fullPrsnttnCntnrNm = "Full_" + prsnttnId,
                fullPrsnttnCntnrObj = Cmn.GetObj(fullPrsnttnCntnrNm);

            var tempCntnr = Cmn.CrteElement('div');
            tempCntnr.innerHTML = webPartObj.MarkupTxt;
			
			highlightRelevantPrsnttnMarkup(tempCntnr);
			
            var outOfFlowCntnr = Cmn.GetFrstChld(tempCntnr);

            // Remove the existing web part container
            var webPartCntnr = Cmn.GetObj(webPartObj.CntnrIDTxt);
            if (webPartCntnr) {
                Cmn.RemElem(webPartCntnr);
            }

            //insert the abbr prsnttn markup after the full prsnttn 
            //and then hide the full prsnttn
            Cmn.InsrtAfter(outOfFlowCntnr, fullPrsnttnCntnrObj);
            FullPrsnttnWebPart.HidePrsnttn(prsnttnId);

            var prsnttnObj = Cmn.GetObj(webPartObj.CntnrIDTxt);
            if (prsnttnObj) {
                showAbbrPrsnttn(prsnttnId, webPartObj.CntnrIDTxt, prsnttnObj);
            }
			
			//hide pinned content on full presentation
			McMasterCom.Nav.GetTopFrame().PinnedPrsnttns.Hide(prsnttnId);
        }

        // create and publish a web part loaded message
        var msgHdr = new McMaster.MsgMgr.Hdr(McMaster.MsgMgr.CntxtNms.FULL_PRSNTTN);
        var msg = new McMaster.MsgMgrMsgs.WebPartLoaded(msgHdr,
                                                        webPartObj.CntnrIDTxt);
        McMaster.MsgMgr.PubMsg(msg);
    }

    //---------------------------------------------------------------------
    // Summary: Expands to full presentation 
	// Remarks: If abbreviated presentation filtering is off, hiding itself and 
	//          load full presentation with other abbreviated presentations. If on, 
	//          load full presentation only.
    //---------------------------------------------------------------------
    this.Prsnttn_Click = function(prsnttnID, genInfoPrsnttnInd, grpNm, summarizedInd, familyId, grpIds) {
			
		if (genInfoPrsnttnInd == false) {
			//Add web performance tracking and web reports usage tracking (204 request)
			var trkEvntNm,
				rootElem,
				prsnttnNm = '';
			
			//performance tracking
			var top = McMasterCom.Nav.GetTopFrame();
			if (grpNm && grpNm.length > 0) {
				trkEvntNm = top.PerfTracker.EvntNms.GrpPrsnttnClick;
			} else {
				trkEvntNm = top.PerfTracker.EvntNms.AbbrPrsnttnClick;
			}
			var trkEvnt = new top.PerfTracker.Evnt(trkEvntNm, top.PerfTracker.PgCntxtNms.DynCntnt);
			
			//web reports usage
			rootElem = Cmn.GetObj("Abbr_" + prsnttnID);
			if (rootElem) {
				var abbrPrsnttnElem = (Cmn.GetElementsByClsNm('AbbrPrsnttn_PrsnttnNm', 'h3', rootElem)[0]);
				if (abbrPrsnttnElem) {
					prsnttnNm = Cmn.GetTxtContent(abbrPrsnttnElem);
				} 
			} else {
				prsnttnNm = grpNm;
			}
				
			//Track the selection of a presentation (web reports)
			var expandedPrsnttnCnt = DynamicPageWebPart.ExplicitlyExpandedPrsnttnCnt();
			var searchTerm = McMaster.SesnMgr.GetStVal(McMaster.SesnMgr.StValDefs.SlctdSrchRsltTxt.KyTxt());
			prsnttnNm = encodeURIComponent(prsnttnNm);
			searchTerm = encodeURIComponent(searchTerm);
			
			if (grpNm && grpNm.length > 0) {
				Cmn.TrkAct('Action=Selected' + '&GrpNm=' + grpNm, 'Grp');
			} else {
				Cmn.TrkAct('Action=Selected' + '&PrsnttnNm=' + prsnttnNm + '&SearchTerm=' + searchTerm + '&ExpandedPrsnttnCnt=' + expandedPrsnttnCnt, 'Prsnttn');
			}
			
			// TrkSrch
			var srchTrkInfo = new SrchTrkr.SrchDat({usr: SrchTrkr.UsrActTyps.SLCT});
			if (grpNm && grpNm.length > 0) {
				srchTrkInfo.usr.srcNm = "GrpPrsnttn";
				srchTrkInfo.usr.elemTyp = SrchTrkr.ElemTyps.GRP_PRSNTTN;
			} else {
				srchTrkInfo.usr.srcNm = "AbbrPrsnttnWebPart";
				srchTrkInfo.usr.elemTyp = SrchTrkr.ElemTyps.ABBR_PRSNTTN;
			}
			srchTrkInfo.usr.slctdNm = decodeURIComponent(prsnttnNm);
			//If we just clicked a presentation, pass along the id.
			//If we clicked a group, pass along the group name instead in case the idlist is too long for the 204.
			if (grpNm) {
				srchTrkInfo.usr.slctdID = grpNm;
			} else {
				srchTrkInfo.usr.slctdID = prsnttnID;
			}
			
			if (rootElem) {
				srchTrkInfo.usr.slctdElemOffsetXYPosn = Cmn.GetXOffset(rootElem) + "," + Cmn.GetYOffset(rootElem);
			}
			srchTrkInfo.Trk();
			           
			//get current url
			var url = McMaster.UrlMgr.CurrUrl(),
				sesnStKyTxt = McMaster.UrlMgr.GetSesnStKyTxtFrmHash(url),
				vldSesnStKyInd = false;
				
			if (sesnStKyTxt) {
				//check for valid session key
				vldSesnStKyInd = McMaster.SesnMgr.IsVldSesnStKy(sesnStKyTxt);
			} 
			
			if (vldSesnStKyInd){
				var prodPage = Cmn.GetObj("ProdPageContent");
				var entry = [sesnStKyTxt, prodPage.scrollTop];
				
				//retrieve the existing entries
				var snapToScrollPosArr = McMaster.SesnMgr.GetStVal(McMaster.SesnMgr.StValDefs.SnapShotScrollPos.KyTxt());
				var newSnapToScrollPosArr = null;
				if (snapToScrollPosArr){
					newSnapToScrollPosArr = snapToScrollPosArr;
				}else{
					newSnapToScrollPosArr = [];
				}
				
				//snapshot already exists so remove it
				for (var i=0; i<newSnapToScrollPosArr.length; i++){
					if (newSnapToScrollPosArr[i][0] == sesnStKyTxt){
						newSnapToScrollPosArr.splice(i, 1);
					}
				}
				
				//add snapshot and new scroll position
				newSnapToScrollPosArr.push(entry);
				McMaster.SesnMgr.SetStVal(McMaster.SesnMgr.StValDefs.SnapShotScrollPos.KyTxt(), newSnapToScrollPosArr);
			}
			
			//For now we only keep track of one group at a time, under the premise that any subsequent group click would simply be a subset of the first.
			//If we just clicked a group, we may have a group name in scope. So we unload any preexisting group first.
			//Otherwise, refresh presentation user inputs.
			if (grpNm) {
				GrpUsrInp.Unload();
				var grpUsrInp = GrpUsrInp.Get();		
				grpUsrInp.AddUsrInp(grpIds, familyId).UpdateSession();	
			} else {
				PrsnttnUsrInp.Unload();
				for (var i=0; i < prsnttnID.length; i++) {
					//add presentation user input
					var currPrsnttnID = prsnttnID[i];
					var prsnttnUsrInp = PrsnttnUsrInp.Get();
					prsnttnUsrInp.AddUsrInp(currPrsnttnID).UpdateSession();
				}
			}
			
			//if there is a spec search on the page, this variable will be true. Otherwise false.
			//We go through prod page if there is no spec search showing already, otherwise waste of time.
			var cmingFrmPgWNoSpecSrch = true;
			if (document && document.getElementById("SpecSrch_Cntnr")) {
				cmingFrmPgWNoSpecSrch = false;
			}
			
			if (summarizedInd && cmingFrmPgWNoSpecSrch) {
				//click from summarized page needs to reload spec search, so we go through ProdPage URL with GrpUsrInp in payload
				var msgHdr = new McMaster.MsgMgr.Hdr(McMaster.MsgMgr.CntxtNms.PROD_PAGE);
				var msg = new McMaster.MsgMgrMsgs.ProdPageSlctd(msgHdr, grpUsrInp);
				McMaster.MsgMgr.PubMsg(msg);
				
				// collapse secondary pane
				McMaster.MsgMgr.PubMsg(new McMaster.MsgMgrMsgs.CollapseSecondaryContent());
				
			} else {
				// create and publish abbreviated presentation clicked. This is the normal flow.
				var msgHdr = new McMaster.MsgMgr.Hdr(McMaster.MsgMgr.CntxtNms.ABBR_PRSNTTN);
				var msg = new McMaster.MsgMgrMsgs.AbbrPrsnttnClicked(msgHdr);
				McMaster.MsgMgr.PubMsg(msg);				
			}
						
		}else{
			ContentHistMgr.Init_Snapshot(ContentHistMgr.TYP.PRSNTTN);
            AbbrPrsnttnWebPart.ExpandPrsnttn(prsnttnID); //this should never be a group, because it's genInfo
		}
		    
    //reset the active presentation id to nothing we start at the top 
	  McMaster.SesnMgr.SetStVal(McMaster.SesnMgr.StValDefs.DynamicPageActvPrsnttnId.KyTxt(),null);

    }


    //---------------------------------------------------------------------
    // Summary: Expand a presentation inline
    // Input:  prsnttnId - the presentation id of the presentation to expand
    //---------------------------------------------------------------------
    this.ExpandPrsnttn = function(prsnttnID){
    		if (Cmn.GetObj("Full_" + prsnttnID)) {
				// Full presentation is already present; simply show it
				AbbrPrsnttnWebPart.HidePrsnttn(prsnttnID);
				FullPrsnttnWebPart.ShowPrsnttn(prsnttnID, DynamicPageWebPart.ResizePrsnttnsAndScroll);
				//show pinned content on full presentation
				McMasterCom.Nav.GetTopFrame().PinnedPrsnttns.Show(prsnttnID);
				var top = McMasterCom.Nav.GetTopFrame();
				new top.PerfTracker.Evnt(top.PerfTracker.EvntNms.GenInfoPrsnttnLdEnd, top.PerfTracker.PgCntxtNms.DynCntnt);
			} else {
				// Fetch via AJAX
				PrsnttnWebPartLoader.Load(prsnttnID, "full", DynamicPageWebPart.ResizePrsnttnsAndScroll);
			}
    }
    
    //---------------------------------------------------------------------
    // Summary: This contains a method to make the abbreviated presentation
    //          invisible and hide the content on the page.
    // Input:  prsnttnId - the presentation id of the div to hide
    //---------------------------------------------------------------------
    this.HidePrsnttn = function(prsnttnId) {
        var prsnttnObj = Cmn.GetObj("Abbr_" + prsnttnId);
        if (prsnttnObj) {
            Cmn.ReplaceCls(prsnttnObj, 'Show', 'Hide');
        }
    }

    //---------------------------------------------------------------------
    // Summary: This contains a method to make the abbreviated presentation
    //         	visible and show the content on the page.  It also does
    //			special styling to indicate which presentation has been 
    //          abbreviated.
    // Input:  prsnttnId - the presentation id of the div to show
    //    callbackFunc (optional) - callback function to execute after the
    //        full presentation is shown    
    //---------------------------------------------------------------------
    this.ShowPrsnttn = function(prsnttnId, callbackFunc) {
        var prsnttnNm = "Abbr_" + prsnttnId,
			    prsnttnObj = Cmn.GetObj(prsnttnNm);

        if (prsnttnObj) {
            showAbbrPrsnttn(prsnttnId, prsnttnNm, prsnttnObj);
        } else {
            // Call the loader to load the content via AJAX
            PrsnttnWebPartLoader.Load(prsnttnId, "abbr");
        }
    }

    //---------------------------------------------------------------------
    // Summary: This method is called whenever the customer clicks
    //          somewhere on the page.
    // Input:   e - The event argument, used to determine what was clicked.
    //		  CntnrIDTxt - the container id for the presentation clicked on
    //---------------------------------------------------------------------
    this.HndlMouseEvnt = function(e, CntnrIDTxt, type) {

        var prsnttnId = [],
			grpNm = null,
            targetElem = null,
			groupPrsnttn = null,
			idList = null,
			elemIsLnk = false, 
			genInfoPrsnttnInd = false, 
			summarizedInd = false,
			familyId = "-1", 
			grpIds = null;

        // Find the link that was selected by walking up the DOM until 
        //you reach a target we want to react to and then jump out 
        //and handle this event
        if (e) {
            targetElem = Cmn.GetEvntTarget(e);
            while (targetElem.id !== CntnrIDTxt) {
                if (Cmn.HasCls(targetElem, "AbbrPrsnttn") || Cmn.HasCls(targetElem, "AbbrGenInfo") || Cmn.HasCls(targetElem, "GroupPrsnttn_PrsnttnNm")) {
                    break;
                }
                else if (Cmn.HasCls(targetElem, "GeneralInfoLnk")) {
                    return true;
                }
				else if(Cmn.HasCls(targetElem,"AddnlInfoLnk")) {
					elemIsLnk = true;
					break;
				}
                else {
                    targetElem = targetElem.parentNode;
                }
            }  /* end while */
        }

        if (targetElem) {
            if (type == CLICK) {
				if (elemIsLnk) {
				    Cmn.PreventDeflt(e);
					var selectedLink = decodeURIComponent(targetElem.hash.substring(1));
					// Create a message header
					var hdr = new McMaster.MsgMgr.Hdr(McMaster.MsgMgr.CntxtNms.ABBR_PRSNTTN);
				    // Create srchTrkr object
					var srchTrkInfo = new SrchTrkr.SrchDat({usr: SrchTrkr.UsrActTyps.SLCT, resp:"unknown"});	
					srchTrkInfo.usr.srcNm = "AbbrPrsnttnWebPart";
					srchTrkInfo.usr.elemTyp = SrchTrkr.ElemTyps.ADDNL_INFO_LNK;
					srchTrkInfo.usr.slctdElemOffsetXYPosn = Cmn.GetXOffset(targetElem) + "," + Cmn.GetYOffset(targetElem);
					srchTrkInfo.usr.slctdNm = selectedLink;
					var msg = McMaster.MsgMgr.PubMsg(new McMaster.MsgMgrMsgs.UsrInpTxtSubmitted(hdr, selectedLink, srchTrkInfo));
					// Publish the message
					McMaster.MsgMgr.PubMsg(msg);
				} else {
					Cmn.PreventDeflt(e);					
					if (Cmn.HasCls(targetElem, "GroupPrsnttn_PrsnttnNm")) {												
							//We want to trigger group clicks only when the user clicks on the header, but we need the information stored in the GroupPrsnttn element.
							groupPrsnttn = Cmn.GetAncestorByClsNm(targetElem, "GroupPrsnttn");
							if (groupPrsnttn){
								// For now this is not the most useful information, but it could be.
								grpNm = Cmn.GetTxtContent(groupPrsnttn.firstChild);
								grpIds = groupPrsnttn.getAttribute("hiddenidlist");
								familyId = groupPrsnttn.getAttribute("familyId");
							} else {
								var oneUp = Cmn.GetAncestorByClsNm(targetElem, "PrsnttnHdrCntnr");
								if (oneUp) {
									grpNm = Cmn.GetTxtContent(oneUp);
									var fakeHdr = Cmn.GetAncestorByTagNm(oneUp, "div");
									if (fakeHdr) {
										grpIds = fakeHdr.getAttribute("hiddenidlist");
										familyId = fakeHdr.getAttribute("familyId");
									}
								}
							}
					} else {
						//This is some kind of abbr presentation. If an grpIds is present, this is a summarized group. If not, this is an abbr presentation.
						grpIds = targetElem.getAttribute("hiddenidlist");
						if (grpIds) {
						// If we click on a group, we need to get presentation IDs within that group and not the presentation ID of the group (which is meaningless)
						// Fetch the group name for tracking.
							summarizedInd = true;
							familyId = targetElem.getAttribute("familyId");
							grpNm = Cmn.GetTxtContent(Cmn.GetElementsByClsNm("PrsnttnHdrCntnr", "div", targetElem)[0]);
						} else {
						// If this grpIds does not exist, this is a normal abbr presentation click and we should proceed as usual.
							prsnttnId.push(getPrsnttnId(targetElem.id));
						}
					} 
					genInfoPrsnttnInd = Cmn.HasCls(targetElem, GEN_INFO_CLS_NM);
					AbbrPrsnttnWebPart.Prsnttn_Click(prsnttnId, genInfoPrsnttnInd, grpNm, summarizedInd, familyId, grpIds);
				}
            } else if (type == MOUSE_OVER) {
                if (mIsIE6Ind) {
                	  applyHoverClsForIE6(targetElem,type);
                }
				if ( (Cmn.HasCls(targetElem, "GroupPrsnttn_PrsnttnNm"))  )  { 
					  applyHoverClsForGrp(targetElem,type);
				}
            } else if (type == MOUSE_OUT) {
                if (mIsIE6Ind) {
                	  applyHoverClsForIE6(targetElem,type);
                }
				if ( (Cmn.HasCls(targetElem, "GroupPrsnttn_PrsnttnNm"))  )  {
					  applyHoverClsForGrp(targetElem,type);
				}
            }
        }
    } //end HndlMouseEvnt

    // End Public Methods


    // Private Methods
    //---------------------------------------------------------------------
    // Summary: Adds and removes hover classes for mouseover and mouseout
    //          events in IE6. 
    // Input:   elem - the element experiencing the mouse event
    //---------------------------------------------------------------------
    var applyHoverClsForIE6 = function(targetElem,mouseEvent) {
	    	
	    	switch (mouseEvent) {
	    		case MOUSE_OVER: 
		         if ( (Cmn.HasCls(targetElem, "AbbrPrsnttn"))  )  {
		         	    Cmn.AddCls(targetElem,"AbbrPrsnttnHover");
			          	var prsnttnCntnr = Cmn.GetElementsByClsNm("PrsnttnHdrCntnr","div",targetElem);
			            if (Cmn.HasCls(prsnttnCntnr[0],"PrsnttnHdrCntnr")) {
			              Cmn.AddCls(prsnttnCntnr[0], "PrsnttnHdrCntnrHover");
			            }
					   } else if (Cmn.HasCls(targetElem, "AbbrGenInfo")) {
					   	    Cmn.AddCls(targetElem,"AbbrGenInfoHover");
					    	  var hdrCntnr = Cmn.GetElementsByClsNm("FullGenInfo_Subhead","div",targetElem);
		   				    var moreLnk = Cmn.GetElementsByClsNm("ToggleLnk","p",targetElem);
					        if ( Cmn.HasCls(hdrCntnr[0],"FullGenInfo_Subhead") || Cmn.HasCls(moreLnk[0],"ToggleLnk")  ) {
					            Cmn.AddCls(hdrCntnr[0], "AbbrGenInfo_Subhead_ToggleLnkHover");
					            Cmn.AddCls(moreLnk[0], "AbbrGenInfo_Subhead_ToggleLnkHover");
						      }
					   }
					   break;
					   
					case MOUSE_OUT:
		         if ( (Cmn.HasCls(targetElem, "AbbrPrsnttn"))  )  {
		         	    Cmn.RemCls(targetElem,"AbbrPrsnttnHover");
			          	var prsnttnCntnr = Cmn.GetElementsByClsNm("PrsnttnHdrCntnr","div",targetElem);
			            if (Cmn.HasCls(prsnttnCntnr[0],"PrsnttnHdrCntnr")) {
			              Cmn.RemCls(prsnttnCntnr[0], "PrsnttnHdrCntnrHover");
			            }
					   } else if (Cmn.HasCls(targetElem, "AbbrGenInfo")) {
					   	    Cmn.RemCls(targetElem,"AbbrGenInfoHover");
					    	  var hdrCntnr = Cmn.GetElementsByClsNm("FullGenInfo_Subhead","div",targetElem);
		   				    var moreLnk = Cmn.GetElementsByClsNm("ToggleLnk","p",targetElem);
					        if ( Cmn.HasCls(hdrCntnr[0],"FullGenInfo_Subhead") || Cmn.HasCls(moreLnk[0],"ToggleLnk")  ) {
					            Cmn.RemCls(hdrCntnr[0], "AbbrGenInfo_Subhead_ToggleLnkHover");
					            Cmn.RemCls(moreLnk[0], "AbbrGenInfo_Subhead_ToggleLnkHover");
						      }
					   } 
			       break;
				} //end switch   	  
    	
   }  //end ApplyHoverClsForIE6
   
   //---------------------------------------------------------------------
    // Summary: Adds and removes hover classes for mouseover and mouseout
    //          events to the group name. 
    // Input:   elem - the element experiencing the mouse event
    //---------------------------------------------------------------------
    var applyHoverClsForGrp = function(targetElem, mouseEvent) {
		
		//We want group names to look clickable only if they are clickable, i.e., 
		//only if there are presentation ids lurking behind the group element under
		//the name hiddenidlist. This should be all dynamic and authored groups.
		//There are groups without this hiddenidlist: prod-based landing pages.
		var prodPrsnttnGrpCntnr, grpEID = null;
		var groupPrsnttn = Cmn.GetAncestorByClsNm(targetElem, "GroupPrsnttn");
		if (groupPrsnttn) {
			grpEID = groupPrsnttn.getAttribute("hiddenidlist");
		} else {
			var oneUp = Cmn.GetAncestorByClsNm(targetElem, "PrsnttnHdrCntnr");
			if (oneUp) {
				var fakeHdr = Cmn.GetAncestorByTagNm(oneUp, "div");
				if (fakeHdr) {
					grpEID = fakeHdr.getAttribute("hiddenidlist");
				} 		 
			}
		}
		//just checking
		if (grpEID && grpEID.length > 0) {
			switch (mouseEvent) {
				case MOUSE_OVER: 
				 //do something
					 Cmn.AddCls(targetElem, "GroupPrsnttnHover");
					 break;	
				
				case MOUSE_OUT:
				//do something else
				 if (Cmn.HasCls(targetElem, "GroupPrsnttnHover")) {
					Cmn.RemCls(targetElem, "GroupPrsnttnHover");
				 }
				break;
			} //end switch
		}
	} //end applyHoverClsForGrp
    
    //---------------------------------------------------------------------
    // Summary: This method sets the appropriate values in session regarding
    //			the presentation states given that the abbreviated
    //			presentation is now showing and does webreports tracking
    // Input:  prsnttnId - the presentation id of the div to show
    //         prsnttnNm - the name of the presentation to show
    //         prsnttnObj - the presentation object to show    
    //---------------------------------------------------------------------
    var showAbbrPrsnttn = function(prsnttnId, prsnttnNm, prsnttnObj) {
        Cmn.ReplaceCls(prsnttnObj, 'Hide', 'Show');

        if (Cmn.HasCls(prsnttnObj, "AbbrGenInfo")) {
            //do nothing
        } else {
            //do special styling to indicate which presentation was just collapsed
            Cmn.AddCls(prsnttnObj, "Focus");

            var unfocusFunc = function(prsnttnObj) {
                return function() {
                    Cmn.RemCls(prsnttnObj, "Focus");
                }
            }
            //we only want to give it special styling for a set period of time	
            var unFocusTimer = setTimeout(unfocusFunc(prsnttnObj), 1000);
        }

        PrsnttnWebPart.actvPrsnttnElem = Cmn.GetObj(prsnttnObj);
        setSesnDat(prsnttnId, prsnttnNm);

        // this is required to scroll the closed presentation to the top of the viewport
        var msgHdr = new McMaster.MsgMgr.Hdr(McMaster.MsgMgr.CntxtNms.PRSNTTN);
        var msg = new McMaster.MsgMgrMsgs.PageResizeReq(msgHdr);
        McMaster.MsgMgr.PubMsg(msg);
    }


    //---------------------------------------------------------------------
    // Summary: This method sets the appropriate values in session regarding
    //			the presentation states given that the abbreviated 
    //			presentation is now showing and does webreports tracking
    //---------------------------------------------------------------------
    var setSesnDat = function(prsnttnId, prsnttnNm) {
        var fullPrsnttnNm = '';
        var rootElem = Cmn.GetObj("Full_" + prsnttnId);
        if (rootElem) {		
            var fullPrsnttnNmElem = Cmn.GetElementsByClsNm('PrsnttnNm', 'h3', rootElem)[0];
            
            if (fullPrsnttnNmElem) {
                fullPrsnttnNm = Cmn.GetTxtContent(fullPrsnttnNmElem);
            }

            //Updates the active presentation id
            McMaster.SesnMgr.SetStVal(McMaster.SesnMgr.StValDefs.DynamicPageActvPrsnttnId.KyTxt(), prsnttnNm);

            //update the state hash
            var prsnttnStat = Cmn.GetClonedObj(McMaster.SesnMgr.GetStVal(McMaster.SesnMgr.StValDefs.DynamicPagePrsnttnStats.KyTxt()));

            //create the object if it doesn't exist
            if (prsnttnStat == null) {
                prsnttnStat = new Object();
            }

            //This is uppercase because when we originally build the prsnttnStat hash it is uppercase and JS is case sensitive
            prsnttnStat[prsnttnId] = "";
            McMaster.SesnMgr.SetStVal(McMaster.SesnMgr.StValDefs.DynamicPagePrsnttnStats.KyTxt(), prsnttnStat);

            //take snapshot
            ContentHistMgr.Take_Snapshot(ContentHistMgr.TYP.PRSNTTN);
            
            //Create the 204 request for web reports        
            var expandedPrsnttnCnt = DynamicPageWebPart.ExplicitlyExpandedPrsnttnCnt();
            var searchTerm = McMaster.SesnMgr.GetStVal(McMaster.SesnMgr.StValDefs.SlctdSrchRsltTxt.KyTxt());
            fullPrsnttnNm = encodeURIComponent(fullPrsnttnNm);
            searchTerm = encodeURIComponent(searchTerm);

            Cmn.TrkAct('Action=Collapsed' + '&PrsnttnNm=' + fullPrsnttnNm + '&SearchTerm=' + searchTerm + '&ExpandedPrsnttnCnt=' + expandedPrsnttnCnt, 'Prsnttn');

            // TrkSrch		
            var srchTrkInfo = new SrchTrkr.SrchDat({ usr: SrchTrkr.UsrActTyps.COLLAPSE });
			srchTrkInfo.usr.srcNm = "FullPrsnttnWebPart";
            srchTrkInfo.usr.elemTyp = SrchTrkr.ElemTyps.FULL_PRSNTTN;
            srchTrkInfo.usr.slctdNm = decodeURIComponent(fullPrsnttnNm);
			srchTrkInfo.usr.slctdID = prsnttnId;
			// Get the presentation position if possible
			var abbrPrsnttnElem = Cmn.GetObj("Abbr_" + prsnttnId);
			if (abbrPrsnttnElem) {
				srchTrkInfo.usr.slctdElemOffsetXYPosn = Cmn.GetXOffset(abbrPrsnttnElem) + "," + Cmn.GetYOffset(abbrPrsnttnElem);
			}
            srchTrkInfo.Trk();
        }
    }

    //---------------------------------------------------------------------
    // Summary: This method gets the presentation ID from
    // 		    the presentation element's container Div.
    // Input:   prsnttnElemId - the ID of the container Div.
    //---------------------------------------------------------------------
    var getPrsnttnId = function(prsnttnElemId) {

        // format is Abbr_id
        var prsnttnId = prsnttnElemId.substr(prsnttnElemId.indexOf('_') + 1);
        return prsnttnId;
    }
	
	//---------------------------------------------------------------------
    // Summary: This method gets the group ID from
    // 		    the group element's container Div.
    // Input:   grpElemId - the ID of the container Div.
    //---------------------------------------------------------------------
    var getGrpEID = function(grpElemId) {

        // format is t23049823098, want to get the t off
		var grpId = null;
		if (grpElemId) {
			if (grpElemId.indexOf('t') === 0) {
				grpId = grpElemId.substr(1);
			} else {
				grpId = grpElemId;
			}
		}
        return grpId;
    }
	
	
	// -------------------------------------------------------------------------------
	// Summary: Method to highlight abbreviated presentations 
	//          and part numbers from which customers have 
	//          purchased in the past.
	// Note: The flow for highlighting abbreviated presentations is as follows:
	//       (Assuming there are abbreviated presentations on the page)
	//       1). We have ordered something from a particular presentation in the past.
	//       2). Determine if the ordered part numbers for a particular presentation
	//           also have been tied to a previously ordered "search result id". The
	//           reason for this is because we filter part numbers that ultimately 
	//           displayed on the page. So the logic goes, if we are not displaying any
	//           purple part number links under the displayed presentation, then don't
	//           make the presentation purple.
	// -------------------------------------------------------------------------------	
	var highlightRelevantPrsnttnMarkup = function(rootElem) {

		var len = 0
		   ,lenOfArray = 0	
		//	,lnksSeenTxt
		   ,srchIDPartsObj = {}
		  // ,trackingCnt = 0
		   ,srchIDPartNbrArray = []
		  // ,featrActvnInd = McMaster.SesnMgr.GetStVal(McMaster.SesnMgr.StValDefs.FndAgainInd.KyTxt());
			
		
	   // check for abbreviated presentations to highlight
		var prsnttnsToHighlight = McMaster.SesnMgr.GetStVal(McMaster.SesnMgr.StValDefs.FndAgainPrsnttnIdsToHighlight.KyTxt());
		if (Cmn.IsEmpty(prsnttnsToHighlight) == false){				
			var abbr_prefix_nm_lngth = parseInt(ABBR_PREFIX_NM.length);
			var prsnttnElemsOnPage = Cmn.GetElementsByClsNm("AbbrPrsnttn", "div", rootElem);
			len = prsnttnElemsOnPage.length; // performance boost by saving off the length
			if (prsnttnElemsOnPage && len > 0){
				var srchResultIdsAndPartNbrs = McMaster.SesnMgr.GetStVal(McMaster.SesnMgr.StValDefs.FndAgainSearchIdsToParts.KyTxt());
				var srchRsltID = getSrchId();
				if (Cmn.IsEmpty(srchResultIdsAndPartNbrs) == false &&
  				    srchRsltID != undefined && srchRsltID > 0 &&
					srchResultIdsAndPartNbrs[srchRsltID]){						
					srchIDPartNbrArray = srchResultIdsAndPartNbrs[srchRsltID].split("|");
					lenOfArray = srchIDPartNbrArray.length;
					// Load up our search result ID's to part number array
					for (var i = 0; i < lenOfArray; i++){
						srchIDPartsObj[srchIDPartNbrArray[i]] = '0';
					}
					for (var i = 0; i < len; i++){
						// Remove the text characters from the ID in order to use just the numeric portion.
						var currPrsnttnId = prsnttnElemsOnPage[i].id.substring(abbr_prefix_nm_lngth);
						if (prsnttnsToHighlight[currPrsnttnId]){
							// Double check to ensure we have ordered any displayed part numbers under the current presentation
							// for a given search result. Just b/c we ordered from a given presentation before does not mean
							// we want to highlight it. Only if there are purple part nbrs under it.
							var highlightItInd = false;
							var prsnttnIDPartNbrArray = prsnttnsToHighlight[currPrsnttnId].split("|");
							lenOfArray = prsnttnIDPartNbrArray.length;
							for (var ii = 0; ii < lenOfArray; ii++){
								if (srchIDPartsObj[prsnttnIDPartNbrArray[ii]]){
									highlightItInd = true;
								}
							}
							if (highlightItInd){
								// We will be adding this back in the future.
								// var currLnkSeenTxt = getAbbrPrsnttnTrackingTxt(prsnttnElemsOnPage[i]);
								// if (i > 0){
									// lnksSeenTxt = lnksSeenTxt + currLnkSeenTxt + ', ';
								// } else {
									// lnksSeenTxt = currLnkSeenTxt + ', ';
								// }
								// if (featrActvnInd == "2"){ // value of 2, at the momement, means to highlight
									// // At this point we have validated the abbreviated presentation, and it's possibly paired down
									// // set of part numbers, does pertain the search result ID and it's set of previously ordered part numbers.
									// // So we will now highlight it.
									 Cmn.AddCls(prsnttnElemsOnPage[i], ABBR_PRSNTTN_HIGHLIGHTED_CLS);
									// trackingCnt = trackingCnt + 1;
								// } else {
									// Cmn.AddCls(prsnttnElemsOnPage[i], ABBR_PRSNTTN_CTRL_GRP_CLS);
									// trackingCnt = trackingCnt + 1;
								// }
							}	
						}
					}
					// We will be adding this back in the future. Track the number of part numbers each visitor has seen.
					// if (featrActvnInd == "2"){
						// var abbrPrsnttnSeenActvGrpTrkTxt = 'GuidedNavLnkTypSeen=AbbrPrsnttn' + '&Count=' + trackingCnt + '&Highlighted=True' + '&LnksSeen=' + lnksSeenTxt + '&Purpose=GuidedNavLnkStudy';
						// Cmn.TrkAct(abbrPrsnttnSeenActvGrpTrkTxt, 'GuidedNav');
					// } else {
						// var abbrPrsnttnSeenCtrlGrpTrkTxt = 'GuidedNavLnkTypSeen=AbbrPrsnttn' + '&Count=' + trackingCnt + '&Highlighted=False' + '&LnksSeen=' + lnksSeenTxt + '&Purpose=GuidedNavLnkStudy';
						// Cmn.TrkAct(abbrPrsnttnSeenCtrlGrpTrkTxt, 'GuidedNav');
					// }
					// trackingCnt = 0;
				}
			}
		}
	}
	// -------------------------------------------------------------
	// Returns the search result ID.
	// Remarks: The SlctdSrchRsltId might be null, i.e. if the customer
	// 			has selected a part number causing the search result 
	//			web part to unload.  Accordingly, we check both that
	//			session value and the DynamicPageSrchRsltId, which is
	//			initialized by the DynamicContentCoordinator.

	// -------------------------------------------------------------
	var getSrchId = function() {
		return McMaster.SesnMgr.GetStVal(McMaster.SesnMgr.StValDefs.SlctdSrchRsltId.KyTxt())
			|| McMaster.SesnMgr.GetStVal(McMaster.SesnMgr.StValDefs.DynamicPageSrchRsltId.KyTxt());
	}

    
	// -------------------------------------------------------------------
	// Summary: Tracks when customers click on abbr prsnttn links
	//			that lead them to a previously ordered part number.
	// Inputs: 	The abbreviated presentation node
	// ------------------------------------------------------------------
	// We will be adding this back in the future.
	// var trkLnkHighlighting = function(abbrPrsnttnId){
		// var abbrPrsnttnObj = Cmn.GetObj("Abbr_" + abbrPrsnttnId);
		// var prsnttnClsList = abbrPrsnttnObj.className.split(" ");
		// var trackingCls = "none";
		
		// // Look at the classes on the Abbr Prsnttn Object to determine
		// // what class to pass into the tracking request.
		// for (var i = 0; i < prsnttnClsList.length; i++){
			// if (prsnttnClsList[i] === "AbbrPrsnttn_PrsnttnNm_Highlighted" || prsnttnClsList[i] === "AbbrPrsnttn_PrsnttnNm_CtrlGrp"){
				// trackingCls = prsnttnClsList[i];
				// break;
			// }
		// }
		
		// // Depending on the highlighting class, make a tracking request.
		// if (trackingCls === "AbbrPrsnttn_PrsnttnNm_Highlighted" || trackingCls === "AbbrPrsnttn_PrsnttnNm_CtrlGrp"){
			// switch(trackingCls){
			// case "AbbrPrsnttn_PrsnttnNm_Highlighted":
				// var abbrPrsnttnActivatedGrpTxt = 'GuidedNavLnkTyp=AbbrPrsnttn' + '&Val=' + abbrPrsnttnId + '&Highlighted=True';
				// Cmn.TrkAct(abbrPrsnttnActivatedGrpTxt, 'GuidedNav')
				// break;
			// case "AbbrPrsnttn_PrsnttnNm_CtrlGrp":
				// var abbrPrsnttnCtrlGrpTxt = 'GuidedNavLnkTyp=AbbrPrsnttn' + '&Val=' + abbrPrsnttnId + '&Highlighted=False'
				// Cmn.TrkAct(abbrPrsnttnCtrlGrpTxt, 'GuidedNav')
				// break;
			// default:
			// // do nothing
			// }
		// }
	// }
	
	// --------------------------------------------------
	// Summary: Gets the name of the abbreviated presentation
	//			to track.
	// Inputs: An HTML node
	// --------------------------------------------------
	// We will be adding this back in the future.
	// var getAbbrPrsnttnTrackingTxt = function (node){
		// var prsnttnHdrElems = Cmn.GetElementsByClsNm("AbbrPrsnttn_PrsnttnNm", "h3", node );
		// if (prsnttnHdrElems.length > 0 ){
				// var trackingTxt = Cmn.GetTxtContent(prsnttnHdrElems[0]);
		// }
		// return trackingTxt;
	// }
	// End Private Methods			      
}
}


this.FullPrsnttnWebPart||(FullPrsnttnWebPart=new function(){var A=[],y=Cmn.IsIE6();Cmn.IsIE7();var B=null,E=!1,F=!1,I=null,r=[];McMaster.MsgMgr.AddSubscriber(McMaster.MsgMgrMsgs.ChooseSpecsClearAllClick,function(b){r=[];McMaster.SesnMgr.SetStVal(McMaster.SesnMgr.StValDefs.DynamicPageActvPrsnttnId.KyTxt(),null)},McMaster.MsgMgr.PRIORITY.HIGH);this.WebPart_AssocFilesLoad=function(b){var e=b.CntnrIDTxt.substr(b.CntnrIDTxt.indexOf("_")+1);if(0<e.length){var c="Abbr_"+e,a;Cmn.GetObj(c)?(c=Cmn.GetObj(c),
a=Cmn.InsrtAfter):(c=Cmn.GetObj("SpecInfoPadding_"+e),a=Cmn.Dom.AppendChild);var d=Cmn.CrteElement("div");d.innerHTML=b.MarkupTxt;J(d,!0);J(d,!1);var d=Cmn.GetFrstChld(d),g=Cmn.GetObj(b.CntnrIDTxt);g&&Cmn.RemElem(g);a(d,c);b.ParWebPart||(AbbrPrsnttnWebPart.HidePrsnttn(e),K(e));FullPrsnttnWebPart.CrteImgEvntHndlrs(b);"function"===typeof b.CallbackFunc&&b.CallbackFunc();!0===b.GenInfoInd&&(e=McMasterCom.Nav.GetTopFrame(),new e.PerfTracker.Evnt(e.PerfTracker.EvntNms.GenInfoPrsnttnLdEnd,e.PerfTracker.PgCntxtNms.DynCntnt))}e=
new McMaster.MsgMgr.Hdr(McMaster.MsgMgr.CntxtNms.FULL_PRSNTTN);b=new McMaster.MsgMgrMsgs.WebPartLoaded(e,b.CntnrIDTxt);McMaster.MsgMgr.PubMsg(b)};this.getClickablePartNbrCell=function(b){var e=null,c=b.getAttribute("data-mcm-prodgrps").split(",");if(!(1<c.length)){b=Cmn.GetAncestorByTagNm(b,"tr");b=Cmn.GetElementsByClsNm("ItmTblCellPartNbr","td",b);for(var a=0;a<b.length;a++)if(b[a].getAttribute("data-mcm-prodgrps")==c[0]){c=Cmn.GetElementsByClsNm("PartNbrLnk","a",b[a]);0<c.length&&!1==Cmn.HasCls(b[a],
"ItmTblFiller")&&(e=c[0]);break}}return e};this.CrteImgEvntHndlrs=function(b){Cmn.AddEvntListener(Cmn.GetObj(b.CntnrIDTxt),"mousewheel",function(a){FullPrsnttnWebPart.HndlMouseWheelEvnt(a,b.CntnrIDTxt)});Cmn.AddEvntListener(Cmn.GetObj(b.CntnrIDTxt),"DOMMouseScroll",function(a){FullPrsnttnWebPart.HndlMouseWheelEvnt(a,b.CntnrIDTxt)});for(var e=Cmn.GetElementsBy(function(a){var b=!1;Cmn.GetAncestorByClsNm(a,"FullPrsnttn")&&(b=!0);return b},"img",Cmn.GetObj(b.CntnrIDTxt)),c=0;c<e.length;c++){for(var a=
e[c].parentNode,d=e[c].className.split(" "),g=!0,f=null,f=0;f<d.length;f++)if("GenInfoImg"==d[f]||"ItmTblLnkImg"==d[f]||"Prsnttn_CADImg"==d[f]||"SecondaryDatTblImg"==d[f]){g=!1;break}f=a&&Cmn.HasCls(a,"ImgCaptionCntnr")?a:e[c];g&&(Cmn.AddEvntListener(f,"mouseover",function(a){FullPrsnttnWebPart.HndlImgMouseOverEvnt(a,b.CntnrIDTxt)}),Cmn.AddEvntListener(f,"mouseout",function(a){FullPrsnttnWebPart.HndlImgMouseOutEvnt(a,b.CntnrIDTxt)}),Cmn.AddEvntListener(f,"mousedown",function(){FullPrsnttnWebPart.HndlImgMouseDownEvnt()}),
Cmn.AddEvntListener(f,"click",function(a){var b=Cmn.GetEvntTarget(a);Cmn.HasCls(b,"PartNbrLnk")||(b=FullPrsnttnWebPart.GetImgFromImgCaptionCompElem(b))&&FullPrsnttnWebPart.HndlImgClickEvnt(a,"small",b.src,b)}))}};this.UnloadImgEvntHndlrs=function(b){var e=Cmn.GetObj(b.CntnrIDTxt+"OverlayImgID"),c=Cmn.GetElementsBy(function(a){var b=!1;Cmn.GetAncestorByClsNm(a,"FullPrsnttn")&&(b=!0);return b},"img",Cmn.GetObj(b.CntnrIDTxt)),a=Cmn.GetElementsByClsNm("ImgCaptionCntnr");Cmn.RemEvntListener(Cmn.GetObj(b.CntnrIDTxt),
"mousewheel",FullPrsnttnWebPart.HndlMouseWheelEvnt);for(b=0;b<a.length;b++)Cmn.RemEvntListener(a[b],"mouseover",FullPrsnttnWebPart.HndlImgMouseOverEvnt),Cmn.RemEvntListener(a[b],"mouseout",FullPrsnttnWebPart.HndlImgMouseOutEvnt),Cmn.RemEvntListener(a[b],"mousedown",FullPrsnttnWebPart.HndlImgMouseDownEvnt),Cmn.RemEvntListener(a[b],"click",FullPrsnttnWebPart.HndlImgClickEvnt);for(b=0;b<c.length;b++)Cmn.RemEvntListener(c[b],"mouseover",FullPrsnttnWebPart.HndlImgMouseOverEvnt),Cmn.RemEvntListener(c[b],
"mouseout",FullPrsnttnWebPart.HndlImgMouseOutEvnt),Cmn.RemEvntListener(c[b],"mousedown",FullPrsnttnWebPart.HndlImgMouseDownEvnt),Cmn.RemEvntListener(c[b],"click",FullPrsnttnWebPart.HndlImgClickEvnt);e&&(c=Cmn.GetElementsBy(function(a){return!0},"img",e),a=null,c&&0<c.length&&(a=c[0]),a&&Cmn.RemEvntListener(a,"load"),Cmn.RemEvntListener(e,"mouseout"),Cmn.RemEvntListener(e,"click"),Cmn.RemElem(e))};this.WebPart_LoadCmpl=function(b){var e=!1;Cmn.GetObj("CtlgPageShell_CtlgPage_Cntnr")?Cmn.IsIE6Below()||
(e=!0):e=!0;e&&(!0==b.GenInfoInd?PinnedPrsnttns.Reposition():this.PinnedCollSetup(b.PinnedContentColl))};this.ClearPrsnttnIdSeenCntVar=function(){r=[]};this.PinnedCollSetup=function(b){PinnedPrsnttns.Load(b);McMaster.MsgMgr.AddSubscriber(McMaster.MsgMgrMsgs.ProdPageReflow,PinnedPrsnttns.Reposition)};this.PinnedCollUnload=function(){PinnedPrsnttns.Unload()};this.WebPart_PreUnload=function(b){FullPrsnttnWebPart.UnloadImgEvntHndlrs(b);this.PinnedCollUnload();r=[]};this.Row_MouseOver=function(b,e){var c=
b.parentNode,a=["HighlightAct"];null!=FullPrsnttnWebPart.getClickablePartNbrCell(b)&&a.push("ItmTblRow_Hover");L(c,a,e)};this.Row_MouseOut=function(b){M(b.parentNode,["HighlightAct","ItmTblRow_Hover"])};this.PartNbr_Click=function(b,e,c){var a,d,g;g=b.getAttribute("data-mcm-partnbr");d=Cmn.GetAncestorByClsNm(b,"FullPrsnttn");var f=Cmn.GetElementsByClsNm("PartNbrSlctd","a");Cmn.RemCls(f,"PartNbrSlctd");Cmn.RemCls(f,"HighlightSlctd");f=Cmn.GetTSOfActInclMS();Cmn.TrkAct("InLnOrdPartNbrClick&partnbr="+
g+"&tm="+f,"InLnOrd");var h;if(f=Cmn.GetAncestorByTagNm(b,"tr"))(h=Cmn.GetAncestorByClsNm(f,"ItmTblGrp"))&&(a=f);if(a){d=Cmn.GetElementsByClsNm("ItmTblCellPartNbr","td",a);a=[];for(f=0;f<d.length;f++)a.push(Cmn.GetFrstChld(d[f]));if(d&&1<d.length)for(f=0;f<d.length;f++)if(!0==Cmn.HasCls(d[f],"AddToOrdBxCreated")||!0==Cmn.HasCls(a[f],"AddToOrdBxCreated"))if((h=Cmn.GetElementsByClsNm("PartNbrLnk","a",d[f]))&&h[0]!=b){Cmn.GetObj("CtlgPageShell_CtlgPage_Cntnr");var l=Cmn.GetAncestorByTagNm(h[0],"tr"),
n=Cmn.GetNxtSibling(l),k=Cmn.GetNxtSibling(n),p=Cmn.GetPrevSibling(h[0].parentNode);if(p)for(var p=Cmn.GetElementsByClsNm("SpecChoiceSlctd","a",p),q=0;q<p.length;q++)Cmn.ReplaceCls(p[q],"SpecChoiceSlctd","SpecChoiceVisitedLnk ");k&&n&&(p=Cmn.GetElementsByClsNm("InLnOrdWebPart_CloseLnk","a",k),InLnOrdWebPart.ResetBxObj(p,l),InLnOrdWebPart.HideInLnBx(n,k,h[0].parentNode,!0))}C([b])}else d=Cmn.GetElementsByClsNm("PrsnttnTbl","div",d),d=D(d,[g]),C(d);G(b);b=new McMaster.MsgMgr.Hdr(McMaster.MsgMgr.CntxtNms.FULL_PRSNTTN);
e=new McMaster.MsgMgrMsgs.PartNbrSlctd(b,g,c,e);McMaster.MsgMgr.PubMsg(e);Cmn.TrkAct("Timestamp="+H()+"&Action=Clicked part number "+g,"FullPrsnttn")};this.HelpLnk_Click=function(b){var e=new McMaster.MsgMgr.Hdr(McMaster.MsgMgr.CntxtNms.FULL_PRSNTTN);b=new McMaster.MsgMgrMsgs.HelpSlctd(e,b);McMaster.MsgMgr.PubMsg(b)};this.FullGenInfo_Click=function(b){ContentHistMgr.Init_Snapshot(ContentHistMgr.TYP.PRSNTTN);Cmn.GetObj("Abbr_"+b)?(FullPrsnttnWebPart.HidePrsnttn(b),AbbrPrsnttnWebPart.ShowPrsnttn(b,
DynamicPageWebPart.ResizePrsnttnsAndScroll),PinnedPrsnttns.Reposition()):PrsnttnWebPartLoader.Load(b,"abbr",DynamicPageWebPart.ResizePrsnttnsAndScroll)};this.HidePrsnttn=function(b){(b=Cmn.GetObj("Full_"+b))&&Cmn.ReplaceCls(b,"Show","Hide")};this.ShowPrsnttn=function(b,e){var c=Cmn.GetObj("Full_"+b);c?(Cmn.ReplaceCls(c,"Hide","Show"),K(b),"function"===typeof e&&e()):PrsnttnWebPartLoader.Load(b,"full",e)};this.SlctPartNbrs=function(b,e){var c,a;c=[];var d=[];(a=Cmn.GetElementsByClsNm("PrsnttnBulletedList",
"ul",b))&&0<a.length&&(c=D(a,e));(a=Cmn.GetElementsByClsNm("PrsnttnCpy","p",b))&&0<a.length&&(d=D(a,e));c=c.concat(d);C(c);c=Cmn.GetElementsByClsNm("PrsnttnTbl","div",b);c=D(c,e);var g,f,h,l,d=[];a=["HighlightSlctd"];g=0;for(f=A.length;g<f;g++)M(A[g],a);A=[];C(c);g=0;for(f=c.length;g<f;g++)if(h=c[g],Cmn.RemCls(h,"HighlightSlctd"),l=Cmn.GetAncestorByTagNm(h,"td").getAttribute("data-mcm-prodgrps").split(","),h=Cmn.GetAncestorByTagNm(h,"tr"))L(h,a,l),d[d.length]=h,A[A.length]=h;return d};this.HndlClickEvnt=
function(b,e){var c="";if(b)for(var a=Cmn.GetEvntTarget(b);a.id!==e;)if(Cmn.HasCls(a,"PartNbrLnk")||Cmn.HasCls(a,"PartNbrSlctd")||Cmn.HasCls(a,"PartNbrVisitedLnk")){c="PART_NBR_LNK";if(!Cmn.HasCls(a,"AddToOrdBxCreated")){var d=McMasterCom.Nav.GetTopFrame();new d.PerfTracker.Evnt(d.PerfTracker.EvntNms.InLnOrdClick,d.PerfTracker.PgCntxtNms.DynCntnt)}break}else if(Cmn.HasCls(a,"SpecChoiceLnk")||Cmn.HasCls(a,"SpecChoiceSlctd")||Cmn.HasCls(a,"SpecChoiceVisitedLnk")){c="SPEC_CHOICE_LNK";break}else if(Cmn.HasCls(a,
"PrceLnk")||Cmn.HasCls(a,"PrceLnkSlctd")){c="PRCE_LNK";break}else if(Cmn.HasCls(a,"PrsnttnHdrCntnr")){c="PRSNTTN_NM_LNK";break}else if(Cmn.HasCls(a,"FullGenInfo_Subhead")&&Cmn.HasCls(a.parentNode.parentNode,"FullGenInfo")){c="FULL_GEN_INFO_LNK";break}else if(Cmn.HasCls(a,"ImgCaptionCntnr")){c="IMG";a=Cmn.GetFrstChld(a);break}else if(Cmn.HasCls(a,"Titl")||Cmn.HasCls(a,"ToggleLnk")){c="ABOUT_BX_LNK";break}else if(Cmn.HasCls(a,"PageLnk")||Cmn.HasCls(a,"AddnlInfoLnk")||Cmn.HasCls(a,"SrchLnk")){c="GENERAL_LNK";
break}else if(Cmn.HasCls(a,"ItmTblCellSpec")||Cmn.HasCls(a,"ItmTblCellPrce")||Cmn.HasCls(a,"ItmTblContentCell")){c="TBL_ROW";break}else a=a.parentNode;switch(c){case "PART_NBR_LNK":Cmn.PreventDeflt(b);FullPrsnttnWebPart.PartNbr_Click(a);break;case "FULL_GEN_INFO_LNK":Cmn.PreventDeflt(b);for(var d=a,g=!1;"MainContent"!==d.id;)if(Cmn.HasCls(d,"CtlgPage")){g=!0;break}else d=d.parentNode;!0!==g&&(innerCntnrIdTxt=null!=Cmn.GetAncestorByClsNm(a,"FullPrsnttn")?Cmn.GetAncestorByClsNm(a,"FullPrsnttn").id:
Cmn.GetAncestorByClsNm(a,"FullGenInfo").id,a=innerCntnrIdTxt.substr(innerCntnrIdTxt.indexOf("_")+1),FullPrsnttnWebPart.FullGenInfo_Click(a));break;case "GENERAL_LNK":Cmn.PreventDeflt(b);var d=decodeURIComponent(a.hash.substring(1)),g=new McMaster.MsgMgr.Hdr(McMaster.MsgMgr.CntxtNms.FULL_PRSNTTN),f=new SrchTrkr.SrchDat({usr:SrchTrkr.UsrActTyps.SLCT,resp:"unknown"});f.usr.srcNm="FullPrsnttnWebPart";f.usr.elemTyp=SrchTrkr.ElemTyps.FULL_PRSNTTN_LNK;f.usr.slctdNm=decodeURIComponent(d);a&&(f.usr.slctdElemXYPosn=
Cmn.GetXOffset(a)+","+Cmn.GetYOffset(a));a=McMaster.MsgMgr.PubMsg(new McMaster.MsgMgrMsgs.UsrInpTxtSubmitted(g,d,f));McMaster.MsgMgr.PubMsg(a);break;case "SPEC_CHOICE_LNK":case "PRCE_LNK":Cmn.PreventDeflt(b);var h=a.getAttribute("data-mcm-prod-attr-id"),l=a.getAttribute("data-mcm-pub-attr-id"),n=a.getAttribute("data-mcm-prod-attrval-id"),k=a.getAttribute("data-mcm-pub-attrval-id"),d=h.split(","),g=l.split(","),f=n.split(","),p=k.split(","),q=McMaster.MsgMgr.CntxtNms.SPEC,m=FullPrsnttnWebPart.getClickablePartNbrCell(Cmn.GetAncestorByTagNm(a,
"td")),s=m.getAttribute("data-mcm-partnbr"),r=m.getAttribute("data-mcm-attr-comp-itm-ids"),t=S(m),u=s+"_"+t,v=m.getAttribute("data-mcm-partnbr-seqnbr");v&&(u=u+"_"+v);n="IS-"+s+"_E_"+h+"_"+l+"_T_"+n+"_"+k;h=[];l=[];for(k=0;k<g.length;k++)h[k]="IS-"+s+"_C_"+d[k]+"_"+g[k]+"_T_"+f[k]+"_"+p[k];for(k=0;k<g.length;k++)l[k]="IS-"+s+"_C_"+d[k]+"_"+g[k]+"_I_"+f[k]+"_"+p[k];if("SPEC_CHOICE_LNK"==c)for(var k=Cmn.GetAncestorByTagNm(a,"td"),k=Cmn.GetElementsByClsNm("SpecChoiceSlctd","a",k),w=0;w<k.length;w++)Cmn.ReplaceCls(k[w],
"SpecChoiceSlctd","SpecChoiceVisitedLnk ");else if("PRCE_LNK"==c){k=Cmn.GetAncestorByTagNm(a,"tr");k=Cmn.GetElementsByClsNm("PrceLnkSlctd","a",k);for(w=0;w<k.length;w++)Cmn.ReplaceCls(k[w],"PrceLnkSlctd","PrceLnkVisited ")}if(null!=m)if(Cmn.HasCls(m,"AddToOrdBxCreated")){Cmn.HasCls(m,"AddToOrdBxOrdered")&&FullPrsnttnWebPart.PartNbr_Click(m);s=Cmn.Get("InLnOrdWebPartAttrCntnr"+m.innerHTML);"SPEC_CHOICE_LNK"==c?(Cmn.AddCls(a,"SpecChoiceSlctd"),Cmn.RemCls(a,"SpecChoiceVisitedLnk")):"PRCE_LNK"==c&&(Cmn.AddCls(a,
"PrceLnkSlctd"),Cmn.RemCls(a,"PrceLnkVisited"));c=Cmn.GetElementsByClsNm("SpecSrch_SlctdVal","td",s);s=!0;if(0<c.length)for(k=0;k<h.length;k++){s=!0;for(t=0;t<c.length;t++)if(c[t].id==h[k]||c[t].id==l[k])s=!1;if(s)break}if(s&&r){m=McMaster.SesnMgr.GetStVal(McMaster.SesnMgr.StValDefs.InLnSpecUsrInps.KyTxt());for(k=0;k<g.length;k++)m[u].ToggleVal(d[k],g[k],f[k],p[k],q);McMaster.SesnMgr.SetStVal(McMaster.SesnMgr.StValDefs.InLnSpecUsrInps.KyTxt(),m);InLnOrdWebPart.updtSpecAttr(u,null,a)}else FullPrsnttnWebPart.PartNbr_Click(m)}else d=
new McMaster.MsgMgr.Hdr(McMaster.MsgMgr.CntxtNms.SPEC),McMaster.MsgMgr.PubMsg(new McMaster.MsgMgrMsgs.SpecChoiceLnkSlctd(d,s,t,n,v)),"SPEC_CHOICE_LNK"==c&&Cmn.TrkAct("ItmTblSpecChoiceClick&partnbr="+s+"&Selected="+a.innerHTML,"fullPrsnttn"),"PRCE_LNK"==c&&Cmn.TrkAct("ItmTblPriceLinkClick&partnbr="+s+"&Selected="+a.innerHTML,"fullPrsnttn"),FullPrsnttnWebPart.PartNbr_Click(m),"SPEC_CHOICE_LNK"==c?(Cmn.AddCls(a,"SpecChoiceSlctd"),Cmn.RemCls(a,"SpecChoiceVisitedLnk")):"PRCE_LNK"==c&&(Cmn.AddCls(a,"PrceLnkSlctd"),
Cmn.RemCls(a,"PrceLnkVisited"));break;case "TBL_ROW":Cmn.PreventDeflt(b),m=FullPrsnttnWebPart.getClickablePartNbrCell(a),null!=m&&(s=m.getAttribute("data-mcm-partnbr"),Cmn.TrkAct("ItmTblRowClick&partnbr="+s,"fullPrsnttn"),FullPrsnttnWebPart.PartNbr_Click(m))}};this.HndlMouseWheelEvnt=function(b,e){if(b){var c=Cmn.GetEvntTarget(b),a=Cmn.GetAncestorByClsNm(c,"SpecSrch_ScrollCntnr");if(!("img"==c.tagName.toLowerCase()||Cmn.HasCls(c,"ImgCaptionCntnr")||Cmn.HasCls(c,"FullPrsnttnWebPart_OverlayImgCntnr")||
Cmn.HasCls(c,"FullPrsnttnWebPart_OverlayImgPadding")||Cmn.HasCls(c,"ImgCaption")||Cmn.HasCls(c,"Wrd")||Cmn.HasCls(c,"PartNbrLnk")&&(Cmn.HasCls(c.parentNode,"Wrd")||Cmn.HasCls(c.parentNode,"ImgCaption"))))if(a){var d=b,c=0,d=d?d:window.event,c=d.detail?-d.detail/3:d.wheelDelta/120;Cmn.PreventDeflt(d);d.returnValue=!1;d.cancelBubble=!0;(d=Cmn.GetObj("CtlgPageShell_CtlgPage_Cntnr"))&&(c=-c);var g=!1;a.offsetHeight+a.scrollTop>=a.scrollHeight&&(d?0<c&&(g=!0):0>c&&(g=!0));g||(g=0,d&&(c=-c),g=a.offsetHeight+
a.scrollTop+45*-c>=a.scrollHeight?a.scrollHeight-(a.offsetHeight+a.scrollTop):45*-c,a.scrollTop+=g)}else N(c)}};this.HndlMouseOverEvnt=function(b,e){var c=null,a="",d=[];if(b)if(a=Cmn.GetEvntTarget(b),"img"==a.tagName.toLowerCase()||(Cmn.HasCls(a,"ImgCaptionCntnr")||Cmn.HasCls(a,"FullPrsnttnWebPart_OverlayImgCntnr")||Cmn.HasCls(a,"FullPrsnttnWebPart_OverlayImgPadding")||Cmn.HasCls(a,"ImgCaption")||Cmn.HasCls(a,"Wrd")||Cmn.HasCls(a,"PartNbrLnk")&&(Cmn.HasCls(a.parentNode,"Wrd")||Cmn.HasCls(a.parentNode,
"ImgCaption")))||N(a),y&&(Cmn.HasCls(a,"PrsnttnNm")||Cmn.HasCls(a,"SecondaryLnk")||Cmn.HasCls(a,"Wrd")))(c=Cmn.GetAncestorByClsNm(a,"FullGenInfo_Subhead"))?Cmn.AddCls(c,"FullGenInfo_SubheadHover"):(c=Cmn.GetAncestorByClsNm(a,"PrsnttnHdrCntnr"))&&Cmn.AddCls(c,"PrsnttnHdrCntnrHover");else{for(;a.id!==e;)if(Cmn.HasCls(a,"ItmTblContentCell")){c=a;(a=c.getAttribute("data-mcm-prodgrps"))&&0<a.length&&(d=a.split(","));break}else a=a.parentNode;c&&0<d.length&&FullPrsnttnWebPart.Row_MouseOver(c,d)}};this.HndlMouseOutEvnt=
function(b,e){var c=null;if(b){var a=Cmn.GetEvntTarget(b);if(y&&(Cmn.HasCls(a,"PrsnttnNm")||Cmn.HasCls(a,"SecondaryLnk")||Cmn.HasCls(a,"Wrd")))(c=Cmn.GetAncestorByClsNm(a,"FullGenInfo_Subhead"))?Cmn.RemCls(c,"FullGenInfo_SubheadHover"):(a=Cmn.GetAncestorByClsNm(a,"PrsnttnHdrCntnr"))&&Cmn.RemCls(a,"PrsnttnHdrCntnrHover");else{for(;a.id!==e;)if(Cmn.HasCls(a,"ItmTblContentCell")){c=a;break}else a=a.parentNode;c&&FullPrsnttnWebPart.Row_MouseOut(c)}}};this.HndlImgMouseOverEvnt=function(b,e,c,a){var d=
Cmn.GetEvntTarget(b);if(d=FullPrsnttnWebPart.GetImgFromImgCaptionCompElem(d))!0==c?(E=!0,FullPrsnttnWebPart.chgimg(a,e,d)):(targetTyp="",b&&(!1==E?FullPrsnttnWebPart.chgimg(d,e):E=!1))};this.HndlImgMouseDownEvnt=function(){B&&clearTimeout(B)};this.HndlImgMouseOutEvnt=function(b,e){B&&clearTimeout(B)};this.HndlImgOverlayMouseOutEvnt=function(b,e,c){if(b){var a=Cmn.GetEvntTarget(b),d=Cmn.GetEvntPageX(b);b=Cmn.GetEvntPageY(b);var g=Cmn.GetX(c),f=Cmn.GetY(c),h=Cmn.GetHeight(c);c=Cmn.GetWidth(c);(d<=g||
d>=g+c||b<f||b>f+h)&&(-32E3<d&&-32E3<b)&&FullPrsnttnWebPart.hideImgOverlay(a,e)}};this.HndlImgClickEvnt=function(b,e,c,a){c=O(c);var d=null,g=c,f="&Action=Clicked ";if(Cmn.GetObj("ProdPageContent")&&ContentWebPartLoader&&!1==ContentWebPartLoader.ReqInFlight()){f=PrsnttnUsrInp.Get();for(d=0;d<f.length;d++){for(var h=-1,l=0;l<r.length;l++)if(r[l][0]==prsnttnId){h=l;break}-1<h?r[h][1]+=1:r.push([f[d].PrsnttnId,1])}Cmn.PreventDeflt(b);b.returnValue=!1;b.cancelBubble=!0;"large"==e&&(g=c.replace("l.png",
"s.png"));f=T(a);d=f.substr(f.indexOf("_")+1);h=ImgUsrInp.Get();l=PrsnttnUsrInp.Get();if(0==r.length)for(f=0;f<l.PrsnttnUsrInps().length;f++)r.push([l.PrsnttnUsrInps()[f].PrsnttnId,1]);h.ImgSrcExists(g)?(!1==h.UsrInpExists(g,d)&&(d=h.GetPrsnttnId(g)),f=McMasterCom.Nav.GetTopFrame(),trkEvnt=new f.PerfTracker.Evnt(f.PerfTracker.EvntNms.ImgDeslctClick,f.PerfTracker.PgCntxtNms.DynCntnt),f="&Action=Deselected ",h.RemUsrInp(g).UpdateSession(),P(l,d,!0)):(f=McMasterCom.Nav.GetTopFrame(),trkEvnt=new f.PerfTracker.Evnt(f.PerfTracker.EvntNms.ImgSlctClick,
f.PerfTracker.PgCntxtNms.DynCntnt),f="&Action=Selected ",h.AddUsrInp(g,d).UpdateSession(),P(l,d,!1));a?G(a):(b=YAHOO.util.Event.getTarget(b),G(b));b=h.ImgSrcExists(g)?new SrchTrkr.SrchDat({usr:SrchTrkr.UsrActTyps.SLCT}):new SrchTrkr.SrchDat({usr:SrchTrkr.UsrActTyps.DESLCT});b.usr.srcNm="FullPrsnttnWebPart";b.usr.elemTyp=SrchTrkr.ElemTyps.PRSNTTN_IMG;b.usr.slctdNm=decodeURIComponent(g);b.usr.slctdID=d;a&&(b.usr.slctdElemXYPosn=Cmn.GetXOffset(a)+","+Cmn.GetYOffset(a));b.Trk();a=McMaster.UrlMgr.CurrUrl();
a=McMaster.UrlMgr.GetSesnStKyTxtFrmHash(a);b=!1;a&&(b=McMaster.SesnMgr.IsVldSesnStKy(a));if(b){b=Cmn.GetObj("ProdPageContent");b=[a,b.scrollTop];h=McMaster.SesnMgr.GetStVal(McMaster.SesnMgr.StValDefs.SnapShotScrollPos.KyTxt());g=null;g=h?h:[];for(h=0;h<g.length;h++)g[h][0]==a&&g.splice(h,1);g.push(b);McMaster.SesnMgr.SetStVal(McMaster.SesnMgr.StValDefs.SnapShotScrollPos.KyTxt(),g)}McMaster.SesnMgr.SetStVal(McMaster.SesnMgr.StValDefs.DynamicPageActvPrsnttnId.KyTxt(),d);d=new McMaster.MsgMgr.Hdr(McMaster.MsgMgr.CntxtNms.FULL_PRSNTTN);
d=McMaster.MsgMgr.PubMsg(new McMaster.MsgMgrMsgs.ImgClicked(d));McMaster.MsgMgr.PubMsg(d)}d=H();Cmn.TrkAct("Timestamp="+d+f+e+" image "+c,"FullPrsnttn")};this.HndlScrollEvnt=function(b,e,c){!1==F&&FullPrsnttnWebPart.hideImgOverlay(e,c);F=!1};this.HndlImgOverlayMouseWheelEvnt=function(b,e,c){var a=0;b=b?b:window.event;a=b.detail?-b.detail/3:b.wheelDelta/120;b.preventDefault&&b.preventDefault();b.returnValue=!1;FullPrsnttnWebPart.hideImgOverlay(e,c);b=0;e=Q();F=!0;e.offsetHeight+e.scrollTop>=e.scrollHeight&&
0>a||(b=e.offsetHeight+e.scrollTop+45*-a>=e.scrollHeight?e.scrollHeight-(e.offsetHeight+e.scrollTop):45*-a,e.scrollTop+=b,PinnedPrsnttns.Reposition())};this.GetImgFromImgCaptionCompElem=function(b){var e=null,e=null,c=function(a){var b=!1;"IMG"==a.tagName&&(b=!0);return b};switch(!0){case Cmn.HasCls(b,"ImgCaption"):e=b.parentNode;e=Cmn.GetChldrnBy(c,e)[0];break;case Cmn.HasCls(b,"Wrd"):e=b.parentNode.parentNode;e=Cmn.GetChldrnBy(c,e)[0];break;case "IMG"==b.tagName:e=b;break;case Cmn.HasCls(b,"ImgCaptionCntnr"):e=
Cmn.GetChldrnBy(c,b)[0]}return e};var P=function(b,e,c){for(var a=-1,d=0;d<r.length;d++)if(r[d][0]==e){a=d;break}-1==a?(b.AddUsrInp(e).UpdateSession(),r.push([e,1])):c?1==r[a][1]?(b.RemUsrInp(e).UpdateSession(),r.splice(a,1)):r[a][1]-=1:r[a][1]+=1},O=function(b){var e=b.indexOf("/gfx/",0);return b.substring(e+11,b.indexOf("?"))},T=function(b){var e;if(b=Cmn.GetAncestorBy(b,function(b){var a=!1;b=b.className.split(" ");for(var d=0;d<b.length;d++)0<=b[d].search(/PrsnttnStructure/i)&&(a=!0);return a}))e=
b.id;return e},D=function(b,e){var c,a,d,g,f=[];c=0;for(d=e.length;c<d;c++){a=0;for(g=b.length;a<g;a++)f=f.concat(Cmn.GetElementsByAttrVal("data-mcm-partnbr",e[c],null,b[a]))}return f},L=function(b,e,c){var a,d,g,f=[];if(c){a=0;for(d=c.length;a<d;a++)g=c[a],g=Cmn.GetElementsByAttrValInList("data-mcm-prodgrps",g,",","td",b),f=f.concat(g)}else f=b.getElementsByTagName("td");b=0;for(c=f.length;b<c;b++){clsIdx=0;for(cssClsNmsLen=e.length;clsIdx<cssClsNmsLen;clsIdx++)Cmn.AddCls(f[b],e[clsIdx])}},M=function(b,
e){var c,a,d;d=b.getElementsByTagName("td");c=0;for(a=d.length;c<a;c++){clsIdx=0;for(cssClsNmsLen=e.length;clsIdx<cssClsNmsLen;clsIdx++)Cmn.RemCls(d[c],e[clsIdx])}},C=function(b){var e,c,a;e=0;for(c=b.length;e<c;e++)a=b[e],Cmn.ReplaceCls(a,"PartNbrVisitedLnk","PartNbrSlctd")},N=function(b){var e=Cmn.GetElementsByClsNm("FullPrsnttnWebPart_OverlayImgCntnr","div"),c=!1;if(e&&0<e.length){for(var a=0;a<e.length;a++){var d=e[a];if(d&&Cmn.IsAncestor(d,b)){c=!0;break}}if(!c)for(a=0;a<e.length;a++)(d=e[a])&&
R(d,d.firstChild)}},R=function(b,e){if(e&&""!=e.innerHTML){var c=Cmn.GetElementsBy(function(a){return!0},"img",e),a=null;c&&0<c.length&&(a=c[0]);a&&Cmn.RemEvntListener(a,"load");e.innerHTML="";Cmn.SetX(b,-4E3);Cmn.SetY(b,-4E3)}};this.hideImgOverlay=function(b,e){var c=e+"ImgID",a=Cmn.GetObj(e+"OverlayImgID"),c=Cmn.GetObj(c);R(a,c)};this.continueLoadImgOverlay=function(b,e,c,a,d,g){var f=Cmn.GetElementsBy(function(a){return!0},"img",e),h=null;f&&0<f.length&&(h=f[0]);h&&h.complete?FullPrsnttnWebPart.cmpltLoadImgOverlay(b,
e,c,a,d,h,g):h&&(Cmn.AddEvntListener(h,"load",function(f){FullPrsnttnWebPart.cmpltLoadImgOverlay(b,e,c,a,d,h,g)}),f=h.src,h.src="",h.src=f,h.complete&&(Cmn.RemEvntListener(h,"load"),FullPrsnttnWebPart.cmpltLoadImgOverlay(b,e,c,a,d,h,g)))};this.cmpltLoadImgOverlay=function(b,e,c,a,d,g,f){var h,l,n=Cmn.GetHeight(b),k=Cmn.GetWidth(b),p=0,q=0;g&&(p=Cmn.GetHeight(g),q=Cmn.GetWidth(g));g&&(a&&b&&q&&k&&d)&&q<d&&(a.style.width=d+"px");var m=Cmn.GetX(b),s=Cmn.GetY(b);a=Cmn.GetHeight(c);d=Cmn.GetWidth(c);var r=
Cmn.GetObj(c.id.substr(0,c.id.indexOf("OverlayImgID",0))),t,u="";if(r)for(t=r.parentNode;"body"!=t.tagName.toLowerCase();){u=Cmn.GetStyle(t,"overflow");if("auto"==u)break;t=t.parentNode}Cmn.GetObj("MainContent");var r=Cmn.GetElementsByClsNm("WebToolsetWebPart_Cntnr"),v,w,m=m-(d-k)/2,s=s-(a-n)/2,z,x;f&&(m=Cmn.GetX(f),s=Cmn.GetY(f),m-=(d-k)/2);t&&(f=Cmn.GetY(t),u=Cmn.GetX(t),z=Cmn.GetWidth(t),x=Cmn.GetHeight(t),y&&(z-=18,x-=18),"body"==t.tagName.toLowerCase()&&(x=Cmn.GetViewportHeight(),z=Cmn.GetViewportWidth(),
f=Math.max(Math.max(f,document.documentElement.scrollTop),t.scrollTop),u=Math.max(Math.max(u,document.documentElement.scrollLeft),t.scrollLeft)),r&&1<=r.length&&(h=r[0],Cmn.GetX(h),l=h.offsetTop,v=Cmn.GetHeight(h),w=Cmn.GetWidth(h)),h&&(y?l&&l+v>=f&&(f+=l+v-f,x-=l+v-f):(f=l?l+v:f+v,w&&(z=w),x-=v)),f+x<s+a&&(s=f+x-a),m+d>u+z&&(m=u+z-d),m<u&&(m=u),s<f&&(s=f));h=m;l=s;if(n=p*q>1.05*n*k){n=!1;if(g&&(n=!0,!1===Cmn.IsIE()&&!1===g.complete&&(n=!1),0===g.naturalWidth||0===g.naturalHeight))n=!1;n=!0===n}n&&
(y&&(g=Cmn.GetWidth(e),e.style.width=g+"px"),Cmn.SetX(c,h),Cmn.SetY(c,l),Cmn.HasCls(b,"ImgSlctd")?Cmn.AddCls(c,"ImgSlctd"):(e=Cmn.GetAncestorByClsNm(b,"ImgCaptionCntnr"))&&Cmn.HasCls(e,"ImgSlctd")?Cmn.AddCls(c,"ImgSlctd"):Cmn.RemCls(c,"ImgSlctd"),c=H(),e=O(b.src),I=b,Cmn.TrkAct("Timestamp="+c+"&Action=Expanded image "+e,"FullPrsnttn"))};var U=function(b,e,c,a){var d=c+"OverlayImgID",g=c+"ImgID",f=Cmn.GetObj(d),h=Cmn.GetObj(g),l,n,k=Q();if(!h){var p=Cmn.CrteElement("div");p.innerHTML='<div class="FullPrsnttnWebPart_OverlayImgCntnr OverlayImg" id="'+
d+'"><div class="FullPrsnttnWebPart_OverlayImgPadding" id="'+g+'" ></div></div>';Cmn.IsIE6Below()||Cmn.IsIE7()?(l=document.getElementsByTagName("BODY"),0<l.length&&(n=l[0])):n=Cmn.GetObj(c);n.appendChild(p);f=Cmn.GetObj(d);Cmn.AddCls(f,"ImgCaptionCntnrHover");h=Cmn.GetObj(g);Cmn.AddDropShadow(f);Cmn.AddEvntListener(f,"DOMMouseScroll",function(a){FullPrsnttnWebPart.HndlImgOverlayMouseWheelEvnt(a,f,c)});Cmn.AddEvntListener(f,"mousewheel",function(a){FullPrsnttnWebPart.HndlImgOverlayMouseWheelEvnt(a,
f,c)});Cmn.AddEvntListener(k,"scroll",function(a){FullPrsnttnWebPart.HndlScrollEvnt(a,f,c)});Cmn.AddEvntListener(f,"mouseout",function(a){FullPrsnttnWebPart.HndlImgOverlayMouseOutEvnt(a,c,f)});Cmn.AddEvntListener(f,"click",function(a){var b=Cmn.GetEvntTarget(a);Cmn.HasCls(b,"PartNbrLnk")||(b=Cmn.GetElementBy(function(a){return!0},"img",f),FullPrsnttnWebPart.HndlImgClickEvnt(a,"large",b.src,I))})}Cmn.SetX(f,-4E3);Cmn.SetY(f,-4E3);y&&(h.style.width="");d=Cmn.GetElementsBy(function(a){return!0},"img",
h);g=null;d&&0<d.length&&(g=d[0]);g&&Cmn.RemEvntListener(g,"load");h.innerHTML="";var q=null,d=Cmn.GetPrevSibling(b),m=null;y?(h.innerHTML='<img src="'+e+'">',q=h):(h.innerHTML='<div class="ImgCaptionCntnr" style="display: inline-block;"><img src="'+e+'"></div>',q=Cmn.GetFrstChld(h));d&&q&&(q.prependChild(d.cloneNode(!0)),m=Cmn.GetWidth(d));if((d=Cmn.GetNxtSibling(b))&&q)q.appendChild(d.cloneNode(!0)),m=Cmn.GetWidth(d);B=setTimeout(function(){FullPrsnttnWebPart.continueLoadImgOverlay(b,h,f,q,m,a)},
500)},Q=function(){var b;(b=Cmn.GetObj("ProdPageContent"))||(b=Cmn.GetObj("CtlgPageShell_CtlgPage_Cntnr"));return b};this.chgimg=function(b,e,c){var a=b.src;e&&""!=e||(e=Cmn.GetAncestorByClsNm(b,"FullPrsnttn").id);var d=a.indexOf("/gfx/",0),g=a.substring(0,d+5);a.substring(d+5,d+10).toLowerCase();var d=a.substring(d+11,a.indexOf("?")-5),f=a.substring(a.indexOf(d)+d.length+1,a.indexOf("?")),a=a.substring(a.indexOf("?")),a=g+"large/"+(d+"l"+f)+a;U(b,a,e,c)};var K=function(b){var e="Full_"+b;PrsnttnWebPart.actvPrsnttnElem=
Cmn.GetObj(e);var c="",a=Cmn.GetObj("Abbr_"+b);if(a){(a=Cmn.GetElementsByClsNm("AbbrPrsnttn_PrsnttnNm","h3",a)[0]||Cmn.GetElementsByClsNm("AbbrGenInfo_PrsnttnNm","h3",a)[0])&&(c=Cmn.GetTxtContent(a));McMaster.SesnMgr.SetStVal(McMaster.SesnMgr.StValDefs.DynamicPageActvPrsnttnId.KyTxt(),e);e=Cmn.GetClonedObj(McMaster.SesnMgr.GetStVal(McMaster.SesnMgr.StValDefs.DynamicPagePrsnttnStats.KyTxt()));null==e&&(e={});e[b]="FULL";McMaster.SesnMgr.SetStVal(McMaster.SesnMgr.StValDefs.DynamicPagePrsnttnStats.KyTxt(),
e);ContentHistMgr.Take_Snapshot(ContentHistMgr.TYP.PRSNTTN);e=DynamicPageWebPart.ExplicitlyExpandedPrsnttnCnt();a=McMaster.SesnMgr.GetStVal(McMaster.SesnMgr.StValDefs.SlctdSrchRsltTxt.KyTxt());c=encodeURIComponent(c);a=encodeURIComponent(a);Cmn.TrkAct("Action=Expanded&PrsnttnNm="+c+"&SearchTerm="+a+"&ExpandedPrsnttnCnt="+e,"Prsnttn");e=new SrchTrkr.SrchDat({usr:SrchTrkr.UsrActTyps.EXPAND});e.usr.srcNm="AbbrPrsnttnWebPart";e.usr.elemTyp=SrchTrkr.ElemTyps.ABBR_PRSNTTN;e.usr.slctdNm=decodeURIComponent(c);
e.usr.slctdID=b;if(b=Cmn.GetObj("Full_"+b))e.usr.slctdElemOffsetXYPosn=Cmn.GetXOffset(b)+","+Cmn.GetYOffset(b);e.Trk()}},H=function(){var b=new Date,e=b.getHours()+1,c=b.getMinutes(),b=b.getSeconds();return""+e+c+b},S=function(b){var e;(b=Cmn.GetAncestorBy(b,function(b){var a=!1;b=b.className.split(" ");for(var d=0;d<b.length;d++)0<=b[d].search(/PrsnttnStructure/i)&&(a=!0);return a}))&&(e=b.id.split("_")[1]);return e},J=function(b,e){var c=McMaster.SesnMgr.GetStVal(McMaster.SesnMgr.StValDefs.FndAgainSpecIdValsToParts.KyTxt()),
a=e?McMaster.SesnMgr.GetStVal(McMaster.SesnMgr.StValDefs.FndAgainPrtNbrsToHighlight.KyTxt()):McMaster.SesnMgr.GetStVal(McMaster.SesnMgr.StValDefs.FndAgainLocPrtNbrsToHighlight.KyTxt());if(!1==Cmn.IsEmpty(a)){var d=Cmn.GetElementsByClsNm("PartNbrLnk","a",b),g=d.length;if(d&&0<g)for(var f=0;f<g;f++){var h=d[f].getAttribute("data-mcm-partnbr");0<h.length&&a[h]&&(e?d[f].setAttribute("title","You ordered this product previously."):Cmn.HasCls(d[f],"PartNbrOrdrdLnk")||d[f].setAttribute("title","Your company ordered this product previously."),
Cmn.AddCls(d[f],"PartNbrOrdrdLnk"))}if(!1==Cmn.IsEmpty(c)){"indexOf"in Array.prototype||(Array.prototype.indexOf=function(a,b){void 0===b&&(b=0);0>b&&(b+=this.length);0>b&&(b=0);for(var c=this.length;b<c;b++)if(b in this&&this[b]===a)return b;return-1});var d=Cmn.GetElementsByClsNm("SpecChoiceLnk","a",b),g=d.length;if(0<g)for(f=0;f<g;f++){var h=!1,l=FullPrsnttnWebPart.getClickablePartNbrCell(Cmn.GetAncestorByTagNm(d[f],"td"));if(null!=l){var n=l.getAttribute("data-mcm-partnbr");if(l=l.getAttribute("data-mcm-attr-comp-itm-ids"))var k=
l.split(",");if(n&&a[n]||n&&locPrtNbrsToHighlight[n]){var l=d[f].getAttribute("data-mcm-prod-attr-id"),p=d[f].getAttribute("data-mcm-prod-attrval-id"),l=l+";"+p;if(c[l]){l=c[l].split("|");for(p=0;p<l.length;p++)if(l[p]===n||k&&0<=k.indexOf(a[l[p]])||k&&0<=k.indexOf(locPrtNbrsToHighlight[l[p]])){h=!0;break}h&&Cmn.AddCls(d[f],"SpecChoiceOrdrdLnk")}}}}}}},G=function(b){try{var e="",c=0,a=0,d=0,g=!0,f=Cmn.GetAncestorByClsNm(b,"FullPrsnttn");if(Cmn.HasCls(f,"FullPrsnttn")){var h=Cmn.GetElementsByClsNm("PrsnttnNm",
"h3",f);0<h.length&&(e=Cmn.GetTxtContent(h[0]));var c=f.id.split("_")[1],h=[],l=Cmn.GetElementsByClsNm("FullPrsnttn","div"),d=l.length;for(i=0;i<d;i++)h[i]=l[i].id.split("_")[1],l[i]==f&&(a=i+1);for(var n=Cmn.GetElementsByClsNm("ProdPageContent","div")[0].offsetHeight,k=b.offsetParent,p=b.offsetTop;!1==Cmn.HasCls(k,"ProdPageContent");)p+=k.offsetTop,k=k.offsetParent;var g=p<n?!0:!1,q=new SrchTrkr.SrchDat({usr:SrchTrkr.UsrActTyps.SLCT});q.usr.srcNm="FullPrsnttnWebPart";q.usr.elemTyp=SrchTrkr.ElemTyps.FULL_PRSNTTN;
q.usr.slctdNm=decodeURIComponent(e);q.usr.slctdPrsnttnID=c;q.usr.slctdSrchRsltTxt=McMaster.SesnMgr.GetStVal(McMaster.SesnMgr.StValDefs.SlctdSrchRsltTxt.KyTxt());q.usr.slctdPosNbr=a;q.usr.totPrsnttnCnt=d;q.usr.prsnttnSortSeq=h;q.usr.abvFoldInd=g;q.Trk()}}catch(m){}}});


(function(){if(this.FetchAhead){}else{var a=McMaster.MsgMgr,b=McMaster.MsgMgrMsgs;MSG_CNTXT=a.CntxtNms.FETCH_AHEAD;FetchAhead=new function(){this.PREDICT_STATES={PREDICT:"predict",NO_PREDICT:"no_predict"};this.CACHE_STATES={REQUEST:"request",HIT_COMPLETE:"hit_complete",HIT_INFLIGHT:"hit_inflight",MISS:"miss"};this.HndlLandingPgFetchAhead=function(g){var f=(new Date()).getTime();e(g,f);};this.HndlFetchAhead=function(f){for(key in f){var h=(new Date()).getTime();var g=f[key];e(g,h,key);}};this.TrkPredictions=function(h,g,i){var f={};f.FetchAheadPrediction=h;f.CurrWebPartIdTxt=g;if(i){f.TargetWebPart=i;}Cmn.TrkAct(f,CLS_NM);};var c=function(g,k){var l=false;l=d(g,l);var j;if(g.IDTxt){j=g.IDTxt;}else{j="unknown";}if(g&&g.FetchAheadDatObj&&l===false){e(g.FetchAheadDatObj,k,j);}if(g&&g.FetchAheadDatObj){if(g.FetchAheadDatObj.length>=1&&l===false){}else{if(l===false){FetchAhead.TrkPredictions(FetchAhead.PREDICT_STATES.NO_PREDICT,j);}}}if(g&&g.LoadChldWebPartsInd){var f=g.ChldWebParts.length,h=g.ChldWebParts;for(var i=0;i<f;i++){c(h[i],k);}}};var e=function(t,n,w){if(t){for(var r=0;r<t.length;r++){var j=t[r];var k,m,x,y,s;if(j.PrsnttnId){m=PrsnttnUsrInp.Get().Clone().AddUsrInp(j.PrsnttnId+"");}else{m=PrsnttnUsrInp.Get();}if(j.SrchRsltId){y=j.SrchRsltId;}if(j.SrchTermTxt){var g=j.SrchTermTxt;}if(j.DatTypTxt){s=j.DatTypTxt;}if(j.AttrDctnry){specSrchInp=SpecSrchInp.Get().Clone();var f=j.AttrDctnry.PROD_ATTR_ID+"",o=j.AttrDctnry.PUB_ATTR_ID+"",u=j.AttrDctnry.PROD_VAL_ID+"",v=j.AttrDctnry.PUB_VAL_ID+"",p="FetchAhead";specSrchInp.ToggleVal(f,o,u,v,p);}else{if(j.FirstSpec){specSrchInp=SpecSrchInp.Get().Clone();specSrchInp.AddPubAttr(j.FirstSpec.AttrID);for(var q in j.FirstSpec.AttrValDctnry){if(j.FirstSpec.AttrValDctnry.hasOwnProperty(q)){specSrchInp.AddPubVal(j.FirstSpec.AttrID,q);}}}else{specSrchInp=SpecSrchInp.Get();}}x=ImgUsrInp.Get();var h=new a.Hdr(MSG_CNTXT),l=new b.FetchAheadDatRcvd(h,specSrchInp,m,x,g,y,s,n,j.WebPartIdTxt,j.PrsnttnRankSeqNbr,w);a.PubMsg(l);}}else{FetchAhead.TrkPredictions(FetchAhead.PREDICT_STATES.NO_PREDICT,"ContentWebPart");}};var d=function(g,j){if(g.FullPrsnttnInd&&g.FullPrsnttnInd===true){j=true;}else{if(g.LoadChldWebPartsInd&&j===false){var f=g.ChldWebParts.length,h=g.ChldWebParts;for(var i=0;i<f;i++){j=d(h[i],j);if(j&&j===true){break;}}}}return j;};};}})();

if(this.SecondaryContentCoordinator){}else{SecondaryContentCoordinator=new function(){var e=this;var a=false;var f=false;var c=false;var d=false;var b=false;this.Init=function(){e.Reset();b=true;};this.ContentReady=function(g,h){if(g=="srch"){a=true;}else{if(g=="prodpage"){f=true;}}if(b){if(a&&f){if(h||d){Shell.ExpandSecondaryContent();Shell.ResizeContentCntnrs();}}else{if(h){d=true;}}if(g=="srch"){e.ContentLoadCmplt(g);}}else{if(g=="prodpage"){if(h||d){Shell.ExpandSecondaryContent();}}}};this.ContentLoadCmplt=function(g,i){if(g=="prodpage"){c=true;}if((a&&f&&c)||(b==false&&g=="prodpage")){var h=McMaster.SesnMgr.GetStVal(McMaster.SesnMgr.StValDefs.ProdPageLoadFrmSesnInd.KyTxt());if(!h){ContentHistMgr.Take_Snapshot(ContentHistMgr.TYP.PROD_PAGE_LOAD);}e.Reset();}};this.Reset=function(){a=false;f=false;d=false;b=false;};};}

if(this.LogoffUsrCtrlWebPart){}else{LogoffUsrCtrlWebPart=new function(){var e=this;var a="/WebParts/LogoffUsrCtrlWebPart/LogoffUsrCtrlWebPart.aspx";var b="_";var f="#";e.WebPart_Load=function(g){};e.Logoff_Click=function(g,h){d(g,h);Cmn.TrkAct("LogoffClicked","MastheadLogin");};var d=function(g,h){var i={success:c,failure:c,cnxnParm:{WebPartIDTxt:g,SesnExtRepTxt:h,respTyp:McMaster.CnxnMgr.JSON_RESP_TYP_TXT}};McMaster.SesnMgr.SetStVal(McMaster.SesnMgr.StValDefs.SesnExtRepKy.KyTxt(),h);McMaster.CnxnMgr.PerformAjaxCnxn(a,i);};var c=function(g,j){var i=new McMaster.MsgMgr.Hdr(McMaster.MsgMgr.CntxtNms.LOGOFF);var h=new McMaster.MsgMgrMsgs.LoginChged(i);McMaster.MsgMgr.PubMsg(h);};};}

(function(){window.mPageEmbeddedFiles=window.mPageEmbeddedFiles||{};var f=window.mPageEmbeddedFiles;f['cmn.js']=1;f['cmn.dom.js']=1;f['cmn.utilities.js']=1;f['cmn.utilities.widget.js']=1;f['cmn.html5.js']=1;f['cmnstringmanipulator.js']=1;f['cmn.animation.js']=1;f['cmn.animation.propertynms.js']=1;f['cmncrcrdvldtn.js']=1;f['cmn.dropdown.js']=1;f['cmncolls.js']=1;f['mcmastercomnav.js']=1;f['clntcache.js']=1;f['mcmastercom.js']=1;f['cookie.js']=1;f['mcmaster.msgmgrmsgs.js']=1;f['mcmaster.msgmgr.js']=1;f['mcmaster.msgmgr.hdr.js']=1;f['mcmaster.msgmgr.payload.js']=1;f['mcmaster.msgmgr.cntxtnms.js']=1;f['mcmaster.globals.js']=1;f['mcmaster.cnxnmgr.js']=1;f['cadwebpart.js']=1;f['cadwebpartloader.js']=1;f['mcmaster.envrmgr.js']=1;f['mcmaster.sesnmgr.js']=1;f['mcmaster.sesnmgr.sthist.js']=1;f['mcmaster.sesnmgr.stvaldefs.js']=1;f['mcmaster.sesnmgr.sitetitltxts.js']=1;f['mcmaster.sesnmgr.sthist.defs.js']=1;f['mcmaster.loadmgr.js']=1;f['mcmaster.loadmgr.cntnrdefs.js']=1;f['mcmaster.loadmgr.iframeloaddlydefs.js']=1;f['srchtrkr.js']=1;f['mcmaster.urlmgr.js']=1;f['mcmaster.urlmgr.friendlyurls.js']=1;f['mcmaster.urlmgr.friendlyurls.defs.homepagecatg.js']=1;f['mcmaster.urlmgr.friendlyurls.defs.prodcontent.js']=1;f['mcmaster.urlmgr.friendlyurls.defs.partnbr.js']=1;f['mcmaster.urlmgr.friendlyurls.defs.currord.js']=1;f['mcmaster.urlmgr.friendlyurls.defs.ordhist.js']=1;f['mcmaster.urlmgr.friendlyurls.defs.cntctus.js']=1;f['mcmaster.urlmgr.friendlyurls.defs.cad2d.js']=1;f['mcmaster.urlmgr.friendlyurls.defs.cad3d.js']=1;f['mcmaster.urlmgr.friendlyurls.defs.cadinlnord.js']=1;f['mcmaster.urlmgr.friendlyurls.defs.careers.js']=1;f['mcmaster.urlmgr.friendlyurls.defs.help.js']=1;f['mcmaster.urlmgr.friendlyurls.defs.inlnord.js']=1;f['mcmaster.urlmgr.friendlyurls.defs.enterasppsrch.js']=1;f['mcmaster.urlmgr.friendlyurls.defs.srch.js']=1;f['mcmaster.urlmgr.friendlyurls.defs.bookmarks.js']=1;f['mcmaster.urlmgr.friendlyurls.defs.secrpref.js']=1;f['mcmaster.txtinterp.js']=1;f['mcmaster.txtinterp.intermediatepg.js']=1;f['websrcheng.js']=1;f['mcmastercomloadmgr.js']=1;f['mcmaster.prfrmnctrkmgr.js']=1;f['contenthistmgr.js']=1;f['shellpreinit.js']=1;f['animator.js']=1;f['toolbar.js']=1;f['gzipcapability.js']=1;f['touchevntmgr.js']=1;f['shell.js']=1;f['srchrsltwebpartovrd.js']=1;f['logowebpart.js']=1;f['mastheadwebpart.js']=1;f['bottomnavwebpart.js']=1;f['srchentrywebpart.js']=1;f['addnlcontentloader.js']=1;f['apphelploader.js']=1;f['autherrhandler.js']=1;f['bmloginwebpartloader.js']=1;f['cadloader.js']=1;f['careersloader.js']=1;f['careersmenuloader.js']=1;f['cntctusloader.js']=1;f['ctlgloader.js']=1;f['ordpadwebpartloader.js']=1;f['cmnvstridentification.js']=1;f['ordpadcnfmwebpartloader.js']=1;f['contentwebpartloader.js']=1;f['displvstrbmsloader.js']=1;f['dynamiccontentcoordinator.js']=1;f['prsnttnwebpartloader.js']=1;f['fetchaheadloader.js']=1;f['fndagainplcdords.js']=1;f['grpusrinp.js']=1;f['guidednavrtrvr.js']=1;f['helploader.js']=1;f['homepagenavwebpartloader.js']=1;f['homepagewebpartloader.js']=1;f['intermediatepagewebpartloader.js']=1;f['incmplordswebpartloader.js']=1;f['inlnordwebpartloader.js']=1;f['itmlookuploader.js']=1;f['itmprsnttnwebpart.js']=1;f['itmprsnttnwebpartloader.js']=1;f['needhelpwebpartloader.js']=1;f['orddtlloader.js']=1;f['ordhistloader.js']=1;f['ordhistloginwebpartloader.js']=1;f['perftracker.js']=1;f['proddatprotectionwebpartloader.js']=1;f['prodpagewebpartloader.js']=1;f['pinnedprsnttns.js']=1;f['prsnttnusrinp.js']=1;f['imgusrinp.js']=1;f['psrchloader.js']=1;f['recentordswebpartloader.js']=1;f['recentordswebpart.js']=1;f['secrloader.js']=1;f['specsrchinp.js']=1;f['specsrchwebpartloader.js']=1;f['spclwrdloader.js']=1;f['srchsuggwebpartloader.js']=1;f['srchsuggwebpart.js']=1;f['fasttrackloader.js']=1;f['srchsuggwebpart.relevance.js']=1;f['srchsuggwebpart.fasttrack.js']=1;f['srchsuggwebpart.webreports.js']=1;f['srchrsltwebpart.js']=1;f['srchrsltstobj.js']=1;f['srchrsltevnthandler.js']=1;f['srchrsltevnthandler.handlesrch.js']=1;f['srchrsltwebpartloader.js']=1;f['sitesettingswebpartloader.js']=1;f['taxloader.js']=1;f['mastheadloginwebpartloader.js']=1;f['loginusrctrlwebpartloader.js']=1;f['prodpagewebpart.js']=1;f['contentwebpart.js']=1;f['homepagenavwebpart.js']=1;f['homepagewebpart.js']=1;f['incmplordswebpart.js']=1;f['webtoolsetwebpart.js']=1;f['inlnordwebpart.js']=1;f['inlnordwebpartjsobj.js']=1;f['intermediateprsnttnwebpart.js']=1;f['intermediatepagewebpart.js']=1;f['specinteractions.js']=1;f['specsrchwebpart.js']=1;f['specsrchwebpart.maintainfocus.js']=1;f['specsrchwebpart.specinfo.js']=1;f['landingpagewebpart.js']=1;f['dynamicpagewebpart.js']=1;f['prsnttnwebpart.js']=1;f['abbrprsnttnwebpart.js']=1;f['fullprsnttnwebpart.js']=1;f['fetchahead.js']=1;f['secondarycontentcoordinator.js']=1;f['logoffusrctrlwebpart.js']=1;})();